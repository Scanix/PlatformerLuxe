(function (console) { "use strict";
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var EReg = function(r,opt) {
	opt = opt.split("u").join("");
	this.r = new RegExp(r,opt);
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = ["EReg"];
EReg.prototype = {
	match: function(s) {
		if(this.r.global) this.r.lastIndex = 0;
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) return this.r.m[n]; else throw new js__$Boot_HaxeError("EReg::matched");
	}
	,matchedRight: function() {
		if(this.r.m == null) throw new js__$Boot_HaxeError("No string matched");
		var sz = this.r.m.index + this.r.m[0].length;
		return HxOverrides.substr(this.r.s,sz,this.r.s.length - sz);
	}
	,replace: function(s,by) {
		return s.replace(this.r,by);
	}
	,__class__: EReg
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d.setTime(0);
		d.setUTCHours(k[0]);
		d.setUTCMinutes(k[1]);
		d.setUTCSeconds(k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) return undefined;
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(pos != null && pos != 0 && len != null && len < 0) return "";
	if(len == null) len = s.length;
	if(pos < 0) {
		pos = s.length + pos;
		if(pos < 0) pos = 0;
	} else if(len < 0) len = s.length + len - pos;
	return s.substr(pos,len);
};
HxOverrides.indexOf = function(a,obj,i) {
	var len = a.length;
	if(i < 0) {
		i += len;
		if(i < 0) i = 0;
	}
	while(i < len) {
		if(a[i] === obj) return i;
		i++;
	}
	return -1;
};
HxOverrides.remove = function(a,obj) {
	var i = HxOverrides.indexOf(a,obj,0);
	if(i == -1) return false;
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
$hxClasses["Lambda"] = Lambda;
Lambda.__name__ = ["Lambda"];
Lambda.has = function(it,elt) {
	var $it0 = $iterator(it)();
	while( $it0.hasNext() ) {
		var x = $it0.next();
		if(x == elt) return true;
	}
	return false;
};
Lambda.count = function(it,pred) {
	var n = 0;
	if(pred == null) {
		var $it0 = $iterator(it)();
		while( $it0.hasNext() ) {
			var _ = $it0.next();
			n++;
		}
	} else {
		var $it1 = $iterator(it)();
		while( $it1.hasNext() ) {
			var x = $it1.next();
			if(pred(x)) n++;
		}
	}
	return n;
};
var List = function() {
	this.length = 0;
};
$hxClasses["List"] = List;
List.__name__ = ["List"];
List.prototype = {
	add: function(item) {
		var x = [item];
		if(this.h == null) this.h = x; else this.q[1] = x;
		this.q = x;
		this.length++;
	}
	,push: function(item) {
		var x = [item,this.h];
		this.h = x;
		if(this.q == null) this.q = x;
		this.length++;
	}
	,pop: function() {
		if(this.h == null) return null;
		var x = this.h[0];
		this.h = this.h[1];
		if(this.h == null) this.q = null;
		this.length--;
		return x;
	}
	,remove: function(v) {
		var prev = null;
		var l = this.h;
		while(l != null) {
			if(l[0] == v) {
				if(prev == null) this.h = l[1]; else prev[1] = l[1];
				if(this.q == l) this.q = prev;
				this.length--;
				return true;
			}
			prev = l;
			l = l[1];
		}
		return false;
	}
	,__class__: List
};
var Luxe = function() { };
$hxClasses["Luxe"] = Luxe;
Luxe.__name__ = ["Luxe"];
Luxe.__properties__ = {set_fixed_frame_time:"set_fixed_frame_time",get_fixed_frame_time:"get_fixed_frame_time",get_fixed_alpha:"get_fixed_alpha",set_fixed_timestep:"set_fixed_timestep",get_fixed_timestep:"get_fixed_timestep",set_fixed_delta:"set_fixed_delta",get_fixed_delta:"get_fixed_delta",get_sim_delta:"get_sim_delta",get_sim_time:"get_sim_time",set_timescale:"set_timescale",get_timescale:"get_timescale",get_tick_delta:"get_tick_delta",get_tick_start_prev:"get_tick_start_prev",get_tick_start:"get_tick_start",set_update_rate:"set_update_rate",get_update_rate:"get_update_rate",set_frame_max_delta:"set_frame_max_delta",get_frame_max_delta:"get_frame_max_delta",get_frame_start_prev:"get_frame_start_prev",get_frame_start:"get_frame_start",get_dt:"get_dt",get_build:"get_build",get_version:"get_version",get_screen:"get_screen",get_time:"get_time",get_snow:"get_snow"}
Luxe.on = function(event,handler) {
	Luxe.core.emitter.on(event,handler);
};
Luxe.off = function(event,handler) {
	return Luxe.core.emitter.off(event,handler);
};
Luxe.next = function(func) {
	if(func != null) snow_Snow.next_queue.push(func);
};
Luxe.shutdown = function() {
	Luxe.core.shutdown();
};
Luxe.showConsole = function(_show) {
	Luxe.core.debug.set_visible(_show);
};
Luxe.get_snow = function() {
	return Luxe.core.app;
};
Luxe.get_screen = function() {
	return Luxe.core.screen;
};
Luxe.get_time = function() {
	return window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
};
Luxe.get_version = function() {
	return Luxe.core.version;
};
Luxe.get_build = function() {
	return Luxe.core.build;
};
Luxe.get_dt = function() {
	return Luxe.core.frame_delta;
};
Luxe.get_frame_start = function() {
	return Luxe.core.frame_start;
};
Luxe.get_frame_start_prev = function() {
	return Luxe.core.frame_start_prev;
};
Luxe.get_frame_max_delta = function() {
	return Luxe.core.frame_max_delta;
};
Luxe.get_update_rate = function() {
	return Luxe.core.update_rate;
};
Luxe.get_tick_start = function() {
	return Luxe.core.tick_start;
};
Luxe.get_tick_start_prev = function() {
	return Luxe.core.tick_start_prev;
};
Luxe.get_tick_delta = function() {
	return Luxe.core.tick_delta;
};
Luxe.get_timescale = function() {
	return Luxe.core.timescale;
};
Luxe.get_sim_time = function() {
	return Luxe.core.sim_time;
};
Luxe.get_sim_delta = function() {
	return Luxe.core.sim_delta;
};
Luxe.get_fixed_delta = function() {
	return Luxe.core.fixed_delta;
};
Luxe.get_fixed_timestep = function() {
	return Luxe.core.fixed_timestep;
};
Luxe.get_fixed_alpha = function() {
	return Luxe.core.fixed_alpha;
};
Luxe.get_fixed_frame_time = function() {
	return Luxe.core.fixed_frame_time;
};
Luxe.set_timescale = function(_val) {
	return Luxe.core.timescale = _val;
};
Luxe.set_fixed_delta = function(_val) {
	return Luxe.core.fixed_delta = _val;
};
Luxe.set_update_rate = function(_val) {
	return Luxe.core.update_rate = _val;
};
Luxe.set_fixed_timestep = function(_val) {
	return Luxe.core.fixed_timestep = _val;
};
Luxe.set_frame_max_delta = function(_val) {
	return Luxe.core.frame_max_delta = _val;
};
Luxe.set_fixed_frame_time = function(_val) {
	return Luxe.core.fixed_frame_time = _val;
};
Math.__name__ = ["Math"];
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = ["Reflect"];
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		return null;
	}
};
Reflect.setField = function(o,field,value) {
	o[field] = value;
};
Reflect.getProperty = function(o,field) {
	var tmp;
	if(o == null) return null; else if(o.__properties__ && (tmp = o.__properties__["get_" + field])) return o[tmp](); else return o[field];
};
Reflect.setProperty = function(o,field,value) {
	var tmp;
	if(o.__properties__ && (tmp = o.__properties__["set_" + field])) o[tmp](value); else o[field] = value;
};
Reflect.callMethod = function(o,func,args) {
	return func.apply(o,args);
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) a.push(f);
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	return typeof(f) == "function" && !(f.__name__ || f.__ename__);
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) return false;
	delete(o[field]);
	return true;
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = ["Std"];
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std["int"] = function(x) {
	return x | 0;
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) v = parseInt(x);
	if(isNaN(v)) return null;
	return v;
};
Std.parseFloat = function(x) {
	return parseFloat(x);
};
Std.random = function(x) {
	if(x <= 0) return 0; else return Math.floor(Math.random() * x);
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	add: function(x) {
		this.b += Std.string(x);
	}
	,addSub: function(s,pos,len) {
		if(len == null) this.b += HxOverrides.substr(s,pos,null); else this.b += HxOverrides.substr(s,pos,len);
	}
	,__class__: StringBuf
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = ["StringTools"];
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	return c > 8 && c < 14 || c == 32;
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) r++;
	if(r > 0) return HxOverrides.substr(s,r,l - r); else return s;
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) r++;
	if(r > 0) return HxOverrides.substr(s,0,l - r); else return s;
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.rpad = function(s,c,l) {
	if(c.length <= 0) return s;
	while(s.length < l) s = s + c;
	return s;
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
StringTools.fastCodeAt = function(s,index) {
	return s.charCodeAt(index);
};
var ValueType = $hxClasses["ValueType"] = { __ename__ : ["ValueType"], __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"] };
ValueType.TNull = ["TNull",0];
ValueType.TNull.toString = $estr;
ValueType.TNull.__enum__ = ValueType;
ValueType.TInt = ["TInt",1];
ValueType.TInt.toString = $estr;
ValueType.TInt.__enum__ = ValueType;
ValueType.TFloat = ["TFloat",2];
ValueType.TFloat.toString = $estr;
ValueType.TFloat.__enum__ = ValueType;
ValueType.TBool = ["TBool",3];
ValueType.TBool.toString = $estr;
ValueType.TBool.__enum__ = ValueType;
ValueType.TObject = ["TObject",4];
ValueType.TObject.toString = $estr;
ValueType.TObject.__enum__ = ValueType;
ValueType.TFunction = ["TFunction",5];
ValueType.TFunction.toString = $estr;
ValueType.TFunction.__enum__ = ValueType;
ValueType.TClass = function(c) { var $x = ["TClass",6,c]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TEnum = function(e) { var $x = ["TEnum",7,e]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TUnknown = ["TUnknown",8];
ValueType.TUnknown.toString = $estr;
ValueType.TUnknown.__enum__ = ValueType;
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = ["Type"];
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) return null;
	return a.join(".");
};
Type.getEnumName = function(e) {
	var a = e.__ename__;
	return a.join(".");
};
Type.resolveClass = function(name) {
	var cl = $hxClasses[name];
	if(cl == null || !cl.__name__) return null;
	return cl;
};
Type.resolveEnum = function(name) {
	var e = $hxClasses[name];
	if(e == null || !e.__ename__) return null;
	return e;
};
Type.createInstance = function(cl,args) {
	var _g = args.length;
	switch(_g) {
	case 0:
		return new cl();
	case 1:
		return new cl(args[0]);
	case 2:
		return new cl(args[0],args[1]);
	case 3:
		return new cl(args[0],args[1],args[2]);
	case 4:
		return new cl(args[0],args[1],args[2],args[3]);
	case 5:
		return new cl(args[0],args[1],args[2],args[3],args[4]);
	case 6:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
	case 7:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
	case 8:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	default:
		throw new js__$Boot_HaxeError("Too many arguments");
	}
	return null;
};
Type.createEmptyInstance = function(cl) {
	function empty() {}; empty.prototype = cl.prototype;
	return new empty();
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) throw new js__$Boot_HaxeError("No such constructor " + constr);
	if(Reflect.isFunction(f)) {
		if(params == null) throw new js__$Boot_HaxeError("Constructor " + constr + " need parameters");
		return Reflect.callMethod(e,f,params);
	}
	if(params != null && params.length != 0) throw new js__$Boot_HaxeError("Constructor " + constr + " does not need parameters");
	return f;
};
Type.getEnumConstructs = function(e) {
	var a = e.__constructs__;
	return a.slice();
};
Type["typeof"] = function(v) {
	var _g = typeof(v);
	switch(_g) {
	case "boolean":
		return ValueType.TBool;
	case "string":
		return ValueType.TClass(String);
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) return ValueType.TInt;
		return ValueType.TFloat;
	case "object":
		if(v == null) return ValueType.TNull;
		var e = v.__enum__;
		if(e != null) return ValueType.TEnum(e);
		var c = js_Boot.getClass(v);
		if(c != null) return ValueType.TClass(c);
		return ValueType.TObject;
	case "function":
		if(v.__name__ || v.__ename__) return ValueType.TObject;
		return ValueType.TFunction;
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
var Xml = function(nodeType) {
	this.nodeType = nodeType;
	this.children = [];
	this.attributeMap = new haxe_ds_StringMap();
};
$hxClasses["Xml"] = Xml;
Xml.__name__ = ["Xml"];
Xml.parse = function(str) {
	return haxe_xml_Parser.parse(str);
};
Xml.createElement = function(name) {
	var xml = new Xml(Xml.Element);
	if(xml.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + xml.nodeType);
	xml.nodeName = name;
	return xml;
};
Xml.createPCData = function(data) {
	var xml = new Xml(Xml.PCData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	xml.nodeValue = data;
	return xml;
};
Xml.createCData = function(data) {
	var xml = new Xml(Xml.CData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	xml.nodeValue = data;
	return xml;
};
Xml.createComment = function(data) {
	var xml = new Xml(Xml.Comment);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	xml.nodeValue = data;
	return xml;
};
Xml.createDocType = function(data) {
	var xml = new Xml(Xml.DocType);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	xml.nodeValue = data;
	return xml;
};
Xml.createProcessingInstruction = function(data) {
	var xml = new Xml(Xml.ProcessingInstruction);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	xml.nodeValue = data;
	return xml;
};
Xml.createDocument = function() {
	return new Xml(Xml.Document);
};
Xml.prototype = {
	get_nodeValue: function() {
		if(this.nodeType == Xml.Document || this.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + this.nodeType);
		return this.nodeValue;
	}
	,get: function(att) {
		if(this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		return this.attributeMap.get(att);
	}
	,set: function(att,value) {
		if(this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		this.attributeMap.set(att,value);
	}
	,exists: function(att) {
		if(this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		return this.attributeMap.exists(att);
	}
	,elements: function() {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		var ret;
		var _g = [];
		var _g1 = 0;
		var _g2 = this.children;
		while(_g1 < _g2.length) {
			var child = _g2[_g1];
			++_g1;
			if(child.nodeType == Xml.Element) _g.push(child);
		}
		ret = _g;
		return HxOverrides.iter(ret);
	}
	,firstElement: function() {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.nodeType == Xml.Element) return child;
		}
		return null;
	}
	,addChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		if(x.parent != null) x.parent.removeChild(x);
		this.children.push(x);
		x.parent = this;
	}
	,removeChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		if(HxOverrides.remove(this.children,x)) {
			x.parent = null;
			return true;
		}
		return false;
	}
	,__class__: Xml
	,__properties__: {get_nodeValue:"get_nodeValue"}
};
var luxe_Game = function() {
	this.app = new luxe_Engine(this);
	this.app.run();
};
$hxClasses["luxe.Game"] = luxe_Game;
luxe_Game.__name__ = ["luxe","Game"];
luxe_Game.main = function() {
	new ch_nectoria_Main();
};
luxe_Game.prototype = {
	config: function(_config) {
		return _config;
	}
	,ready: function() {
	}
	,update: function(dt) {
	}
	,ondestroy: function() {
	}
	,onprerender: function() {
	}
	,onrender: function() {
	}
	,onpostrender: function() {
	}
	,oninputdown: function(event) {
	}
	,oninputup: function(event) {
	}
	,onmousedown: function(event) {
	}
	,onmouseup: function(event) {
	}
	,onmousewheel: function(event) {
	}
	,onmousemove: function(event) {
	}
	,onkeydown: function(event) {
	}
	,onkeyup: function(event) {
	}
	,ontextinput: function(event) {
	}
	,ontouchdown: function(event) {
	}
	,ontouchup: function(event) {
	}
	,ontouchmove: function(event) {
	}
	,ongamepadaxis: function(event) {
	}
	,ongamepaddown: function(event) {
	}
	,ongamepadup: function(event) {
	}
	,ongamepaddevice: function(event) {
	}
	,onwindowmoved: function(event) {
	}
	,onwindowresized: function(event) {
	}
	,onwindowsized: function(event) {
	}
	,onwindowminimized: function(event) {
	}
	,onwindowrestored: function(event) {
	}
	,onevent: function(event) {
	}
	,__class__: luxe_Game
};
var ch_nectoria_Main = function() {
	luxe_Game.call(this);
};
$hxClasses["ch.nectoria.Main"] = ch_nectoria_Main;
ch_nectoria_Main.__name__ = ["ch","nectoria","Main"];
ch_nectoria_Main.__super__ = luxe_Game;
ch_nectoria_Main.prototype = $extend(luxe_Game.prototype,{
	config: function(config) {
		config.window.title = "LuxePlatformer";
		config.window.width = 1280;
		config.window.height = 720;
		config.window.fullscreen = false;
		return config;
	}
	,ready: function() {
		var parcel = new luxe_Parcel({ textures : [{ id : "assets/graphics/entity/player32.png"},{ id : "assets/graphics/entity/npc1.png"},{ id : "assets/graphics/entity/enemy_shadow.png"},{ id : "assets/graphics/splash/scanixgames.png"},{ id : "assets/graphics/tilemap.png"},{ id : "assets/tilemap.png"},{ id : "assets/graphics/object/door_0.png"},{ id : "assets/graphics/props/house_0.png"},{ id : "assets/graphics/entity/interactionSign.png"},{ id : "assets/graphics/object/sign.png"},{ id : "assets/graphics/ui/messagebox.png"}], texts : [{ id : "assets/maps/corcelles/level.tmx"},{ id : "assets/maps/house01/level.tmx"}], jsons : [{ id : "assets/anim.json"},{ id : "assets/graphics/object/chest.json"},{ id : "assets/graphics/ui/messagebox.json"}]});
		new luxe_ParcelProgress({ parcel : parcel, background : new phoenix_Color(1,1,1,0.85), oncomplete : $bind(this,this.assetsLoaded)});
		parcel.load();
	}
	,assetsLoaded: function(_) {
		Luxe.input.bind_key("jump",32);
		Luxe.input.bind_key("jump",119);
		Luxe.input.bind_key("jump",1073741906);
		Luxe.input.bind_key("left",97);
		Luxe.input.bind_key("left",1073741904);
		Luxe.input.bind_key("right",100);
		Luxe.input.bind_key("right",1073741903);
		ch_nectoria_Main.machine = new luxe_States({ name : "statemachine"});
		ch_nectoria_Main.machine.add(new ch_nectoria_states_SplashState("splash_state"));
		ch_nectoria_Main.machine.add(new ch_nectoria_states_GameState("game_state"));
		Luxe.camera.set_zoom(1);
		ch_nectoria_Main.fade = Luxe.camera.add(new ch_nectoria_components_Fader({ name : "fade"}));
		ch_nectoria_Main.fade.out(0.5,function() {
			ch_nectoria_Main.machine.set("splash_state");
		});
	}
	,onkeyup: function(e) {
		if(e.keycode == 27) Luxe.core.shutdown();
	}
	,update: function(dt) {
	}
	,__class__: ch_nectoria_Main
});
var phoenix_Vector = function(_x,_y,_z,_w) {
	if(_w == null) _w = 0;
	if(_z == null) _z = 0;
	if(_y == null) _y = 0;
	if(_x == null) _x = 0;
	this._construct = false;
	this.ignore_listeners = false;
	this.w = 0;
	this.z = 0;
	this.y = 0;
	this.x = 0;
	this._construct = true;
	this.x = _x;
	if(this._construct) this.x; else {
		if(this.listen_x != null && !this.ignore_listeners) this.listen_x(_x);
		this.x;
	}
	this.y = _y;
	if(this._construct) this.y; else {
		if(this.listen_y != null && !this.ignore_listeners) this.listen_y(_y);
		this.y;
	}
	this.z = _z;
	if(this._construct) this.z; else {
		if(this.listen_z != null && !this.ignore_listeners) this.listen_z(_z);
		this.z;
	}
	this.w = _w;
	this._construct = false;
};
$hxClasses["phoenix.Vector"] = phoenix_Vector;
phoenix_Vector.__name__ = ["phoenix","Vector"];
phoenix_Vector.prototype = {
	toString: function() {
		return "{ x:" + this.x + ", y:" + this.y + ", z:" + this.z + " }";
	}
	,set_x: function(_x) {
		this.x = _x;
		if(this._construct) return this.x;
		if(this.listen_x != null && !this.ignore_listeners) this.listen_x(_x);
		return this.x;
	}
	,set_y: function(_y) {
		this.y = _y;
		if(this._construct) return this.y;
		if(this.listen_y != null && !this.ignore_listeners) this.listen_y(_y);
		return this.y;
	}
	,set_z: function(_z) {
		this.z = _z;
		if(this._construct) return this.z;
		if(this.listen_z != null && !this.ignore_listeners) this.listen_z(_z);
		return this.z;
	}
	,set_angle2D: function(value) {
		var len = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
		var _x = Math.cos(value) * len;
		var _y = Math.sin(value) * len;
		var prev = this.ignore_listeners;
		this.ignore_listeners = true;
		this.x = _x;
		if(this._construct) this.x; else {
			if(this.listen_x != null && !this.ignore_listeners) this.listen_x(_x);
			this.x;
		}
		this.y = _y;
		if(this._construct) this.y; else {
			if(this.listen_y != null && !this.ignore_listeners) this.listen_y(_y);
			this.y;
		}
		this.ignore_listeners = prev;
		if(this.listen_x != null && !this.ignore_listeners) this.listen_x(this.x);
		if(this.listen_y != null && !this.ignore_listeners) this.listen_y(this.y);
		this;
		return value;
	}
	,__class__: phoenix_Vector
	,__properties__: {set_angle2D:"set_angle2D",set_z:"set_z",set_y:"set_y",set_x:"set_x"}
};
var ch_nectoria_NP = function() { };
$hxClasses["ch.nectoria.NP"] = ch_nectoria_NP;
ch_nectoria_NP.__name__ = ["ch","nectoria","NP"];
ch_nectoria_NP.drawDebug = function() {
	var _g = 0;
	var _g1 = ch_nectoria_NP.level_shape_list;
	while(_g < _g1.length) {
		var shape = _g1[_g];
		++_g;
		ch_nectoria_NP.draw_collider_polygon(shape,new phoenix_Color(0,1,0,1));
	}
	var _g2 = 0;
	var _g11 = ch_nectoria_NP.entity_shape_list;
	while(_g2 < _g11.length) {
		var shape1 = _g11[_g2];
		++_g2;
		ch_nectoria_NP.draw_collider_polygon(shape1.hitBox,new phoenix_Color(0,0,1,1));
	}
	var _g3 = 0;
	var _g12 = ch_nectoria_NP.actor_list;
	while(_g3 < _g12.length) {
		var shape2 = _g12[_g3];
		++_g3;
		ch_nectoria_NP.draw_collider_polygon(shape2.hitBoxPhys,new phoenix_Color(1,0,0,1));
	}
};
ch_nectoria_NP.draw_collider_polygon = function(poly,col) {
	var geom = Luxe.draw.poly({ solid : false, close : true, depth : 100, points : poly.get_vertices(), immediate : true, color : col});
	var _this = geom.transform.local.pos;
	var _other = poly._position;
	var _x = _other.x;
	var _y = _other.y;
	var _z = _other.z;
	var prev = _this.ignore_listeners;
	_this.ignore_listeners = true;
	_this.x = _x;
	if(_this._construct) _this.x; else {
		if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_x);
		_this.x;
	}
	_this.y = _y;
	if(_this._construct) _this.y; else {
		if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_y);
		_this.y;
	}
	_this.z = _z;
	if(_this._construct) _this.z; else {
		if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_z);
		_this.z;
	}
	_this.w = _other.w;
	_this.ignore_listeners = prev;
	if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_this.x);
	if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_this.y);
	if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_this.z);
	_this;
	_this;
};
var luxe_ID = function(_name,_id) {
	if(_id == null) _id = "";
	if(_name == null) _name = "";
	this.name = "";
	this.name = _name;
	if(_id == "") this.id = Luxe.utils.uniqueid(); else this.id = _id;
};
$hxClasses["luxe.ID"] = luxe_ID;
luxe_ID.__name__ = ["luxe","ID"];
luxe_ID.prototype = {
	__class__: luxe_ID
};
var luxe_Component = function(_options) {
	var _name = "";
	if(_options != null) {
		if(_options.name != null) _name = _options.name;
	}
	luxe_ID.call(this,_name == ""?Luxe.utils.uniqueid():_name);
};
$hxClasses["luxe.Component"] = luxe_Component;
luxe_Component.__name__ = ["luxe","Component"];
luxe_Component.__super__ = luxe_ID;
luxe_Component.prototype = $extend(luxe_ID.prototype,{
	init: function() {
	}
	,update: function(dt) {
	}
	,onadded: function() {
	}
	,onremoved: function() {
	}
	,onfixedupdate: function(rate) {
	}
	,onreset: function() {
	}
	,ondestroy: function() {
	}
	,onkeyup: function(event) {
	}
	,onkeydown: function(event) {
	}
	,ontextinput: function(event) {
	}
	,oninputdown: function(event) {
	}
	,oninputup: function(event) {
	}
	,onmousedown: function(event) {
	}
	,onmouseup: function(event) {
	}
	,onmousemove: function(event) {
	}
	,onmousewheel: function(event) {
	}
	,ontouchdown: function(event) {
	}
	,ontouchup: function(event) {
	}
	,ontouchmove: function(event) {
	}
	,ongamepadup: function(event) {
	}
	,ongamepaddown: function(event) {
	}
	,ongamepadaxis: function(event) {
	}
	,ongamepaddevice: function(event) {
	}
	,onwindowmoved: function(event) {
	}
	,onwindowresized: function(event) {
	}
	,onwindowsized: function(event) {
	}
	,onwindowminimized: function(event) {
	}
	,onwindowrestored: function(event) {
	}
	,add: function(component) {
		return this.get_entity().add(component);
	}
	,remove: function(_name) {
		return this.get_entity().remove(_name);
	}
	,get: function(_name,in_children) {
		if(in_children == null) in_children = false;
		return this.get_entity().get(_name,in_children);
	}
	,get_any: function(_name,in_children,first_only) {
		if(first_only == null) first_only = true;
		if(in_children == null) in_children = false;
		return this.get_entity().get_any(_name,in_children,first_only);
	}
	,has: function(_name) {
		return this.get_entity().has(_name);
	}
	,_detach_entity: function() {
		if(this.get_entity() != null) {
		}
	}
	,_attach_entity: function() {
		if(this.get_entity() != null) {
		}
	}
	,set_entity: function(_entity) {
		this._detach_entity();
		this.entity = _entity;
		this._attach_entity();
		return this.get_entity();
	}
	,get_entity: function() {
		return this.entity;
	}
	,set_pos: function(_p) {
		return this.get_entity().get_transform().set_pos(_p);
	}
	,get_pos: function() {
		return this.get_entity().get_transform().get_pos();
	}
	,set_rotation: function(_r) {
		return this.get_entity().get_transform().set_rotation(_r);
	}
	,get_rotation: function() {
		return this.get_entity().get_transform().get_rotation();
	}
	,set_scale: function(_s) {
		return this.get_entity().get_transform().set_scale(_s);
	}
	,get_scale: function() {
		return this.get_entity().get_transform().get_scale();
	}
	,set_origin: function(_o) {
		return this.get_entity().get_transform().set_origin(_o);
	}
	,get_origin: function() {
		return this.get_entity().get_transform().get_origin();
	}
	,set_transform: function(_o) {
		return this.get_entity().set_transform(_o);
	}
	,get_transform: function() {
		return this.get_entity().get_transform();
	}
	,entity_pos_change: function(_pos) {
	}
	,entity_scale_change: function(_scale) {
	}
	,entity_rotation_change: function(_rotation) {
	}
	,entity_origin_change: function(_origin) {
	}
	,entity_parent_change: function(_parent) {
	}
	,toString: function() {
		return "luxe Component: " + this.name + " on " + this.get_entity().get_name() + " / id: " + this.id;
	}
	,__class__: luxe_Component
	,__properties__: {set_origin:"set_origin",get_origin:"get_origin",set_scale:"set_scale",get_scale:"get_scale",set_rotation:"set_rotation",get_rotation:"get_rotation",set_pos:"set_pos",get_pos:"get_pos",set_entity:"set_entity",get_entity:"get_entity"}
});
var ch_nectoria_components_ColliderComp = function(_options) {
	luxe_Component.call(this,_options);
};
$hxClasses["ch.nectoria.components.ColliderComp"] = ch_nectoria_components_ColliderComp;
ch_nectoria_components_ColliderComp.__name__ = ["ch","nectoria","components","ColliderComp"];
ch_nectoria_components_ColliderComp.__super__ = luxe_Component;
ch_nectoria_components_ColliderComp.prototype = $extend(luxe_Component.prototype,{
	onadded: function() {
		this.collidable = this.get_entity();
	}
	,update: function(dt) {
		var _g = 0;
		var _g1 = ch_nectoria_NP.entity_shape_list;
		while(_g < _g1.length) {
			var col_entity = _g1[_g];
			++_g;
			if(col_entity == this.collidable) continue;
			var c = this.collidable.hitBox.test(col_entity.hitBox,null);
			if(c != null) {
				if(this.get_entity() == ch_nectoria_NP.player) {
					ch_nectoria_NP.player.interactWith = true;
					col_entity.on_player_collision(this.get_entity() == ch_nectoria_NP.player);
				}
				break;
			} else ch_nectoria_NP.player.interactWith = false;
		}
	}
	,init: function() {
		luxe_Component.prototype.init.call(this);
	}
	,ondestroy: function() {
		luxe_Component.prototype.ondestroy.call(this);
	}
	,onremoved: function() {
		luxe_Component.prototype.onremoved.call(this);
	}
	,__class__: ch_nectoria_components_ColliderComp
});
var ch_nectoria_components_Fader = function(_options) {
	luxe_Component.call(this,_options);
};
$hxClasses["ch.nectoria.components.Fader"] = ch_nectoria_components_Fader;
ch_nectoria_components_Fader.__name__ = ["ch","nectoria","components","Fader"];
ch_nectoria_components_Fader.__super__ = luxe_Component;
ch_nectoria_components_Fader.prototype = $extend(luxe_Component.prototype,{
	init: function() {
		ch_nectoria_components_Fader.faderBatcher = new phoenix_Batcher(Luxe.renderer,"fader_batcher");
		ch_nectoria_components_Fader.faderBatcher.view = new phoenix_Camera();
		ch_nectoria_components_Fader.faderBatcher.set_layer(10);
		Luxe.renderer.add_batch(ch_nectoria_components_Fader.faderBatcher);
		this.overlay = new luxe_Sprite({ size : Luxe.core.screen.get_size(), color : new phoenix_Color(0,0,0,0), centered : false, batcher : ch_nectoria_components_Fader.faderBatcher, depth : 99});
	}
	,out: function(t,fn) {
		if(t == null) t = 0.15;
		this.overlay.color.tween(t,{ a : 1}).onComplete(fn);
	}
	,up: function(t,fn) {
		if(t == null) t = 0.15;
		this.overlay.color.tween(t,{ a : 0}).onComplete(fn);
	}
	,ondestroy: function() {
		this.overlay.destroy();
	}
	,onremoved: function() {
		luxe_Component.prototype.onremoved.call(this);
	}
	,__class__: ch_nectoria_components_Fader
});
var ch_nectoria_components_LazyCameraFollow = function(name,state,behaviour,tilemapSize) {
	luxe_Component.call(this,{ name : name});
	this._state = state;
	this._behaviour = behaviour;
	this._tilemapSize = tilemapSize;
};
$hxClasses["ch.nectoria.components.LazyCameraFollow"] = ch_nectoria_components_LazyCameraFollow;
ch_nectoria_components_LazyCameraFollow.__name__ = ["ch","nectoria","components","LazyCameraFollow"];
ch_nectoria_components_LazyCameraFollow.__super__ = luxe_Component;
ch_nectoria_components_LazyCameraFollow.prototype = $extend(luxe_Component.prototype,{
	onadded: function() {
		var _this = Luxe.camera.get_center();
		var _other = this.get_pos();
		var _x = _other.x;
		var _y = _other.y;
		var _z = _other.z;
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = _x;
		if(_this._construct) _this.x; else {
			if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_x);
			_this.x;
		}
		_this.y = _y;
		if(_this._construct) _this.y; else {
			if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_y);
			_this.y;
		}
		_this.z = _z;
		if(_this._construct) _this.z; else {
			if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_z);
			_this.z;
		}
		_this.w = _other.w;
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_this.x);
		if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_this.y);
		if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_this.z);
		_this;
		_this;
	}
	,update: function(dt) {
		var camX;
		var camY;
		if(this._behaviour == "static") {
			camX = this._tilemapSize.x / 2;
			camY = this._tilemapSize.y / 2;
		} else {
			camX = this.get_entity().get_pos().x;
			camY = 140;
		}
		Luxe.camera.focus(new phoenix_Vector(camX,camY),dt);
	}
	,init: function() {
		luxe_Component.prototype.init.call(this);
	}
	,ondestroy: function() {
		luxe_Component.prototype.ondestroy.call(this);
	}
	,onremoved: function() {
		luxe_Component.prototype.onremoved.call(this);
	}
	,__class__: ch_nectoria_components_LazyCameraFollow
});
var luxe_Emitter = function() {
	this._checking = false;
	this._to_remove = new List();
	this.connected = new List();
	this.bindings = new haxe_ds_IntMap();
};
$hxClasses["luxe.Emitter"] = luxe_Emitter;
luxe_Emitter.__name__ = ["luxe","Emitter"];
luxe_Emitter.prototype = {
	_emitter_destroy: function() {
		while(this._to_remove.length > 0) {
			var _node = this._to_remove.pop();
			_node.event = null;
			_node.handler = null;
			_node = null;
		}
		while(this.connected.length > 0) {
			var _node1 = this.connected.pop();
			_node1.event = null;
			_node1.handler = null;
			_node1 = null;
		}
		this._to_remove = null;
		this.connected = null;
		this.bindings = null;
	}
	,emit: function(event,data) {
		if(this.bindings == null) return;
		this._check();
		this._checking = true;
		var _list = this.bindings.h[event];
		if(_list != null && _list.length > 0) {
			var _g = 0;
			while(_g < _list.length) {
				var handler = _list[_g];
				++_g;
				handler(data);
			}
		}
		this._checking = false;
		this._check();
	}
	,on: function(event,handler) {
		if(this.bindings == null) return;
		this._check();
		if(!this.bindings.h.hasOwnProperty(event)) {
			this.bindings.h[event] = [handler];
			this.connected.push({ handler : handler, event : event});
		} else {
			var _list = this.bindings.h[event];
			if(HxOverrides.indexOf(_list,handler,0) == -1) {
				_list.push(handler);
				this.connected.push({ handler : handler, event : event});
			}
		}
	}
	,off: function(event,handler) {
		if(this.bindings == null) return false;
		this._check();
		var _success = false;
		if(this.bindings.h.hasOwnProperty(event)) {
			this._to_remove.push({ event : event, handler : handler});
			var _g_head = this.connected.h;
			var _g_val = null;
			while(_g_head != null) {
				var _info;
				_info = (function($this) {
					var $r;
					_g_val = _g_head[0];
					_g_head = _g_head[1];
					$r = _g_val;
					return $r;
				}(this));
				if(_info.event == event && _info.handler == handler) this.connected.remove(_info);
			}
			_success = true;
		}
		return _success;
	}
	,connections: function(handler) {
		if(this.connected == null) return null;
		var _list = [];
		var _g_head = this.connected.h;
		var _g_val = null;
		while(_g_head != null) {
			var _info;
			_info = (function($this) {
				var $r;
				_g_val = _g_head[0];
				_g_head = _g_head[1];
				$r = _g_val;
				return $r;
			}(this));
			if(_info.handler == handler) _list.push(_info);
		}
		return _list;
	}
	,_check: function() {
		if(this._checking || this._to_remove == null) return;
		this._checking = true;
		if(this._to_remove.length > 0) {
			var _g_head = this._to_remove.h;
			var _g_val = null;
			while(_g_head != null) {
				var _node;
				_node = (function($this) {
					var $r;
					_g_val = _g_head[0];
					_g_head = _g_head[1];
					$r = _g_val;
					return $r;
				}(this));
				var _list = this.bindings.h[_node.event];
				if(_list != null) {
					HxOverrides.remove(_list,_node.handler);
					if(_list.length == 0) this.bindings.remove(_node.event);
				}
			}
			this._to_remove = null;
			this._to_remove = new List();
		}
		this._checking = false;
	}
	,__class__: luxe_Emitter
};
var luxe_Objects = function(_name,_id) {
	if(_id == null) _id = "";
	if(_name == null) _name = "";
	this.name = "";
	this.id = "";
	luxe_Emitter.call(this);
	this.set_name(_name);
	this.set_id(_id == ""?Luxe.utils.uniqueid():_id);
};
$hxClasses["luxe.Objects"] = luxe_Objects;
luxe_Objects.__name__ = ["luxe","Objects"];
luxe_Objects.__super__ = luxe_Emitter;
luxe_Objects.prototype = $extend(luxe_Emitter.prototype,{
	set_name: function(_name) {
		return this.name = _name;
	}
	,set_id: function(_id) {
		return this.id = _id;
	}
	,get_name: function() {
		return this.name;
	}
	,get_id: function() {
		return this.id;
	}
	,__class__: luxe_Objects
	,__properties__: {set_name:"set_name",get_name:"get_name",set_id:"set_id",get_id:"get_id"}
});
var luxe_Entity = function(_options) {
	this.component_count = 0;
	this.active = true;
	this.fixed_rate = 0;
	this.started = false;
	this.inited = false;
	this.destroyed = false;
	luxe_Objects.call(this,"entity");
	var _g = this;
	_g.set_name(_g.get_name() + ("." + this.get_id()));
	this.options = _options;
	this._components = new luxe_components_Components(this);
	this.children = [];
	this.events = new luxe_Events();
	if(this.options != null && this.options.transform != null) this.set_transform(this.options.transform); else this.set_transform(new phoenix_Transform());
	this.get_transform().listen_pos($bind(this,this.set_pos_from_transform));
	this.get_transform().listen_scale($bind(this,this.set_scale_from_transform));
	this.get_transform().listen_origin($bind(this,this.set_origin_from_transform));
	this.get_transform().listen_parent($bind(this,this.set_parent_from_transform));
	this.get_transform().listen_rotation($bind(this,this.set_rotation_from_transform));
	if(this.options != null) {
		if(this.options.name_unique == null) this.options.name_unique = false;
		this.options.name_unique;
		if(this.options.name != null) {
			this.set_name(this.options.name);
			if(this.options.name_unique) {
				var _g1 = this;
				_g1.set_name(_g1.get_name() + ("." + this.get_id()));
			}
		}
		if(this.options.pos != null) {
			var _op = this.options.pos;
			this.set_pos(new phoenix_Vector(_op.x,_op.y,_op.z,_op.w));
		}
		if(this.options.scale != null) {
			var _os = this.options.scale;
			this.set_scale(new phoenix_Vector(_os.x,_os.y,_os.z,_os.w));
		}
		var _should_add = true;
		if(this.options.no_scene != null) {
			if(this.options.no_scene == true) {
				_should_add = false;
				null;
			}
		}
		if(this.options.parent != null) {
			_should_add = false;
			this.set_parent(this.options.parent);
			null;
		}
		if(_should_add) {
			if(this.options.scene != null) {
				this.set_scene(this.options.scene);
				null;
			} else {
				this.set_scene(Luxe.scene);
				null;
			}
		}
	} else {
		this.set_scene(Luxe.scene);
		null;
	}
	if(this.get_scene() != null) this.get_scene().add(this); else null;
	null;
};
$hxClasses["luxe.Entity"] = luxe_Entity;
luxe_Entity.__name__ = ["luxe","Entity"];
luxe_Entity.__super__ = luxe_Objects;
luxe_Entity.prototype = $extend(luxe_Objects.prototype,{
	init: function() {
	}
	,update: function(dt) {
	}
	,onfixedupdate: function(rate) {
	}
	,onreset: function() {
	}
	,ondestroy: function() {
	}
	,onkeyup: function(event) {
	}
	,onkeydown: function(event) {
	}
	,ontextinput: function(event) {
	}
	,oninputdown: function(event) {
	}
	,oninputup: function(event) {
	}
	,onmousedown: function(event) {
	}
	,onmouseup: function(event) {
	}
	,onmousemove: function(event) {
	}
	,onmousewheel: function(event) {
	}
	,ontouchdown: function(event) {
	}
	,ontouchup: function(event) {
	}
	,ontouchmove: function(event) {
	}
	,ongamepadup: function(event) {
	}
	,ongamepaddown: function(event) {
	}
	,ongamepadaxis: function(event) {
	}
	,ongamepaddevice: function(event) {
	}
	,onwindowmoved: function(event) {
	}
	,onwindowresized: function(event) {
	}
	,onwindowsized: function(event) {
	}
	,onwindowminimized: function(event) {
	}
	,onwindowrestored: function(event) {
	}
	,add: function(_component) {
		this.component_count++;
		return this._components.add(_component);
	}
	,remove: function(_name) {
		this.component_count--;
		return this._components.remove(_name);
	}
	,get: function(_name,_in_children) {
		if(_in_children == null) _in_children = false;
		return this._components.get(_name,_in_children);
	}
	,get_any: function(_name,_in_children,_first_only) {
		if(_first_only == null) _first_only = true;
		if(_in_children == null) _in_children = false;
		return this._components.get_any(_name,_in_children,_first_only);
	}
	,has: function(_name) {
		return this._components.has(_name);
	}
	,_init: function() {
		this.init();
		this.emit(2);
		if(this.component_count > 0) {
			var _g_index = 0;
			var _g_map = this._components.components;
			while(_g_index < _g_map._keys.length) {
				var _component = _g_map.get(_g_map._keys[_g_index++]);
				_component.init();
			}
		}
		if(this.children.length > 0) {
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var _child = _g1[_g];
				++_g;
				_child._init();
			}
		}
		this.inited = true;
	}
	,_reset: function(_) {
		this.onreset();
		this.emit(3);
		if(this.component_count > 0) {
			var _g_index = 0;
			var _g_map = this._components.components;
			while(_g_index < _g_map._keys.length) {
				var _component = _g_map.get(_g_map._keys[_g_index++]);
				_component.onreset();
			}
		}
		if(this.children.length > 0) {
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var _child = _g1[_g];
				++_g;
				_child._reset(_);
				null;
			}
		}
		this._set_fixed_rate_timer(this.fixed_rate);
		this.started = true;
	}
	,destroy: function(_from_parent) {
		if(_from_parent == null) _from_parent = false;
		if(!(this.destroyed == false)) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("destroyed == false" + (" ( " + ("entity / destroying repeatedly " + this.get_name()) + " )")));
		if(this.children.length > 0) {
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var _child = _g1[_g];
				++_g;
				_child.destroy(true);
				_child = null;
			}
		}
		if(this.component_count > 0) {
			var _g_index = 0;
			var _g_map = this._components.components;
			while(_g_index < _g_map._keys.length) {
				var _component = _g_map.get(_g_map._keys[_g_index++]);
				_component.onremoved();
				_component.ondestroy();
				_component = null;
			}
		}
		this.children = null;
		this._components.destroy();
		this._components = null;
		this.component_count = 0;
		this.emit(8);
		this.ondestroy();
		if(this.get_parent() != null && !_from_parent) this.get_parent()._remove_child(this);
		if(this.fixed_rate_timer != null) {
			this.fixed_rate_timer.stop();
			this.fixed_rate_timer = null;
		}
		this.destroyed = true;
		this.inited = false;
		this.started = false;
		if(this.get_scene() != null) this.get_scene().remove(this);
		if(this.events != null) {
			this.events.destroy();
			this.events = null;
		}
		if(this.get_transform() != null) {
			this.get_transform().destroy();
			this.set_transform(null);
		}
		this._emitter_destroy();
		this.set_id(null);
	}
	,_update: function(dt) {
		if(this.destroyed) return;
		if(!this.get_active() || !this.inited || !this.started) return;
		this.get_transform().clean_check();
		this.update(dt);
		if(this.events != null) this.events.process();
		if(this.component_count > 0) {
			var _g_index = 0;
			var _g_map = this._components.components;
			while(_g_index < _g_map._keys.length) {
				var _component = _g_map.get(_g_map._keys[_g_index++]);
				_component.update(dt);
			}
		}
		if(this.children != null && this.children.length > 0) {
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var _child = _g1[_g];
				++_g;
				_child._update(dt);
			}
		}
	}
	,_fixed_update: function() {
		if(this.destroyed) return;
		if(!this.get_active() || !this.inited || !this.started) return;
		this.emit(7);
		this.onfixedupdate(this.fixed_rate);
		if(this.component_count > 0) {
			var _g_index = 0;
			var _g_map = this._components.components;
			while(_g_index < _g_map._keys.length) {
				var _component = _g_map.get(_g_map._keys[_g_index++]);
				_component.onfixedupdate(this.fixed_rate);
			}
		}
		if(this.children.length > 0) {
			var _g = 0;
			var _g1 = this.children;
			while(_g < _g1.length) {
				var _child = _g1[_g];
				++_g;
				_child._fixed_update();
			}
		}
	}
	,_find_emit_source: function(_from_unlisten) {
		if(_from_unlisten == null) _from_unlisten = false;
		var _source = null;
		if(this.get_scene() != null) _source = this.get_scene(); else if(this.get_parent() != null) {
			var _looking = true;
			var _parent = this.get_parent();
			while(_looking) if(_parent.get_scene() == null) {
				if(_parent.get_parent() == null) {
					if(!_from_unlisten) haxe_Log.trace("   i / entity / " + "entity has no parent or scene, currently no core events will reach it.",{ fileName : "Entity.hx", lineNumber : 518, className : "luxe.Entity", methodName : "_find_emit_source"});
					_looking = false;
					break;
				} else _parent = _parent.get_parent();
			} else {
				_source = _parent.get_scene();
				_looking = false;
				break;
			}
		} else if(!_from_unlisten) haxe_Log.trace("   i / entity / " + "entity has no parent or scene, currently no core events will reach it.",{ fileName : "Entity.hx", lineNumber : 540, className : "luxe.Entity", methodName : "_find_emit_source"});
		return _source;
	}
	,_listen: function(_event,_handler,_self) {
		if(_self == null) _self = false;
		if(!_self) this.on(_event,_handler);
		var _source = this._find_emit_source(null);
		if(_source != null) switch(_event) {
		case 13:
			_source.on(_event,$bind(this,this._keyup));
			break;
		case 12:
			_source.on(_event,$bind(this,this._keydown));
			break;
		case 14:
			_source.on(_event,$bind(this,this._textinput));
			break;
		case 17:
			_source.on(_event,$bind(this,this._mousedown));
			break;
		case 18:
			_source.on(_event,$bind(this,this._mouseup));
			break;
		case 19:
			_source.on(_event,$bind(this,this._mousemove));
			break;
		case 20:
			_source.on(_event,$bind(this,this._mousewheel));
			break;
		case 21:
			_source.on(_event,$bind(this,this._touchdown));
			break;
		case 22:
			_source.on(_event,$bind(this,this._touchup));
			break;
		case 23:
			_source.on(_event,$bind(this,this._touchmove));
			break;
		case 16:
			_source.on(_event,$bind(this,this._inputup));
			break;
		case 15:
			_source.on(_event,$bind(this,this._inputdown));
			break;
		case 25:
			_source.on(_event,$bind(this,this._gamepaddown));
			break;
		case 26:
			_source.on(_event,$bind(this,this._gamepadup));
			break;
		case 24:
			_source.on(_event,$bind(this,this._gamepadaxis));
			break;
		case 27:
			_source.on(_event,$bind(this,this._gamepaddevice));
			break;
		case 29:
			_source.on(_event,$bind(this,this._windowmoved));
			break;
		case 30:
			_source.on(_event,$bind(this,this._windowresized));
			break;
		case 31:
			_source.on(_event,$bind(this,this._windowsized));
			break;
		case 32:
			_source.on(_event,$bind(this,this._windowminimized));
			break;
		case 33:
			_source.on(_event,$bind(this,this._windowrestored));
			break;
		}
	}
	,_unlisten: function(_event,_handler,_self) {
		if(_self == null) _self = false;
		var _source = this._find_emit_source(true);
		if(!_self) this.off(_event,_handler);
		if(_source != null) switch(_event) {
		case 13:
			_source.off(_event,$bind(this,this._keyup));
			break;
		case 12:
			_source.off(_event,$bind(this,this._keydown));
			break;
		case 14:
			_source.off(_event,$bind(this,this._textinput));
			break;
		case 17:
			_source.off(_event,$bind(this,this._mousedown));
			break;
		case 18:
			_source.off(_event,$bind(this,this._mouseup));
			break;
		case 19:
			_source.off(_event,$bind(this,this._mousemove));
			break;
		case 20:
			_source.off(_event,$bind(this,this._mousewheel));
			break;
		case 21:
			_source.off(_event,$bind(this,this._touchdown));
			break;
		case 22:
			_source.off(_event,$bind(this,this._touchup));
			break;
		case 23:
			_source.off(_event,$bind(this,this._touchmove));
			break;
		case 16:
			_source.off(_event,$bind(this,this._inputup));
			break;
		case 15:
			_source.off(_event,$bind(this,this._inputdown));
			break;
		case 25:
			_source.off(_event,$bind(this,this._gamepaddown));
			break;
		case 26:
			_source.off(_event,$bind(this,this._gamepadup));
			break;
		case 24:
			_source.off(_event,$bind(this,this._gamepadaxis));
			break;
		case 27:
			_source.off(_event,$bind(this,this._gamepaddevice));
			break;
		case 29:
			_source.off(_event,$bind(this,this._windowmoved));
			break;
		case 30:
			_source.off(_event,$bind(this,this._windowresized));
			break;
		case 31:
			_source.off(_event,$bind(this,this._windowsized));
			break;
		case 32:
			_source.off(_event,$bind(this,this._windowminimized));
			break;
		case 33:
			_source.off(_event,$bind(this,this._windowrestored));
			break;
		}
	}
	,_detach_scene: function() {
		if(this.get_scene() != null) {
			this.get_scene().off(3,$bind(this,this._reset));
			this.get_scene().off(8,$bind(this,this.destroy));
			this.get_scene().off(13,$bind(this,this._keyup));
			this.get_scene().off(12,$bind(this,this._keydown));
			this.get_scene().off(14,$bind(this,this._textinput));
			this.get_scene().off(17,$bind(this,this._mousedown));
			this.get_scene().off(18,$bind(this,this._mouseup));
			this.get_scene().off(19,$bind(this,this._mousemove));
			this.get_scene().off(20,$bind(this,this._mousewheel));
			this.get_scene().off(21,$bind(this,this._touchdown));
			this.get_scene().off(22,$bind(this,this._touchup));
			this.get_scene().off(23,$bind(this,this._touchmove));
			this.get_scene().off(16,$bind(this,this._inputup));
			this.get_scene().off(15,$bind(this,this._inputdown));
			this.get_scene().off(25,$bind(this,this._gamepaddown));
			this.get_scene().off(26,$bind(this,this._gamepadup));
			this.get_scene().off(24,$bind(this,this._gamepadaxis));
			this.get_scene().off(27,$bind(this,this._gamepaddevice));
			this.get_scene().off(29,$bind(this,this._windowmoved));
			this.get_scene().off(30,$bind(this,this._windowresized));
			this.get_scene().off(31,$bind(this,this._windowsized));
			this.get_scene().off(32,$bind(this,this._windowminimized));
			this.get_scene().off(33,$bind(this,this._windowrestored));
		}
	}
	,_attach_scene: function() {
		if(this.get_scene() != null) {
			this.get_scene().on(3,$bind(this,this._reset));
			this.get_scene().on(8,$bind(this,this.destroy));
		}
	}
	,_keyup: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) return;
		this.onkeyup(_event);
		this.emit(13,_event);
	}
	,_keydown: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) return;
		this.onkeydown(_event);
		this.emit(12,_event);
	}
	,_textinput: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) return;
		this.ontextinput(_event);
		this.emit(14,_event);
	}
	,_mousedown: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) return;
		this.onmousedown(_event);
		this.emit(17,_event);
	}
	,_mouseup: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) return;
		this.onmouseup(_event);
		this.emit(18,_event);
	}
	,_mousewheel: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) return;
		this.onmousewheel(_event);
		this.emit(20,_event);
	}
	,_mousemove: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) return;
		this.onmousemove(_event);
		this.emit(19,_event);
	}
	,_touchdown: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) return;
		this.ontouchdown(_event);
		this.emit(21,_event);
	}
	,_touchup: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) return;
		this.ontouchup(_event);
		this.emit(22,_event);
	}
	,_touchmove: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) return;
		this.ontouchmove(_event);
		this.emit(23,_event);
	}
	,_gamepadaxis: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) return;
		this.ongamepadaxis(_event);
		this.emit(24,_event);
	}
	,_gamepaddown: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) return;
		this.ongamepaddown(_event);
		this.emit(25,_event);
	}
	,_gamepadup: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) return;
		this.ongamepadup(_event);
		this.emit(26,_event);
	}
	,_gamepaddevice: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) return;
		this.ongamepaddevice(_event);
		this.emit(27,_event);
	}
	,_windowmoved: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) return;
		this.onwindowmoved(_event);
		this.emit(29,_event);
	}
	,_windowresized: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) return;
		this.onwindowresized(_event);
		this.emit(30,_event);
	}
	,_windowsized: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) return;
		this.onwindowsized(_event);
		this.emit(31,_event);
	}
	,_windowminimized: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) return;
		this.onwindowminimized(_event);
		this.emit(32,_event);
	}
	,_windowrestored: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) return;
		this.onwindowrestored(_event);
		this.emit(33,_event);
	}
	,_inputdown: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) return;
		this.oninputdown(_event);
		this.emit(15,_event);
	}
	,_inputup: function(_event) {
		if(!this.get_active() || !this.inited || !this.started) return;
		this.oninputup(_event);
		this.emit(16,_event);
	}
	,get_fixed_rate: function() {
		return this.fixed_rate;
	}
	,set_fixed_rate: function(_rate) {
		this.fixed_rate = _rate;
		if(this.started) {
			if(this.fixed_rate_timer != null) {
				this.fixed_rate_timer.stop();
				this.fixed_rate_timer = null;
			}
			if(_rate != 0 && this.get_parent() == null && !this.destroyed) {
				this.fixed_rate_timer = new snow_api_Timer(_rate);
				this.fixed_rate_timer.run = $bind(this,this._fixed_update);
			}
		}
		return this.fixed_rate;
	}
	,_stop_fixed_rate_timer: function() {
		if(this.fixed_rate_timer != null) {
			this.fixed_rate_timer.stop();
			this.fixed_rate_timer = null;
		}
	}
	,_set_fixed_rate_timer: function(_rate) {
		if(this.fixed_rate_timer != null) {
			this.fixed_rate_timer.stop();
			this.fixed_rate_timer = null;
		}
		if(_rate != 0 && this.get_parent() == null && !this.destroyed) {
			this.fixed_rate_timer = new snow_api_Timer(_rate);
			this.fixed_rate_timer.run = $bind(this,this._fixed_update);
		}
	}
	,get_components: function() {
		return this._components.components;
	}
	,_add_child: function(child) {
		this.children.push(child);
		child.set_scene_root(this.scene_root);
		if(child.get_scene() != null) {
			var _removed = child.get_scene().remove(child);
		} else {
			if(this.inited && !child.inited) this.scene_root._delayed_init_entities.push(child);
			if(this.started && !child.started) this.scene_root._delayed_reset_entities.push(child);
		}
	}
	,_remove_child: function(child) {
		HxOverrides.remove(this.children,child);
	}
	,set_pos_from_transform: function(_pos) {
		if(this.component_count > 0) {
			var _g_index = 0;
			var _g_map = this._components.components;
			while(_g_index < _g_map._keys.length) {
				var _component = _g_map.get(_g_map._keys[_g_index++]);
				_component.entity_pos_change(_pos);
			}
		}
	}
	,set_rotation_from_transform: function(_rotation) {
		if(this.component_count > 0) {
			var _g_index = 0;
			var _g_map = this._components.components;
			while(_g_index < _g_map._keys.length) {
				var _component = _g_map.get(_g_map._keys[_g_index++]);
				_component.entity_rotation_change(_rotation);
			}
		}
	}
	,set_scale_from_transform: function(_scale) {
		if(this.component_count > 0) {
			var _g_index = 0;
			var _g_map = this._components.components;
			while(_g_index < _g_map._keys.length) {
				var _component = _g_map.get(_g_map._keys[_g_index++]);
				_component.entity_scale_change(_scale);
			}
		}
	}
	,set_origin_from_transform: function(_origin) {
		if(this.component_count > 0) {
			var _g_index = 0;
			var _g_map = this._components.components;
			while(_g_index < _g_map._keys.length) {
				var _component = _g_map.get(_g_map._keys[_g_index++]);
				_component.entity_origin_change(_origin);
			}
		}
	}
	,set_parent_from_transform: function(_parent) {
		if(this.component_count > 0) {
			var _g_index = 0;
			var _g_map = this._components.components;
			while(_g_index < _g_map._keys.length) {
				var _component = _g_map.get(_g_map._keys[_g_index++]);
				_component.entity_parent_change(_parent);
			}
		}
	}
	,set_pos: function(_p) {
		return this.get_transform().set_pos(_p);
	}
	,get_pos: function() {
		return this.get_transform().get_pos();
	}
	,set_rotation: function(_r) {
		return this.get_transform().set_rotation(_r);
	}
	,get_rotation: function() {
		return this.get_transform().get_rotation();
	}
	,set_scale: function(_s) {
		return this.get_transform().set_scale(_s);
	}
	,get_scale: function() {
		return this.get_transform().get_scale();
	}
	,set_origin: function(_origin) {
		return this.get_transform().set_origin(_origin);
	}
	,get_origin: function() {
		return this.get_transform().get_origin();
	}
	,set_transform: function(_transform) {
		return this.transform = _transform;
	}
	,get_transform: function() {
		return this.transform;
	}
	,set_parent: function(other) {
		if(!(other != this)) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("other != this" + (" ( " + "Entity setting itself as parent makes no sense" + " )")));
		if(this.get_parent() != null) this.get_parent()._remove_child(this);
		this.parent = other;
		if(this.get_parent() != null) {
			this.get_parent()._add_child(this);
			this.get_transform().set_parent(this.get_parent().get_transform());
		} else {
			this.get_transform().set_parent(null);
			this.scene_root.add(this);
		}
		return this.get_parent();
	}
	,get_parent: function() {
		return this.parent;
	}
	,set_scene: function(_scene) {
		this._detach_scene();
		this.scene = _scene;
		this._attach_scene();
		return this.get_scene();
	}
	,get_scene: function() {
		return this.scene;
	}
	,set_scene_root: function(_scene) {
		this.scene_root = _scene;
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var _child = _g1[_g];
			++_g;
			_child.set_scene_root(_scene);
		}
		return this.scene_root;
	}
	,set_name: function(_name) {
		var _scene = this.get_scene();
		if(_scene != null && this.get_name() != null) {
			var key = this.get_name();
			_scene.entities.remove(key);
			if(_scene.entities.exists(_name)) haxe_Log.trace("    i / scene / " + ("" + _scene.get_name() + " / adding a second entity named " + _name + "!\r\n                This will replace the existing one, possibly leaving the previous one in limbo."),{ fileName : "Scene.hx", lineNumber : 96, className : "luxe.Scene", methodName : "handle_duplicate_warning"});
			_scene.entities.set(_name,this);
			_scene._has_changed = true;
		}
		return this.name = _name;
	}
	,set_active: function(_active) {
		return this.active = _active;
	}
	,get_active: function() {
		return this.active;
	}
	,toString: function() {
		if(this.destroyed) return "luxe Entity: " + this.get_name() + " / DESTROYED / id: " + this.get_id();
		var _list = [];
		var $it0 = HxOverrides.iter(this._components.components._keys);
		while( $it0.hasNext() ) {
			var _c = $it0.next();
			_list.push(_c);
		}
		return "luxe Entity: " + this.get_name() + " / " + Lambda.count(this._components.components) + " components:[" + _list.join(", ") + "] / id: " + this.get_id();
	}
	,__class__: luxe_Entity
	,__properties__: $extend(luxe_Objects.prototype.__properties__,{set_scene_root:"set_scene_root",set_origin:"set_origin",get_origin:"get_origin",set_scale:"set_scale",get_scale:"get_scale",set_rotation:"set_rotation",get_rotation:"get_rotation",set_pos:"set_pos",get_pos:"get_pos",set_transform:"set_transform",get_transform:"get_transform",set_active:"set_active",get_active:"get_active",set_scene:"set_scene",get_scene:"get_scene",set_parent:"set_parent",get_parent:"get_parent",set_fixed_rate:"set_fixed_rate",get_fixed_rate:"get_fixed_rate",get_components:"get_components"})
});
var luxe_Visual = function(_options) {
	this.ignore_texture_on_geometry_change = false;
	this._creating_geometry = false;
	this._has_custom_origin = false;
	this.radians = 0.0;
	this.depth = 0.0;
	this.visible = true;
	this.locked = false;
	if(_options == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options was null" + (" ( " + "Visual requires non-null options" + " )")));
	this._rotation_euler = new phoenix_Vector();
	this._rotation_quat = new phoenix_Quaternion();
	luxe_Entity.call(this,_options);
	this.set_color(new phoenix_Color());
	this.set_size(new phoenix_Vector());
	if(this.options.texture != null) this.set_texture(this.options.texture);
	if(this.options.shader != null) this.set_shader(this.options.shader);
	if(this.options.color != null) this.set_color(this.options.color);
	if(this.options.depth != null) this.set_depth(this.options.depth);
	if(this.options.visible != null) this.set_visible(this.options.visible);
	if(this.options.size != null) {
		this.set_size(this.options.size);
		this._create_geometry();
	} else if(this.texture != null) {
		this.set_size(new phoenix_Vector(this.texture.width,this.texture.height));
		this._create_geometry();
	} else {
		this.set_size(new phoenix_Vector(64,64));
		this._create_geometry();
	}
};
$hxClasses["luxe.Visual"] = luxe_Visual;
luxe_Visual.__name__ = ["luxe","Visual"];
luxe_Visual.__super__ = luxe_Entity;
luxe_Visual.prototype = $extend(luxe_Entity.prototype,{
	_create_geometry: function() {
		if(this.options.geometry == null) {
			if(this.options.no_geometry == null || this.options.no_geometry == false) {
				this._creating_geometry = true;
				var _batcher = null;
				if(this.options.no_batcher_add == null || this.options.no_batcher_add == false) {
					if(this.options.batcher != null) _batcher = this.options.batcher; else _batcher = Luxe.renderer.batcher;
				}
				this.set_geometry(new phoenix_geometry_QuadGeometry({ id : this.get_name() + ".visual", x : 0, y : 0, w : this.size.x, h : this.size.y, scale : new phoenix_Vector(1,1,1), texture : this.texture, color : this.color, shader : this.shader, batcher : _batcher, depth : this.options.depth == null?0:this.options.depth, visible : this.options.visible == null?this.visible:this.options.visible}));
				this._creating_geometry = false;
				this.on_geometry_created();
			}
		} else this.set_geometry(this.options.geometry);
		if(this.geometry != null) {
			this.geometry.id = this.get_name() + ".visual";
			this.geometry.transform.id = this.get_name() + ".visual.transform";
		}
		if(this.options.origin != null) {
			this._has_custom_origin = true;
			this.set_origin(this.options.origin);
		}
		if(this.options.rotation_z != null) this.set_rotation_z(this.options.rotation_z);
	}
	,ondestroy: function() {
		if(this.geometry != null && this.geometry.added) this.geometry.drop(true);
		this.set_transform(null);
		this.options = null;
		this.set_geometry(null);
		this.set_texture(null);
		this.set_shader(null);
		this.set_color(null);
		this.set_size(null);
		this.set_clip_rect(null);
		this._rotation_euler = null;
		this._rotation_quat = null;
	}
	,on_geometry_created: function() {
	}
	,set_visible: function(_v) {
		this.visible = _v;
		if(this.geometry != null) this.geometry.set_visible(this.visible);
		return this.visible;
	}
	,set_depth: function(_v) {
		if(this.geometry != null) this.geometry.set_depth(_v);
		return this.depth = _v;
	}
	,set_color: function(_c) {
		if(this.color != null && this.geometry != null) this.geometry.set_color(_c);
		return this.color = _c;
	}
	,set_texture: function(_t) {
		if(this.geometry != null && this.geometry.state.texture != _t) this.geometry.set_texture(_t);
		return this.texture = _t;
	}
	,set_shader: function(_s) {
		if(this.geometry != null && this.geometry.state.shader != _s) this.geometry.set_shader(_s);
		return this.shader = _s;
	}
	,set_geometry: function(_g) {
		if(this.geometry == _g) return this.geometry;
		if(this.geometry != null) this.geometry.drop();
		this.geometry = _g;
		if(this.geometry != null) {
			this.geometry.transform.set_parent(this.get_transform());
			if(this._creating_geometry == false) {
				this.geometry.set_color(this.color);
				this.geometry.set_depth(this.depth);
				this.geometry.set_visible(this.visible);
				if(!this.ignore_texture_on_geometry_change) {
				}
			}
		}
		return this.geometry;
	}
	,set_parent_from_transform: function(_parent) {
		luxe_Entity.prototype.set_parent_from_transform.call(this,_parent);
		if(this.geometry != null) this.geometry.transform.set_parent(this.get_transform());
	}
	,set_rotation_from_transform: function(_rotation) {
		luxe_Entity.prototype.set_rotation_from_transform.call(this,_rotation);
		var _this = this._rotation_euler;
		var sqx = _rotation.x * _rotation.x;
		var sqy = _rotation.y * _rotation.y;
		var sqz = _rotation.z * _rotation.z;
		var sqw = _rotation.w * _rotation.w;
		var _x = _this.x;
		var _y = _this.y;
		var _z = _this.z;
		if(0 == 0) {
			_x = Math.atan2(2 * (_rotation.x * _rotation.w - _rotation.y * _rotation.z),sqw - sqx - sqy + sqz);
			_y = Math.asin(luxe_utils_Maths.clamp(2 * (_rotation.x * _rotation.z + _rotation.y * _rotation.w),-1,1));
			_z = Math.atan2(2 * (_rotation.z * _rotation.w - _rotation.x * _rotation.y),sqw + sqx - sqy - sqz);
		} else if(0 == 1) {
			_x = Math.asin(luxe_utils_Maths.clamp(2 * (_rotation.x * _rotation.w - _rotation.y * _rotation.z),-1,1));
			_y = Math.atan2(2 * (_rotation.x * _rotation.z + _rotation.y * _rotation.w),sqw - sqx - sqy + sqz);
			_z = Math.atan2(2 * (_rotation.x * _rotation.y + _rotation.z * _rotation.w),sqw - sqx + sqy - sqz);
		} else if(0 == 2) {
			_x = Math.asin(luxe_utils_Maths.clamp(2 * (_rotation.x * _rotation.w + _rotation.y * _rotation.z),-1,1));
			_y = Math.atan2(2 * (_rotation.y * _rotation.w - _rotation.z * _rotation.x),sqw - sqx - sqy + sqz);
			_z = Math.atan2(2 * (_rotation.z * _rotation.w - _rotation.x * _rotation.y),sqw - sqx + sqy - sqz);
		} else if(0 == 3) {
			_x = Math.atan2(2 * (_rotation.x * _rotation.w + _rotation.z * _rotation.y),sqw - sqx - sqy + sqz);
			_y = Math.asin(luxe_utils_Maths.clamp(2 * (_rotation.y * _rotation.w - _rotation.x * _rotation.z),-1,1));
			_z = Math.atan2(2 * (_rotation.x * _rotation.y + _rotation.z * _rotation.w),sqw + sqx - sqy - sqz);
		} else if(0 == 4) {
			_x = Math.atan2(2 * (_rotation.x * _rotation.w - _rotation.z * _rotation.y),sqw - sqx + sqy - sqz);
			_y = Math.atan2(2 * (_rotation.y * _rotation.w - _rotation.x * _rotation.z),sqw + sqx - sqy - sqz);
			_z = Math.asin(luxe_utils_Maths.clamp(2 * (_rotation.x * _rotation.y + _rotation.z * _rotation.w),-1,1));
		} else if(0 == 5) {
			_x = Math.atan2(2 * (_rotation.x * _rotation.w + _rotation.y * _rotation.z),sqw - sqx + sqy - sqz);
			_y = Math.atan2(2 * (_rotation.x * _rotation.z + _rotation.y * _rotation.w),sqw + sqx - sqy - sqz);
			_z = Math.asin(luxe_utils_Maths.clamp(2 * (_rotation.z * _rotation.w - _rotation.x * _rotation.y),-1,1));
		}
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = _x;
		if(_this._construct) _this.x; else {
			if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_x);
			_this.x;
		}
		_this.y = _y;
		if(_this._construct) _this.y; else {
			if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_y);
			_this.y;
		}
		_this.z = _z;
		if(_this._construct) _this.z; else {
			if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_z);
			_this.z;
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_this.x);
		if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_this.y);
		if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_this.z);
		_this;
		_this;
		this._rotation_quat.copy(_rotation);
	}
	,set_size: function(_v) {
		this.size = _v;
		if(this.size != null) {
			var _v1 = this.size;
			var listener = $bind(this,this._size_change);
			_v1.listen_x = listener;
			_v1.listen_y = listener;
			_v1.listen_z = listener;
		}
		return this.size;
	}
	,get_blend_src: function() {
		return this.geometry.state.blend_src_alpha;
	}
	,get_blend_dest: function() {
		return this.geometry.state.blend_dest_alpha;
	}
	,get_blend_src_alpha: function() {
		return this.geometry.state.blend_src_alpha;
	}
	,get_blend_src_rgb: function() {
		return this.geometry.state.blend_src_rgb;
	}
	,get_blend_dest_alpha: function() {
		return this.geometry.state.blend_dest_alpha;
	}
	,get_blend_dest_rgb: function() {
		return this.geometry.state.blend_dest_rgb;
	}
	,set_blend_src: function(val) {
		this.geometry.set_blend_src_alpha(val);
		this.geometry.set_blend_src_rgb(val);
		return val;
	}
	,set_blend_dest: function(val) {
		this.geometry.set_blend_dest_alpha(val);
		this.geometry.set_blend_dest_rgb(val);
		return val;
	}
	,set_blend_src_alpha: function(val) {
		this.geometry.set_blend_src_alpha(val);
		return val;
	}
	,set_blend_src_rgb: function(val) {
		this.geometry.set_blend_src_rgb(val);
		return val;
	}
	,set_blend_dest_alpha: function(val) {
		this.geometry.set_blend_dest_alpha(val);
		return val;
	}
	,set_blend_dest_rgb: function(val) {
		this.geometry.set_blend_dest_rgb(val);
		return val;
	}
	,get_rotation_z: function() {
		return luxe_utils_Maths.degrees(this.get_radians());
	}
	,set_rotation_z: function(_degrees) {
		this.set_radians(_degrees * 0.017453292519943278);
		return _degrees;
	}
	,set_radians: function(_r) {
		this._rotation_euler.set_z(_r);
		this._rotation_quat.setFromEuler(this._rotation_euler);
		this.set_rotation(this._rotation_quat.clone());
		return this.radians = _r;
	}
	,get_radians: function() {
		return this.radians;
	}
	,set_locked: function(_l) {
		if(this.geometry != null) this.geometry.set_locked(_l);
		return this.locked = _l;
	}
	,set_clip_rect: function(_val) {
		if(this.geometry != null) this.geometry.set_clip_rect(_val);
		return this.clip_rect = _val;
	}
	,_size_change: function(_v) {
		this.set_size(this.size);
	}
	,init: function() {
		luxe_Entity.prototype.init.call(this);
	}
	,__class__: luxe_Visual
	,__properties__: $extend(luxe_Entity.prototype.__properties__,{set_blend_dest_rgb:"set_blend_dest_rgb",get_blend_dest_rgb:"get_blend_dest_rgb",set_blend_dest_alpha:"set_blend_dest_alpha",get_blend_dest_alpha:"get_blend_dest_alpha",set_blend_src_rgb:"set_blend_src_rgb",get_blend_src_rgb:"get_blend_src_rgb",set_blend_src_alpha:"set_blend_src_alpha",get_blend_src_alpha:"get_blend_src_alpha",set_blend_dest:"set_blend_dest",get_blend_dest:"get_blend_dest",set_blend_src:"set_blend_src",get_blend_src:"get_blend_src",set_rotation_z:"set_rotation_z",get_rotation_z:"get_rotation_z",set_radians:"set_radians",get_radians:"get_radians",set_clip_rect:"set_clip_rect",set_depth:"set_depth",set_visible:"set_visible",set_color:"set_color",set_shader:"set_shader",set_texture:"set_texture",set_locked:"set_locked",set_geometry:"set_geometry",set_size:"set_size"})
});
var luxe_Sprite = function(options) {
	this.flipy = false;
	this.flipx = false;
	this.centered = true;
	this.set_uv(new phoenix_Rectangle());
	if(options == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("options was null" + (" ( " + "Sprite requires non-null options" + " )")));
	if(options.centered != null) this.set_centered(options.centered);
	if(options.flipx != null) this.set_flipx(options.flipx);
	if(options.flipy != null) this.set_flipy(options.flipy);
	luxe_Visual.call(this,options);
};
$hxClasses["luxe.Sprite"] = luxe_Sprite;
luxe_Sprite.__name__ = ["luxe","Sprite"];
luxe_Sprite.__super__ = luxe_Visual;
luxe_Sprite.prototype = $extend(luxe_Visual.prototype,{
	on_geometry_created: function() {
		luxe_Visual.prototype.on_geometry_created.call(this);
		if(this.texture != null) {
			this.set_uv((function($this) {
				var $r;
				if($this.options.uv == null) $this.options.uv = new phoenix_Rectangle(0,0,$this.texture.width,$this.texture.height);
				$r = $this.options.uv;
				return $r;
			}(this)));
			if(this.texture.resource_type == 5) this.set_flipy(true);
		}
		this.set_centered(!(!this.centered));
		this.set_flipx(!(!this.flipx));
		this.set_flipy(!(!this.flipy));
	}
	,set_geometry: function(_g) {
		this.geometry_quad = _g;
		return luxe_Visual.prototype.set_geometry.call(this,_g);
	}
	,ondestroy: function() {
		this.set_uv(null);
		this.geometry_quad = null;
		luxe_Visual.prototype.ondestroy.call(this);
	}
	,point_inside: function(_p) {
		if(this.geometry == null) return false;
		return Luxe.utils.geometry.point_in_geometry(_p,this.geometry);
	}
	,point_inside_AABB: function(_p) {
		if(this.get_pos() == null) return false;
		if(this.size == null) return false;
		var _s_x = this.size.x * this.get_scale().x;
		var _s_y = this.size.y * this.get_scale().y;
		if(this.centered) {
			var _hx = _s_x / 2;
			var _hy = _s_y / 2;
			if(_p.x < this.get_pos().x - _hx) return false;
			if(_p.y < this.get_pos().y - _hy) return false;
			if(_p.x > this.get_pos().x + _s_x - _hx) return false;
			if(_p.y > this.get_pos().y + _s_y - _hy) return false;
		} else {
			if(_p.x < this.get_pos().x) return false;
			if(_p.y < this.get_pos().y) return false;
			if(_p.x > this.get_pos().x + _s_x) return false;
			if(_p.y > this.get_pos().y + _s_y) return false;
		}
		return true;
	}
	,set_uv: function(_uv) {
		if(_uv == null) return this.uv = _uv;
		if(this.geometry_quad != null) this.geometry_quad.uv(_uv);
		this.uv = _uv;
		phoenix_Rectangle.listen(this.uv,$bind(this,this._uv_change));
		return this.uv;
	}
	,set_flipy: function(_v) {
		if(_v == this.flipy) return this.flipy;
		if(this.geometry_quad != null) this.geometry_quad.set_flipy(_v);
		return this.flipy = _v;
	}
	,set_flipx: function(_v) {
		if(_v == this.flipx) return this.flipx;
		if(this.geometry_quad != null) this.geometry_quad.set_flipx(_v);
		return this.flipx = _v;
	}
	,set_size: function(_v) {
		if(this.geometry_quad != null) {
			this.geometry_quad.resize(new phoenix_Vector(_v.x,_v.y));
			if(!this._has_custom_origin) {
				if(this.centered) this.set_origin((function($this) {
					var $r;
					var _this = new phoenix_Vector(_v.x,_v.y,_v.z,_v.w);
					{
						var _x = _this.x / 2;
						var _y = _this.y / 2;
						var _z = _this.z / 2;
						var prev = _this.ignore_listeners;
						_this.ignore_listeners = true;
						_this.x = _x;
						if(_this._construct) _this.x; else {
							if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_x);
							_this.x;
						}
						_this.y = _y;
						if(_this._construct) _this.y; else {
							if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_y);
							_this.y;
						}
						_this.z = _z;
						if(_this._construct) _this.z; else {
							if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_z);
							_this.z;
						}
						_this.ignore_listeners = prev;
						if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_this.x);
						if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_this.y);
						if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_this.z);
						_this;
					}
					$r = _this;
					return $r;
				}(this)));
			}
		}
		return luxe_Visual.prototype.set_size.call(this,_v);
	}
	,set_centered: function(_c) {
		if(this.size != null) {
			if(_c) this.set_origin(new phoenix_Vector(this.size.x / 2,this.size.y / 2)); else this.set_origin(new phoenix_Vector());
		}
		return this.centered = _c;
	}
	,_uv_change: function(_v) {
		this.set_uv(this.uv);
	}
	,init: function() {
		luxe_Visual.prototype.init.call(this);
	}
	,__class__: luxe_Sprite
	,__properties__: $extend(luxe_Visual.prototype.__properties__,{set_uv:"set_uv",set_flipy:"set_flipy",set_flipx:"set_flipx",set_centered:"set_centered"})
});
var ch_nectoria_interfaces_ICollidable = function() { };
$hxClasses["ch.nectoria.interfaces.ICollidable"] = ch_nectoria_interfaces_ICollidable;
ch_nectoria_interfaces_ICollidable.__name__ = ["ch","nectoria","interfaces","ICollidable"];
ch_nectoria_interfaces_ICollidable.prototype = {
	__class__: ch_nectoria_interfaces_ICollidable
	,__properties__: {set_pos:"set_pos",get_pos:"get_pos"}
};
var ch_nectoria_entities_Door = function(object) {
	luxe_Sprite.call(this,{ pos : new phoenix_Vector(object.pos.x + 16,object.pos.y - 32)});
	this.hitBox = luxe_collision_shapes_Polygon.rectangle(this.get_pos().x - 16,this.get_pos().y,16,32,false);
	this.levelTo = object.properties.get("level");
	this.xTo = Std.parseInt(object.properties.get("xTo")) * 16 + 8;
	this.yTo = Std.parseInt(object.properties.get("yTo")) * 16;
	this.set_depth(2.0);
	this.set_texture(Luxe.resources.cache.get("assets/graphics/object/door_0.png"));
	this.texture.set_filter_min(this.texture.set_filter_mag(9728));
	this.texture.width = 32;
	this.set_size(new phoenix_Vector(16,32));
	this.set_centered(false);
	this.set_origin(new phoenix_Vector(16,0));
	ch_nectoria_NP.entity_shape_list.push(this);
};
$hxClasses["ch.nectoria.entities.Door"] = ch_nectoria_entities_Door;
ch_nectoria_entities_Door.__name__ = ["ch","nectoria","entities","Door"];
ch_nectoria_entities_Door.__interfaces__ = [ch_nectoria_interfaces_ICollidable];
ch_nectoria_entities_Door.__super__ = luxe_Sprite;
ch_nectoria_entities_Door.prototype = $extend(luxe_Sprite.prototype,{
	update: function(dt) {
		luxe_Sprite.prototype.update.call(this,dt);
	}
	,on_player_collision: function(is_player) {
		if(is_player) {
			if(Luxe.input.inputpressed("jump")) {
				ch_nectoria_NP.frozenPlayer = true;
				luxe_tween_Actuate.tween(this.get_rotation(),.5,{ y : Math.PI / 3}).onComplete($bind(this,this.switchLevel));
			}
		}
	}
	,switchLevel: function() {
		var game;
		game = js_Boot.__cast(ch_nectoria_Main.machine.current_state , ch_nectoria_states_GameState);
		game.switchLevel(this.xTo,this.yTo,this.levelTo);
	}
	,handleInput: function() {
	}
	,init: function() {
		luxe_Sprite.prototype.init.call(this);
	}
	,ondestroy: function() {
		luxe_Sprite.prototype.ondestroy.call(this);
	}
	,__class__: ch_nectoria_entities_Door
});
var ch_nectoria_entities_EntityManager = function() {
	this.entityList = [];
};
$hxClasses["ch.nectoria.entities.EntityManager"] = ch_nectoria_entities_EntityManager;
ch_nectoria_entities_EntityManager.__name__ = ["ch","nectoria","entities","EntityManager"];
ch_nectoria_entities_EntityManager.addEntity = function(obj) {
	haxe_Log.trace(obj.name,{ fileName : "EntityManager.hx", lineNumber : 19, className : "ch.nectoria.entities.EntityManager", methodName : "addEntity"});
	var _g = obj.name;
	switch(_g) {
	case "mrMoustache":
		Luxe.scene.add(new ch_nectoria_entities_NPC(obj));
		break;
	case "Shadow":
		break;
	default:
		haxe_Log.trace("unknow type: " + obj.type,{ fileName : "EntityManager.hx", lineNumber : 26, className : "ch.nectoria.entities.EntityManager", methodName : "addEntity"});
	}
};
ch_nectoria_entities_EntityManager.prototype = {
	__class__: ch_nectoria_entities_EntityManager
};
var ch_nectoria_entities_Physics = function(pos) {
	this.gravity = 0.5;
	this.hasCollideLeft = false;
	this.hasCollideRight = false;
	this.collideBelow = false;
	this.collideAbove = false;
	this.collideRight = false;
	this.collideLeft = false;
	this.inAir = true;
	this.friction = 0.70;
	this.maxVy = 10.0;
	this.maxVx = 10.0;
	this.speed = 1.0;
	this.vy = 0.0;
	this.vx = 0.0;
	this.previousPosition_ = pos;
	this.hitBox = luxe_collision_shapes_Polygon.rectangle(pos.x,pos.y,8,23);
	this.hitBoxPhys = luxe_collision_shapes_Polygon.rectangle(pos.x,pos.y,8,23);
	luxe_Sprite.call(this,{ pos : pos});
	this.set_texture(Luxe.resources.cache.get("assets/graphics/entity/player32.png"));
	ch_nectoria_NP.actor_list.push(this);
	ch_nectoria_NP.entity_shape_list.push(this);
};
$hxClasses["ch.nectoria.entities.Physics"] = ch_nectoria_entities_Physics;
ch_nectoria_entities_Physics.__name__ = ["ch","nectoria","entities","Physics"];
ch_nectoria_entities_Physics.__interfaces__ = [ch_nectoria_interfaces_ICollidable];
ch_nectoria_entities_Physics.__super__ = luxe_Sprite;
ch_nectoria_entities_Physics.prototype = $extend(luxe_Sprite.prototype,{
	update: function(dt) {
		var c_array = luxe_collision_Collision.shapeWithShapes(this.hitBoxPhys,ch_nectoria_NP.level_shape_list);
		if(c_array.count == 0) {
			this.collideRight = false;
			this.collideLeft = false;
			this.inAir = true;
			this.collideAbove = false;
			this.collideBelow = false;
		}
		var _g = new luxe_collision_ResultsIterator_$luxe_$collision_$data_$ShapeCollision(c_array);
		while(_g.index < _g.results.count) {
			var c = _g.results.get(_g.index++);
			var _g1 = this.hitBoxPhys._position;
			_g1.set_x(_g1.x + c.separationX);
			var _g2 = this.hitBoxPhys._position;
			_g2.set_y(_g2.y + c.separationY);
			if(c.unitVectorX < 0) {
				this.collideRight = true;
				this.collideLeft = false;
				this.hasCollideRight = true;
				this.hasCollideLeft = false;
			}
			if(c.unitVectorX > 0) {
				this.collideLeft = true;
				this.collideRight = false;
				this.hasCollideRight = false;
				this.hasCollideLeft = true;
			}
			if(c.unitVectorY != 0 && (c.unitVectorY >= 0?1:-1) != (this.vy >= 0?1:-1)) {
				this.vy = 0;
				if(c.unitVectorY < 0) {
					this.inAir = false;
					this.collideBelow = true;
				}
			} else this.inAir = true;
		}
		if(this.vx > this.maxVx) this.vx = this.maxVx;
		if(this.vx < -this.maxVx) this.vx = -this.maxVx;
		if(this.vy > this.maxVy) this.vy = this.maxVy;
		if(this.vy < -this.maxVy) this.vy = -this.maxVy;
		if(this.vx > 0 && this.vx < 0.1 || this.vx < 0 && this.vx > -0.1) this.vx = 0.0;
		if(this.vy > 0 && this.vy < 0.2 || this.vy < 0 && this.vy > -0.2) this.vy = 0.0;
		this.vx *= this.friction;
		var i = 0;
		while(i < Math.abs(this.vx)) {
			var offsetX;
			if(this.vx > 0) offsetX = 1; else if(this.vx < 0) offsetX = -1; else offsetX = 0;
			var _g3 = this.hitBoxPhys._position;
			_g3.set_x(_g3.x + offsetX);
			i++;
		}
		var i2 = 0;
		while(i2 < Math.abs(this.vy)) {
			var offsetY;
			if(this.vy > 0) offsetY = 1; else if(this.vy < 0) offsetY = -1; else offsetY = 0;
			var _g4 = this.hitBoxPhys._position;
			_g4.set_y(_g4.y + offsetY);
			i2++;
		}
		if(this.inAir) this.vy += this.gravity;
		this.get_pos().set_x(this.hitBoxPhys._position.x);
		this.get_pos().set_y(this.hitBoxPhys._position.y - 4);
		this.hitBox.set_x(this.get_pos().x);
		this.hitBox.set_y(this.get_pos().y);
	}
	,on_player_collision: function(is_pc) {
	}
	,init: function() {
		luxe_Sprite.prototype.init.call(this);
	}
	,ondestroy: function() {
		luxe_Sprite.prototype.ondestroy.call(this);
	}
	,__class__: ch_nectoria_entities_Physics
});
var ch_nectoria_entities_NPC = function(object) {
	ch_nectoria_entities_Physics.call(this,new phoenix_Vector(object.pos.x + 16,object.pos.y - 32));
	this.set_texture(Luxe.resources.cache.get("assets/graphics/entity/npc1.png"));
	this.texture.set_filter_min(this.texture.set_filter_mag(9728));
	this.set_size(new phoenix_Vector(16,32));
	this.set_depth(3.0);
	this.hitBox = luxe_collision_shapes_Polygon.rectangle(this.get_pos().x,this.get_pos().y,15,24);
	this.hitBoxPhys = luxe_collision_shapes_Polygon.rectangle(this.get_pos().x,this.get_pos().y,8,24);
	var anim_object = Luxe.resources.cache.get("assets/anim.json");
	this.anim = this.add(new luxe_components_sprite_SpriteAnimation({ name : "SpriteAnimation"}));
	this.anim.add_from_json_object(anim_object.asset.json);
	this.anim.set_animation("idle");
	this.anim.play();
	this.text = object.properties.get("text");
	this.speed = .3;
};
$hxClasses["ch.nectoria.entities.NPC"] = ch_nectoria_entities_NPC;
ch_nectoria_entities_NPC.__name__ = ["ch","nectoria","entities","NPC"];
ch_nectoria_entities_NPC.__super__ = ch_nectoria_entities_Physics;
ch_nectoria_entities_NPC.prototype = $extend(ch_nectoria_entities_Physics.prototype,{
	on_player_collision: function(is_player) {
		if(is_player) {
			if(Luxe.input.inputpressed("jump")) {
				var game;
				game = js_Boot.__cast(ch_nectoria_Main.machine.current_state , ch_nectoria_states_GameState);
				var e;
				e = js_Boot.__cast(game.messageBox , ch_nectoria_ui_MessageBox);
				if(!e.isShown) e.show(this.text);
			}
		}
	}
	,showDialog: function() {
		var game;
		game = js_Boot.__cast(ch_nectoria_Main.machine.current_state , ch_nectoria_states_GameState);
		var e;
		e = js_Boot.__cast(game.messageBox , ch_nectoria_ui_MessageBox);
		if(!e.isShown) e.show(this.text);
	}
	,update: function(dt) {
		if(!ch_nectoria_NP.frozenPlayer) {
			if(!this.hasCollideRight) this.moveRight(); else if(!this.hasCollideLeft) this.moveLeft();
		}
		if(this.vx != 0) {
			if(this.anim.animation != "walk") this.anim.set_animation("walk");
		} else if(this.vy > 1) {
		} else if(this.vy < -1) this.anim.set_animation("jump"); else this.anim.set_animation("talk");
		ch_nectoria_entities_Physics.prototype.update.call(this,dt);
	}
	,moveLeft: function() {
		this.vx -= this.speed;
		if(this.collideRight) this.collideRight = false;
		this.set_flipx(true);
	}
	,moveRight: function() {
		this.vx += this.speed;
		if(this.collideLeft) this.collideLeft = false;
		this.set_flipx(false);
	}
	,init: function() {
		ch_nectoria_entities_Physics.prototype.init.call(this);
	}
	,ondestroy: function() {
		ch_nectoria_entities_Physics.prototype.ondestroy.call(this);
	}
	,__class__: ch_nectoria_entities_NPC
});
var ch_nectoria_entities_Player = function(pos) {
	this.interactWith = false;
	this.hasKey = false;
	this.climbing = false;
	this.jumpSpeed = 7.0;
	ch_nectoria_entities_Physics.call(this,pos);
	this.set_texture(Luxe.resources.cache.get("assets/graphics/entity/player32.png"));
	this.texture.set_filter_min(this.texture.set_filter_mag(9728));
	this.set_size(new phoenix_Vector(16,32));
	this.set_depth(3.0);
	this.hitBox = luxe_collision_shapes_Polygon.rectangle(pos.x,pos.y,15,24);
	this.hitBoxPhys = luxe_collision_shapes_Polygon.rectangle(pos.x,pos.y,8,24);
	var anim_object = Luxe.resources.cache.get("assets/anim.json");
	this.anim = this.add(new luxe_components_sprite_SpriteAnimation({ name : "SpriteAnimation"}));
	this.anim.add_from_json_object(anim_object.asset.json);
	this.set_name("player");
	this.anim.set_animation("idle");
	this.anim.play();
	var image = Luxe.resources.cache.get("assets/graphics/entity/interactionSign.png");
	image.set_filter_min(image.set_filter_mag(9728));
	this._add_child(this.interactionSign = new luxe_Sprite({ name : "interactionSign", texture : image, pos : new phoenix_Vector(this.get_pos().x,this.get_pos().y), size : new phoenix_Vector(16,16), depth : 5, visible : false}));
	this.add(new ch_nectoria_components_ColliderComp({ name : "collision handler"}));
};
$hxClasses["ch.nectoria.entities.Player"] = ch_nectoria_entities_Player;
ch_nectoria_entities_Player.__name__ = ["ch","nectoria","entities","Player"];
ch_nectoria_entities_Player.__super__ = ch_nectoria_entities_Physics;
ch_nectoria_entities_Player.prototype = $extend(ch_nectoria_entities_Physics.prototype,{
	update: function(dt) {
		if(!ch_nectoria_NP.frozenPlayer) this.apply_input(dt);
		if(this.vx != 0) {
			if(this.anim.animation != "walk") this.anim.set_animation("walk");
		} else if(this.vy > 1) {
		} else if(this.vy < -1) this.anim.set_animation("jump"); else this.anim.set_animation("idle");
		this.interactionSign.get_pos().set_x(this.get_pos().x);
		this.interactionSign.get_pos().set_y(this.get_pos().y - 16);
		if(this.interactWith) this.interactionSign.set_visible(true); else this.interactionSign.set_visible(false);
		ch_nectoria_entities_Physics.prototype.update.call(this,dt);
	}
	,apply_input: function(dt) {
		if(Luxe.input.inputdown("jump") && !this.inAir && !this.interactWith) this.jump();
		if(Luxe.input.inputdown("left") && !this.collideLeft) this.moveLeft();
		if(Luxe.input.inputdown("right") && !this.collideRight) this.moveRight();
	}
	,playWalk: function() {
		this.anim.set_animation("walk");
	}
	,jump: function() {
		this.vy -= this.jumpSpeed;
		this.inAir = true;
	}
	,moveLeft: function() {
		this.vx -= this.speed;
		if(this.collideRight) this.collideRight = false;
		this.set_flipx(true);
	}
	,moveRight: function() {
		this.vx += this.speed;
		if(this.collideLeft) this.collideLeft = false;
		this.set_flipx(false);
	}
	,init: function() {
		ch_nectoria_entities_Physics.prototype.init.call(this);
	}
	,ondestroy: function() {
		ch_nectoria_entities_Physics.prototype.ondestroy.call(this);
	}
	,__class__: ch_nectoria_entities_Player
});
var ch_nectoria_entities_Sign = function(object) {
	luxe_Sprite.call(this,{ pos : new phoenix_Vector(object.pos.x,object.pos.y - 16)});
	this.hitBox = luxe_collision_shapes_Polygon.rectangle(this.get_pos().x,this.get_pos().y,16,16,false);
	this.set_texture(Luxe.resources.cache.get("assets/graphics/object/sign.png"));
	this.texture.set_filter_min(this.texture.set_filter_mag(9728));
	this.texture.width = 16;
	this.set_size(new phoenix_Vector(16,16));
	this.set_centered(false);
	this.text = object.properties.get("text");
	ch_nectoria_NP.entity_shape_list.push(this);
};
$hxClasses["ch.nectoria.entities.Sign"] = ch_nectoria_entities_Sign;
ch_nectoria_entities_Sign.__name__ = ["ch","nectoria","entities","Sign"];
ch_nectoria_entities_Sign.__interfaces__ = [ch_nectoria_interfaces_ICollidable];
ch_nectoria_entities_Sign.__super__ = luxe_Sprite;
ch_nectoria_entities_Sign.prototype = $extend(luxe_Sprite.prototype,{
	on_player_collision: function(is_player) {
		if(is_player) {
			if(Luxe.input.inputpressed("jump")) {
				var game;
				game = js_Boot.__cast(ch_nectoria_Main.machine.current_state , ch_nectoria_states_GameState);
				var e;
				e = js_Boot.__cast(game.messageBox , ch_nectoria_ui_MessageBox);
				if(!e.isShown) e.show(this.text);
			}
		}
	}
	,init: function() {
		luxe_Sprite.prototype.init.call(this);
	}
	,ondestroy: function() {
		luxe_Sprite.prototype.ondestroy.call(this);
	}
	,__class__: ch_nectoria_entities_Sign
});
var luxe_State = function(_options) {
	this.inited = false;
	this.enabled = false;
	this.active = false;
	luxe_ID.call(this,_options.name);
};
$hxClasses["luxe.State"] = luxe_State;
luxe_State.__name__ = ["luxe","State"];
luxe_State.__super__ = luxe_ID;
luxe_State.prototype = $extend(luxe_ID.prototype,{
	enable: function(_enable_with) {
		this.machine.enable(this.name,_enable_with);
	}
	,disable: function(_disable_with) {
		this.machine.disable(this.name,_disable_with);
	}
	,destroy: function() {
		this.machine.kill(this.name);
	}
	,init: function() {
	}
	,update: function(dt) {
	}
	,onfixedupdate: function() {
	}
	,onleave: function(d) {
	}
	,onenter: function(d) {
	}
	,onenabled: function(d) {
	}
	,ondisabled: function(d) {
	}
	,onadded: function() {
	}
	,onremoved: function() {
	}
	,onrender: function() {
	}
	,onprerender: function() {
	}
	,onpostrender: function() {
	}
	,onreset: function() {
	}
	,ondestroy: function() {
	}
	,onkeyup: function(event) {
	}
	,onkeydown: function(event) {
	}
	,ontextinput: function(event) {
	}
	,oninputdown: function(event) {
	}
	,oninputup: function(event) {
	}
	,onmousedown: function(event) {
	}
	,onmouseup: function(event) {
	}
	,onmousemove: function(event) {
	}
	,onmousewheel: function(event) {
	}
	,ontouchdown: function(event) {
	}
	,ontouchup: function(event) {
	}
	,ontouchmove: function(event) {
	}
	,ongamepadup: function(event) {
	}
	,ongamepaddown: function(event) {
	}
	,ongamepadaxis: function(event) {
	}
	,ongamepaddevice: function(event) {
	}
	,onwindowmoved: function(event) {
	}
	,onwindowresized: function(event) {
	}
	,onwindowsized: function(event) {
	}
	,onwindowminimized: function(event) {
	}
	,onwindowrestored: function(event) {
	}
	,_init: function() {
		if(!this.inited) {
			this.inited = true;
			this.init();
		}
	}
	,__class__: luxe_State
});
var ch_nectoria_states_GameState = function(_name) {
	this.teleport_disabled = false;
	this.map_scale = 1;
	luxe_State.call(this,{ name : _name});
	this.gameScene = new luxe_Scene("game");
};
$hxClasses["ch.nectoria.states.GameState"] = ch_nectoria_states_GameState;
ch_nectoria_states_GameState.__name__ = ["ch","nectoria","states","GameState"];
ch_nectoria_states_GameState.__super__ = luxe_State;
ch_nectoria_states_GameState.prototype = $extend(luxe_State.prototype,{
	getLevelData: function(id) {
		haxe_Log.trace(id,{ fileName : "GameState.hx", lineNumber : 47, className : "ch.nectoria.states.GameState", methodName : "getLevelData"});
		var level = "assets/maps/" + id + "/level.tmx";
		if(id != null) {
			haxe_Log.trace("mince",{ fileName : "GameState.hx", lineNumber : 51, className : "ch.nectoria.states.GameState", methodName : "getLevelData"});
			return level;
		} else return "assets/maps/corcelles/level.tmx";
	}
	,onenter: function(_value) {
		Luxe.camera.set_zoom(5);
		Luxe.events.listen("simulation.triggers.collide",$bind(this,this.ontrigger));
		this.messageBox = new ch_nectoria_ui_MessageBox();
		this.loadLevel(this.currentLvl);
	}
	,levelColision: function() {
		var bounds = this.tilemap.layer("collide").bounds_fitted();
		var _g = 0;
		while(_g < bounds.length) {
			var bound = bounds[_g];
			++_g;
			var _g1 = bound;
			_g1.set_x(_g1.x * this.tilemap.tile_width);
			var _g11 = bound;
			_g11.set_y(_g11.y * this.tilemap.tile_height);
			var _g12 = bound;
			_g12.set_w(_g12.w * this.tilemap.tile_width);
			var _g13 = bound;
			_g13.set_h(_g13.h * this.tilemap.tile_height);
			ch_nectoria_NP.level_shape_list.push(luxe_collision_shapes_Polygon.rectangle(bound.x,bound.y,bound.w,bound.h,false));
		}
	}
	,loadLevel: function(id) {
		var _g = 0;
		var _g1 = ch_nectoria_NP.entity_shape_list;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			(js_Boot.__cast(a , luxe_Sprite)).destroy();
		}
		ch_nectoria_NP.actor_list = [];
		ch_nectoria_NP.entity_shape_list = [];
		ch_nectoria_NP.level_shape_list = [];
		var level = this.getLevelData(id);
		haxe_Log.trace("Loading level: " + level,{ fileName : "GameState.hx", lineNumber : 94, className : "ch.nectoria.states.GameState", methodName : "loadLevel"});
		this.tilemap = new luxe_importers_tiled_TiledMap({ format : "tmx", tiled_file_data : Luxe.resources.cache.get(level).asset.text});
		this.tilemapFront = new luxe_importers_tiled_TiledMap({ format : "tmx", tiled_file_data : Luxe.resources.cache.get(level).asset.text});
		this.tilemap.display({ scale : this.map_scale, filter : 9728});
		var _g2 = 0;
		var _g11 = this.tilemap.tiledmap_data.object_groups;
		while(_g2 < _g11.length) {
			var _group = _g11[_g2];
			++_g2;
			var _g21 = 0;
			var _g3 = _group.objects;
			while(_g21 < _g3.length) {
				var _object = _g3[_g21];
				++_g21;
				var _g4 = _object.gid;
				switch(_g4) {
				case 254:
					break;
				case 107:
					this.gameScene.add(new ch_nectoria_entities_Door(_object));
					break;
				case 35:
					break;
				case 39:
					this.gameScene.add(new ch_nectoria_entities_Sign(_object));
					break;
				case 240:
					ch_nectoria_entities_EntityManager.addEntity(_object);
					break;
				default:
					haxe_Log.trace("unknow type: " + _object.type,{ fileName : "GameState.hx", lineNumber : 127, className : "ch.nectoria.states.GameState", methodName : "loadLevel"});
				}
			}
		}
		this.player = new ch_nectoria_entities_Player((function($this) {
			var $r;
			var _this = ch_nectoria_NP.posPlayer;
			$r = new phoenix_Vector(_this.x,_this.y,_this.z,_this.w);
			return $r;
		}(this)));
		ch_nectoria_NP.player = this.player;
		if(this.tilemap.get_total_width() > Luxe.core.screen.get_h()) this.player.add(new ch_nectoria_components_LazyCameraFollow("lazyCamera","static","follow",new phoenix_Vector(this.tilemap.get_total_width(),this.tilemap.get_total_height()))); else this.player.add(new ch_nectoria_components_LazyCameraFollow("lazyCamera","static","static",new phoenix_Vector(this.tilemap.get_total_width(),this.tilemap.get_total_height())));
		this.tilemapFront.remove_layer("background");
		this.tilemapFront.remove_layer("collide");
		this.tilemapFront.remove_layer("between");
		this.tilemapFront.remove_layer("objects");
		this.tilemapFront.display({ scale : this.map_scale, filter : 9728, depth : 3});
		haxe_Log.trace(ch_nectoria_NP.entity_shape_list,{ fileName : "GameState.hx", lineNumber : 149, className : "ch.nectoria.states.GameState", methodName : "loadLevel"});
		this.levelColision();
		ch_nectoria_Main.fade.up(.5,function() {
			ch_nectoria_NP.frozenPlayer = false;
		});
	}
	,switchLevel: function(xTo,yTo,levelTo) {
		var _g = this;
		if(this.currentLvl == levelTo) {
			this.player.get_pos().set_x(xTo);
			this.player.get_pos().set_y(yTo);
		} else {
			this.currentLvl = levelTo;
			ch_nectoria_NP.posPlayer.set_x(xTo);
			ch_nectoria_NP.posPlayer.set_y(yTo);
			ch_nectoria_NP.frozenPlayer = true;
			this.tilemap.destroy();
			this.tilemapFront.destroy();
			ch_nectoria_Main.fade.out(.5,function() {
				_g.loadLevel(_g.currentLvl);
			});
		}
	}
	,ontrigger: function(collisions) {
	}
	,update: function(dt) {
	}
	,__class__: ch_nectoria_states_GameState
});
var ch_nectoria_states_SplashState = function(_name) {
	luxe_State.call(this,{ name : _name});
};
$hxClasses["ch.nectoria.states.SplashState"] = ch_nectoria_states_SplashState;
ch_nectoria_states_SplashState.__name__ = ["ch","nectoria","states","SplashState"];
ch_nectoria_states_SplashState.__super__ = luxe_State;
ch_nectoria_states_SplashState.prototype = $extend(luxe_State.prototype,{
	init: function() {
	}
	,onenter: function(_value) {
		var _g = this;
		var image = Luxe.resources.cache.get("assets/graphics/splash/scanixgames.png");
		this.background = new luxe_Sprite({ name : "background", centered : false, size : Luxe.core.screen.get_size(), color : new phoenix_Color(1,1,1,1)});
		this.versionText = new luxe_Text({ text : "Version Alpha 0.5.2\nNectoProject on Luxe Engine", point_size : 18, pos : new phoenix_Vector(0,0), sdf : true, color : new phoenix_Color(0,0,0,1).rgb(0)});
		this.splashImage = new luxe_Sprite({ name : "splashImage", texture : image, pos : new phoenix_Vector(Luxe.core.screen.get_mid().x,Luxe.core.screen.get_mid().y), color : new phoenix_Color(1,1,1,1)});
		ch_nectoria_Main.fade.up(2.5,function() {
			ch_nectoria_Main.fade.out(1,function() {
				_g.machine.set("game_state");
			});
		});
	}
	,onleave: function(_value) {
		this.background.destroy();
		this.versionText.destroy();
		this.splashImage.destroy();
	}
	,__class__: ch_nectoria_states_SplashState
});
var ch_nectoria_ui_MessageBox = function() {
	this.textTick = 0;
	this.paused = false;
	this.isShown = false;
	this.numberLine = 1;
	this.positionText = 0;
	this.characterIndex = 0;
	this.typewriter = "";
	luxe_Entity.call(this);
	this.batcher = new phoenix_Batcher(Luxe.renderer,"messageBox_batcher");
	this.batcher.view = new phoenix_Camera();
	this.batcher.set_layer(12);
	this.boxAnim = new luxe_components_sprite_SpriteAnimation({ name : "anim"});
	var anim_data = Luxe.resources.cache.get("assets/graphics/ui/messagebox.json");
	this.boxSprite = new luxe_Sprite({ batcher : this.batcher, size : new phoenix_Vector(Luxe.core.screen.width,Luxe.core.screen.width * 0.1875), texture : Luxe.resources.cache.get("assets/graphics/ui/messagebox.png"), centered : false, visible : false});
	this.boxSprite.texture.set_filter_min(this.boxSprite.texture.set_filter_mag(9728));
	this.boxSprite.add(this.boxAnim);
	this.boxAnim.add_from_json_object(anim_data.asset.json);
	this.boxAnim.set_animation("callToAction");
	this.boxAnim.play();
	this.textSprite = new luxe_Text({ text : "No Text", point_size : 24, pos : new phoenix_Vector(25,25), sdf : true, color : new phoenix_Color(0,0,0,1).rgb(0), batcher : this.batcher, visible : false});
	Luxe.renderer.add_batch(this.batcher);
};
$hxClasses["ch.nectoria.ui.MessageBox"] = ch_nectoria_ui_MessageBox;
ch_nectoria_ui_MessageBox.__name__ = ["ch","nectoria","ui","MessageBox"];
ch_nectoria_ui_MessageBox.__super__ = luxe_Entity;
ch_nectoria_ui_MessageBox.prototype = $extend(luxe_Entity.prototype,{
	show: function(text) {
		this.isShown = true;
		this.message = text;
		this.textSprite.set_visible(true);
		this.boxSprite.set_visible(true);
		ch_nectoria_NP.frozenPlayer = true;
	}
	,update: function(dt) {
		var _g = this;
		luxe_Entity.prototype.update.call(this,dt);
		if(this.isShown) {
			snow_Snow.next_queue.push(function() {
				_g.typewriterEffect();
			});
			if(Luxe.input.inputpressed("jump")) this.resume();
		}
	}
	,typewriterEffect: function() {
		this.textSprite.set_text(this.typewriter);
		var $char = this.message.charAt(this.positionText);
		if(this.textTick == 0 && !this.paused && this.positionText < this.message.length) {
			this.textTick = 1;
			haxe_Log.trace($char,{ fileName : "MessageBox.hx", lineNumber : 104, className : "ch.nectoria.ui.MessageBox", methodName : "typewriterEffect"});
			if($char == "*") {
				if(this.numberLine == 4) this.paused = true; else {
					this.typewriter = this.typewriter.substring(0,this.positionText);
					this.typewriter += "\n";
					this.numberLine++;
					this.positionText++;
				}
			} else if(this.positionText < this.message.length) {
				this.typewriter += this.message.charAt(this.positionText);
				this.positionText++;
			}
		} else if(this.positionText >= this.message.length) this.paused = true; else this.textTick--;
	}
	,resume: function() {
		if(this.paused) {
			if(this.positionText >= this.message.length) this.close(); else {
				this.typewriter = "";
				this.positionText++;
				this.numberLine = 0;
				this.paused = false;
				this.textTick = 0;
			}
		}
	}
	,close: function() {
		var _g = this;
		snow_Snow.next_queue.push(function() {
			_g.isShown = false;
		});
		this.textSprite.set_text("");
		this.typewriter = "";
		this.characterIndex = 0;
		this.positionText = 0;
		this.numberLine = 1;
		this.textSprite.set_visible(false);
		this.boxSprite.set_visible(false);
		this.paused = false;
		ch_nectoria_NP.frozenPlayer = false;
	}
	,init: function() {
		luxe_Entity.prototype.init.call(this);
	}
	,ondestroy: function() {
		luxe_Entity.prototype.ondestroy.call(this);
	}
	,__class__: ch_nectoria_ui_MessageBox
});
var haxe_StackItem = $hxClasses["haxe.StackItem"] = { __ename__ : ["haxe","StackItem"], __constructs__ : ["CFunction","Module","FilePos","Method","LocalFunction"] };
haxe_StackItem.CFunction = ["CFunction",0];
haxe_StackItem.CFunction.toString = $estr;
haxe_StackItem.CFunction.__enum__ = haxe_StackItem;
haxe_StackItem.Module = function(m) { var $x = ["Module",1,m]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.FilePos = function(s,file,line) { var $x = ["FilePos",2,s,file,line]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.Method = function(classname,method) { var $x = ["Method",3,classname,method]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
haxe_StackItem.LocalFunction = function(v) { var $x = ["LocalFunction",4,v]; $x.__enum__ = haxe_StackItem; $x.toString = $estr; return $x; };
var haxe_CallStack = function() { };
$hxClasses["haxe.CallStack"] = haxe_CallStack;
haxe_CallStack.__name__ = ["haxe","CallStack"];
haxe_CallStack.getStack = function(e) {
	if(e == null) return [];
	var oldValue = Error.prepareStackTrace;
	Error.prepareStackTrace = function(error,callsites) {
		var stack = [];
		var _g = 0;
		while(_g < callsites.length) {
			var site = callsites[_g];
			++_g;
			if(haxe_CallStack.wrapCallSite != null) site = haxe_CallStack.wrapCallSite(site);
			var method = null;
			var fullName = site.getFunctionName();
			if(fullName != null) {
				var idx = fullName.lastIndexOf(".");
				if(idx >= 0) {
					var className = HxOverrides.substr(fullName,0,idx);
					var methodName = HxOverrides.substr(fullName,idx + 1,null);
					method = haxe_StackItem.Method(className,methodName);
				}
			}
			stack.push(haxe_StackItem.FilePos(method,site.getFileName(),site.getLineNumber()));
		}
		return stack;
	};
	var a = haxe_CallStack.makeStack(e.stack);
	Error.prepareStackTrace = oldValue;
	return a;
};
haxe_CallStack.callStack = function() {
	try {
		throw new Error();
	} catch( e ) {
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		var a = haxe_CallStack.getStack(e);
		a.shift();
		return a;
	}
};
haxe_CallStack.makeStack = function(s) {
	if(s == null) return []; else if(typeof(s) == "string") {
		var stack = s.split("\n");
		if(stack[0] == "Error") stack.shift();
		var m = [];
		var rie10 = new EReg("^   at ([A-Za-z0-9_. ]+) \\(([^)]+):([0-9]+):([0-9]+)\\)$","");
		var _g = 0;
		while(_g < stack.length) {
			var line = stack[_g];
			++_g;
			if(rie10.match(line)) {
				var path = rie10.matched(1).split(".");
				var meth = path.pop();
				var file = rie10.matched(2);
				var line1 = Std.parseInt(rie10.matched(3));
				m.push(haxe_StackItem.FilePos(meth == "Anonymous function"?haxe_StackItem.LocalFunction():meth == "Global code"?null:haxe_StackItem.Method(path.join("."),meth),file,line1));
			} else m.push(haxe_StackItem.Module(StringTools.trim(line)));
		}
		return m;
	} else return s;
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = ["haxe","IMap"];
haxe_IMap.prototype = {
	__class__: haxe_IMap
};
var haxe__$Int64__$_$_$Int64 = function(high,low) {
	this.high = high;
	this.low = low;
};
$hxClasses["haxe._Int64.___Int64"] = haxe__$Int64__$_$_$Int64;
haxe__$Int64__$_$_$Int64.__name__ = ["haxe","_Int64","___Int64"];
haxe__$Int64__$_$_$Int64.prototype = {
	__class__: haxe__$Int64__$_$_$Int64
};
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = ["haxe","Log"];
haxe_Log.trace = function(v,infos) {
	js_Boot.__trace(v,infos);
};
var haxe_Resource = function() { };
$hxClasses["haxe.Resource"] = haxe_Resource;
haxe_Resource.__name__ = ["haxe","Resource"];
haxe_Resource.getString = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) return x.str;
			var b = haxe_crypto_Base64.decode(x.data);
			return b.toString();
		}
	}
	return null;
};
haxe_Resource.getBytes = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) return haxe_io_Bytes.ofString(x.str);
			return haxe_crypto_Base64.decode(x.data);
		}
	}
	return null;
};
var haxe_Serializer = function() {
	this.buf = new StringBuf();
	this.cache = [];
	this.useCache = haxe_Serializer.USE_CACHE;
	this.useEnumIndex = haxe_Serializer.USE_ENUM_INDEX;
	this.shash = new haxe_ds_StringMap();
	this.scount = 0;
};
$hxClasses["haxe.Serializer"] = haxe_Serializer;
haxe_Serializer.__name__ = ["haxe","Serializer"];
haxe_Serializer.run = function(v) {
	var s = new haxe_Serializer();
	s.serialize(v);
	return s.toString();
};
haxe_Serializer.prototype = {
	toString: function() {
		return this.buf.b;
	}
	,serializeString: function(s) {
		var x = this.shash.get(s);
		if(x != null) {
			this.buf.b += "R";
			if(x == null) this.buf.b += "null"; else this.buf.b += "" + x;
			return;
		}
		this.shash.set(s,this.scount++);
		this.buf.b += "y";
		s = encodeURIComponent(s);
		if(s.length == null) this.buf.b += "null"; else this.buf.b += "" + s.length;
		this.buf.b += ":";
		if(s == null) this.buf.b += "null"; else this.buf.b += "" + s;
	}
	,serializeRef: function(v) {
		var vt = typeof(v);
		var _g1 = 0;
		var _g = this.cache.length;
		while(_g1 < _g) {
			var i = _g1++;
			var ci = this.cache[i];
			if(typeof(ci) == vt && ci == v) {
				this.buf.b += "r";
				if(i == null) this.buf.b += "null"; else this.buf.b += "" + i;
				return true;
			}
		}
		this.cache.push(v);
		return false;
	}
	,serializeFields: function(v) {
		var _g = 0;
		var _g1 = Reflect.fields(v);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			this.serializeString(f);
			this.serialize(Reflect.field(v,f));
		}
		this.buf.b += "g";
	}
	,serialize: function(v) {
		{
			var _g = Type["typeof"](v);
			switch(_g[1]) {
			case 0:
				this.buf.b += "n";
				break;
			case 1:
				var v1 = v;
				if(v1 == 0) {
					this.buf.b += "z";
					return;
				}
				this.buf.b += "i";
				if(v1 == null) this.buf.b += "null"; else this.buf.b += "" + v1;
				break;
			case 2:
				var v2 = v;
				if(isNaN(v2)) this.buf.b += "k"; else if(!isFinite(v2)) if(v2 < 0) this.buf.b += "m"; else this.buf.b += "p"; else {
					this.buf.b += "d";
					if(v2 == null) this.buf.b += "null"; else this.buf.b += "" + v2;
				}
				break;
			case 3:
				if(v) this.buf.b += "t"; else this.buf.b += "f";
				break;
			case 6:
				var c = _g[2];
				if(c == String) {
					this.serializeString(v);
					return;
				}
				if(this.useCache && this.serializeRef(v)) return;
				switch(c) {
				case Array:
					var ucount = 0;
					this.buf.b += "a";
					var l = v.length;
					var _g1 = 0;
					while(_g1 < l) {
						var i = _g1++;
						if(v[i] == null) ucount++; else {
							if(ucount > 0) {
								if(ucount == 1) this.buf.b += "n"; else {
									this.buf.b += "u";
									if(ucount == null) this.buf.b += "null"; else this.buf.b += "" + ucount;
								}
								ucount = 0;
							}
							this.serialize(v[i]);
						}
					}
					if(ucount > 0) {
						if(ucount == 1) this.buf.b += "n"; else {
							this.buf.b += "u";
							if(ucount == null) this.buf.b += "null"; else this.buf.b += "" + ucount;
						}
					}
					this.buf.b += "h";
					break;
				case List:
					this.buf.b += "l";
					var v3 = v;
					var _g1_head = v3.h;
					var _g1_val = null;
					while(_g1_head != null) {
						var i1;
						_g1_val = _g1_head[0];
						_g1_head = _g1_head[1];
						i1 = _g1_val;
						this.serialize(i1);
					}
					this.buf.b += "h";
					break;
				case Date:
					var d = v;
					this.buf.b += "v";
					this.buf.add(d.getTime());
					break;
				case haxe_ds_StringMap:
					this.buf.b += "b";
					var v4 = v;
					var $it0 = v4.keys();
					while( $it0.hasNext() ) {
						var k = $it0.next();
						this.serializeString(k);
						this.serialize(__map_reserved[k] != null?v4.getReserved(k):v4.h[k]);
					}
					this.buf.b += "h";
					break;
				case haxe_ds_IntMap:
					this.buf.b += "q";
					var v5 = v;
					var $it1 = v5.keys();
					while( $it1.hasNext() ) {
						var k1 = $it1.next();
						this.buf.b += ":";
						if(k1 == null) this.buf.b += "null"; else this.buf.b += "" + k1;
						this.serialize(v5.h[k1]);
					}
					this.buf.b += "h";
					break;
				case haxe_ds_ObjectMap:
					this.buf.b += "M";
					var v6 = v;
					var $it2 = v6.keys();
					while( $it2.hasNext() ) {
						var k2 = $it2.next();
						var id = Reflect.field(k2,"__id__");
						Reflect.deleteField(k2,"__id__");
						this.serialize(k2);
						k2.__id__ = id;
						this.serialize(v6.h[k2.__id__]);
					}
					this.buf.b += "h";
					break;
				case haxe_io_Bytes:
					var v7 = v;
					var i2 = 0;
					var max = v7.length - 2;
					var charsBuf = new StringBuf();
					var b64 = haxe_Serializer.BASE64;
					while(i2 < max) {
						var b1 = v7.get(i2++);
						var b2 = v7.get(i2++);
						var b3 = v7.get(i2++);
						charsBuf.add(b64.charAt(b1 >> 2));
						charsBuf.add(b64.charAt((b1 << 4 | b2 >> 4) & 63));
						charsBuf.add(b64.charAt((b2 << 2 | b3 >> 6) & 63));
						charsBuf.add(b64.charAt(b3 & 63));
					}
					if(i2 == max) {
						var b11 = v7.get(i2++);
						var b21 = v7.get(i2++);
						charsBuf.add(b64.charAt(b11 >> 2));
						charsBuf.add(b64.charAt((b11 << 4 | b21 >> 4) & 63));
						charsBuf.add(b64.charAt(b21 << 2 & 63));
					} else if(i2 == max + 1) {
						var b12 = v7.get(i2++);
						charsBuf.add(b64.charAt(b12 >> 2));
						charsBuf.add(b64.charAt(b12 << 4 & 63));
					}
					var chars = charsBuf.b;
					this.buf.b += "s";
					if(chars.length == null) this.buf.b += "null"; else this.buf.b += "" + chars.length;
					this.buf.b += ":";
					if(chars == null) this.buf.b += "null"; else this.buf.b += "" + chars;
					break;
				default:
					if(this.useCache) this.cache.pop();
					if(v.hxSerialize != null) {
						this.buf.b += "C";
						this.serializeString(Type.getClassName(c));
						if(this.useCache) this.cache.push(v);
						v.hxSerialize(this);
						this.buf.b += "g";
					} else {
						this.buf.b += "c";
						this.serializeString(Type.getClassName(c));
						if(this.useCache) this.cache.push(v);
						this.serializeFields(v);
					}
				}
				break;
			case 4:
				if(js_Boot.__instanceof(v,Class)) {
					var className = Type.getClassName(v);
					this.buf.b += "A";
					this.serializeString(className);
				} else if(js_Boot.__instanceof(v,Enum)) {
					this.buf.b += "B";
					this.serializeString(Type.getEnumName(v));
				} else {
					if(this.useCache && this.serializeRef(v)) return;
					this.buf.b += "o";
					this.serializeFields(v);
				}
				break;
			case 7:
				var e = _g[2];
				if(this.useCache) {
					if(this.serializeRef(v)) return;
					this.cache.pop();
				}
				if(this.useEnumIndex) this.buf.b += "j"; else this.buf.b += "w";
				this.serializeString(Type.getEnumName(e));
				if(this.useEnumIndex) {
					this.buf.b += ":";
					this.buf.b += Std.string(v[1]);
				} else this.serializeString(v[0]);
				this.buf.b += ":";
				var l1 = v.length;
				this.buf.b += Std.string(l1 - 2);
				var _g11 = 2;
				while(_g11 < l1) {
					var i3 = _g11++;
					this.serialize(v[i3]);
				}
				if(this.useCache) this.cache.push(v);
				break;
			case 5:
				throw new js__$Boot_HaxeError("Cannot serialize function");
				break;
			default:
				throw new js__$Boot_HaxeError("Cannot serialize " + Std.string(v));
			}
		}
	}
	,__class__: haxe_Serializer
};
var haxe_Timer = function() { };
$hxClasses["haxe.Timer"] = haxe_Timer;
haxe_Timer.__name__ = ["haxe","Timer"];
var haxe_Unserializer = function(buf) {
	this.buf = buf;
	this.length = buf.length;
	this.pos = 0;
	this.scache = [];
	this.cache = [];
	var r = haxe_Unserializer.DEFAULT_RESOLVER;
	if(r == null) {
		r = Type;
		haxe_Unserializer.DEFAULT_RESOLVER = r;
	}
	this.setResolver(r);
};
$hxClasses["haxe.Unserializer"] = haxe_Unserializer;
haxe_Unserializer.__name__ = ["haxe","Unserializer"];
haxe_Unserializer.initCodes = function() {
	var codes = [];
	var _g1 = 0;
	var _g = haxe_Unserializer.BASE64.length;
	while(_g1 < _g) {
		var i = _g1++;
		codes[haxe_Unserializer.BASE64.charCodeAt(i)] = i;
	}
	return codes;
};
haxe_Unserializer.run = function(v) {
	return new haxe_Unserializer(v).unserialize();
};
haxe_Unserializer.prototype = {
	setResolver: function(r) {
		if(r == null) this.resolver = { resolveClass : function(_) {
			return null;
		}, resolveEnum : function(_1) {
			return null;
		}}; else this.resolver = r;
	}
	,get: function(p) {
		return this.buf.charCodeAt(p);
	}
	,readDigits: function() {
		var k = 0;
		var s = false;
		var fpos = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) break;
			if(c == 45) {
				if(this.pos != fpos) break;
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) break;
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) k *= -1;
		return k;
	}
	,readFloat: function() {
		var p1 = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c >= 43 && c < 58 || c == 101 || c == 69) this.pos++; else break;
		}
		return Std.parseFloat(HxOverrides.substr(this.buf,p1,this.pos - p1));
	}
	,unserializeObject: function(o) {
		while(true) {
			if(this.pos >= this.length) throw new js__$Boot_HaxeError("Invalid object");
			if(this.buf.charCodeAt(this.pos) == 103) break;
			var k = this.unserialize();
			if(!(typeof(k) == "string")) throw new js__$Boot_HaxeError("Invalid object key");
			var v = this.unserialize();
			o[k] = v;
		}
		this.pos++;
	}
	,unserializeEnum: function(edecl,tag) {
		if(this.get(this.pos++) != 58) throw new js__$Boot_HaxeError("Invalid enum format");
		var nargs = this.readDigits();
		if(nargs == 0) return Type.createEnum(edecl,tag);
		var args = [];
		while(nargs-- > 0) args.push(this.unserialize());
		return Type.createEnum(edecl,tag,args);
	}
	,unserialize: function() {
		var _g = this.get(this.pos++);
		switch(_g) {
		case 110:
			return null;
		case 116:
			return true;
		case 102:
			return false;
		case 122:
			return 0;
		case 105:
			return this.readDigits();
		case 100:
			return this.readFloat();
		case 121:
			var len = this.readDigits();
			if(this.get(this.pos++) != 58 || this.length - this.pos < len) throw new js__$Boot_HaxeError("Invalid string length");
			var s = HxOverrides.substr(this.buf,this.pos,len);
			this.pos += len;
			s = decodeURIComponent(s.split("+").join(" "));
			this.scache.push(s);
			return s;
		case 107:
			return NaN;
		case 109:
			return -Infinity;
		case 112:
			return Infinity;
		case 97:
			var buf = this.buf;
			var a = [];
			this.cache.push(a);
			while(true) {
				var c = this.buf.charCodeAt(this.pos);
				if(c == 104) {
					this.pos++;
					break;
				}
				if(c == 117) {
					this.pos++;
					var n = this.readDigits();
					a[a.length + n - 1] = null;
				} else a.push(this.unserialize());
			}
			return a;
		case 111:
			var o = { };
			this.cache.push(o);
			this.unserializeObject(o);
			return o;
		case 114:
			var n1 = this.readDigits();
			if(n1 < 0 || n1 >= this.cache.length) throw new js__$Boot_HaxeError("Invalid reference");
			return this.cache[n1];
		case 82:
			var n2 = this.readDigits();
			if(n2 < 0 || n2 >= this.scache.length) throw new js__$Boot_HaxeError("Invalid string reference");
			return this.scache[n2];
		case 120:
			throw new js__$Boot_HaxeError(this.unserialize());
			break;
		case 99:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) throw new js__$Boot_HaxeError("Class not found " + name);
			var o1 = Type.createEmptyInstance(cl);
			this.cache.push(o1);
			this.unserializeObject(o1);
			return o1;
		case 119:
			var name1 = this.unserialize();
			var edecl = this.resolver.resolveEnum(name1);
			if(edecl == null) throw new js__$Boot_HaxeError("Enum not found " + name1);
			var e = this.unserializeEnum(edecl,this.unserialize());
			this.cache.push(e);
			return e;
		case 106:
			var name2 = this.unserialize();
			var edecl1 = this.resolver.resolveEnum(name2);
			if(edecl1 == null) throw new js__$Boot_HaxeError("Enum not found " + name2);
			this.pos++;
			var index = this.readDigits();
			var tag = Type.getEnumConstructs(edecl1)[index];
			if(tag == null) throw new js__$Boot_HaxeError("Unknown enum index " + name2 + "@" + index);
			var e1 = this.unserializeEnum(edecl1,tag);
			this.cache.push(e1);
			return e1;
		case 108:
			var l = new List();
			this.cache.push(l);
			var buf1 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			return l;
		case 98:
			var h = new haxe_ds_StringMap();
			this.cache.push(h);
			var buf2 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s1 = this.unserialize();
				h.set(s1,this.unserialize());
			}
			this.pos++;
			return h;
		case 113:
			var h1 = new haxe_ds_IntMap();
			this.cache.push(h1);
			var buf3 = this.buf;
			var c1 = this.get(this.pos++);
			while(c1 == 58) {
				var i = this.readDigits();
				h1.set(i,this.unserialize());
				c1 = this.get(this.pos++);
			}
			if(c1 != 104) throw new js__$Boot_HaxeError("Invalid IntMap format");
			return h1;
		case 77:
			var h2 = new haxe_ds_ObjectMap();
			this.cache.push(h2);
			var buf4 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s2 = this.unserialize();
				h2.set(s2,this.unserialize());
			}
			this.pos++;
			return h2;
		case 118:
			var d;
			if(this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {
				var s3 = HxOverrides.substr(this.buf,this.pos,19);
				d = HxOverrides.strDate(s3);
				this.pos += 19;
			} else {
				var t = this.readFloat();
				var d1 = new Date();
				d1.setTime(t);
				d = d1;
			}
			this.cache.push(d);
			return d;
		case 115:
			var len1 = this.readDigits();
			var buf5 = this.buf;
			if(this.get(this.pos++) != 58 || this.length - this.pos < len1) throw new js__$Boot_HaxeError("Invalid bytes length");
			var codes = haxe_Unserializer.CODES;
			if(codes == null) {
				codes = haxe_Unserializer.initCodes();
				haxe_Unserializer.CODES = codes;
			}
			var i1 = this.pos;
			var rest = len1 & 3;
			var size;
			size = (len1 >> 2) * 3 + (rest >= 2?rest - 1:0);
			var max = i1 + (len1 - rest);
			var bytes = haxe_io_Bytes.alloc(size);
			var bpos = 0;
			while(i1 < max) {
				var c11 = codes[StringTools.fastCodeAt(buf5,i1++)];
				var c2 = codes[StringTools.fastCodeAt(buf5,i1++)];
				bytes.set(bpos++,c11 << 2 | c2 >> 4);
				var c3 = codes[StringTools.fastCodeAt(buf5,i1++)];
				bytes.set(bpos++,c2 << 4 | c3 >> 2);
				var c4 = codes[StringTools.fastCodeAt(buf5,i1++)];
				bytes.set(bpos++,c3 << 6 | c4);
			}
			if(rest >= 2) {
				var c12 = codes[StringTools.fastCodeAt(buf5,i1++)];
				var c21 = codes[StringTools.fastCodeAt(buf5,i1++)];
				bytes.set(bpos++,c12 << 2 | c21 >> 4);
				if(rest == 3) {
					var c31 = codes[StringTools.fastCodeAt(buf5,i1++)];
					bytes.set(bpos++,c21 << 4 | c31 >> 2);
				}
			}
			this.pos += len1;
			this.cache.push(bytes);
			return bytes;
		case 67:
			var name3 = this.unserialize();
			var cl1 = this.resolver.resolveClass(name3);
			if(cl1 == null) throw new js__$Boot_HaxeError("Class not found " + name3);
			var o2 = Type.createEmptyInstance(cl1);
			this.cache.push(o2);
			o2.hxUnserialize(this);
			if(this.get(this.pos++) != 103) throw new js__$Boot_HaxeError("Invalid custom data");
			return o2;
		case 65:
			var name4 = this.unserialize();
			var cl2 = this.resolver.resolveClass(name4);
			if(cl2 == null) throw new js__$Boot_HaxeError("Class not found " + name4);
			return cl2;
		case 66:
			var name5 = this.unserialize();
			var e2 = this.resolver.resolveEnum(name5);
			if(e2 == null) throw new js__$Boot_HaxeError("Enum not found " + name5);
			return e2;
		default:
		}
		this.pos--;
		throw new js__$Boot_HaxeError("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
	}
	,__class__: haxe_Unserializer
};
var haxe_Utf8 = function(size) {
	this.__b = "";
};
$hxClasses["haxe.Utf8"] = haxe_Utf8;
haxe_Utf8.__name__ = ["haxe","Utf8"];
haxe_Utf8.prototype = {
	__class__: haxe_Utf8
};
var haxe_crypto_Adler32 = function() {
	this.a1 = 1;
	this.a2 = 0;
};
$hxClasses["haxe.crypto.Adler32"] = haxe_crypto_Adler32;
haxe_crypto_Adler32.__name__ = ["haxe","crypto","Adler32"];
haxe_crypto_Adler32.read = function(i) {
	var a = new haxe_crypto_Adler32();
	var a2a = i.readByte();
	var a2b = i.readByte();
	var a1a = i.readByte();
	var a1b = i.readByte();
	a.a1 = a1a << 8 | a1b;
	a.a2 = a2a << 8 | a2b;
	return a;
};
haxe_crypto_Adler32.prototype = {
	update: function(b,pos,len) {
		var a1 = this.a1;
		var a2 = this.a2;
		var _g1 = pos;
		var _g = pos + len;
		while(_g1 < _g) {
			var p = _g1++;
			var c = b.b[p];
			a1 = (a1 + c) % 65521;
			a2 = (a2 + a1) % 65521;
		}
		this.a1 = a1;
		this.a2 = a2;
	}
	,equals: function(a) {
		return a.a1 == this.a1 && a.a2 == this.a2;
	}
	,__class__: haxe_crypto_Adler32
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = ["haxe","io","Bytes"];
haxe_io_Bytes.alloc = function(length) {
	return new haxe_io_Bytes(new ArrayBuffer(length));
};
haxe_io_Bytes.ofString = function(s) {
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = StringTools.fastCodeAt(s,i++);
		if(55296 <= c && c <= 56319) c = c - 55232 << 10 | StringTools.fastCodeAt(s,i++) & 1023;
		if(c <= 127) a.push(c); else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.prototype = {
	get: function(pos) {
		return this.b[pos];
	}
	,set: function(pos,v) {
		this.b[pos] = v & 255;
	}
	,blit: function(pos,src,srcpos,len) {
		if(pos < 0 || srcpos < 0 || len < 0 || pos + len > this.length || srcpos + len > src.length) throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		if(srcpos == 0 && len == src.length) this.b.set(src.b,pos); else this.b.set(src.b.subarray(srcpos,srcpos + len),pos);
	}
	,getString: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		var s = "";
		var b = this.b;
		var fcc = String.fromCharCode;
		var i = pos;
		var max = pos + len;
		while(i < max) {
			var c = b[i++];
			if(c < 128) {
				if(c == 0) break;
				s += fcc(c);
			} else if(c < 224) s += fcc((c & 63) << 6 | b[i++] & 127); else if(c < 240) {
				var c2 = b[i++];
				s += fcc((c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127);
			} else {
				var c21 = b[i++];
				var c3 = b[i++];
				var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
				s += fcc((u >> 10) + 55232);
				s += fcc(u & 1023 | 56320);
			}
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_crypto_Base64 = function() { };
$hxClasses["haxe.crypto.Base64"] = haxe_crypto_Base64;
haxe_crypto_Base64.__name__ = ["haxe","crypto","Base64"];
haxe_crypto_Base64.decode = function(str,complement) {
	if(complement == null) complement = true;
	if(complement) while(HxOverrides.cca(str,str.length - 1) == 61) str = HxOverrides.substr(str,0,-1);
	return new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).decodeBytes(haxe_io_Bytes.ofString(str));
};
var haxe_crypto_BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) nbits++;
	if(nbits > 8 || len != 1 << nbits) throw new js__$Boot_HaxeError("BaseCode : base length must be a power of two.");
	this.base = base;
	this.nbits = nbits;
};
$hxClasses["haxe.crypto.BaseCode"] = haxe_crypto_BaseCode;
haxe_crypto_BaseCode.__name__ = ["haxe","crypto","BaseCode"];
haxe_crypto_BaseCode.prototype = {
	initTable: function() {
		var tbl = [];
		var _g = 0;
		while(_g < 256) {
			var i = _g++;
			tbl[i] = -1;
		}
		var _g1 = 0;
		var _g2 = this.base.length;
		while(_g1 < _g2) {
			var i1 = _g1++;
			tbl[this.base.b[i1]] = i1;
		}
		this.tbl = tbl;
	}
	,decodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		if(this.tbl == null) this.initTable();
		var tbl = this.tbl;
		var size = b.length * nbits >> 3;
		var out = haxe_io_Bytes.alloc(size);
		var buf = 0;
		var curbits = 0;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < 8) {
				curbits += nbits;
				buf <<= nbits;
				var i = tbl[b.get(pin++)];
				if(i == -1) throw new js__$Boot_HaxeError("BaseCode : invalid encoded char");
				buf |= i;
			}
			curbits -= 8;
			out.set(pout++,buf >> curbits & 255);
		}
		return out;
	}
	,__class__: haxe_crypto_BaseCode
};
var haxe_crypto_Md5 = function() {
};
$hxClasses["haxe.crypto.Md5"] = haxe_crypto_Md5;
haxe_crypto_Md5.__name__ = ["haxe","crypto","Md5"];
haxe_crypto_Md5.encode = function(s) {
	var m = new haxe_crypto_Md5();
	var h = m.doEncode(haxe_crypto_Md5.str2blks(s));
	return m.hex(h);
};
haxe_crypto_Md5.str2blks = function(str) {
	var nblk = (str.length + 8 >> 6) + 1;
	var blks = [];
	var blksSize = nblk * 16;
	var _g = 0;
	while(_g < blksSize) {
		var i1 = _g++;
		blks[i1] = 0;
	}
	var i = 0;
	while(i < str.length) {
		blks[i >> 2] |= HxOverrides.cca(str,i) << (str.length * 8 + i) % 4 * 8;
		i++;
	}
	blks[i >> 2] |= 128 << (str.length * 8 + i) % 4 * 8;
	var l = str.length * 8;
	var k = nblk * 16 - 2;
	blks[k] = l & 255;
	blks[k] |= (l >>> 8 & 255) << 8;
	blks[k] |= (l >>> 16 & 255) << 16;
	blks[k] |= (l >>> 24 & 255) << 24;
	return blks;
};
haxe_crypto_Md5.prototype = {
	bitOR: function(a,b) {
		var lsb = a & 1 | b & 1;
		var msb31 = a >>> 1 | b >>> 1;
		return msb31 << 1 | lsb;
	}
	,bitXOR: function(a,b) {
		var lsb = a & 1 ^ b & 1;
		var msb31 = a >>> 1 ^ b >>> 1;
		return msb31 << 1 | lsb;
	}
	,bitAND: function(a,b) {
		var lsb = a & 1 & (b & 1);
		var msb31 = a >>> 1 & b >>> 1;
		return msb31 << 1 | lsb;
	}
	,addme: function(x,y) {
		var lsw = (x & 65535) + (y & 65535);
		var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
		return msw << 16 | lsw & 65535;
	}
	,hex: function(a) {
		var str = "";
		var hex_chr = "0123456789abcdef";
		var _g = 0;
		while(_g < a.length) {
			var num = a[_g];
			++_g;
			var _g1 = 0;
			while(_g1 < 4) {
				var j = _g1++;
				str += hex_chr.charAt(num >> j * 8 + 4 & 15) + hex_chr.charAt(num >> j * 8 & 15);
			}
		}
		return str;
	}
	,rol: function(num,cnt) {
		return num << cnt | num >>> 32 - cnt;
	}
	,cmn: function(q,a,b,x,s,t) {
		return this.addme(this.rol(this.addme(this.addme(a,q),this.addme(x,t)),s),b);
	}
	,ff: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitOR(this.bitAND(b,c),this.bitAND(~b,d)),a,b,x,s,t);
	}
	,gg: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitOR(this.bitAND(b,d),this.bitAND(c,~d)),a,b,x,s,t);
	}
	,hh: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitXOR(this.bitXOR(b,c),d),a,b,x,s,t);
	}
	,ii: function(a,b,c,d,x,s,t) {
		return this.cmn(this.bitXOR(c,this.bitOR(b,~d)),a,b,x,s,t);
	}
	,doEncode: function(x) {
		var a = 1732584193;
		var b = -271733879;
		var c = -1732584194;
		var d = 271733878;
		var step;
		var i = 0;
		while(i < x.length) {
			var olda = a;
			var oldb = b;
			var oldc = c;
			var oldd = d;
			step = 0;
			a = this.ff(a,b,c,d,x[i],7,-680876936);
			d = this.ff(d,a,b,c,x[i + 1],12,-389564586);
			c = this.ff(c,d,a,b,x[i + 2],17,606105819);
			b = this.ff(b,c,d,a,x[i + 3],22,-1044525330);
			a = this.ff(a,b,c,d,x[i + 4],7,-176418897);
			d = this.ff(d,a,b,c,x[i + 5],12,1200080426);
			c = this.ff(c,d,a,b,x[i + 6],17,-1473231341);
			b = this.ff(b,c,d,a,x[i + 7],22,-45705983);
			a = this.ff(a,b,c,d,x[i + 8],7,1770035416);
			d = this.ff(d,a,b,c,x[i + 9],12,-1958414417);
			c = this.ff(c,d,a,b,x[i + 10],17,-42063);
			b = this.ff(b,c,d,a,x[i + 11],22,-1990404162);
			a = this.ff(a,b,c,d,x[i + 12],7,1804603682);
			d = this.ff(d,a,b,c,x[i + 13],12,-40341101);
			c = this.ff(c,d,a,b,x[i + 14],17,-1502002290);
			b = this.ff(b,c,d,a,x[i + 15],22,1236535329);
			a = this.gg(a,b,c,d,x[i + 1],5,-165796510);
			d = this.gg(d,a,b,c,x[i + 6],9,-1069501632);
			c = this.gg(c,d,a,b,x[i + 11],14,643717713);
			b = this.gg(b,c,d,a,x[i],20,-373897302);
			a = this.gg(a,b,c,d,x[i + 5],5,-701558691);
			d = this.gg(d,a,b,c,x[i + 10],9,38016083);
			c = this.gg(c,d,a,b,x[i + 15],14,-660478335);
			b = this.gg(b,c,d,a,x[i + 4],20,-405537848);
			a = this.gg(a,b,c,d,x[i + 9],5,568446438);
			d = this.gg(d,a,b,c,x[i + 14],9,-1019803690);
			c = this.gg(c,d,a,b,x[i + 3],14,-187363961);
			b = this.gg(b,c,d,a,x[i + 8],20,1163531501);
			a = this.gg(a,b,c,d,x[i + 13],5,-1444681467);
			d = this.gg(d,a,b,c,x[i + 2],9,-51403784);
			c = this.gg(c,d,a,b,x[i + 7],14,1735328473);
			b = this.gg(b,c,d,a,x[i + 12],20,-1926607734);
			a = this.hh(a,b,c,d,x[i + 5],4,-378558);
			d = this.hh(d,a,b,c,x[i + 8],11,-2022574463);
			c = this.hh(c,d,a,b,x[i + 11],16,1839030562);
			b = this.hh(b,c,d,a,x[i + 14],23,-35309556);
			a = this.hh(a,b,c,d,x[i + 1],4,-1530992060);
			d = this.hh(d,a,b,c,x[i + 4],11,1272893353);
			c = this.hh(c,d,a,b,x[i + 7],16,-155497632);
			b = this.hh(b,c,d,a,x[i + 10],23,-1094730640);
			a = this.hh(a,b,c,d,x[i + 13],4,681279174);
			d = this.hh(d,a,b,c,x[i],11,-358537222);
			c = this.hh(c,d,a,b,x[i + 3],16,-722521979);
			b = this.hh(b,c,d,a,x[i + 6],23,76029189);
			a = this.hh(a,b,c,d,x[i + 9],4,-640364487);
			d = this.hh(d,a,b,c,x[i + 12],11,-421815835);
			c = this.hh(c,d,a,b,x[i + 15],16,530742520);
			b = this.hh(b,c,d,a,x[i + 2],23,-995338651);
			a = this.ii(a,b,c,d,x[i],6,-198630844);
			d = this.ii(d,a,b,c,x[i + 7],10,1126891415);
			c = this.ii(c,d,a,b,x[i + 14],15,-1416354905);
			b = this.ii(b,c,d,a,x[i + 5],21,-57434055);
			a = this.ii(a,b,c,d,x[i + 12],6,1700485571);
			d = this.ii(d,a,b,c,x[i + 3],10,-1894986606);
			c = this.ii(c,d,a,b,x[i + 10],15,-1051523);
			b = this.ii(b,c,d,a,x[i + 1],21,-2054922799);
			a = this.ii(a,b,c,d,x[i + 8],6,1873313359);
			d = this.ii(d,a,b,c,x[i + 15],10,-30611744);
			c = this.ii(c,d,a,b,x[i + 6],15,-1560198380);
			b = this.ii(b,c,d,a,x[i + 13],21,1309151649);
			a = this.ii(a,b,c,d,x[i + 4],6,-145523070);
			d = this.ii(d,a,b,c,x[i + 11],10,-1120210379);
			c = this.ii(c,d,a,b,x[i + 2],15,718787259);
			b = this.ii(b,c,d,a,x[i + 9],21,-343485551);
			a = this.addme(a,olda);
			b = this.addme(b,oldb);
			c = this.addme(c,oldc);
			d = this.addme(d,oldd);
			i += 16;
		}
		return [a,b,c,d];
	}
	,__class__: haxe_crypto_Md5
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = ["haxe","ds","IntMap"];
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	set: function(key,value) {
		this.h[key] = value;
	}
	,get: function(key) {
		return this.h[key];
	}
	,exists: function(key) {
		return this.h.hasOwnProperty(key);
	}
	,remove: function(key) {
		if(!this.h.hasOwnProperty(key)) return false;
		delete(this.h[key]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) a.push(key | 0);
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_ObjectMap = function() {
	this.h = { };
	this.h.__keys__ = { };
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = ["haxe","ds","ObjectMap"];
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,get: function(key) {
		return this.h[key.__id__];
	}
	,exists: function(key) {
		return this.h.__keys__[key.__id__] != null;
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) return false;
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) a.push(this.h.__keys__[key]);
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i.__id__];
		}};
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds__$StringMap_StringMapIterator = function(map,keys) {
	this.map = map;
	this.keys = keys;
	this.index = 0;
	this.count = keys.length;
};
$hxClasses["haxe.ds._StringMap.StringMapIterator"] = haxe_ds__$StringMap_StringMapIterator;
haxe_ds__$StringMap_StringMapIterator.__name__ = ["haxe","ds","_StringMap","StringMapIterator"];
haxe_ds__$StringMap_StringMapIterator.prototype = {
	hasNext: function() {
		return this.index < this.count;
	}
	,next: function() {
		return this.map.get(this.keys[this.index++]);
	}
	,__class__: haxe_ds__$StringMap_StringMapIterator
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	set: function(key,value) {
		if(__map_reserved[key] != null) this.setReserved(key,value); else this.h[key] = value;
	}
	,get: function(key) {
		if(__map_reserved[key] != null) return this.getReserved(key);
		return this.h[key];
	}
	,exists: function(key) {
		if(__map_reserved[key] != null) return this.existsReserved(key);
		return this.h.hasOwnProperty(key);
	}
	,setReserved: function(key,value) {
		if(this.rh == null) this.rh = { };
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) return null; else return this.rh["$" + key];
	}
	,existsReserved: function(key) {
		if(this.rh == null) return false;
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) return false;
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) return false;
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		var _this = this.arrayKeys();
		return HxOverrides.iter(_this);
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) out.push(key);
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) out.push(key.substr(1));
			}
		}
		return out;
	}
	,iterator: function() {
		return new haxe_ds__$StringMap_StringMapIterator(this,this.arrayKeys());
	}
	,__class__: haxe_ds_StringMap
};
var haxe_io_BytesBuffer = function() {
	this.b = [];
};
$hxClasses["haxe.io.BytesBuffer"] = haxe_io_BytesBuffer;
haxe_io_BytesBuffer.__name__ = ["haxe","io","BytesBuffer"];
haxe_io_BytesBuffer.prototype = {
	addBytes: function(src,pos,len) {
		if(pos < 0 || len < 0 || pos + len > src.length) throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		var b1 = this.b;
		var b2 = src.b;
		var _g1 = pos;
		var _g = pos + len;
		while(_g1 < _g) {
			var i = _g1++;
			this.b.push(b2[i]);
		}
	}
	,getBytes: function() {
		var bytes = new haxe_io_Bytes(new Uint8Array(this.b).buffer);
		this.b = null;
		return bytes;
	}
	,__class__: haxe_io_BytesBuffer
};
var haxe_io_Input = function() { };
$hxClasses["haxe.io.Input"] = haxe_io_Input;
haxe_io_Input.__name__ = ["haxe","io","Input"];
haxe_io_Input.prototype = {
	readByte: function() {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,readBytes: function(s,pos,len) {
		var k = len;
		var b = s.b;
		if(pos < 0 || len < 0 || pos + len > s.length) throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		while(k > 0) {
			b[pos] = this.readByte();
			pos++;
			k--;
		}
		return len;
	}
	,read: function(nbytes) {
		var s = haxe_io_Bytes.alloc(nbytes);
		var p = 0;
		while(nbytes > 0) {
			var k = this.readBytes(s,p,nbytes);
			if(k == 0) throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			p += k;
			nbytes -= k;
		}
		return s;
	}
	,readUInt16: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		if(this.bigEndian) return ch2 | ch1 << 8; else return ch1 | ch2 << 8;
	}
	,__class__: haxe_io_Input
};
var haxe_io_BytesInput = function(b,pos,len) {
	if(pos == null) pos = 0;
	if(len == null) len = b.length - pos;
	if(pos < 0 || len < 0 || pos + len > b.length) throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
	this.b = b.b;
	this.pos = pos;
	this.len = len;
	this.totlen = len;
};
$hxClasses["haxe.io.BytesInput"] = haxe_io_BytesInput;
haxe_io_BytesInput.__name__ = ["haxe","io","BytesInput"];
haxe_io_BytesInput.__super__ = haxe_io_Input;
haxe_io_BytesInput.prototype = $extend(haxe_io_Input.prototype,{
	readByte: function() {
		if(this.len == 0) throw new js__$Boot_HaxeError(new haxe_io_Eof());
		this.len--;
		return this.b[this.pos++];
	}
	,readBytes: function(buf,pos,len) {
		if(pos < 0 || len < 0 || pos + len > buf.length) throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		if(this.len == 0 && len > 0) throw new js__$Boot_HaxeError(new haxe_io_Eof());
		if(this.len < len) len = this.len;
		var b1 = this.b;
		var b2 = buf.b;
		var _g = 0;
		while(_g < len) {
			var i = _g++;
			b2[pos + i] = b1[this.pos + i];
		}
		this.pos += len;
		this.len -= len;
		return len;
	}
	,__class__: haxe_io_BytesInput
});
var haxe_io_Eof = function() {
};
$hxClasses["haxe.io.Eof"] = haxe_io_Eof;
haxe_io_Eof.__name__ = ["haxe","io","Eof"];
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = $hxClasses["haxe.io.Error"] = { __ename__ : ["haxe","io","Error"], __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"] };
haxe_io_Error.Blocked = ["Blocked",0];
haxe_io_Error.Blocked.toString = $estr;
haxe_io_Error.Blocked.__enum__ = haxe_io_Error;
haxe_io_Error.Overflow = ["Overflow",1];
haxe_io_Error.Overflow.toString = $estr;
haxe_io_Error.Overflow.__enum__ = haxe_io_Error;
haxe_io_Error.OutsideBounds = ["OutsideBounds",2];
haxe_io_Error.OutsideBounds.toString = $estr;
haxe_io_Error.OutsideBounds.__enum__ = haxe_io_Error;
haxe_io_Error.Custom = function(e) { var $x = ["Custom",3,e]; $x.__enum__ = haxe_io_Error; $x.toString = $estr; return $x; };
var haxe_io_FPHelper = function() { };
$hxClasses["haxe.io.FPHelper"] = haxe_io_FPHelper;
haxe_io_FPHelper.__name__ = ["haxe","io","FPHelper"];
haxe_io_FPHelper.i32ToFloat = function(i) {
	var sign = 1 - (i >>> 31 << 1);
	var exp = i >>> 23 & 255;
	var sig = i & 8388607;
	if(sig == 0 && exp == 0) return 0.0;
	return sign * (1 + Math.pow(2,-23) * sig) * Math.pow(2,exp - 127);
};
haxe_io_FPHelper.floatToI32 = function(f) {
	if(f == 0) return 0;
	var af;
	if(f < 0) af = -f; else af = f;
	var exp = Math.floor(Math.log(af) / 0.6931471805599453);
	if(exp < -127) exp = -127; else if(exp > 128) exp = 128;
	var sig = Math.round((af / Math.pow(2,exp) - 1) * 8388608) & 8388607;
	return (f < 0?-2147483648:0) | exp + 127 << 23 | sig;
};
haxe_io_FPHelper.i64ToDouble = function(low,high) {
	var sign = 1 - (high >>> 31 << 1);
	var exp = (high >> 20 & 2047) - 1023;
	var sig = (high & 1048575) * 4294967296. + (low >>> 31) * 2147483648. + (low & 2147483647);
	if(sig == 0 && exp == -1023) return 0.0;
	return sign * (1.0 + Math.pow(2,-52) * sig) * Math.pow(2,exp);
};
haxe_io_FPHelper.doubleToI64 = function(v) {
	var i64 = haxe_io_FPHelper.i64tmp;
	if(v == 0) {
		i64.low = 0;
		i64.high = 0;
	} else {
		var av;
		if(v < 0) av = -v; else av = v;
		var exp = Math.floor(Math.log(av) / 0.6931471805599453);
		var sig;
		var v1 = (av / Math.pow(2,exp) - 1) * 4503599627370496.;
		sig = Math.round(v1);
		var sig_l = sig | 0;
		var sig_h = sig / 4294967296.0 | 0;
		i64.low = sig_l;
		i64.high = (v < 0?-2147483648:0) | exp + 1023 << 20 | sig_h;
	}
	return i64;
};
var haxe_io_Path = function(path) {
	switch(path) {
	case ".":case "..":
		this.dir = path;
		this.file = "";
		return;
	}
	var c1 = path.lastIndexOf("/");
	var c2 = path.lastIndexOf("\\");
	if(c1 < c2) {
		this.dir = HxOverrides.substr(path,0,c2);
		path = HxOverrides.substr(path,c2 + 1,null);
		this.backslash = true;
	} else if(c2 < c1) {
		this.dir = HxOverrides.substr(path,0,c1);
		path = HxOverrides.substr(path,c1 + 1,null);
	} else this.dir = null;
	var cp = path.lastIndexOf(".");
	if(cp != -1) {
		this.ext = HxOverrides.substr(path,cp + 1,null);
		this.file = HxOverrides.substr(path,0,cp);
	} else {
		this.ext = null;
		this.file = path;
	}
};
$hxClasses["haxe.io.Path"] = haxe_io_Path;
haxe_io_Path.__name__ = ["haxe","io","Path"];
haxe_io_Path.directory = function(path) {
	var s = new haxe_io_Path(path);
	if(s.dir == null) return "";
	return s.dir;
};
haxe_io_Path.extension = function(path) {
	var s = new haxe_io_Path(path);
	if(s.ext == null) return "";
	return s.ext;
};
haxe_io_Path.join = function(paths) {
	var paths1 = paths.filter(function(s) {
		return s != null && s != "";
	});
	if(paths1.length == 0) return "";
	var path = paths1[0];
	var _g1 = 1;
	var _g = paths1.length;
	while(_g1 < _g) {
		var i = _g1++;
		path = haxe_io_Path.addTrailingSlash(path);
		path += paths1[i];
	}
	return haxe_io_Path.normalize(path);
};
haxe_io_Path.normalize = function(path) {
	var slash = "/";
	path = path.split("\\").join("/");
	if(path == null || path == slash) return slash;
	var target = [];
	var _g = 0;
	var _g1 = path.split(slash);
	while(_g < _g1.length) {
		var token = _g1[_g];
		++_g;
		if(token == ".." && target.length > 0 && target[target.length - 1] != "..") target.pop(); else if(token != ".") target.push(token);
	}
	var tmp = target.join(slash);
	var regex = new EReg("([^:])/+","g");
	var result = regex.replace(tmp,"$1" + slash);
	var acc = new StringBuf();
	var colon = false;
	var slashes = false;
	var _g11 = 0;
	var _g2 = tmp.length;
	while(_g11 < _g2) {
		var i = _g11++;
		var _g21 = HxOverrides.cca(tmp,i);
		var i1 = _g21;
		if(_g21 != null) switch(_g21) {
		case 58:
			acc.b += ":";
			colon = true;
			break;
		case 47:
			if(colon == false) slashes = true; else {
				colon = false;
				if(slashes) {
					acc.b += "/";
					slashes = false;
				}
				acc.add(String.fromCharCode(i1));
			}
			break;
		default:
			colon = false;
			if(slashes) {
				acc.b += "/";
				slashes = false;
			}
			acc.add(String.fromCharCode(i1));
		} else {
			colon = false;
			if(slashes) {
				acc.b += "/";
				slashes = false;
			}
			acc.add(String.fromCharCode(i1));
		}
	}
	var result1 = acc.b;
	return result1;
};
haxe_io_Path.addTrailingSlash = function(path) {
	if(path.length == 0) return "/";
	var c1 = path.lastIndexOf("/");
	var c2 = path.lastIndexOf("\\");
	if(c1 < c2) {
		if(c2 != path.length - 1) return path + "\\"; else return path;
	} else if(c1 != path.length - 1) return path + "/"; else return path;
};
haxe_io_Path.prototype = {
	__class__: haxe_io_Path
};
var haxe_xml_Parser = function() { };
$hxClasses["haxe.xml.Parser"] = haxe_xml_Parser;
haxe_xml_Parser.__name__ = ["haxe","xml","Parser"];
haxe_xml_Parser.parse = function(str,strict) {
	if(strict == null) strict = false;
	var doc = Xml.createDocument();
	haxe_xml_Parser.doParse(str,strict,0,doc);
	return doc;
};
haxe_xml_Parser.doParse = function(str,strict,p,parent) {
	if(p == null) p = 0;
	var xml = null;
	var state = 1;
	var next = 1;
	var aname = null;
	var start = 0;
	var nsubs = 0;
	var nbrackets = 0;
	var c = str.charCodeAt(p);
	var buf = new StringBuf();
	var escapeNext = 1;
	var attrValQuote = -1;
	while(!(c != c)) {
		switch(state) {
		case 0:
			switch(c) {
			case 10:case 13:case 9:case 32:
				break;
			default:
				state = next;
				continue;
			}
			break;
		case 1:
			switch(c) {
			case 60:
				state = 0;
				next = 2;
				break;
			default:
				start = p;
				state = 13;
				continue;
			}
			break;
		case 13:
			if(c == 60) {
				buf.addSub(str,start,p - start);
				var child = Xml.createPCData(buf.b);
				buf = new StringBuf();
				parent.addChild(child);
				nsubs++;
				state = 0;
				next = 2;
			} else if(c == 38) {
				buf.addSub(str,start,p - start);
				state = 18;
				escapeNext = 13;
				start = p + 1;
			}
			break;
		case 17:
			if(c == 93 && str.charCodeAt(p + 1) == 93 && str.charCodeAt(p + 2) == 62) {
				var child1 = Xml.createCData(HxOverrides.substr(str,start,p - start));
				parent.addChild(child1);
				nsubs++;
				p += 2;
				state = 1;
			}
			break;
		case 2:
			switch(c) {
			case 33:
				if(str.charCodeAt(p + 1) == 91) {
					p += 2;
					if(HxOverrides.substr(str,p,6).toUpperCase() != "CDATA[") throw new js__$Boot_HaxeError("Expected <![CDATA[");
					p += 5;
					state = 17;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) == 68 || str.charCodeAt(p + 1) == 100) {
					if(HxOverrides.substr(str,p + 2,6).toUpperCase() != "OCTYPE") throw new js__$Boot_HaxeError("Expected <!DOCTYPE");
					p += 8;
					state = 16;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) != 45 || str.charCodeAt(p + 2) != 45) throw new js__$Boot_HaxeError("Expected <!--"); else {
					p += 2;
					state = 15;
					start = p + 1;
				}
				break;
			case 63:
				state = 14;
				start = p;
				break;
			case 47:
				if(parent == null) throw new js__$Boot_HaxeError("Expected node name");
				start = p + 1;
				state = 0;
				next = 10;
				break;
			default:
				state = 3;
				start = p;
				continue;
			}
			break;
		case 3:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(p == start) throw new js__$Boot_HaxeError("Expected node name");
				xml = Xml.createElement(HxOverrides.substr(str,start,p - start));
				parent.addChild(xml);
				nsubs++;
				state = 0;
				next = 4;
				continue;
			}
			break;
		case 4:
			switch(c) {
			case 47:
				state = 11;
				break;
			case 62:
				state = 9;
				break;
			default:
				state = 5;
				start = p;
				continue;
			}
			break;
		case 5:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				var tmp;
				if(start == p) throw new js__$Boot_HaxeError("Expected attribute name");
				tmp = HxOverrides.substr(str,start,p - start);
				aname = tmp;
				if(xml.exists(aname)) throw new js__$Boot_HaxeError("Duplicate attribute");
				state = 0;
				next = 6;
				continue;
			}
			break;
		case 6:
			switch(c) {
			case 61:
				state = 0;
				next = 7;
				break;
			default:
				throw new js__$Boot_HaxeError("Expected =");
			}
			break;
		case 7:
			switch(c) {
			case 34:case 39:
				buf = new StringBuf();
				state = 8;
				start = p + 1;
				attrValQuote = c;
				break;
			default:
				throw new js__$Boot_HaxeError("Expected \"");
			}
			break;
		case 8:
			switch(c) {
			case 38:
				buf.addSub(str,start,p - start);
				state = 18;
				escapeNext = 8;
				start = p + 1;
				break;
			case 62:
				if(strict) throw new js__$Boot_HaxeError("Invalid unescaped " + String.fromCharCode(c) + " in attribute value"); else if(c == attrValQuote) {
					buf.addSub(str,start,p - start);
					var val = buf.b;
					buf = new StringBuf();
					xml.set(aname,val);
					state = 0;
					next = 4;
				}
				break;
			case 60:
				if(strict) throw new js__$Boot_HaxeError("Invalid unescaped " + String.fromCharCode(c) + " in attribute value"); else if(c == attrValQuote) {
					buf.addSub(str,start,p - start);
					var val1 = buf.b;
					buf = new StringBuf();
					xml.set(aname,val1);
					state = 0;
					next = 4;
				}
				break;
			default:
				if(c == attrValQuote) {
					buf.addSub(str,start,p - start);
					var val2 = buf.b;
					buf = new StringBuf();
					xml.set(aname,val2);
					state = 0;
					next = 4;
				}
			}
			break;
		case 9:
			p = haxe_xml_Parser.doParse(str,strict,p,xml);
			start = p;
			state = 1;
			break;
		case 11:
			switch(c) {
			case 62:
				state = 1;
				break;
			default:
				throw new js__$Boot_HaxeError("Expected >");
			}
			break;
		case 12:
			switch(c) {
			case 62:
				if(nsubs == 0) parent.addChild(Xml.createPCData(""));
				return p;
			default:
				throw new js__$Boot_HaxeError("Expected >");
			}
			break;
		case 10:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) throw new js__$Boot_HaxeError("Expected node name");
				var v = HxOverrides.substr(str,start,p - start);
				if(v != (function($this) {
					var $r;
					if(parent.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + parent.nodeType);
					$r = parent.nodeName;
					return $r;
				}(this))) throw new js__$Boot_HaxeError("Expected </" + (function($this) {
					var $r;
					if(parent.nodeType != Xml.Element) throw "Bad node type, expected Element but found " + parent.nodeType;
					$r = parent.nodeName;
					return $r;
				}(this)) + ">");
				state = 0;
				next = 12;
				continue;
			}
			break;
		case 15:
			if(c == 45 && str.charCodeAt(p + 1) == 45 && str.charCodeAt(p + 2) == 62) {
				var xml1 = Xml.createComment(HxOverrides.substr(str,start,p - start));
				parent.addChild(xml1);
				nsubs++;
				p += 2;
				state = 1;
			}
			break;
		case 16:
			if(c == 91) nbrackets++; else if(c == 93) nbrackets--; else if(c == 62 && nbrackets == 0) {
				var xml2 = Xml.createDocType(HxOverrides.substr(str,start,p - start));
				parent.addChild(xml2);
				nsubs++;
				state = 1;
			}
			break;
		case 14:
			if(c == 63 && str.charCodeAt(p + 1) == 62) {
				p++;
				var str1 = HxOverrides.substr(str,start + 1,p - start - 2);
				var xml3 = Xml.createProcessingInstruction(str1);
				parent.addChild(xml3);
				nsubs++;
				state = 1;
			}
			break;
		case 18:
			if(c == 59) {
				var s = HxOverrides.substr(str,start,p - start);
				if(s.charCodeAt(0) == 35) {
					var c1;
					if(s.charCodeAt(1) == 120) c1 = Std.parseInt("0" + HxOverrides.substr(s,1,s.length - 1)); else c1 = Std.parseInt(HxOverrides.substr(s,1,s.length - 1));
					buf.b += String.fromCharCode(c1);
				} else if(!haxe_xml_Parser.escapes.exists(s)) {
					if(strict) throw new js__$Boot_HaxeError("Undefined entity: " + s);
					buf.b += Std.string("&" + s + ";");
				} else buf.add(haxe_xml_Parser.escapes.get(s));
				start = p + 1;
				state = escapeNext;
			} else if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45) && c != 35) {
				if(strict) throw new js__$Boot_HaxeError("Invalid character in entity: " + String.fromCharCode(c));
				buf.b += "&";
				buf.addSub(str,start,p - start);
				p--;
				start = p + 1;
				state = escapeNext;
			}
			break;
		}
		c = StringTools.fastCodeAt(str,++p);
	}
	if(state == 1) {
		start = p;
		state = 13;
	}
	if(state == 13) {
		if(p != start || nsubs == 0) {
			buf.addSub(str,start,p - start);
			var xml4 = Xml.createPCData(buf.b);
			parent.addChild(xml4);
			nsubs++;
		}
		return p;
	}
	if(!strict && state == 18 && escapeNext == 13) {
		buf.b += "&";
		buf.addSub(str,start,p - start);
		var xml5 = Xml.createPCData(buf.b);
		parent.addChild(xml5);
		nsubs++;
		return p;
	}
	throw new js__$Boot_HaxeError("Unexpected end");
};
var haxe_zip_Huffman = $hxClasses["haxe.zip.Huffman"] = { __ename__ : ["haxe","zip","Huffman"], __constructs__ : ["Found","NeedBit","NeedBits"] };
haxe_zip_Huffman.Found = function(i) { var $x = ["Found",0,i]; $x.__enum__ = haxe_zip_Huffman; $x.toString = $estr; return $x; };
haxe_zip_Huffman.NeedBit = function(left,right) { var $x = ["NeedBit",1,left,right]; $x.__enum__ = haxe_zip_Huffman; $x.toString = $estr; return $x; };
haxe_zip_Huffman.NeedBits = function(n,table) { var $x = ["NeedBits",2,n,table]; $x.__enum__ = haxe_zip_Huffman; $x.toString = $estr; return $x; };
var haxe_zip_HuffTools = function() {
};
$hxClasses["haxe.zip.HuffTools"] = haxe_zip_HuffTools;
haxe_zip_HuffTools.__name__ = ["haxe","zip","HuffTools"];
haxe_zip_HuffTools.prototype = {
	treeDepth: function(t) {
		switch(t[1]) {
		case 0:
			return 0;
		case 2:
			throw new js__$Boot_HaxeError("assert");
			break;
		case 1:
			var b = t[3];
			var a = t[2];
			var da = this.treeDepth(a);
			var db = this.treeDepth(b);
			return 1 + (da < db?da:db);
		}
	}
	,treeCompress: function(t) {
		var d = this.treeDepth(t);
		if(d == 0) return t;
		if(d == 1) switch(t[1]) {
		case 1:
			var b = t[3];
			var a = t[2];
			return haxe_zip_Huffman.NeedBit(this.treeCompress(a),this.treeCompress(b));
		default:
			throw new js__$Boot_HaxeError("assert");
		}
		var size = 1 << d;
		var table = [];
		var _g = 0;
		while(_g < size) {
			var i = _g++;
			table.push(haxe_zip_Huffman.Found(-1));
		}
		this.treeWalk(table,0,0,d,t);
		return haxe_zip_Huffman.NeedBits(d,table);
	}
	,treeWalk: function(table,p,cd,d,t) {
		switch(t[1]) {
		case 1:
			var b = t[3];
			var a = t[2];
			if(d > 0) {
				this.treeWalk(table,p,cd + 1,d - 1,a);
				this.treeWalk(table,p | 1 << cd,cd + 1,d - 1,b);
			} else table[p] = this.treeCompress(t);
			break;
		default:
			table[p] = this.treeCompress(t);
		}
	}
	,treeMake: function(bits,maxbits,v,len) {
		if(len > maxbits) throw new js__$Boot_HaxeError("Invalid huffman");
		var idx = v << 5 | len;
		if(bits.h.hasOwnProperty(idx)) return haxe_zip_Huffman.Found(bits.h[idx]);
		v <<= 1;
		len += 1;
		return haxe_zip_Huffman.NeedBit(this.treeMake(bits,maxbits,v,len),this.treeMake(bits,maxbits,v | 1,len));
	}
	,make: function(lengths,pos,nlengths,maxbits) {
		var counts = [];
		var tmp = [];
		if(maxbits > 32) throw new js__$Boot_HaxeError("Invalid huffman");
		var _g = 0;
		while(_g < maxbits) {
			var i = _g++;
			counts.push(0);
			tmp.push(0);
		}
		var _g1 = 0;
		while(_g1 < nlengths) {
			var i1 = _g1++;
			var p = lengths[i1 + pos];
			if(p >= maxbits) throw new js__$Boot_HaxeError("Invalid huffman");
			counts[p]++;
		}
		var code = 0;
		var _g11 = 1;
		var _g2 = maxbits - 1;
		while(_g11 < _g2) {
			var i2 = _g11++;
			code = code + counts[i2] << 1;
			tmp[i2] = code;
		}
		var bits = new haxe_ds_IntMap();
		var _g3 = 0;
		while(_g3 < nlengths) {
			var i3 = _g3++;
			var l = lengths[i3 + pos];
			if(l != 0) {
				var n = tmp[l - 1];
				tmp[l - 1] = n + 1;
				bits.h[n << 5 | l] = i3;
			}
		}
		return this.treeCompress(haxe_zip_Huffman.NeedBit(this.treeMake(bits,maxbits,0,1),this.treeMake(bits,maxbits,1,1)));
	}
	,__class__: haxe_zip_HuffTools
};
var haxe_zip__$InflateImpl_Window = function(hasCrc) {
	this.buffer = haxe_io_Bytes.alloc(65536);
	this.pos = 0;
	if(hasCrc) this.crc = new haxe_crypto_Adler32();
};
$hxClasses["haxe.zip._InflateImpl.Window"] = haxe_zip__$InflateImpl_Window;
haxe_zip__$InflateImpl_Window.__name__ = ["haxe","zip","_InflateImpl","Window"];
haxe_zip__$InflateImpl_Window.prototype = {
	slide: function() {
		if(this.crc != null) this.crc.update(this.buffer,0,32768);
		var b = haxe_io_Bytes.alloc(65536);
		this.pos -= 32768;
		b.blit(0,this.buffer,32768,this.pos);
		this.buffer = b;
	}
	,addBytes: function(b,p,len) {
		if(this.pos + len > 65536) this.slide();
		this.buffer.blit(this.pos,b,p,len);
		this.pos += len;
	}
	,addByte: function(c) {
		if(this.pos == 65536) this.slide();
		this.buffer.b[this.pos] = c & 255;
		this.pos++;
	}
	,getLastChar: function() {
		return this.buffer.b[this.pos - 1];
	}
	,available: function() {
		return this.pos;
	}
	,checksum: function() {
		if(this.crc != null) this.crc.update(this.buffer,0,this.pos);
		return this.crc;
	}
	,__class__: haxe_zip__$InflateImpl_Window
};
var haxe_zip__$InflateImpl_State = $hxClasses["haxe.zip._InflateImpl.State"] = { __ename__ : ["haxe","zip","_InflateImpl","State"], __constructs__ : ["Head","Block","CData","Flat","Crc","Dist","DistOne","Done"] };
haxe_zip__$InflateImpl_State.Head = ["Head",0];
haxe_zip__$InflateImpl_State.Head.toString = $estr;
haxe_zip__$InflateImpl_State.Head.__enum__ = haxe_zip__$InflateImpl_State;
haxe_zip__$InflateImpl_State.Block = ["Block",1];
haxe_zip__$InflateImpl_State.Block.toString = $estr;
haxe_zip__$InflateImpl_State.Block.__enum__ = haxe_zip__$InflateImpl_State;
haxe_zip__$InflateImpl_State.CData = ["CData",2];
haxe_zip__$InflateImpl_State.CData.toString = $estr;
haxe_zip__$InflateImpl_State.CData.__enum__ = haxe_zip__$InflateImpl_State;
haxe_zip__$InflateImpl_State.Flat = ["Flat",3];
haxe_zip__$InflateImpl_State.Flat.toString = $estr;
haxe_zip__$InflateImpl_State.Flat.__enum__ = haxe_zip__$InflateImpl_State;
haxe_zip__$InflateImpl_State.Crc = ["Crc",4];
haxe_zip__$InflateImpl_State.Crc.toString = $estr;
haxe_zip__$InflateImpl_State.Crc.__enum__ = haxe_zip__$InflateImpl_State;
haxe_zip__$InflateImpl_State.Dist = ["Dist",5];
haxe_zip__$InflateImpl_State.Dist.toString = $estr;
haxe_zip__$InflateImpl_State.Dist.__enum__ = haxe_zip__$InflateImpl_State;
haxe_zip__$InflateImpl_State.DistOne = ["DistOne",6];
haxe_zip__$InflateImpl_State.DistOne.toString = $estr;
haxe_zip__$InflateImpl_State.DistOne.__enum__ = haxe_zip__$InflateImpl_State;
haxe_zip__$InflateImpl_State.Done = ["Done",7];
haxe_zip__$InflateImpl_State.Done.toString = $estr;
haxe_zip__$InflateImpl_State.Done.__enum__ = haxe_zip__$InflateImpl_State;
var haxe_zip_InflateImpl = function(i,header,crc) {
	if(crc == null) crc = true;
	if(header == null) header = true;
	this["final"] = false;
	this.htools = new haxe_zip_HuffTools();
	this.huffman = this.buildFixedHuffman();
	this.huffdist = null;
	this.len = 0;
	this.dist = 0;
	if(header) this.state = haxe_zip__$InflateImpl_State.Head; else this.state = haxe_zip__$InflateImpl_State.Block;
	this.input = i;
	this.bits = 0;
	this.nbits = 0;
	this.needed = 0;
	this.output = null;
	this.outpos = 0;
	this.lengths = [];
	var _g = 0;
	while(_g < 19) {
		var i1 = _g++;
		this.lengths.push(-1);
	}
	this.window = new haxe_zip__$InflateImpl_Window(crc);
};
$hxClasses["haxe.zip.InflateImpl"] = haxe_zip_InflateImpl;
haxe_zip_InflateImpl.__name__ = ["haxe","zip","InflateImpl"];
haxe_zip_InflateImpl.run = function(i,bufsize) {
	if(bufsize == null) bufsize = 65536;
	var buf = haxe_io_Bytes.alloc(bufsize);
	var output = new haxe_io_BytesBuffer();
	var inflate = new haxe_zip_InflateImpl(i);
	while(true) {
		var len = inflate.readBytes(buf,0,bufsize);
		output.addBytes(buf,0,len);
		if(len < bufsize) break;
	}
	return output.getBytes();
};
haxe_zip_InflateImpl.prototype = {
	buildFixedHuffman: function() {
		if(haxe_zip_InflateImpl.FIXED_HUFFMAN != null) return haxe_zip_InflateImpl.FIXED_HUFFMAN;
		var a = [];
		var _g = 0;
		while(_g < 288) {
			var n = _g++;
			a.push(n <= 143?8:n <= 255?9:n <= 279?7:8);
		}
		haxe_zip_InflateImpl.FIXED_HUFFMAN = this.htools.make(a,0,288,10);
		return haxe_zip_InflateImpl.FIXED_HUFFMAN;
	}
	,readBytes: function(b,pos,len) {
		this.needed = len;
		this.outpos = pos;
		this.output = b;
		if(len > 0) while(this.inflateLoop()) {
		}
		return len - this.needed;
	}
	,getBits: function(n) {
		while(this.nbits < n) {
			this.bits |= this.input.readByte() << this.nbits;
			this.nbits += 8;
		}
		var b = this.bits & (1 << n) - 1;
		this.nbits -= n;
		this.bits >>= n;
		return b;
	}
	,getBit: function() {
		if(this.nbits == 0) {
			this.nbits = 8;
			this.bits = this.input.readByte();
		}
		var b = (this.bits & 1) == 1;
		this.nbits--;
		this.bits >>= 1;
		return b;
	}
	,getRevBits: function(n) {
		if(n == 0) return 0; else if(this.getBit()) return 1 << n - 1 | this.getRevBits(n - 1); else return this.getRevBits(n - 1);
	}
	,resetBits: function() {
		this.bits = 0;
		this.nbits = 0;
	}
	,addBytes: function(b,p,len) {
		this.window.addBytes(b,p,len);
		this.output.blit(this.outpos,b,p,len);
		this.needed -= len;
		this.outpos += len;
	}
	,addByte: function(b) {
		this.window.addByte(b);
		this.output.b[this.outpos] = b & 255;
		this.needed--;
		this.outpos++;
	}
	,addDistOne: function(n) {
		var c = this.window.getLastChar();
		var _g = 0;
		while(_g < n) {
			var i = _g++;
			this.addByte(c);
		}
	}
	,addDist: function(d,len) {
		this.addBytes(this.window.buffer,this.window.pos - d,len);
	}
	,applyHuffman: function(h) {
		switch(h[1]) {
		case 0:
			var n = h[2];
			return n;
		case 1:
			var b = h[3];
			var a = h[2];
			return this.applyHuffman(this.getBit()?b:a);
		case 2:
			var tbl = h[3];
			var n1 = h[2];
			return this.applyHuffman(tbl[this.getBits(n1)]);
		}
	}
	,inflateLengths: function(a,max) {
		var i = 0;
		var prev = 0;
		while(i < max) {
			var n = this.applyHuffman(this.huffman);
			switch(n) {
			case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 9:case 10:case 11:case 12:case 13:case 14:case 15:
				prev = n;
				a[i] = n;
				i++;
				break;
			case 16:
				var end = i + 3 + this.getBits(2);
				if(end > max) throw new js__$Boot_HaxeError("Invalid data");
				while(i < end) {
					a[i] = prev;
					i++;
				}
				break;
			case 17:
				i += 3 + this.getBits(3);
				if(i > max) throw new js__$Boot_HaxeError("Invalid data");
				break;
			case 18:
				i += 11 + this.getBits(7);
				if(i > max) throw new js__$Boot_HaxeError("Invalid data");
				break;
			default:
				throw new js__$Boot_HaxeError("Invalid data");
			}
		}
	}
	,inflateLoop: function() {
		var _g = this.state;
		switch(_g[1]) {
		case 0:
			var cmf = this.input.readByte();
			var cm = cmf & 15;
			var cinfo = cmf >> 4;
			if(cm != 8) throw new js__$Boot_HaxeError("Invalid data");
			var flg = this.input.readByte();
			var fdict = (flg & 32) != 0;
			if(((cmf << 8) + flg) % 31 != 0) throw new js__$Boot_HaxeError("Invalid data");
			if(fdict) throw new js__$Boot_HaxeError("Unsupported dictionary");
			this.state = haxe_zip__$InflateImpl_State.Block;
			return true;
		case 4:
			var calc = this.window.checksum();
			if(calc == null) {
				this.state = haxe_zip__$InflateImpl_State.Done;
				return true;
			}
			var crc = haxe_crypto_Adler32.read(this.input);
			if(!calc.equals(crc)) throw new js__$Boot_HaxeError("Invalid CRC");
			this.state = haxe_zip__$InflateImpl_State.Done;
			return true;
		case 7:
			return false;
		case 1:
			this["final"] = this.getBit();
			var _g1 = this.getBits(2);
			switch(_g1) {
			case 0:
				this.len = this.input.readUInt16();
				var nlen = this.input.readUInt16();
				if(nlen != 65535 - this.len) throw new js__$Boot_HaxeError("Invalid data");
				this.state = haxe_zip__$InflateImpl_State.Flat;
				var r = this.inflateLoop();
				this.resetBits();
				return r;
			case 1:
				this.huffman = this.buildFixedHuffman();
				this.huffdist = null;
				this.state = haxe_zip__$InflateImpl_State.CData;
				return true;
			case 2:
				var hlit = this.getBits(5) + 257;
				var hdist = this.getBits(5) + 1;
				var hclen = this.getBits(4) + 4;
				var _g2 = 0;
				while(_g2 < hclen) {
					var i = _g2++;
					this.lengths[haxe_zip_InflateImpl.CODE_LENGTHS_POS[i]] = this.getBits(3);
				}
				var _g21 = hclen;
				while(_g21 < 19) {
					var i1 = _g21++;
					this.lengths[haxe_zip_InflateImpl.CODE_LENGTHS_POS[i1]] = 0;
				}
				this.huffman = this.htools.make(this.lengths,0,19,8);
				var lengths = [];
				var _g3 = 0;
				var _g22 = hlit + hdist;
				while(_g3 < _g22) {
					var i2 = _g3++;
					lengths.push(0);
				}
				this.inflateLengths(lengths,hlit + hdist);
				this.huffdist = this.htools.make(lengths,hlit,hdist,16);
				this.huffman = this.htools.make(lengths,0,hlit,16);
				this.state = haxe_zip__$InflateImpl_State.CData;
				return true;
			default:
				throw new js__$Boot_HaxeError("Invalid data");
			}
			break;
		case 3:
			var rlen;
			if(this.len < this.needed) rlen = this.len; else rlen = this.needed;
			var bytes = this.input.read(rlen);
			this.len -= rlen;
			this.addBytes(bytes,0,rlen);
			if(this.len == 0) if(this["final"]) this.state = haxe_zip__$InflateImpl_State.Crc; else this.state = haxe_zip__$InflateImpl_State.Block;
			return this.needed > 0;
		case 6:
			var rlen1;
			if(this.len < this.needed) rlen1 = this.len; else rlen1 = this.needed;
			this.addDistOne(rlen1);
			this.len -= rlen1;
			if(this.len == 0) this.state = haxe_zip__$InflateImpl_State.CData;
			return this.needed > 0;
		case 5:
			while(this.len > 0 && this.needed > 0) {
				var rdist;
				if(this.len < this.dist) rdist = this.len; else rdist = this.dist;
				var rlen2;
				if(this.needed < rdist) rlen2 = this.needed; else rlen2 = rdist;
				this.addDist(this.dist,rlen2);
				this.len -= rlen2;
			}
			if(this.len == 0) this.state = haxe_zip__$InflateImpl_State.CData;
			return this.needed > 0;
		case 2:
			var n = this.applyHuffman(this.huffman);
			if(n < 256) {
				this.addByte(n);
				return this.needed > 0;
			} else if(n == 256) {
				if(this["final"]) this.state = haxe_zip__$InflateImpl_State.Crc; else this.state = haxe_zip__$InflateImpl_State.Block;
				return true;
			} else {
				n -= 257;
				var extra_bits = haxe_zip_InflateImpl.LEN_EXTRA_BITS_TBL[n];
				if(extra_bits == -1) throw new js__$Boot_HaxeError("Invalid data");
				this.len = haxe_zip_InflateImpl.LEN_BASE_VAL_TBL[n] + this.getBits(extra_bits);
				var dist_code;
				if(this.huffdist == null) dist_code = this.getRevBits(5); else dist_code = this.applyHuffman(this.huffdist);
				extra_bits = haxe_zip_InflateImpl.DIST_EXTRA_BITS_TBL[dist_code];
				if(extra_bits == -1) throw new js__$Boot_HaxeError("Invalid data");
				this.dist = haxe_zip_InflateImpl.DIST_BASE_VAL_TBL[dist_code] + this.getBits(extra_bits);
				if(this.dist > this.window.available()) throw new js__$Boot_HaxeError("Invalid data");
				if(this.dist == 1) this.state = haxe_zip__$InflateImpl_State.DistOne; else this.state = haxe_zip__$InflateImpl_State.Dist;
				return true;
			}
			break;
		}
	}
	,__class__: haxe_zip_InflateImpl
};
var haxe_zip_Uncompress = function() { };
$hxClasses["haxe.zip.Uncompress"] = haxe_zip_Uncompress;
haxe_zip_Uncompress.__name__ = ["haxe","zip","Uncompress"];
haxe_zip_Uncompress.run = function(src,bufsize) {
	return haxe_zip_InflateImpl.run(new haxe_io_BytesInput(src),bufsize);
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) Error.captureStackTrace(this,js__$Boot_HaxeError);
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = ["js","Boot"];
js_Boot.__unhtml = function(s) {
	return s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
};
js_Boot.__trace = function(v,i) {
	var msg;
	if(i != null) msg = i.fileName + ":" + i.lineNumber + ": "; else msg = "";
	msg += js_Boot.__string_rec(v,"");
	if(i != null && i.customParams != null) {
		var _g = 0;
		var _g1 = i.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			msg += "," + js_Boot.__string_rec(v1,"");
		}
	}
	var d;
	if(typeof(document) != "undefined" && (d = document.getElementById("haxe:trace")) != null) d.innerHTML += js_Boot.__unhtml(msg) + "<br/>"; else if(typeof console != "undefined" && console.log != null) console.log(msg);
};
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) return Array; else {
		var cl = o.__class__;
		if(cl != null) return cl;
		var name = js_Boot.__nativeClassName(o);
		if(name != null) return js_Boot.__resolveNativeClass(name);
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) return "null";
	if(s.length >= 5) return "<...>";
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) t = "object";
	switch(t) {
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) return o[0];
				var str2 = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i1 = _g1++;
					if(i1 != 2) str2 += "," + js_Boot.__string_rec(o[i1],s); else str2 += js_Boot.__string_rec(o[i1],s);
				}
				return str2 + ")";
			}
			var l = o.length;
			var i;
			var str1 = "[";
			s += "\t";
			var _g2 = 0;
			while(_g2 < l) {
				var i2 = _g2++;
				str1 += (i2 > 0?",":"") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") return s2;
		}
		var k = null;
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) str += ", \n";
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "function":
		return "<function>";
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) return false;
	if(cc == cl) return true;
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) return true;
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) return false;
	switch(cl) {
	case Int:
		return (o|0) === o;
	case Float:
		return typeof(o) == "number";
	case Bool:
		return typeof(o) == "boolean";
	case String:
		return typeof(o) == "string";
	case Array:
		return (o instanceof Array) && o.__enum__ == null;
	case Dynamic:
		return true;
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) return true;
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) return true;
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) return true;
			}
		} else return false;
		if(cl == Class && o.__name__ != null) return true;
		if(cl == Enum && o.__ename__ != null) return true;
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) return o; else throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") return null;
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return (Function("return typeof " + name + " != \"undefined\" ? " + name + " : null"))();
};
var js_html__$CanvasElement_CanvasUtil = function() { };
$hxClasses["js.html._CanvasElement.CanvasUtil"] = js_html__$CanvasElement_CanvasUtil;
js_html__$CanvasElement_CanvasUtil.__name__ = ["js","html","_CanvasElement","CanvasUtil"];
js_html__$CanvasElement_CanvasUtil.getContextWebGL = function(canvas,attribs) {
	var _g = 0;
	var _g1 = ["webgl","experimental-webgl"];
	while(_g < _g1.length) {
		var name = _g1[_g];
		++_g;
		var ctx = canvas.getContext(name,attribs);
		if(ctx != null) return ctx;
	}
	return null;
};
var js_html_compat_ArrayBuffer = function(a) {
	if((a instanceof Array) && a.__enum__ == null) {
		this.a = a;
		this.byteLength = a.length;
	} else {
		var len = a;
		this.a = [];
		var _g = 0;
		while(_g < len) {
			var i = _g++;
			this.a[i] = 0;
		}
		this.byteLength = len;
	}
};
$hxClasses["js.html.compat.ArrayBuffer"] = js_html_compat_ArrayBuffer;
js_html_compat_ArrayBuffer.__name__ = ["js","html","compat","ArrayBuffer"];
js_html_compat_ArrayBuffer.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null?null:end - begin);
	var result = new ArrayBuffer(u.byteLength);
	var resultArray = new Uint8Array(result);
	resultArray.set(u);
	return result;
};
js_html_compat_ArrayBuffer.prototype = {
	slice: function(begin,end) {
		return new js_html_compat_ArrayBuffer(this.a.slice(begin,end));
	}
	,__class__: js_html_compat_ArrayBuffer
};
var js_html_compat_DataView = function(buffer,byteOffset,byteLength) {
	this.buf = buffer;
	if(byteOffset == null) this.offset = 0; else this.offset = byteOffset;
	if(byteLength == null) this.length = buffer.byteLength - this.offset; else this.length = byteLength;
	if(this.offset < 0 || this.length < 0 || this.offset + this.length > buffer.byteLength) throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
};
$hxClasses["js.html.compat.DataView"] = js_html_compat_DataView;
js_html_compat_DataView.__name__ = ["js","html","compat","DataView"];
js_html_compat_DataView.prototype = {
	getInt8: function(byteOffset) {
		var v = this.buf.a[this.offset + byteOffset];
		if(v >= 128) return v - 256; else return v;
	}
	,getUint8: function(byteOffset) {
		return this.buf.a[this.offset + byteOffset];
	}
	,getInt16: function(byteOffset,littleEndian) {
		var v = this.getUint16(byteOffset,littleEndian);
		if(v >= 32768) return v - 65536; else return v;
	}
	,getUint16: function(byteOffset,littleEndian) {
		if(littleEndian) return this.buf.a[this.offset + byteOffset] | this.buf.a[this.offset + byteOffset + 1] << 8; else return this.buf.a[this.offset + byteOffset] << 8 | this.buf.a[this.offset + byteOffset + 1];
	}
	,getInt32: function(byteOffset,littleEndian) {
		var p = this.offset + byteOffset;
		var a = this.buf.a[p++];
		var b = this.buf.a[p++];
		var c = this.buf.a[p++];
		var d = this.buf.a[p++];
		if(littleEndian) return a | b << 8 | c << 16 | d << 24; else return d | c << 8 | b << 16 | a << 24;
	}
	,getUint32: function(byteOffset,littleEndian) {
		var v = this.getInt32(byteOffset,littleEndian);
		if(v < 0) return v + 4294967296.; else return v;
	}
	,getFloat32: function(byteOffset,littleEndian) {
		return haxe_io_FPHelper.i32ToFloat(this.getInt32(byteOffset,littleEndian));
	}
	,getFloat64: function(byteOffset,littleEndian) {
		var a = this.getInt32(byteOffset,littleEndian);
		var b = this.getInt32(byteOffset + 4,littleEndian);
		return haxe_io_FPHelper.i64ToDouble(littleEndian?a:b,littleEndian?b:a);
	}
	,setInt8: function(byteOffset,value) {
		if(value < 0) this.buf.a[byteOffset + this.offset] = value + 128 & 255; else this.buf.a[byteOffset + this.offset] = value & 255;
	}
	,setUint8: function(byteOffset,value) {
		this.buf.a[byteOffset + this.offset] = value & 255;
	}
	,setInt16: function(byteOffset,value,littleEndian) {
		this.setUint16(byteOffset,value < 0?value + 65536:value,littleEndian);
	}
	,setUint16: function(byteOffset,value,littleEndian) {
		var p = byteOffset + this.offset;
		if(littleEndian) {
			this.buf.a[p] = value & 255;
			this.buf.a[p++] = value >> 8 & 255;
		} else {
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p] = value & 255;
		}
	}
	,setInt32: function(byteOffset,value,littleEndian) {
		this.setUint32(byteOffset,value,littleEndian);
	}
	,setUint32: function(byteOffset,value,littleEndian) {
		var p = byteOffset + this.offset;
		if(littleEndian) {
			this.buf.a[p++] = value & 255;
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p++] = value >> 16 & 255;
			this.buf.a[p++] = value >>> 24;
		} else {
			this.buf.a[p++] = value >>> 24;
			this.buf.a[p++] = value >> 16 & 255;
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p++] = value & 255;
		}
	}
	,setFloat32: function(byteOffset,value,littleEndian) {
		this.setUint32(byteOffset,haxe_io_FPHelper.floatToI32(value),littleEndian);
	}
	,setFloat64: function(byteOffset,value,littleEndian) {
		var i64 = haxe_io_FPHelper.doubleToI64(value);
		if(littleEndian) {
			this.setUint32(byteOffset,i64.low);
			this.setUint32(byteOffset,i64.high);
		} else {
			this.setUint32(byteOffset,i64.high);
			this.setUint32(byteOffset,i64.low);
		}
	}
	,__class__: js_html_compat_DataView
};
var js_html_compat_Uint8Array = function() { };
$hxClasses["js.html.compat.Uint8Array"] = js_html_compat_Uint8Array;
js_html_compat_Uint8Array.__name__ = ["js","html","compat","Uint8Array"];
js_html_compat_Uint8Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g = 0;
		while(_g < arg1) {
			var i = _g++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) offset = 0;
		if(length == null) length = buffer.byteLength - offset;
		if(offset == 0) arr = buffer.a; else arr = buffer.a.slice(offset,offset + length);
		arr.byteLength = arr.length;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	arr.subarray = js_html_compat_Uint8Array._subarray;
	arr.set = js_html_compat_Uint8Array._set;
	return arr;
};
js_html_compat_Uint8Array._set = function(arg,offset) {
	var t = this;
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > t.byteLength) throw new js__$Boot_HaxeError("set() outside of range");
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			t[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > t.byteLength) throw new js__$Boot_HaxeError("set() outside of range");
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			t[i1 + offset] = a1[i1];
		}
	} else throw new js__$Boot_HaxeError("TODO");
};
js_html_compat_Uint8Array._subarray = function(start,end) {
	var t = this;
	var a = js_html_compat_Uint8Array._new(t.slice(start,end));
	a.byteOffset = start;
	return a;
};
var luxe_Audio = function(_core) {
	this.core = _core;
};
$hxClasses["luxe.Audio"] = luxe_Audio;
luxe_Audio.__name__ = ["luxe","Audio"];
luxe_Audio.prototype = {
	on: function(_event,_handler) {
		this.core.app.audio.on_Int(_event,_handler);
	}
	,off: function(_event,_handler) {
		return this.core.app.audio.off_Int(_event,_handler);
	}
	,emit: function(_event,_handle) {
		this.core.app.audio.emit_Int(_event,_handle);
	}
	,play: function(_source,_volume,_paused) {
		if(_paused == null) _paused = false;
		if(_volume == null) _volume = 1.0;
		return this.core.app.audio.play(_source,_volume,_paused);
	}
	,loop: function(_source,_volume,_paused) {
		if(_paused == null) _paused = false;
		if(_volume == null) _volume = 1.0;
		return this.core.app.audio.loop(_source,_volume,_paused);
	}
	,pause: function(_handle) {
		this.core.app.audio.pause(_handle);
	}
	,unpause: function(_handle) {
		this.core.app.audio.unpause(_handle);
	}
	,stop: function(_handle) {
		this.core.app.audio.stop(_handle);
	}
	,volume: function(_handle,_volume) {
		this.core.app.audio.volume(_handle,_volume);
	}
	,pan: function(_handle,_pan) {
		this.core.app.audio.pan(_handle,_pan);
	}
	,pitch: function(_handle,_pitch) {
		this.core.app.audio.pitch(_handle,_pitch);
	}
	,position: function(_handle,_position) {
		this.core.app.audio.position(_handle,_position);
	}
	,state_of: function(_handle) {
		return this.core.app.audio.state_of(_handle);
	}
	,loop_of: function(_handle) {
		return this.core.app.audio.loop_of(_handle);
	}
	,instance_of: function(_handle) {
		return this.core.app.audio.instance_of(_handle);
	}
	,volume_of: function(_handle) {
		return this.core.app.audio.volume_of(_handle);
	}
	,pan_of: function(_handle) {
		return this.core.app.audio.pan_of(_handle);
	}
	,pitch_of: function(_handle) {
		return this.core.app.audio.pitch_of(_handle);
	}
	,position_of: function(_handle) {
		return this.core.app.audio.position_of(_handle);
	}
	,suspend: function() {
		this.core.app.audio.suspend();
	}
	,resume: function() {
		this.core.app.audio.resume();
	}
	,get_active: function() {
		return this.core.app.audio.active;
	}
	,set_active: function(_val) {
		return this.core.app.audio.active = _val;
	}
	,init: function() {
		null;
	}
	,destroy: function() {
		null;
	}
	,process: function() {
	}
	,__class__: luxe_Audio
	,__properties__: {set_active:"set_active",get_active:"get_active"}
};
var luxe_SizeMode = $hxClasses["luxe.SizeMode"] = { __ename__ : ["luxe","SizeMode"], __constructs__ : ["fit","cover","contain"] };
luxe_SizeMode.fit = ["fit",0];
luxe_SizeMode.fit.toString = $estr;
luxe_SizeMode.fit.__enum__ = luxe_SizeMode;
luxe_SizeMode.cover = ["cover",1];
luxe_SizeMode.cover.toString = $estr;
luxe_SizeMode.cover.__enum__ = luxe_SizeMode;
luxe_SizeMode.contain = ["contain",2];
luxe_SizeMode.contain.toString = $estr;
luxe_SizeMode.contain.__enum__ = luxe_SizeMode;
var luxe_Camera = function(_options) {
	this._connected = false;
	this.minimum_shake = 0.1;
	this.shaking = false;
	this._size_factor = new phoenix_Vector();
	this._rotation_radian = new phoenix_Vector();
	this._rotation_cache = new phoenix_Quaternion();
	this.set_size_mode(luxe_SizeMode.fit);
	var _name = "untitled camera";
	if(_options != null) {
		if(_options.name != null) {
			_name = _options.name;
			_options.camera_name = "" + _name + ".view";
		}
	} else _options = { no_scene : false};
	if(_options.view == null) _options.view = new phoenix_Camera(_options);
	this.view = _options.view;
	luxe_Entity.call(this,{ name : _name, no_scene : _options.no_scene});
};
$hxClasses["luxe.Camera"] = luxe_Camera;
luxe_Camera.__name__ = ["luxe","Camera"];
luxe_Camera.__super__ = luxe_Entity;
luxe_Camera.prototype = $extend(luxe_Entity.prototype,{
	get_viewport: function() {
		return this.view.viewport;
	}
	,set_viewport: function(_v) {
		return this.view.set_viewport(_v);
	}
	,get_center: function() {
		return this.view.center;
	}
	,set_center: function(_c) {
		this.set_pos(new phoenix_Vector(_c.x - this.get_viewport().w / 2,_c.y - this.get_viewport().h / 2));
		return this.view.set_center(_c);
	}
	,get_minimum_zoom: function() {
		return this.view.minimum_zoom;
	}
	,set_minimum_zoom: function(_m) {
		return this.view.minimum_zoom = _m;
	}
	,get_zoom: function() {
		return this.view.zoom;
	}
	,set_zoom: function(_z) {
		this.view.set_zoom(_z);
		if(this.get_size() != null) {
			var _g = this.view.transform.local.scale;
			_g.set_x(_g.x * (1 / this._size_factor.x));
			var _g1 = this.view.transform.local.scale;
			_g1.set_y(_g1.y * (1 / this._size_factor.y));
		}
		return this.view.zoom;
	}
	,get_size: function() {
		return this.size;
	}
	,get_size_mode: function() {
		return this.size_mode;
	}
	,set_size_mode: function(_m) {
		if(this.get_size_mode() != null) {
			this.size_mode = _m;
			if(this.get_size() != null) this.set_size(this.get_size());
		}
		return this.size_mode = _m;
	}
	,_onwindowsized: function(_event) {
		if(this.get_size() != null) {
			this.set_viewport(new phoenix_Rectangle(this.get_viewport().x,this.get_viewport().y,_event.x,_event.y));
			this.set_size(this.get_size());
		}
	}
	,set_size: function(_size) {
		if(_size == null) {
			this.set_center(new phoenix_Vector(this.get_viewport().w / 2,this.get_viewport().h / 2));
			this.size = null;
			this._size_factor.set_x(this._size_factor.set_y(1));
			this.set_zoom(this.get_zoom());
			this._connected = false;
			Luxe.off(31,$bind(this,this._onwindowsized));
			return this.get_size();
		}
		if(!this._connected) {
			Luxe.on(31,$bind(this,this._onwindowsized));
			this._connected = true;
		}
		var _ratio_x = this.get_viewport().w / _size.x;
		var _ratio_y = this.get_viewport().h / _size.y;
		var _shortest = Math.max(_ratio_x,_ratio_y);
		var _longest = Math.min(_ratio_x,_ratio_y);
		var _g = this.get_size_mode();
		switch(_g[1]) {
		case 0:
			_ratio_x = _ratio_y = _longest;
			break;
		case 1:
			_ratio_x = _ratio_y = _shortest;
			break;
		case 2:
			break;
		}
		this._size_factor.set_x(_ratio_x);
		this._size_factor.set_y(_ratio_y);
		this.view.transform.local.scale.set_x(1 / (this._size_factor.x * this.get_zoom()));
		this.view.transform.local.scale.set_y(1 / (this._size_factor.y * this.get_zoom()));
		this.set_center(new phoenix_Vector(_size.x / 2,_size.y / 2));
		return this.size = new phoenix_Vector(_size.x,_size.y,_size.z,_size.w);
	}
	,focus: function(_p,_t,_oncomplete) {
		if(_t == null) _t = 0.6;
		var _g = this;
		luxe_tween_Actuate.tween(this.view.center,_t,{ x : _p.x, y : _p.y},true).onComplete(_oncomplete).ease(luxe_tween_easing_Quad.get_easeInOut()).onUpdate(function() {
			var _this = _g.get_transform().get_pos();
			var _x = _g.view.pos.x;
			var _y = _g.view.pos.y;
			var prev = _this.ignore_listeners;
			_this.ignore_listeners = true;
			_this.x = _x;
			if(_this._construct) _this.x; else {
				if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_x);
				_this.x;
			}
			_this.y = _y;
			if(_this._construct) _this.y; else {
				if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_y);
				_this.y;
			}
			_this.ignore_listeners = prev;
			if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_this.x);
			if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_this.y);
			_this;
		});
	}
	,screen_point_to_world: function(_vector) {
		return this.view.screen_point_to_world(_vector);
	}
	,world_point_to_screen: function(_vector,_viewport) {
		return this.view.world_point_to_screen(_vector,_viewport);
	}
	,set_pos_from_transform: function(_pos) {
		var _vw = this.view.viewport.w;
		var _vh = this.view.viewport.h;
		var _hvw = _vw / 2;
		var _hvh = _vh / 2;
		var _px = _pos.x;
		var _py = _pos.y;
		if(this.bounds != null) {
			if(_px < this.bounds.x) _px = this.bounds.x;
			if(_py < this.bounds.y) _py = this.bounds.y;
			if(_px + _hvw > this.bounds.w - _vw) _px = this.bounds.w - _vw - _hvw;
			if(_py + _hvh > this.bounds.h - _vh) _py = this.bounds.h - _vh - _hvh;
		}
		var _prev = _pos.ignore_listeners;
		_pos.ignore_listeners = true;
		var prev = _pos.ignore_listeners;
		_pos.ignore_listeners = true;
		_pos.x = _px;
		if(_pos._construct) _pos.x; else {
			if(_pos.listen_x != null && !_pos.ignore_listeners) _pos.listen_x(_px);
			_pos.x;
		}
		_pos.y = _py;
		if(_pos._construct) _pos.y; else {
			if(_pos.listen_y != null && !_pos.ignore_listeners) _pos.listen_y(_py);
			_pos.y;
		}
		_pos.ignore_listeners = prev;
		if(_pos.listen_x != null && !_pos.ignore_listeners) _pos.listen_x(_pos.x);
		if(_pos.listen_y != null && !_pos.ignore_listeners) _pos.listen_y(_pos.y);
		_pos;
		_pos.ignore_listeners = _prev;
		luxe_Entity.prototype.set_pos_from_transform.call(this,_pos);
		this.view.set_pos((function($this) {
			var $r;
			var _this = $this.view.pos;
			var _x = _pos.x;
			var _y = _pos.y;
			var _z = _pos.z;
			var prev1 = _this.ignore_listeners;
			_this.ignore_listeners = true;
			{
				_this.x = _x;
				if(_this._construct) _this.x; else {
					if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_x);
					_this.x;
				}
			}
			{
				_this.y = _y;
				if(_this._construct) _this.y; else {
					if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_y);
					_this.y;
				}
			}
			{
				_this.z = _z;
				if(_this._construct) _this.z; else {
					if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_z);
					_this.z;
				}
			}
			_this.ignore_listeners = prev1;
			if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_this.x);
			if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_this.y);
			if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_this.z);
			$r = _this;
			return $r;
		}(this)));
	}
	,set_rotation_from_transform: function(_rotation) {
		luxe_Entity.prototype.set_rotation_from_transform.call(this,_rotation);
		if(this.view != null) this.view.transform.local.set_rotation(_rotation);
	}
	,set_scale_from_transform: function(_scale) {
		luxe_Entity.prototype.set_scale_from_transform.call(this,_scale);
		if(this.view != null) this.view.transform.local.set_scale(_scale);
	}
	,shake: function(_amount) {
		this.shake_amount = _amount;
		this.shaking = true;
	}
	,update: function(dt) {
		if(this.shaking) {
			this.shake_vector = Luxe.utils.geometry.random_point_in_unit_circle();
			var _g = this.shake_vector;
			_g.set_x(_g.x * this.shake_amount);
			var _g1 = this.shake_vector;
			_g1.set_y(_g1.y * this.shake_amount);
			var _g2 = this.shake_vector;
			_g2.set_z(_g2.z * this.shake_amount);
			this.shake_amount *= 0.9;
			if(this.shake_amount <= this.minimum_shake) {
				this.shake_amount = 0;
				this.shaking = false;
			}
			this.view.set_pos((function($this) {
				var $r;
				var _this = $this.view.pos;
				var _x = $this.get_transform().get_pos().x + $this.shake_vector.x;
				var _y = $this.get_transform().get_pos().y + $this.shake_vector.y;
				var _z = $this.get_transform().get_pos().z + $this.shake_vector.z;
				var prev = _this.ignore_listeners;
				_this.ignore_listeners = true;
				{
					_this.x = _x;
					if(_this._construct) _this.x; else {
						if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_x);
						_this.x;
					}
				}
				{
					_this.y = _y;
					if(_this._construct) _this.y; else {
						if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_y);
						_this.y;
					}
				}
				{
					_this.z = _z;
					if(_this._construct) _this.z; else {
						if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_z);
						_this.z;
					}
				}
				_this.ignore_listeners = prev;
				if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_this.x);
				if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_this.y);
				if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_this.z);
				$r = _this;
				return $r;
			}(this)));
		}
	}
	,init: function() {
		luxe_Entity.prototype.init.call(this);
	}
	,ondestroy: function() {
		luxe_Entity.prototype.ondestroy.call(this);
	}
	,__class__: luxe_Camera
	,__properties__: $extend(luxe_Entity.prototype.__properties__,{set_size_mode:"set_size_mode",get_size_mode:"get_size_mode",set_size:"set_size",get_size:"get_size",set_minimum_zoom:"set_minimum_zoom",get_minimum_zoom:"get_minimum_zoom",set_zoom:"set_zoom",get_zoom:"get_zoom",set_center:"set_center",get_center:"get_center",set_viewport:"set_viewport",get_viewport:"get_viewport"})
});
var luxe_Debug = function(_app) {
	this.last_cursor_grab = false;
	this.profiling = false;
	this.profile_path = "profile.txt";
	this.last_view_index = 0;
	this.current_view_index = 0;
	this.dt_average_count = 0;
	this.dt_average_span = 60;
	this.dt_average_accum = 0;
	this.dt_average = 0;
	this.visible = false;
	this.app = _app;
};
$hxClasses["luxe.Debug"] = luxe_Debug;
luxe_Debug.__name__ = ["luxe","Debug"];
luxe_Debug.internal_trace = function(_value,_info) {
	if(!(luxe_Debug.tracing == false)) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("tracing == false" + (" ( " + "luxe.Debug: calling trace from a trace callback is an infinite loop!" + " )")));
	luxe_Debug.tracing = true;
	var _out = "" + Std.string(_value);
	if(_info != null && _info.customParams != null) _out += " " + _info.customParams.join(" ");
	console.log("" + _info.fileName + "::" + StringTools.rpad(_info.lineNumber == null?"null":"" + _info.lineNumber," ",4) + " " + _out);
	if(!luxe_Debug.shut_down) {
		var _g = 0;
		var _g1 = luxe_Debug.trace_callbacks;
		while(_g < _g1.length) {
			var _callback = _g1[_g];
			++_g;
			_callback(_value,_info);
		}
	}
	luxe_Debug.tracing = false;
};
luxe_Debug.prototype = {
	get_view: function(_name) {
		var _g = 0;
		var _g1 = luxe_Debug.views;
		while(_g < _g1.length) {
			var view = _g1[_g];
			++_g;
			if(view.get_name() == _name) return view;
		}
		return null;
	}
	,start: function(_name,_max) {
		if(!this.app.headless) luxe_debug_ProfilerDebugView.start(_name,_max);
	}
	,end: function(_name) {
		if(!this.app.headless) luxe_debug_ProfilerDebugView.end(_name);
	}
	,init: function() {
		luxe_Debug.views = [];
		luxe_Debug.views.push(new luxe_debug_TraceDebugView(this));
		luxe_Debug.views.push(new luxe_debug_StatsDebugView(this));
		luxe_Debug.views.push(new luxe_debug_ProfilerDebugView(this));
		luxe_Debug.views.push(new luxe_debug_SceneDebugView(this));
		this.current_view = luxe_Debug.views[0];
		haxe_Log.trace = luxe_Debug.internal_trace;
		null;
	}
	,create_debug_console: function() {
		var _g = this;
		this.app.emitter.on(13,$bind(this,this.keyup));
		this.app.emitter.on(12,$bind(this,this.keydown));
		this.app.emitter.on(18,$bind(this,this.mouseup));
		this.app.emitter.on(17,$bind(this,this.mousedown));
		this.app.emitter.on(19,$bind(this,this.mousemove));
		this.app.emitter.on(20,$bind(this,this.mousewheel));
		this.app.emitter.on(22,$bind(this,this.touchup));
		this.app.emitter.on(21,$bind(this,this.touchdown));
		this.app.emitter.on(23,$bind(this,this.touchmove));
		this.batcher = new phoenix_Batcher(this.app.renderer,"debug_batcher",Math.floor(Math.pow(2,20)));
		this.batcher.set_show_stats(0);
		this.view = new phoenix_Camera({ camera_name : "debug_batcher_camera"});
		this.batcher.view = this.view;
		this.batcher.set_layer(999);
		this.overlay = new phoenix_geometry_QuadGeometry({ id : "debug.overlay", x : 0, y : 0, w : this.app.screen.get_w(), h : this.app.screen.get_h(), color : new phoenix_Color(0,0,0,0.8), depth : 999, visible : false, batcher : this.batcher});
		this.overlay.set_locked(true);
		this.padding = new phoenix_Vector(this.app.screen.get_w() * 0.05,this.app.screen.get_h() * 0.05);
		this.inspector = new luxe_debug_Inspector({ pos : new phoenix_Vector(this.padding.x,this.padding.y), size : new phoenix_Vector(this.app.screen.get_w() - this.padding.x * 2,this.app.screen.get_h() - this.padding.y * 2), batcher : this.batcher});
		this.inspector.onrefresh = $bind(this,this.refresh);
		this.app.emitter.on(31,function(_event) {
			var _w = _event.x;
			var _h = _event.y;
			var _this = _g.padding;
			var _x = _w * 0.05;
			var _y = _h * 0.05;
			var prev = _this.ignore_listeners;
			_this.ignore_listeners = true;
			_this.x = _x;
			if(_this._construct) _this.x; else {
				if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_x);
				_this.x;
			}
			_this.y = _y;
			if(_this._construct) _this.y; else {
				if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_y);
				_this.y;
			}
			_this.ignore_listeners = prev;
			if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_this.x);
			if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_this.y);
			_this;
			_g.overlay.resize_xy(_w,_h);
			_g.view.set_viewport(new phoenix_Rectangle(0,0,_w,_h));
			_g.inspector.set_size(new phoenix_Vector(_w - _g.padding.x * 2,_h - _g.padding.y * 2));
			_g.inspector.set_pos(new phoenix_Vector(_g.padding.x,_g.padding.y));
			var _g1 = 0;
			var _g2 = luxe_Debug.views;
			while(_g1 < _g2.length) {
				var view = _g2[_g1];
				++_g1;
				view.onwindowsized(_event);
			}
		});
		var _g3 = 0;
		var _g11 = luxe_Debug.views;
		while(_g3 < _g11.length) {
			var view1 = _g11[_g3];
			++_g3;
			view1.create();
		}
	}
	,render: function() {
		if(this.visible) {
			this.start(luxe_Debug.debug_batch_tag);
			this.batcher.draw(null);
			this.end(luxe_Debug.debug_batch_tag);
		}
	}
	,mouseup: function(e) {
		if(this.visible) {
			var _g = 0;
			var _g1 = luxe_Debug.views;
			while(_g < _g1.length) {
				var view = _g1[_g];
				++_g;
				view.onmouseup(e);
			}
		}
	}
	,mousedown: function(e) {
		if(this.visible) {
			var _g = 0;
			var _g1 = luxe_Debug.views;
			while(_g < _g1.length) {
				var view = _g1[_g];
				++_g;
				view.onmousedown(e);
			}
		}
	}
	,mousemove: function(e) {
		if(this.visible) {
			var _g = 0;
			var _g1 = luxe_Debug.views;
			while(_g < _g1.length) {
				var view = _g1[_g];
				++_g;
				view.onmousemove(e);
			}
		}
	}
	,mousewheel: function(e) {
		if(this.visible) {
			var _g = 0;
			var _g1 = luxe_Debug.views;
			while(_g < _g1.length) {
				var view = _g1[_g];
				++_g;
				view.onmousewheel(e);
			}
		}
	}
	,touchup: function(e) {
		if(this.visible) {
			var _g = 0;
			var _g1 = luxe_Debug.views;
			while(_g < _g1.length) {
				var view = _g1[_g];
				++_g;
				view.ontouchup(e);
			}
		}
	}
	,touchdown: function(e) {
		if(this.visible) {
			var _g = 0;
			var _g1 = luxe_Debug.views;
			while(_g < _g1.length) {
				var view = _g1[_g];
				++_g;
				view.ontouchdown(e);
			}
		}
	}
	,touchmove: function(e) {
		if(this.visible) {
			var _g = 0;
			var _g1 = luxe_Debug.views;
			while(_g < _g1.length) {
				var view = _g1[_g];
				++_g;
				view.ontouchmove(e);
			}
		}
	}
	,keyup: function(e) {
		if(this.visible) {
			var _g = 0;
			var _g1 = luxe_Debug.views;
			while(_g < _g1.length) {
				var view = _g1[_g];
				++_g;
				view.onkeyup(e);
			}
		}
	}
	,keydown: function(e) {
		if(e.scancode == 53) this.set_visible(!this.visible);
		if(this.visible) {
			if(e.keycode == 49 && this.visible) this.switch_view();
			var _g = 0;
			var _g1 = luxe_Debug.views;
			while(_g < _g1.length) {
				var view = _g1[_g];
				++_g;
				view.onkeydown(e);
			}
		}
	}
	,refresh: function() {
		if(this.current_view != null) this.current_view.refresh();
	}
	,switch_view: function() {
		this.last_view_index = this.current_view_index;
		this.current_view_index++;
		if(this.current_view_index > luxe_Debug.views.length - 1) this.current_view_index = 0;
		luxe_Debug.views[this.last_view_index].hide();
		this.current_view = luxe_Debug.views[this.current_view_index];
		this.current_view.show();
	}
	,set_visible: function(_value) {
		this.visible = _value;
		this.overlay.set_visible(this.visible);
		if(this.visible) {
			this.last_cursor_grab = this.app.screen.cursor.get_grab();
			this.app.screen.cursor.set_grab(false);
			this.current_view.show();
			this.inspector.show();
		} else {
			if(this.last_cursor_grab != false) this.app.screen.cursor.set_grab(this.last_cursor_grab);
			this.current_view.hide();
			this.inspector.hide();
		}
		return this.visible;
	}
	,destroy: function() {
		this.app.emitter.off(13,$bind(this,this.keyup));
		this.app.emitter.off(12,$bind(this,this.keydown));
		this.app.emitter.off(18,$bind(this,this.mouseup));
		this.app.emitter.off(17,$bind(this,this.mousedown));
		this.app.emitter.off(19,$bind(this,this.mousemove));
		this.app.emitter.off(20,$bind(this,this.mousewheel));
		luxe_Debug.shut_down = true;
	}
	,process: function() {
		this.dt_average_accum += this.app.frame_delta;
		this.dt_average_count++;
		if(this.dt_average_count == this.dt_average_span - 1) {
			this.dt_average = this.dt_average_accum / this.dt_average_span;
			this.dt_average_accum = this.dt_average;
			this.dt_average_count = 0;
		}
		if(!this.visible) return;
		this.inspector.title.set_text("[" + this.current_view.get_name() + "] / " + Math.round(1 / this.dt_average) + " / " + luxe_utils_Maths.fixed(this.app.frame_delta,5) + " / " + luxe_utils_Maths.fixed(this.dt_average,5));
		var _g = 0;
		var _g1 = luxe_Debug.views;
		while(_g < _g1.length) {
			var view = _g1[_g];
			++_g;
			view.process();
		}
	}
	,__class__: luxe_Debug
	,__properties__: {set_visible:"set_visible"}
};
var luxe_Draw = function(_core) {
	this.core = _core;
};
$hxClasses["luxe.Draw"] = luxe_Draw;
luxe_Draw.__name__ = ["luxe","Draw"];
luxe_Draw.prototype = {
	line: function(options) {
		if(options.p0 == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("options.p0 was null" + (" ( " + "draw.line requires p0:Vector, and p1:Vector" + " )")));
		if(options.p1 == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("options.p1 was null" + (" ( " + "draw.line requires p0:Vector, and p1:Vector" + " )")));
		if(options.id == null) options.id = "line.geometry";
		options.id;
		if(options.batcher == null) options.batcher = Luxe.renderer.batcher;
		options.batcher;
		return new phoenix_geometry_LineGeometry(options);
	}
	,rectangle: function(options) {
		if(options.id == null) options.id = "rectangle.geometry";
		options.id;
		if(options.batcher == null) options.batcher = Luxe.renderer.batcher;
		options.batcher;
		return new phoenix_geometry_RectangleGeometry(options);
	}
	,box: function(options) {
		if(options.id == null) options.id = "quad.geometry";
		options.id;
		if(options.batcher == null) options.batcher = Luxe.renderer.batcher;
		options.batcher;
		return new phoenix_geometry_QuadGeometry(options);
	}
	,ring: function(options) {
		if(options.id == null) options.id = "ring.geometry";
		options.id;
		if(options.batcher == null) options.batcher = Luxe.renderer.batcher;
		options.batcher;
		return new phoenix_geometry_RingGeometry(options);
	}
	,circle: function(options) {
		if(options.id == null) options.id = "circle.geometry";
		options.id;
		if(options.batcher == null) options.batcher = Luxe.renderer.batcher;
		options.batcher;
		return new phoenix_geometry_CircleGeometry(options);
	}
	,arc: function(options) {
		if(options.id == null) options.id = "arc.geometry";
		options.id;
		if(options.batcher == null) options.batcher = Luxe.renderer.batcher;
		options.batcher;
		return new phoenix_geometry_ArcGeometry(options);
	}
	,ngon: function(options) {
		if(options.id == null) options.id = "ngon.geometry";
		options.id;
		if(options.batcher == null) options.batcher = Luxe.renderer.batcher;
		options.batcher;
		var _sides = 3;
		var _radius = 64;
		var _solid = false;
		var _x = 0;
		var _y = 0;
		var _angle = 0;
		if(options.sides != null) _sides = options.sides;
		if(options.r != null) _radius = options.r;
		if(options.x != null) _x = options.x;
		if(options.y != null) _y = options.y;
		if(options.angle != null) _angle = options.angle;
		if(options.solid != null) _solid = options.solid;
		if(!_solid) options.primitive_type = 1; else options.primitive_type = 6;
		var _geometry = new phoenix_geometry_Geometry(options);
		var _two_pi = 2 * Math.PI;
		var _sides_over_pi = Math.PI / _sides;
		var _sides_over_twopi = _two_pi / _sides;
		var _angle_rad = _angle * 0.017453292519943278;
		var _color = options.color;
		if(_solid) _geometry.add(new phoenix_geometry_Vertex(new phoenix_Vector(_x,_y),_color));
		var _count;
		if(_solid == false) _count = _sides; else _count = _sides + 1;
		var _points = [];
		var _g = 0;
		while(_g < _count) {
			var i = _g++;
			var __x = _radius * Math.sin(_angle_rad + _sides_over_pi + i * _sides_over_twopi);
			var __y = _radius * Math.cos(_angle_rad + _sides_over_pi + i * _sides_over_twopi);
			var __pos = new phoenix_Vector(_x + __x,_y + __y,0);
			_geometry.add(new phoenix_geometry_Vertex(__pos,_color));
			if(!_solid) {
				if(i > 0) {
					var _last = _points[i - 1];
					_geometry.add(new phoenix_geometry_Vertex(__pos,_color));
				}
			}
			_points.push(__pos);
		}
		if(!_solid) _geometry.add(new phoenix_geometry_Vertex(_points[0],_color));
		return _geometry;
	}
	,poly: function(options) {
		if(options.id == null) options.id = "poly.geometry";
		options.id;
		if(options.batcher == null) options.batcher = Luxe.renderer.batcher;
		options.batcher;
		if(options.solid == null) options.solid = true;
		options.solid;
		if(options.close == null) options.close = false;
		options.close;
		var _default_col = null;
		var _has_colors = options.colors != null;
		if(!_has_colors) {
			if(options.color == null) options.color = new phoenix_Color();
			_default_col = options.color;
		}
		if(options.solid) {
			if(options.primitive_type == null) options.primitive_type = 6;
			options.primitive_type;
			var _geometry = new phoenix_geometry_Geometry(options);
			var _idx = 0;
			var _l = options.points.length;
			var _g = 0;
			var _g1 = options.points;
			while(_g < _g1.length) {
				var _point = _g1[_g];
				++_g;
				var _color;
				if(_has_colors) _color = options.colors[_idx]; else _color = _default_col;
				_geometry.add(new phoenix_geometry_Vertex(_point,_color));
				++_idx;
			}
			return _geometry;
		} else {
			if(options.primitive_type == null) options.primitive_type = 1;
			options.primitive_type;
			var _geometry1 = new phoenix_geometry_Geometry(options);
			var _idx1 = 0;
			var _l1 = options.points.length;
			var _g2 = 0;
			var _g11 = options.points;
			while(_g2 < _g11.length) {
				var _point1 = _g11[_g2];
				++_g2;
				var _color1;
				if(_has_colors) _color1 = options.colors[_idx1]; else _color1 = _default_col;
				_geometry1.add(new phoenix_geometry_Vertex(_point1,_color1));
				if(_idx1 < _l1 - 2) {
					var _color_next;
					if(_has_colors) _color_next = options.colors[_idx1 + 1]; else _color_next = _default_col;
					_geometry1.add(new phoenix_geometry_Vertex(options.points[_idx1 + 1],_color_next));
				}
				++_idx1;
			}
			if(options.close) {
				var _last = options.points.length - 1;
				var _color11;
				if(_has_colors) _color11 = options.colors[0]; else _color11 = _default_col;
				var _color2;
				if(_has_colors) _color2 = options.colors[_last]; else _color2 = _default_col;
				_geometry1.add(new phoenix_geometry_Vertex(options.points[_last],_color11));
				_geometry1.add(new phoenix_geometry_Vertex(options.points[0],_color2));
			}
			return _geometry1;
		}
	}
	,texture: function(options) {
		if(options.id == null) options.id = "texture.geometry";
		options.id;
		if(options.batcher == null) options.batcher = Luxe.renderer.batcher;
		options.batcher;
		var _x = 0;
		var _y = 0;
		var _w = 0;
		var _h = 0;
		var _tw = 64;
		var _th = 64;
		if(options.texture != null) {
			_tw = options.texture.width;
			_th = options.texture.height;
			if(options.size == null) {
				_w = _tw;
				_h = _th;
			}
		}
		if(options.pos != null) {
			_x = options.pos.x;
			_y = options.pos.y;
		}
		if(options.size != null) {
			_w = options.size.x;
			_h = options.size.y;
		}
		if(options.x == null) options.x = _x;
		options.x;
		if(options.y == null) options.y = _y;
		options.y;
		if(options.w == null) options.w = _w;
		options.w;
		if(options.h == null) options.h = _h;
		options.h;
		var _quad = new phoenix_geometry_QuadGeometry(options);
		var _ux = 0;
		var _uy = 0;
		var _uw = _tw;
		var _uh = _th;
		if(options.uv != null) {
			_ux = options.uv.x;
			_uy = options.uv.y;
			_uw = options.uv.w;
			_uh = options.uv.h;
		}
		_quad.uv(new phoenix_Rectangle(_ux,_uy,_uw,_uh));
		return _quad;
	}
	,text: function(options) {
		if(options.batcher == null) options.batcher = Luxe.renderer.batcher;
		options.batcher;
		return new phoenix_geometry_TextGeometry(options);
	}
	,__class__: luxe_Draw
};
var snow_App = function() {
	this.next_tick = 0;
	this.fixed_overflow = 0.0;
	this.fixed_frame_time = 0.0167;
	this.fixed_timestep = false;
	this.fixed_alpha = 1.0;
	this.sim_time = 0;
	this.sim_delta = 0.016666666666666666;
	this.frame_max_delta = 0.25;
	this.frame_delta = 0.016666666666666666;
	this.frame_start_prev = 0.0;
	this.frame_start = 0.016666666666666666;
	this.tick_delta = 0.016666666666666666;
	this.tick_start_prev = 0.0;
	this.tick_start = 0.016666666666666666;
	this.update_rate = 0;
	this.fixed_delta = 0;
	this.timescale = 1;
};
$hxClasses["snow.App"] = snow_App;
snow_App.__name__ = ["snow","App"];
snow_App.prototype = {
	config: function(_config) {
		return _config;
	}
	,ready: function() {
	}
	,update: function(dt) {
	}
	,tick: function(dt) {
	}
	,ondestroy: function() {
	}
	,onevent: function(event) {
	}
	,ontickstart: function() {
	}
	,ontickend: function() {
	}
	,onkeydown: function(keycode,scancode,repeat,mod,timestamp,window_id) {
	}
	,onkeyup: function(keycode,scancode,repeat,mod,timestamp,window_id) {
	}
	,ontextinput: function(text,start,length,type,timestamp,window_id) {
	}
	,onmousedown: function(x,y,button,timestamp,window_id) {
	}
	,onmouseup: function(x,y,button,timestamp,window_id) {
	}
	,onmousewheel: function(x,y,timestamp,window_id) {
	}
	,onmousemove: function(x,y,xrel,yrel,timestamp,window_id) {
	}
	,ontouchdown: function(x,y,dx,dy,touch_id,timestamp) {
	}
	,ontouchup: function(x,y,dx,dy,touch_id,timestamp) {
	}
	,ontouchmove: function(x,y,dx,dy,touch_id,timestamp) {
	}
	,ongamepadaxis: function(gamepad,axis,value,timestamp) {
	}
	,ongamepaddown: function(gamepad,button,value,timestamp) {
	}
	,ongamepadup: function(gamepad,button,value,timestamp) {
	}
	,ongamepaddevice: function(gamepad,id,type,timestamp) {
	}
	,internal_init: function() {
		this.sim_time = 0;
		this.fixed_frame_time = 0.016666666666666666;
		this.tick_start = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
		this.tick_start_prev = this.tick_start - this.fixed_frame_time;
		this.tick_delta = this.fixed_frame_time;
		this.frame_start = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
		this.frame_start_prev = this.frame_start - this.fixed_frame_time;
		this.frame_delta = this.sim_delta = this.fixed_frame_time;
	}
	,internal_tick: function() {
		this.ontickstart();
		this.tick_start = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
		this.tick_delta = this.tick_start - this.tick_start_prev;
		this.tick_start_prev = this.tick_start;
		if(this.fixed_timestep) this.internal_tick_fixed_timestep(); else this.internal_tick_default();
		this.tick(this.tick_delta);
		this.ontickend();
	}
	,internal_tick_default: function() {
		if(this.update_rate != 0) {
			if(window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start < this.next_tick) return;
			this.next_tick = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start + this.update_rate;
		}
		this.frame_start = this.tick_start;
		this.frame_delta = this.frame_start - this.frame_start_prev;
		this.frame_start_prev = this.frame_start;
		if(this.frame_delta > this.frame_max_delta) this.frame_delta = this.frame_max_delta;
		var _used_delta;
		if(this.fixed_delta == 0) _used_delta = this.frame_delta; else _used_delta = this.fixed_delta;
		_used_delta *= this.timescale;
		this.sim_delta = _used_delta;
		this.sim_time += _used_delta;
		this.update(_used_delta);
	}
	,internal_tick_fixed_timestep: function() {
		this.frame_start = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
		this.frame_delta = this.frame_start - this.frame_start_prev;
		this.frame_start_prev = this.frame_start;
		this.sim_delta = this.frame_delta * this.timescale;
		if(this.sim_delta > this.frame_max_delta) this.sim_delta = this.frame_max_delta;
		this.fixed_overflow += this.sim_delta;
		var _slice = this.fixed_frame_time * this.timescale;
		while(this.fixed_overflow >= this.fixed_frame_time) {
			this.update(_slice);
			this.sim_time += _slice;
			this.fixed_overflow -= _slice;
		}
		this.fixed_alpha = this.fixed_overflow / this.fixed_frame_time;
	}
	,__class__: snow_App
};
var luxe_Engine = function(_game) {
	this.pixel_scale = 1;
	this.running = false;
	this.auto_render = true;
	this.headless = false;
	this.inited = false;
	this.has_shutdown = false;
	this.shutting_down = false;
	this.build = "+bce7125f67";
	this.version = "dev";
	snow_App.call(this);
	this.game = _game;
	this.emitter = new luxe_Emitter();
	Luxe.core = this;
	Luxe.utils = new luxe_utils_Utils(this);
};
$hxClasses["luxe.Engine"] = luxe_Engine;
luxe_Engine.__name__ = ["luxe","Engine"];
luxe_Engine.__super__ = snow_App;
luxe_Engine.prototype = $extend(snow_App.prototype,{
	run: function() {
		if(!(this.running == false)) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("running == false" + ""));
		this.running = true;
		new snow_Snow(this);
	}
	,shutdown: function() {
		this.shutting_down = true;
		snow_Snow.next(($_=this.app,$bind($_,$_.shutdown)));
	}
	,runtime_info: function() {
		return "" + this.build + " / debug:" + Std.string(this.app.debug) + " / os:" + this.app.os + " / platform:" + this.app.platform;
	}
	,on: function(event,handler) {
		this.emitter.on(event,handler);
	}
	,off: function(event,handler) {
		return this.emitter.off(event,handler);
	}
	,emit: function(event,data) {
		this.emitter.emit(event,data);
		return;
	}
	,ready: function() {
		var _g = this;
		this.version = haxe_Resource.getString("version");
		this.build = this.version + haxe_Resource.getString("build");
		haxe_Log.trace("   i / luxe / " + ("" + this.build + " / debug:" + Std.string(this.app.debug) + " / os:" + this.app.os + " / platform:" + this.app.platform),{ fileName : "Engine.hx", lineNumber : 149, className : "luxe.Engine", methodName : "ready"});
		this.headless = this.game_config.headless;
		if(!this.headless) {
			var _font_name = "default.png";
			var _font_image;
			var bytes = haxe_Resource.getBytes(_font_name);
			_font_image = new Uint8Array(bytes.b.bufferValue);
			var _font_load = snow_systems_assets_AssetImage.load_from_bytes(this.app.assets,_font_name,_font_image);
			_font_load.then(function(asset) {
				_g.init(asset);
			}).error(function(error) {
				haxe_Log.trace("   i / luxe / " + "failed to load default font, things will probably not look right... $error",{ fileName : "Engine.hx", lineNumber : 168, className : "luxe.Engine", methodName : "ready"});
				_g.init(null);
			});
		} else {
			this.auto_render = false;
			this.init(null);
		}
	}
	,ondestroy: function() {
		this.shutting_down = true;
		haxe_Log.trace("   i / luxe / " + "shutting down...",{ fileName : "Engine.hx", lineNumber : 187, className : "luxe.Engine", methodName : "ondestroy"});
		this.emitter.emit(8);
		this.game.ondestroy();
		if(this.renderer != null) this.renderer.destroy();
		this.physics.destroy();
		this.input.destroy();
		this.audio.destroy();
		this.timer.destroy();
		this.events.destroy();
		this.debug.destroy();
		this.emitter = null;
		this.input = null;
		this.audio = null;
		this.events = null;
		this.timer = null;
		this.debug = null;
		Luxe.utils = null;
		this.has_shutdown = true;
		haxe_Log.trace("   i / luxe / " + "goodbye.",{ fileName : "Engine.hx", lineNumber : 217, className : "luxe.Engine", methodName : "ondestroy"});
	}
	,init: function(asset) {
		Luxe.debug = this.debug = new luxe_Debug(this);
		Luxe.io = this.io = new luxe_IO(this);
		this.draw = new luxe_Draw(this);
		this.timer = new luxe_Timer(this);
		this.events = new luxe_Events();
		this.audio = new luxe_Audio(this);
		this.input = new luxe_Input(this);
		this.physics = new luxe_Physics(this);
		this.resources = new luxe_Resources();
		Luxe.resources = this.resources;
		if(!this.headless) {
			this.renderer = new phoenix_Renderer(this,asset);
			Luxe.renderer = this.renderer;
		}
		var _render_w = this.app.runtime.window.width;
		var _render_h = this.app.runtime.window.height;
		if(window.devicePixelRatio == null) this.pixel_scale = 1.0; else this.pixel_scale = window.devicePixelRatio;
		this.screen = new luxe_Screen(this,Math.floor(_render_w / this.pixel_scale),Math.floor(_render_h / this.pixel_scale));
		this.debug.init();
		this.io.init();
		this.timer.init();
		this.audio.init();
		this.input.init();
		if(!this.headless) this.renderer.init();
		this.physics.init();
		Luxe.audio = this.audio;
		Luxe.draw = this.draw;
		Luxe.events = this.events;
		Luxe.timer = this.timer;
		Luxe.input = this.input;
		if(!this.headless) Luxe.camera = new luxe_Camera({ name : "default camera", view : this.renderer.camera});
		Luxe.physics = this.physics;
		this.scene = new luxe_Scene("default scene");
		Luxe.scene = this.scene;
		if(!this.headless) {
			this.scene.add(Luxe.camera);
			this.debug.create_debug_console();
		}
		this.internal_pre_ready();
	}
	,internal_pre_ready: function() {
		if(!this.headless) {
			var _default_parcel = new luxe_Parcel({ id : "default_parcel", system : this.resources, bytes : this.game_config.preload.bytes, texts : this.game_config.preload.texts, jsons : this.game_config.preload.jsons, textures : this.game_config.preload.textures, fonts : this.game_config.preload.fonts, shaders : this.game_config.preload.shaders, sounds : this.game_config.preload.sounds, oncomplete : $bind(this,this.internal_ready), onfailed : function(_error) {
				haxe_Log.trace("   i / luxe / " + "config / preload / failed to load",{ fileName : "Engine.hx", lineNumber : 312, className : "luxe.Engine", methodName : "internal_pre_ready"});
				throw new js__$Boot_HaxeError(snow_types_Error.error(_error));
			}});
			_default_parcel.load();
		} else this.internal_ready(null);
	}
	,internal_ready: function(_) {
		if(!this.headless) {
			this.debug.start(luxe_Tag.update,50);
			this.debug.start(luxe_Tag.tick,50);
		}
		this.game.ready();
		if(!this.shutting_down) {
			this.emitter.emit(2);
			this.inited = true;
			this.physics.reset();
		}
	}
	,onevent: function(_event) {
		if(_event.window != null) this.window_event(_event.window);
		this.game.onevent(_event);
	}
	,update: function(_delta) {
		if(this.has_shutdown) return;
		if(!this.inited) return;
		this.debug.end(luxe_Tag.update);
		this.debug.start(luxe_Tag.update);
		this.timer.process();
		this.input.process();
		this.audio.process();
		this.events.process();
		this.physics.process();
		this.debug.start(luxe_Tag.updates);
		this.emitter.emit(6,_delta);
		this.debug.end(luxe_Tag.updates);
		this.debug.start(luxe_Tag.game_update);
		this.game.update(_delta);
		this.debug.end(luxe_Tag.game_update);
		this.debug.process();
	}
	,tick: function(_delta) {
		if(this.shutting_down) return;
		if(!this.inited) return;
		this.debug.end(luxe_Tag.tick);
		this.debug.start(luxe_Tag.tick);
		if(this.auto_render) this.render();
	}
	,render: function() {
		this.debug.start(luxe_Tag.render);
		this.renderer.prerender();
		this.emitter.emit(9);
		this.game.onprerender();
		this.emitter.emit(10);
		this.game.onrender();
		this.renderer.process();
		this.emitter.emit(11);
		this.game.onpostrender();
		this.debug.end(luxe_Tag.render);
		this.debug.render();
	}
	,ontickstart: function() {
		if(!this.has_shutdown) this.emitter.emit(4);
	}
	,ontickend: function() {
		if(!this.has_shutdown) this.emitter.emit(5);
	}
	,window_event: function(_event) {
		if(this.shutting_down) return;
		if(!this.inited) return;
		var _render_w = _event.x;
		var _render_h = _event.y;
		if(window.devicePixelRatio == null) this.pixel_scale = 1.0; else this.pixel_scale = window.devicePixelRatio;
		_event.x = Math.floor(_render_w / this.pixel_scale);
		_event.y = Math.floor(_render_h / this.pixel_scale);
		this.emitter.emit(28,_event);
		var _g = _event.type;
		switch(_g) {
		case 4:
			this.emitter.emit(29,_event);
			this.game.onwindowmoved(_event);
			break;
		case 5:
			this.screen.internal_resized(_event.x,_event.y);
			this.renderer.internal_resized(_render_w,_render_h);
			this.emitter.emit(30,_event);
			this.game.onwindowresized(_event);
			break;
		case 6:
			this.screen.internal_resized(_event.x,_event.y);
			this.renderer.internal_resized(_render_w,_render_h);
			this.emitter.emit(31,_event);
			this.game.onwindowsized(_event);
			break;
		case 7:
			this.emitter.emit(32,_event);
			this.game.onwindowminimized(_event);
			break;
		case 9:
			this.emitter.emit(33,_event);
			this.game.onwindowrestored(_event);
			break;
		default:
		}
		_event = null;
	}
	,onmousedown: function(_x,_y,_button,_timestamp,_window_id) {
		if(!this.inited) return;
		_x = _x / this.pixel_scale | 0;
		_y = _y / this.pixel_scale | 0;
		this.screen.cursor.set_internal(_x,_y);
		this.input.onmousedown(_x,_y,_button,_timestamp,_window_id);
	}
	,onmouseup: function(_x,_y,_button,_timestamp,_window_id) {
		if(!this.inited) return;
		_x = _x / this.pixel_scale | 0;
		_y = _y / this.pixel_scale | 0;
		this.screen.cursor.set_internal(_x,_y);
		this.input.onmouseup(_x,_y,_button,_timestamp,_window_id);
	}
	,onmousemove: function(_x,_y,_x_rel,_y_rel,_timestamp,_window_id) {
		if(!this.inited) return;
		_x = _x / this.pixel_scale | 0;
		_y = _y / this.pixel_scale | 0;
		this.screen.cursor.set_internal(_x,_y);
		this.input.onmousemove(_x,_y,_x_rel,_y_rel,_timestamp,_window_id);
	}
	,onmousewheel: function(_x,_y,_timestamp,_window_id) {
		if(!this.inited) return;
		this.input.onmousewheel(_x,_y,_timestamp,_window_id);
	}
	,onkeydown: function(_keycode,_scancode,_repeat,_mod,_timestamp,_window_id) {
		if(!this.inited) return;
		this.input.onkeydown(_keycode,_scancode,_repeat,_mod,_timestamp,_window_id);
	}
	,onkeyup: function(_keycode,_scancode,_repeat,_mod,_timestamp,_window_id) {
		if(!this.inited) return;
		this.input.onkeyup(_keycode,_scancode,_repeat,_mod,_timestamp,_window_id);
	}
	,ontextinput: function(_text,_start,_length,_etype,_timestamp,_window_id) {
		if(!this.inited) return;
		this.input.ontextinput(_text,_start,_length,_etype,_timestamp,_window_id);
	}
	,ontouchdown: function(_x,_y,_dx,_dy,_touch_id,_timestamp) {
		if(!this.inited) return;
		this.input.ontouchdown(_x,_y,_dx,_dy,_touch_id,_timestamp);
	}
	,ontouchup: function(_x,_y,_dx,_dy,_touch_id,_timestamp) {
		if(!this.inited) return;
		this.input.ontouchup(_x,_y,_dx,_dy,_touch_id,_timestamp);
	}
	,ontouchmove: function(_x,_y,_dx,_dy,_touch_id,_timestamp) {
		if(!this.inited) return;
		this.input.ontouchmove(_x,_y,_dx,_dy,_touch_id,_timestamp);
	}
	,oninputdown: function(_name,_key_event,_mouse_event,_touch_event,_gamepad_event) {
		if(!this.inited) return;
		this.input.oninputdown(_name,_key_event,_mouse_event,_touch_event,_gamepad_event);
	}
	,oninputup: function(_name,_key_event,_mouse_event,_touch_event,_gamepad_event) {
		if(!this.inited) return;
		this.input.oninputup(_name,_key_event,_mouse_event,_touch_event,_gamepad_event);
	}
	,ongamepadaxis: function(_gamepad,_axis,_value,_timestamp) {
		if(!this.inited) return;
		this.input.ongamepadaxis(_gamepad,_axis,_value,_timestamp);
	}
	,ongamepaddown: function(_gamepad,_button,_value,_timestamp) {
		if(!this.inited) return;
		this.input.ongamepaddown(_gamepad,_button,_value,_timestamp);
	}
	,ongamepadup: function(_gamepad,_button,_value,_timestamp) {
		if(!this.inited) return;
		this.input.ongamepadup(_gamepad,_button,_value,_timestamp);
	}
	,ongamepaddevice: function(_gamepad,_id,_etype,_timestamp) {
		if(!this.inited) return;
		this.input.ongamepaddevice(_gamepad,_id,_etype,_timestamp);
	}
	,config: function(_config) {
		if(_config.user == null) _config.user = { };
		this.game_config = _config;
		this.game_config.window.title = "luxe game";
		this.game_config.window.width = 960;
		this.game_config.window.height = 640;
		this.game_config.window.resizable = true;
		this.game_config.window.fullscreen = false;
		this.game_config.window.borderless = false;
		this.game_config.preload = { bytes : [], texts : [], jsons : [], textures : [], fonts : [], shaders : [], sounds : []};
		this.game_config = this.game.config(this.game_config);
		return this.game_config;
	}
	,__class__: luxe_Engine
});
var luxe_Tag = function() { };
$hxClasses["luxe.Tag"] = luxe_Tag;
luxe_Tag.__name__ = ["luxe","Tag"];
var luxe_Events = function() {
	this.event_queue_count = 0;
	this.event_connections = new haxe_ds_StringMap();
	this.event_slots = new haxe_ds_StringMap();
	this.event_filters = new haxe_ds_StringMap();
	this.event_queue = [];
	this.event_schedules = new haxe_ds_StringMap();
};
$hxClasses["luxe.Events"] = luxe_Events;
luxe_Events.__name__ = ["luxe","Events"];
luxe_Events.prototype = {
	destroy: function() {
		this.clear();
	}
	,clear: function() {
		var $it0 = this.event_schedules.iterator();
		while( $it0.hasNext() ) {
			var schedule = $it0.next();
			schedule.stop();
			schedule = null;
		}
		var $it1 = this.event_connections.keys();
		while( $it1.hasNext() ) {
			var connection = $it1.next();
			this.event_connections.remove(connection);
		}
		var $it2 = this.event_filters.keys();
		while( $it2.hasNext() ) {
			var filter = $it2.next();
			this.event_filters.remove(filter);
		}
		var $it3 = this.event_slots.keys();
		while( $it3.hasNext() ) {
			var slot = $it3.next();
			this.event_slots.remove(slot);
		}
		var _count = this.event_queue.length;
		while(_count > 0) {
			this.event_queue.pop();
			_count--;
		}
	}
	,does_filter_event: function(_filter,_event) {
		var _replace_stars = new EReg("\\*","gi");
		var _final_filter = _replace_stars.replace(_filter,".*?");
		var _final_search = new EReg(_final_filter,"gi");
		return _final_search.match(_event);
	}
	,listen: function(_event_name,_listener) {
		var _id = Luxe.utils.uniqueid();
		var _connection = new luxe__$Events_EventConnection(_id,_event_name,_listener);
		this.event_connections.set(_id,_connection);
		var _has_stars = new EReg("\\*","gi");
		if(_has_stars.match(_event_name)) {
			if(!this.event_filters.exists(_event_name)) this.event_filters.set(_event_name,[]);
			this.event_filters.get(_event_name).push(_connection);
		} else {
			if(!this.event_slots.exists(_event_name)) this.event_slots.set(_event_name,[]);
			this.event_slots.get(_event_name).push(_connection);
		}
		return _id;
	}
	,unlisten: function(event_id) {
		if(this.event_connections.exists(event_id)) {
			var _connection = this.event_connections.get(event_id);
			var _event_slot = this.event_slots.get(_connection.event_name);
			if(_event_slot != null) {
				HxOverrides.remove(_event_slot,_connection);
				return true;
			} else {
				var _event_filter = this.event_filters.get(_connection.event_name);
				if(_event_filter != null) {
					HxOverrides.remove(_event_filter,_connection);
					return true;
				} else return false;
			}
			return true;
		} else return false;
	}
	,queue: function(event_name,properties) {
		var _id = Luxe.utils.uniqueid();
		this.event_queue.push(new luxe__$Events_EventObject(_id,event_name,properties));
		return _id;
	}
	,dequeue: function(event_id) {
		var _idx = 0;
		var _count = this.event_queue.length;
		do {
			if(this.event_queue[_idx].id == event_id) {
				this.event_queue.splice(_idx,1);
				return true;
			}
			++_idx;
		} while(_idx < _count);
		return false;
	}
	,process: function() {
		var _count = this.event_queue.length;
		while(_count > 0) {
			var _event = this.event_queue.shift();
			this.fire(_event.name,_event.properties);
			_count--;
		}
	}
	,fire: function(_event_name,_properties,_tag) {
		if(_tag == null) _tag = false;
		var _fired = false;
		var $it0 = this.event_filters.iterator();
		while( $it0.hasNext() ) {
			var _filter = $it0.next();
			if(_filter.length > 0) {
				var _filter_name = _filter[0].event_name;
				if(this.does_filter_event(_filter_name,_event_name)) {
					if(_tag) _properties = this.tag_properties(_properties,_event_name,_filter.length);
					var _g = 0;
					while(_g < _filter.length) {
						var _connection = _filter[_g];
						++_g;
						_connection.listener(_properties);
					}
					_fired = true;
				}
			}
		}
		if(this.event_slots.exists(_event_name)) {
			var _connections = this.event_slots.get(_event_name);
			if(_tag) _properties = this.tag_properties(_properties,_event_name,_connections.length);
			var _g1 = 0;
			while(_g1 < _connections.length) {
				var connection = _connections[_g1];
				++_g1;
				connection.listener(_properties);
			}
			_fired = true;
		}
		return _fired;
	}
	,schedule: function(time,event_name,properties) {
		var _id = Luxe.utils.uniqueid();
		var _timer = Luxe.timer.schedule(time,(function(f,a1,a2) {
			return function() {
				return f(a1,a2);
			};
		})($bind(this,this.fire),event_name,properties));
		this.event_schedules.set(_id,_timer);
		return _id;
	}
	,unschedule: function(schedule_id) {
		if(this.event_schedules.exists(schedule_id)) {
			var _timer = this.event_schedules.get(schedule_id);
			_timer.stop();
			this.event_schedules.remove(schedule_id);
			return true;
		}
		return false;
	}
	,tag_properties: function(_properties,_name,_count) {
		if(_properties == null) _properties = { };
		_properties;
		_properties._event_name_ = _name;
		_properties._event_connection_count_ = _count;
		return _properties;
	}
	,__class__: luxe_Events
};
var luxe__$Events_EventConnection = function(_id,_event_name,_listener) {
	this.id = _id;
	this.listener = _listener;
	this.event_name = _event_name;
};
$hxClasses["luxe._Events.EventConnection"] = luxe__$Events_EventConnection;
luxe__$Events_EventConnection.__name__ = ["luxe","_Events","EventConnection"];
luxe__$Events_EventConnection.prototype = {
	__class__: luxe__$Events_EventConnection
};
var luxe__$Events_EventObject = function(_id,_event_name,_event_properties) {
	this.id = _id;
	this.name = _event_name;
	this.properties = _event_properties;
};
$hxClasses["luxe._Events.EventObject"] = luxe__$Events_EventObject;
luxe__$Events_EventObject.__name__ = ["luxe","_Events","EventObject"];
luxe__$Events_EventObject.prototype = {
	__class__: luxe__$Events_EventObject
};
var luxe_IO = function(_core) {
	this.core = _core;
};
$hxClasses["luxe.IO"] = luxe_IO;
luxe_IO.__name__ = ["luxe","IO"];
luxe_IO.prototype = {
	url_open: function(_url) {
		this.core.app.io.module.url_open(_url);
	}
	,string_save: function(_key,_value,_slot) {
		if(_slot == null) _slot = 0;
		return this.core.app.io.string_save(_key,_value,_slot);
	}
	,string_load: function(_key,_slot) {
		if(_slot == null) _slot = 0;
		return this.core.app.io.string_load(_key,_slot);
	}
	,string_destroy: function(_slot) {
		if(_slot == null) _slot = 0;
		return this.core.app.io.string_destroy(_slot);
	}
	,init: function() {
	}
	,__class__: luxe_IO
};
var luxe_Input = function(_core) {
	this.core = _core;
	this.key_event = new luxe_KeyEvent();
	this.text_event = new luxe_TextEvent();
	this.mouse_event = new luxe_MouseEvent();
	this.touch_event = new luxe_TouchEvent();
	this.gamepad_event = new luxe_GamepadEvent();
	this.input_event = new luxe_InputEvent();
};
$hxClasses["luxe.Input"] = luxe_Input;
luxe_Input.__name__ = ["luxe","Input"];
luxe_Input.prototype = {
	inputpressed: function(_event) {
		return this._named_input_pressed.exists(_event);
	}
	,inputreleased: function(_event) {
		return this._named_input_released.exists(_event);
	}
	,inputdown: function(_event) {
		return this._named_input_down.exists(_event);
	}
	,keypressed: function(_code) {
		return this.core.app.input.keypressed(_code);
	}
	,keyreleased: function(_code) {
		return this.core.app.input.keyreleased(_code);
	}
	,keydown: function(_code) {
		return this.core.app.input.keydown(_code);
	}
	,scanpressed: function(_code) {
		return this.core.app.input.scanpressed(_code);
	}
	,scanreleased: function(_code) {
		return this.core.app.input.scanreleased(_code);
	}
	,scandown: function(_code) {
		return this.core.app.input.scandown(_code);
	}
	,mousepressed: function(_button) {
		return this.core.app.input.mousepressed(_button);
	}
	,mousereleased: function(_button) {
		return this.core.app.input.mousereleased(_button);
	}
	,mousedown: function(_button) {
		return this.core.app.input.mousedown(_button);
	}
	,gamepadpressed: function(_gamepad,_button) {
		return this.core.app.input.gamepadpressed(_gamepad,_button);
	}
	,gamepadreleased: function(_gamepad,_button) {
		return this.core.app.input.gamepadreleased(_gamepad,_button);
	}
	,gamepaddown: function(_gamepad,_button) {
		return this.core.app.input.gamepaddown(_gamepad,_button);
	}
	,gamepadaxis: function(_gamepad,_axis) {
		return this.core.app.input.gamepadaxis(_gamepad,_axis);
	}
	,bind_key: function(_name,_key) {
		if(!this.key_bindings.exists(_name)) {
			var value = new haxe_ds_IntMap();
			this.key_bindings.set(_name,value);
		}
		var _kb = this.key_bindings.get(_name);
		_kb.h[_key] = true;
	}
	,unbind_key: function(_name,_key) {
		if(!this.key_bindings.exists(_name)) return;
		var _kb = this.key_bindings.get(_name);
		_kb.remove(_key);
	}
	,bind_mouse: function(_name,_button) {
		if(!this.mouse_bindings.exists(_name)) {
			var value = new haxe_ds_IntMap();
			this.mouse_bindings.set(_name,value);
		}
		var _mb = this.mouse_bindings.get(_name);
		_mb.h[_button] = true;
	}
	,unbind_mouse: function(_name,_button) {
		if(!this.mouse_bindings.exists(_name)) return;
		var _mb = this.mouse_bindings.get(_name);
		_mb.remove(_button);
	}
	,bind_gamepad: function(_name,_gamepad_button,_gamepad_id) {
		if(!this.gamepad_bindings.exists(_name)) {
			var value = new haxe_ds_IntMap();
			this.gamepad_bindings.set(_name,value);
		}
		var _gp = this.gamepad_bindings.get(_name);
		_gp.h[_gamepad_button] = _gamepad_id;
	}
	,unbind_gamepad: function(_name,_button) {
		if(!this.gamepad_bindings.exists(_name)) return;
		var _gp = this.gamepad_bindings.get(_name);
		_gp.remove(_button);
	}
	,init: function() {
		this.key_bindings = new haxe_ds_StringMap();
		this.mouse_bindings = new haxe_ds_StringMap();
		this.gamepad_bindings = new haxe_ds_StringMap();
		this._named_input_down = new haxe_ds_StringMap();
		this._named_input_pressed = new haxe_ds_StringMap();
		this._named_input_released = new haxe_ds_StringMap();
		null;
	}
	,destroy: function() {
		null;
	}
	,process: function() {
		var $it0 = this._named_input_pressed.keys();
		while( $it0.hasNext() ) {
			var _event = $it0.next();
			if(this._named_input_pressed.get(_event)) this._named_input_pressed.remove(_event); else this._named_input_pressed.set(_event,true);
		}
		var $it1 = this._named_input_released.keys();
		while( $it1.hasNext() ) {
			var _event1 = $it1.next();
			if(this._named_input_released.get(_event1)) this._named_input_released.remove(_event1); else this._named_input_released.set(_event1,true);
		}
	}
	,onmousedown: function(_x,_y,_button,_timestamp,_window_id) {
		if(this.core.shutting_down) return;
		this.mouse_event.set_press(_x,_y,_button,luxe_InteractState.down,_timestamp,_window_id);
		this.check_named_mouse(this.mouse_event,true);
		this.core.emitter.emit(17,this.mouse_event);
		this.core.game.onmousedown(this.mouse_event);
	}
	,onmouseup: function(_x,_y,_button,_timestamp,_window_id) {
		if(this.core.shutting_down) return;
		this.mouse_event.set_press(_x,_y,_button,luxe_InteractState.up,_timestamp,_window_id);
		this.check_named_mouse(this.mouse_event);
		this.core.emitter.emit(18,this.mouse_event);
		this.core.game.onmouseup(this.mouse_event);
	}
	,onmousemove: function(_x,_y,_x_rel,_y_rel,_timestamp,_window_id) {
		if(this.core.shutting_down) return;
		this.mouse_event.set_move(_x,_y,_x_rel,_y_rel,_timestamp,_window_id);
		this.core.emitter.emit(19,this.mouse_event);
		this.core.game.onmousemove(this.mouse_event);
	}
	,onmousewheel: function(_x,_y,_timestamp,_window_id) {
		if(this.core.shutting_down) return;
		this.mouse_event.set_wheel(_x,_y,_timestamp,_window_id);
		this.check_named_mouse(this.mouse_event,false);
		this.core.emitter.emit(20,this.mouse_event);
		this.core.game.onmousewheel(this.mouse_event);
	}
	,onkeydown: function(_keycode,_scancode,_repeat,_mod,_timestamp,_window_id) {
		if(this.core.shutting_down) return;
		this.key_event.set(_keycode,_scancode,_repeat,_mod,luxe_InteractState.down,_timestamp,_window_id);
		this.check_named_keys(this.key_event,true);
		this.core.emitter.emit(12,this.key_event);
		this.core.game.onkeydown(this.key_event);
	}
	,onkeyup: function(_keycode,_scancode,_repeat,_mod,_timestamp,_window_id) {
		if(this.core.shutting_down) return;
		this.key_event.set(_keycode,_scancode,_repeat,_mod,luxe_InteractState.up,_timestamp,_window_id);
		this.check_named_keys(this.key_event);
		this.core.emitter.emit(13,this.key_event);
		this.core.game.onkeyup(this.key_event);
	}
	,ontextinput: function(_text,_start,_length,_etype,_timestamp,_window_id) {
		if(this.core.shutting_down) return;
		var _type;
		switch(_etype) {
		case 1:
			_type = luxe_TextEventType.edit;
			break;
		case 2:
			_type = luxe_TextEventType.input;
			break;
		default:
			return;
		}
		this.text_event.set(_text,_start,_length,_type,_timestamp,_window_id);
		this.core.emitter.emit(14,this.text_event);
		this.core.game.ontextinput(this.text_event);
	}
	,ontouchdown: function(_x,_y,_dx,_dy,_touch_id,_timestamp) {
		if(this.core.shutting_down) return;
		this.touch_event.set(_x,_y,_dx,_dy,_touch_id,luxe_InteractState.down,_timestamp);
		this.core.emitter.emit(21,this.touch_event);
		this.core.game.ontouchdown(this.touch_event);
	}
	,ontouchup: function(_x,_y,_dx,_dy,_touch_id,_timestamp) {
		if(this.core.shutting_down) return;
		this.touch_event.set(_x,_y,_dx,_dy,_touch_id,luxe_InteractState.up,_timestamp);
		this.core.emitter.emit(22,this.touch_event);
		this.core.game.ontouchup(this.touch_event);
	}
	,ontouchmove: function(_x,_y,_dx,_dy,_touch_id,_timestamp) {
		if(this.core.shutting_down) return;
		this.touch_event.set(_x,_y,_dx,_dy,_touch_id,luxe_InteractState.move,_timestamp);
		this.core.emitter.emit(23,this.touch_event);
		this.core.game.ontouchmove(this.touch_event);
	}
	,ongamepadaxis: function(_gamepad,_axis,_value,_timestamp) {
		if(this.core.shutting_down) return;
		this.gamepad_event.set_axis(_gamepad,_axis,_value,_timestamp);
		this.core.emitter.emit(24,this.gamepad_event);
		this.core.game.ongamepadaxis(this.gamepad_event);
	}
	,ongamepaddown: function(_gamepad,_button,_value,_timestamp) {
		if(this.core.shutting_down) return;
		this.gamepad_event.set_button(_gamepad,_button,_value,luxe_InteractState.down,_timestamp);
		this.check_named_gamepad_buttons(this.gamepad_event,true);
		this.core.emitter.emit(25,this.gamepad_event);
		this.core.game.ongamepaddown(this.gamepad_event);
	}
	,ongamepadup: function(_gamepad,_button,_value,_timestamp) {
		if(this.core.shutting_down) return;
		this.gamepad_event.set_button(_gamepad,_button,_value,luxe_InteractState.up,_timestamp);
		this.check_named_gamepad_buttons(this.gamepad_event,false);
		this.core.emitter.emit(26,this.gamepad_event);
		this.core.game.ongamepadup(this.gamepad_event);
	}
	,ongamepaddevice: function(_gamepad,_id,_etype,_timestamp) {
		if(this.core.shutting_down) return;
		var _type;
		switch(_etype) {
		case 1:
			_type = luxe_GamepadEventType.device_added;
			break;
		case 2:
			_type = luxe_GamepadEventType.device_removed;
			break;
		case 3:
			_type = luxe_GamepadEventType.device_remapped;
			break;
		default:
			_type = luxe_GamepadEventType.unknown;
		}
		this.gamepad_event.set_device(_gamepad,_id,_type,_timestamp);
		this.core.emitter.emit(27,this.gamepad_event);
		this.core.game.ongamepaddevice(this.gamepad_event);
	}
	,oninputdown: function(_name,_key_event,_mouse_event,_touch_event,_gamepad_event) {
		if(this.core.shutting_down) return;
		if(_key_event != null) this.input_event.set_key(_name,luxe_InteractState.down,_key_event); else if(_mouse_event != null) this.input_event.set_mouse(_name,luxe_InteractState.down,_mouse_event); else if(_touch_event != null) this.input_event.set_touch(_name,luxe_InteractState.down,_touch_event); else if(_gamepad_event != null) this.input_event.set_gamepad(_name,luxe_InteractState.down,_gamepad_event); else this.input_event.set_unknown(_name,luxe_InteractState.down);
		this.core.emitter.emit(15,this.input_event);
		this.core.game.oninputdown(this.input_event);
	}
	,oninputup: function(_name,_key_event,_mouse_event,_touch_event,_gamepad_event) {
		if(this.core.shutting_down) return;
		if(_key_event != null) this.input_event.set_key(_name,luxe_InteractState.up,_key_event); else if(_mouse_event != null) this.input_event.set_mouse(_name,luxe_InteractState.up,_mouse_event); else if(_touch_event != null) this.input_event.set_touch(_name,luxe_InteractState.up,_touch_event); else if(_gamepad_event != null) this.input_event.set_gamepad(_name,luxe_InteractState.up,_gamepad_event); else this.input_event.set_unknown(_name,luxe_InteractState.up);
		this.core.emitter.emit(16,this.input_event);
		this.core.game.oninputup(this.input_event);
	}
	,check_named_keys: function(e,_down) {
		if(_down == null) _down = false;
		var _fired = [];
		var $it0 = this.key_bindings.keys();
		while( $it0.hasNext() ) {
			var _name = $it0.next();
			var _b = this.key_bindings.get(_name);
			var _is_down_repeat = _down && e.repeat;
			if(_b.h.hasOwnProperty(e.keycode) && !_is_down_repeat) {
				if(!Lambda.has(_fired,_name)) _fired.push(_name);
			}
		}
		var _g = 0;
		while(_g < _fired.length) {
			var _f = _fired[_g];
			++_g;
			if(_down) {
				this._named_input_pressed.set(_f,false);
				this._named_input_down.set(_f,true);
				this.oninputdown(_f,e);
			} else {
				this._named_input_released.set(_f,false);
				this._named_input_down.remove(_f);
				this.oninputup(_f,e);
			}
		}
	}
	,check_named_mouse: function(e,_down) {
		if(_down == null) _down = false;
		var _fired = [];
		var $it0 = this.mouse_bindings.keys();
		while( $it0.hasNext() ) {
			var _name = $it0.next();
			var _b = this.mouse_bindings.get(_name);
			if(_b.h.hasOwnProperty(e.button)) {
				if(!Lambda.has(_fired,_name)) _fired.push(_name);
			}
		}
		var _g = 0;
		while(_g < _fired.length) {
			var _f = _fired[_g];
			++_g;
			if(_down) {
				this._named_input_pressed.set(_f,false);
				this._named_input_down.set(_f,true);
				this.oninputdown(_f,null,e);
			} else {
				this._named_input_released.set(_f,false);
				this._named_input_down.remove(_f);
				this.oninputup(_f,null,e);
			}
		}
	}
	,check_named_gamepad_buttons: function(e,_down) {
		if(_down == null) _down = false;
		var _fired = [];
		var $it0 = this.gamepad_bindings.keys();
		while( $it0.hasNext() ) {
			var _name = $it0.next();
			var _b = this.gamepad_bindings.get(_name);
			if(_b.h.hasOwnProperty(e.button)) {
				var _kb = _b.h[e.button];
				var _accepted_gamepad = _kb == null || _kb == e.gamepad;
				if(!Lambda.has(_fired,_name) && _accepted_gamepad) _fired.push(_name);
			}
		}
		var _g = 0;
		while(_g < _fired.length) {
			var _f = _fired[_g];
			++_g;
			if(_down) {
				this._named_input_pressed.set(_f,false);
				this._named_input_down.set(_f,true);
				this.oninputdown(_f,null,null,null,e);
			} else {
				this._named_input_released.set(_f,false);
				this._named_input_down.remove(_f);
				this.oninputup(_f,null,null,null,e);
			}
		}
	}
	,__class__: luxe_Input
};
var luxe_InteractState = $hxClasses["luxe.InteractState"] = { __ename__ : ["luxe","InteractState"], __constructs__ : ["unknown","none","down","up","move","wheel","axis"] };
luxe_InteractState.unknown = ["unknown",0];
luxe_InteractState.unknown.toString = $estr;
luxe_InteractState.unknown.__enum__ = luxe_InteractState;
luxe_InteractState.none = ["none",1];
luxe_InteractState.none.toString = $estr;
luxe_InteractState.none.__enum__ = luxe_InteractState;
luxe_InteractState.down = ["down",2];
luxe_InteractState.down.toString = $estr;
luxe_InteractState.down.__enum__ = luxe_InteractState;
luxe_InteractState.up = ["up",3];
luxe_InteractState.up.toString = $estr;
luxe_InteractState.up.__enum__ = luxe_InteractState;
luxe_InteractState.move = ["move",4];
luxe_InteractState.move.toString = $estr;
luxe_InteractState.move.__enum__ = luxe_InteractState;
luxe_InteractState.wheel = ["wheel",5];
luxe_InteractState.wheel.toString = $estr;
luxe_InteractState.wheel.__enum__ = luxe_InteractState;
luxe_InteractState.axis = ["axis",6];
luxe_InteractState.axis.toString = $estr;
luxe_InteractState.axis.__enum__ = luxe_InteractState;
var luxe_TextEventType = $hxClasses["luxe.TextEventType"] = { __ename__ : ["luxe","TextEventType"], __constructs__ : ["unknown","edit","input"] };
luxe_TextEventType.unknown = ["unknown",0];
luxe_TextEventType.unknown.toString = $estr;
luxe_TextEventType.unknown.__enum__ = luxe_TextEventType;
luxe_TextEventType.edit = ["edit",1];
luxe_TextEventType.edit.toString = $estr;
luxe_TextEventType.edit.__enum__ = luxe_TextEventType;
luxe_TextEventType.input = ["input",2];
luxe_TextEventType.input.toString = $estr;
luxe_TextEventType.input.__enum__ = luxe_TextEventType;
var luxe_KeyEvent = function() {
};
$hxClasses["luxe.KeyEvent"] = luxe_KeyEvent;
luxe_KeyEvent.__name__ = ["luxe","KeyEvent"];
luxe_KeyEvent.prototype = {
	set: function(_keycode,_scancode,_repeat,_mod,_state,_timestamp,_window_id) {
		this.mod = _mod;
		this.state = _state;
		this.repeat = _repeat;
		this.keycode = _keycode;
		this.scancode = _scancode;
		this.timestamp = _timestamp;
		this.window_id = _window_id;
	}
	,__class__: luxe_KeyEvent
};
var luxe_TouchEvent = function() {
	this.pos = new phoenix_Vector();
};
$hxClasses["luxe.TouchEvent"] = luxe_TouchEvent;
luxe_TouchEvent.__name__ = ["luxe","TouchEvent"];
luxe_TouchEvent.prototype = {
	set: function(_x,_y,_dx,_dy,_touch_id,_state,_timestamp) {
		this.x = _x;
		this.y = _y;
		this.dx = _dx;
		this.dy = _dy;
		this.touch_id = _touch_id;
		this.timestamp = _timestamp;
		this.state = _state;
		var _this = this.pos;
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = _x;
		if(_this._construct) _this.x; else {
			if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_x);
			_this.x;
		}
		_this.y = _y;
		if(_this._construct) _this.y; else {
			if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_y);
			_this.y;
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_this.x);
		if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_this.y);
		_this;
	}
	,__class__: luxe_TouchEvent
};
var luxe_TextEvent = function() {
};
$hxClasses["luxe.TextEvent"] = luxe_TextEvent;
luxe_TextEvent.__name__ = ["luxe","TextEvent"];
luxe_TextEvent.prototype = {
	set: function(_text,_start,_length,_type,_timestamp,_window_id) {
		this.text = _text;
		this.start = _start;
		this.length = _length;
		this.type = _type;
		this.timestamp = _timestamp;
		this.window_id = _window_id;
	}
	,__class__: luxe_TextEvent
};
var luxe_GamepadEventType = $hxClasses["luxe.GamepadEventType"] = { __ename__ : ["luxe","GamepadEventType"], __constructs__ : ["unknown","axis","button","device_added","device_removed","device_remapped"] };
luxe_GamepadEventType.unknown = ["unknown",0];
luxe_GamepadEventType.unknown.toString = $estr;
luxe_GamepadEventType.unknown.__enum__ = luxe_GamepadEventType;
luxe_GamepadEventType.axis = ["axis",1];
luxe_GamepadEventType.axis.toString = $estr;
luxe_GamepadEventType.axis.__enum__ = luxe_GamepadEventType;
luxe_GamepadEventType.button = ["button",2];
luxe_GamepadEventType.button.toString = $estr;
luxe_GamepadEventType.button.__enum__ = luxe_GamepadEventType;
luxe_GamepadEventType.device_added = ["device_added",3];
luxe_GamepadEventType.device_added.toString = $estr;
luxe_GamepadEventType.device_added.__enum__ = luxe_GamepadEventType;
luxe_GamepadEventType.device_removed = ["device_removed",4];
luxe_GamepadEventType.device_removed.toString = $estr;
luxe_GamepadEventType.device_removed.__enum__ = luxe_GamepadEventType;
luxe_GamepadEventType.device_remapped = ["device_remapped",5];
luxe_GamepadEventType.device_remapped.toString = $estr;
luxe_GamepadEventType.device_remapped.__enum__ = luxe_GamepadEventType;
var luxe_GamepadEvent = function() {
};
$hxClasses["luxe.GamepadEvent"] = luxe_GamepadEvent;
luxe_GamepadEvent.__name__ = ["luxe","GamepadEvent"];
luxe_GamepadEvent.prototype = {
	set_axis: function(_gamepad,_axis,_value,_timestamp) {
		this.id = null;
		this.button = -1;
		this.axis = _axis;
		this.value = _value;
		this.gamepad = _gamepad;
		this.timestamp = _timestamp;
		this.state = luxe_InteractState.axis;
		this.type = luxe_GamepadEventType.axis;
	}
	,set_button: function(_gamepad,_button,_value,_state,_timestamp) {
		this.id = null;
		this.axis = -1;
		this.state = _state;
		this.value = _value;
		this.button = _button;
		this.gamepad = _gamepad;
		this.timestamp = _timestamp;
		this.type = luxe_GamepadEventType.button;
	}
	,set_device: function(_gamepad,_id,_type,_timestamp) {
		this.id = _id;
		this.axis = -1;
		this.value = 0;
		this.button = -1;
		this.type = _type;
		this.gamepad = _gamepad;
		this.timestamp = _timestamp;
		this.state = luxe_InteractState.none;
	}
	,__class__: luxe_GamepadEvent
};
var luxe_MouseEvent = function() {
	this.y_rel = 0;
	this.x_rel = 0;
	this.y = 0;
	this.x = 0;
	this.window_id = 1;
	this.timestamp = 0.0;
	this.pos = new phoenix_Vector();
};
$hxClasses["luxe.MouseEvent"] = luxe_MouseEvent;
luxe_MouseEvent.__name__ = ["luxe","MouseEvent"];
luxe_MouseEvent.prototype = {
	set_press: function(_x,_y,_button,_state,_timestamp,_window_id) {
		this.x = _x;
		this.y = _y;
		this.x_rel = 0;
		this.y_rel = 0;
		this.state = _state;
		this.button = _button;
		this.window_id = _window_id;
		this.timestamp = _timestamp;
		var _this = this.pos;
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = _x;
		if(_this._construct) _this.x; else {
			if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_x);
			_this.x;
		}
		_this.y = _y;
		if(_this._construct) _this.y; else {
			if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_y);
			_this.y;
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_this.x);
		if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_this.y);
		_this;
	}
	,set_move: function(_x,_y,_x_rel,_y_rel,_timestamp,_window_id) {
		this.x = _x;
		this.y = _y;
		this.x_rel = _x_rel;
		this.y_rel = _y_rel;
		this.state = luxe_InteractState.move;
		this.button = 0;
		this.window_id = _window_id;
		this.timestamp = _timestamp;
		var _this = this.pos;
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = _x;
		if(_this._construct) _this.x; else {
			if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_x);
			_this.x;
		}
		_this.y = _y;
		if(_this._construct) _this.y; else {
			if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_y);
			_this.y;
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_this.x);
		if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_this.y);
		_this;
	}
	,set_wheel: function(_x,_y,_timestamp,_window_id) {
		this.x = Math.floor(_x);
		this.y = Math.floor(_y);
		this.x_rel = 0;
		this.y_rel = 0;
		this.state = luxe_InteractState.wheel;
		this.button = 0;
		this.window_id = _window_id;
		this.timestamp = _timestamp;
	}
	,__class__: luxe_MouseEvent
};
var luxe_InputEventType = $hxClasses["luxe.InputEventType"] = { __ename__ : ["luxe","InputEventType"], __constructs__ : ["unknown","mouse","touch","key","gamepad"] };
luxe_InputEventType.unknown = ["unknown",0];
luxe_InputEventType.unknown.toString = $estr;
luxe_InputEventType.unknown.__enum__ = luxe_InputEventType;
luxe_InputEventType.mouse = ["mouse",1];
luxe_InputEventType.mouse.toString = $estr;
luxe_InputEventType.mouse.__enum__ = luxe_InputEventType;
luxe_InputEventType.touch = ["touch",2];
luxe_InputEventType.touch.toString = $estr;
luxe_InputEventType.touch.__enum__ = luxe_InputEventType;
luxe_InputEventType.key = ["key",3];
luxe_InputEventType.key.toString = $estr;
luxe_InputEventType.key.__enum__ = luxe_InputEventType;
luxe_InputEventType.gamepad = ["gamepad",4];
luxe_InputEventType.gamepad.toString = $estr;
luxe_InputEventType.gamepad.__enum__ = luxe_InputEventType;
var luxe_InputEvent = function() {
};
$hxClasses["luxe.InputEvent"] = luxe_InputEvent;
luxe_InputEvent.__name__ = ["luxe","InputEvent"];
luxe_InputEvent.prototype = {
	set_key: function(_name,_state,_key_event) {
		this.set_common(_name,luxe_InputEventType.key,_state);
		this.set_events(_key_event,null,null,null);
	}
	,set_mouse: function(_name,_state,_mouse_event) {
		this.set_common(_name,luxe_InputEventType.mouse,_state);
		this.set_events(null,_mouse_event,null,null);
	}
	,set_touch: function(_name,_state,_touch_event) {
		this.set_common(_name,luxe_InputEventType.touch,_state);
		this.set_events(null,null,_touch_event,null);
	}
	,set_gamepad: function(_name,_state,_gamepad_event) {
		this.set_common(_name,luxe_InputEventType.gamepad,_state);
		this.set_events(null,null,null,_gamepad_event);
	}
	,set_unknown: function(_name,_state) {
		this.set_common(_name,luxe_InputEventType.unknown,_state);
		this.set_events(null,null,null,null);
	}
	,set_common: function(_name,_type,_state) {
		this.name = _name;
		this.type = _type;
		this.state = _state;
	}
	,set_events: function(_key_event,_mouse_event,_touch_event,_gamepad_event) {
		this.key_event = _key_event;
		this.mouse_event = _mouse_event;
		this.touch_event = _touch_event;
		this.gamepad_event = _gamepad_event;
	}
	,__class__: luxe_InputEvent
};
var luxe__$Log_LogError = $hxClasses["luxe._Log.LogError"] = { __ename__ : ["luxe","_Log","LogError"], __constructs__ : ["RequireString"] };
luxe__$Log_LogError.RequireString = function(detail) { var $x = ["RequireString",0,detail]; $x.__enum__ = luxe__$Log_LogError; $x.toString = $estr; return $x; };
var luxe_Log = function() { };
$hxClasses["luxe.Log"] = luxe_Log;
luxe_Log.__name__ = ["luxe","Log"];
luxe_Log._get_spacing = function(_file) {
	var _spaces = "";
	var _trace_length = _file.length + 4;
	var _diff = luxe_Log._log_width - _trace_length;
	if(_diff > 0) {
		var _g = 0;
		while(_g < _diff) {
			var i = _g++;
			_spaces += " ";
		}
	}
	return _spaces;
};
var luxe_DebugError = $hxClasses["luxe.DebugError"] = { __ename__ : ["luxe","DebugError"], __constructs__ : ["assertion","null_assertion"] };
luxe_DebugError.assertion = function(expr) { var $x = ["assertion",0,expr]; $x.__enum__ = luxe_DebugError; $x.toString = $estr; return $x; };
luxe_DebugError.null_assertion = function(expr) { var $x = ["null_assertion",1,expr]; $x.__enum__ = luxe_DebugError; $x.toString = $estr; return $x; };
var luxe_NineSlice = function(_options) {
	this.added = false;
	this.midheight = 0.0;
	this.midwidth = 0.0;
	this.is_set = false;
	this.source_h = 0.0;
	this.source_w = 0.0;
	this.source_y = 0.0;
	this.source_x = 0.0;
	this.height = 0.0;
	this.bottom = 32;
	this.width = 0.0;
	this.right = 32;
	this.left = 32;
	this.top = 32;
	this.slices = [];
	if(_options == null) _options = { no_geometry : true}; else _options.no_geometry = true;
	this.nineslice_options = _options;
	if(_options.batcher != null) this._batcher = _options.batcher; else this._batcher = Luxe.renderer.batcher;
	luxe_Visual.call(this,_options);
	if(_options.top != null) this.top = _options.top;
	if(_options.left != null) this.left = _options.left;
	if(_options.right != null) this.right = _options.right;
	if(_options.bottom != null) this.bottom = _options.bottom;
	if(_options.source_x != null) this.source_x = _options.source_x;
	if(_options.source_y != null) this.source_y = _options.source_y;
	if(_options.source_w != null) this.source_w = _options.source_w; else this.source_w = this.texture.width;
	if(_options.source_h != null) this.source_h = _options.source_h; else this.source_h = this.texture.height;
	this.set_geometry(null);
};
$hxClasses["luxe.NineSlice"] = luxe_NineSlice;
luxe_NineSlice.__name__ = ["luxe","NineSlice"];
luxe_NineSlice.__super__ = luxe_Visual;
luxe_NineSlice.prototype = $extend(luxe_Visual.prototype,{
	lock: function() {
		if(this.is_set && this._geometry != null) this._geometry.set_locked(true);
	}
	,dirty: function() {
		if(this.is_set && this._geometry != null) this._geometry.set_dirty(true);
	}
	,update_size: function(_width,_height) {
		this.width = _width;
		this.height = _height;
		this.midwidth = Math.abs(this.width - this.left - this.right);
		this.midheight = Math.abs(this.height - this.top - this.bottom);
		this.slices[0].source_width = this.left;
		this.slices[0].source_height = this.top;
		this.slices[0].source_x = this.source_x;
		this.slices[0].source_y = this.source_y;
		var _this = this.slices[0].pos;
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = 0;
		if(_this._construct) _this.x; else {
			if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(0);
			_this.x;
		}
		_this.y = 0;
		if(_this._construct) _this.y; else {
			if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(0);
			_this.y;
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_this.x);
		if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_this.y);
		_this;
		this.slices[0].width = this.left;
		this.slices[0].height = this.top;
		this.slices[1].source_width = this.source_w - this.left - this.right;
		this.slices[1].source_height = this.top;
		this.slices[1].source_x = this.source_x + this.left;
		this.slices[1].source_y = this.source_y;
		var _this1 = this.slices[1].pos;
		var _x = this.left;
		var prev1 = _this1.ignore_listeners;
		_this1.ignore_listeners = true;
		_this1.x = _x;
		if(_this1._construct) _this1.x; else {
			if(_this1.listen_x != null && !_this1.ignore_listeners) _this1.listen_x(_x);
			_this1.x;
		}
		_this1.y = 0;
		if(_this1._construct) _this1.y; else {
			if(_this1.listen_y != null && !_this1.ignore_listeners) _this1.listen_y(0);
			_this1.y;
		}
		_this1.ignore_listeners = prev1;
		if(_this1.listen_x != null && !_this1.ignore_listeners) _this1.listen_x(_this1.x);
		if(_this1.listen_y != null && !_this1.ignore_listeners) _this1.listen_y(_this1.y);
		_this1;
		this.slices[1].width = this.width - this.left - this.right;
		this.slices[1].height = this.top;
		this.slices[2].source_width = this.right;
		this.slices[2].source_height = this.top;
		this.slices[2].source_x = this.source_x + (this.source_w - this.right);
		this.slices[2].source_y = this.source_y;
		var _this2 = this.slices[2].pos;
		var _x1 = this.left + this.midwidth;
		var prev2 = _this2.ignore_listeners;
		_this2.ignore_listeners = true;
		_this2.x = _x1;
		if(_this2._construct) _this2.x; else {
			if(_this2.listen_x != null && !_this2.ignore_listeners) _this2.listen_x(_x1);
			_this2.x;
		}
		_this2.y = 0;
		if(_this2._construct) _this2.y; else {
			if(_this2.listen_y != null && !_this2.ignore_listeners) _this2.listen_y(0);
			_this2.y;
		}
		_this2.ignore_listeners = prev2;
		if(_this2.listen_x != null && !_this2.ignore_listeners) _this2.listen_x(_this2.x);
		if(_this2.listen_y != null && !_this2.ignore_listeners) _this2.listen_y(_this2.y);
		_this2;
		this.slices[2].width = this.right;
		this.slices[2].height = this.top;
		this.slices[3].source_width = this.left;
		this.slices[3].source_height = this.source_h - this.top - this.bottom;
		this.slices[3].source_x = this.source_x;
		this.slices[3].source_y = this.source_y + this.top;
		var _this3 = this.slices[3].pos;
		var _y = this.top;
		var prev3 = _this3.ignore_listeners;
		_this3.ignore_listeners = true;
		_this3.x = 0;
		if(_this3._construct) _this3.x; else {
			if(_this3.listen_x != null && !_this3.ignore_listeners) _this3.listen_x(0);
			_this3.x;
		}
		_this3.y = _y;
		if(_this3._construct) _this3.y; else {
			if(_this3.listen_y != null && !_this3.ignore_listeners) _this3.listen_y(_y);
			_this3.y;
		}
		_this3.ignore_listeners = prev3;
		if(_this3.listen_x != null && !_this3.ignore_listeners) _this3.listen_x(_this3.x);
		if(_this3.listen_y != null && !_this3.ignore_listeners) _this3.listen_y(_this3.y);
		_this3;
		this.slices[3].width = this.left;
		this.slices[3].height = this.height - this.top - this.bottom;
		this.slices[4].source_width = this.source_w - this.left - this.right;
		this.slices[4].source_height = this.source_h - this.top - this.bottom;
		this.slices[4].source_x = this.source_x + this.left;
		this.slices[4].source_y = this.source_y + this.top;
		var _this4 = this.slices[4].pos;
		var _x2 = this.left;
		var _y1 = this.top;
		var prev4 = _this4.ignore_listeners;
		_this4.ignore_listeners = true;
		_this4.x = _x2;
		if(_this4._construct) _this4.x; else {
			if(_this4.listen_x != null && !_this4.ignore_listeners) _this4.listen_x(_x2);
			_this4.x;
		}
		_this4.y = _y1;
		if(_this4._construct) _this4.y; else {
			if(_this4.listen_y != null && !_this4.ignore_listeners) _this4.listen_y(_y1);
			_this4.y;
		}
		_this4.ignore_listeners = prev4;
		if(_this4.listen_x != null && !_this4.ignore_listeners) _this4.listen_x(_this4.x);
		if(_this4.listen_y != null && !_this4.ignore_listeners) _this4.listen_y(_this4.y);
		_this4;
		this.slices[4].width = this.width - this.left - this.right;
		this.slices[4].height = this.height - this.top - this.bottom;
		this.slices[5].source_width = this.right;
		this.slices[5].source_height = this.source_h - this.top - this.bottom;
		this.slices[5].source_x = this.source_x + (this.source_w - this.right);
		this.slices[5].source_y = this.source_y + this.top;
		var _this5 = this.slices[5].pos;
		var _x3 = this.left + this.midwidth;
		var _y2 = this.top;
		var prev5 = _this5.ignore_listeners;
		_this5.ignore_listeners = true;
		_this5.x = _x3;
		if(_this5._construct) _this5.x; else {
			if(_this5.listen_x != null && !_this5.ignore_listeners) _this5.listen_x(_x3);
			_this5.x;
		}
		_this5.y = _y2;
		if(_this5._construct) _this5.y; else {
			if(_this5.listen_y != null && !_this5.ignore_listeners) _this5.listen_y(_y2);
			_this5.y;
		}
		_this5.ignore_listeners = prev5;
		if(_this5.listen_x != null && !_this5.ignore_listeners) _this5.listen_x(_this5.x);
		if(_this5.listen_y != null && !_this5.ignore_listeners) _this5.listen_y(_this5.y);
		_this5;
		this.slices[5].width = this.right;
		this.slices[5].height = this.height - this.top - this.bottom;
		this.slices[6].source_width = this.left;
		this.slices[6].source_height = this.bottom;
		this.slices[6].source_x = this.source_x;
		this.slices[6].source_y = this.source_y + (this.source_h - this.bottom);
		var _this6 = this.slices[6].pos;
		var _y3 = this.top + this.midheight;
		var prev6 = _this6.ignore_listeners;
		_this6.ignore_listeners = true;
		_this6.x = 0;
		if(_this6._construct) _this6.x; else {
			if(_this6.listen_x != null && !_this6.ignore_listeners) _this6.listen_x(0);
			_this6.x;
		}
		_this6.y = _y3;
		if(_this6._construct) _this6.y; else {
			if(_this6.listen_y != null && !_this6.ignore_listeners) _this6.listen_y(_y3);
			_this6.y;
		}
		_this6.ignore_listeners = prev6;
		if(_this6.listen_x != null && !_this6.ignore_listeners) _this6.listen_x(_this6.x);
		if(_this6.listen_y != null && !_this6.ignore_listeners) _this6.listen_y(_this6.y);
		_this6;
		this.slices[6].width = this.left;
		this.slices[6].height = this.bottom;
		this.slices[7].source_width = this.source_w - this.left - this.right;
		this.slices[7].source_height = this.bottom;
		this.slices[7].source_x = this.source_x + this.left;
		this.slices[7].source_y = this.source_y + (this.source_h - this.bottom);
		var _this7 = this.slices[7].pos;
		var _x4 = this.left;
		var _y4 = this.top + this.midheight;
		var prev7 = _this7.ignore_listeners;
		_this7.ignore_listeners = true;
		_this7.x = _x4;
		if(_this7._construct) _this7.x; else {
			if(_this7.listen_x != null && !_this7.ignore_listeners) _this7.listen_x(_x4);
			_this7.x;
		}
		_this7.y = _y4;
		if(_this7._construct) _this7.y; else {
			if(_this7.listen_y != null && !_this7.ignore_listeners) _this7.listen_y(_y4);
			_this7.y;
		}
		_this7.ignore_listeners = prev7;
		if(_this7.listen_x != null && !_this7.ignore_listeners) _this7.listen_x(_this7.x);
		if(_this7.listen_y != null && !_this7.ignore_listeners) _this7.listen_y(_this7.y);
		_this7;
		this.slices[7].width = this.width - this.left - this.right;
		this.slices[7].height = this.bottom;
		this.slices[8].source_width = this.right;
		this.slices[8].source_height = this.bottom;
		this.slices[8].source_x = this.source_x + (this.source_w - this.right);
		this.slices[8].source_y = this.source_y + (this.source_h - this.bottom);
		var _this8 = this.slices[8].pos;
		var _x5 = this.left + this.midwidth;
		var _y5 = this.top + this.midheight;
		var prev8 = _this8.ignore_listeners;
		_this8.ignore_listeners = true;
		_this8.x = _x5;
		if(_this8._construct) _this8.x; else {
			if(_this8.listen_x != null && !_this8.ignore_listeners) _this8.listen_x(_x5);
			_this8.x;
		}
		_this8.y = _y5;
		if(_this8._construct) _this8.y; else {
			if(_this8.listen_y != null && !_this8.ignore_listeners) _this8.listen_y(_y5);
			_this8.y;
		}
		_this8.ignore_listeners = prev8;
		if(_this8.listen_x != null && !_this8.ignore_listeners) _this8.listen_x(_this8.x);
		if(_this8.listen_y != null && !_this8.ignore_listeners) _this8.listen_y(_this8.y);
		_this8;
		this.slices[8].width = this.right;
		this.slices[8].height = this.bottom;
	}
	,set: function(_width,_height) {
		if(this.added) {
			this._geometry.drop();
			this.added = false;
		}
		this.slices.splice(0,this.slices.length);
		this.width = _width;
		this.height = _height;
		this.midwidth = Math.abs(this.width - this.left - this.right);
		this.midheight = Math.abs(this.height - this.top - this.bottom);
		this.slices.push({ source_width : this.left, source_height : this.top, source_x : this.source_x, source_y : this.source_y, pos : new phoenix_Vector(0,0), width : this.left, height : this.top, geometry_id : 0});
		this.slices.push({ source_width : this.source_w - this.left - this.right, source_height : this.top, source_x : this.source_x + this.left, source_y : this.source_y, pos : new phoenix_Vector(this.left,0), width : this.width - this.left - this.right, height : this.top, geometry_id : 0});
		this.slices.push({ source_width : this.right, source_height : this.top, source_x : this.source_x + (this.source_w - this.right), source_y : this.source_y, pos : new phoenix_Vector(this.left + this.midwidth,0), width : this.right, height : this.top, geometry_id : 0});
		this.slices.push({ source_width : this.left, source_height : this.source_h - this.top - this.bottom, source_x : this.source_x, source_y : this.source_y + this.top, pos : new phoenix_Vector(0,this.top), width : this.left, height : this.height - this.top - this.bottom, geometry_id : 0});
		this.slices.push({ source_width : this.source_w - this.left - this.right, source_height : this.source_h - this.top - this.bottom, source_x : this.source_x + this.left, source_y : this.source_y + this.top, pos : new phoenix_Vector(this.left,this.top), width : this.width - this.left - this.right, height : this.height - this.top - this.bottom, geometry_id : 0});
		this.slices.push({ source_width : this.right, source_height : this.source_h - this.top - this.bottom, source_x : this.source_x + (this.source_w - this.right), source_y : this.source_y + this.top, pos : new phoenix_Vector(this.left + this.midwidth,this.top), width : this.right, height : this.height - this.top - this.bottom, geometry_id : 0});
		this.slices.push({ source_width : this.left, source_height : this.bottom, source_x : this.source_x, source_y : this.source_y + (this.source_h - this.bottom), pos : new phoenix_Vector(0,this.top + this.midheight), width : this.left, height : this.bottom, geometry_id : 0});
		this.slices.push({ source_width : this.source_w - this.left - this.right, source_height : this.bottom, source_x : this.source_x + this.left, source_y : this.source_y + (this.source_h - this.bottom), pos : new phoenix_Vector(this.left,this.top + this.midheight), width : this.width - this.left - this.right, height : this.bottom, geometry_id : 0});
		this.slices.push({ source_width : this.right, source_height : this.bottom, source_x : this.source_x + (this.source_w - this.right), source_y : this.source_y + (this.source_h - this.bottom), pos : new phoenix_Vector(this.left + this.midwidth,this.top + this.midheight), width : this.right, height : this.bottom, geometry_id : 0});
		this.is_set = true;
	}
	,set_size: function(_v) {
		if(_v == null) return luxe_Visual.prototype.set_size.call(this,_v);
		if(!this.is_set) return luxe_Visual.prototype.set_size.call(this,_v);
		this.update_size(_v.x,_v.y);
		var _g = 0;
		var _g1 = this.slices;
		while(_g < _g1.length) {
			var slice = _g1[_g];
			++_g;
			if(this._geometry != null) this._geometry.quad_resize(slice.geometry_id,new phoenix_Rectangle(slice.pos.x,slice.pos.y,slice.width,slice.height));
		}
		return luxe_Visual.prototype.set_size.call(this,_v);
	}
	,_create: function(_pos,_w,_h,_reset) {
		if(_reset == null) _reset = false;
		if(!this.is_set || _reset) this.set(_w,_h);
		var _color = new phoenix_Color();
		this._geometry = new phoenix_geometry_QuadPackGeometry({ texture : this.texture, color : _color, depth : this.nineslice_options.depth, visible : this.nineslice_options.visible, batcher : this._batcher});
		var _g = 0;
		var _g1 = this.slices;
		while(_g < _g1.length) {
			var slice = _g1[_g];
			++_g;
			slice.geometry_id = this._geometry.quad_add({ x : slice.pos.x, y : slice.pos.y, w : slice.width, h : slice.height, color : this.nineslice_options.color, uv : new phoenix_Rectangle(slice.source_x,slice.source_y,slice.source_width,slice.source_height)});
		}
		this._geometry.id = this.get_name() + ".NineSlice." + this._geometry.id;
		this.set_geometry(this._geometry);
		this.set_pos(_pos);
		this.added = true;
		this.is_set = true;
	}
	,create: function(_pos,_w,_h,_reset) {
		if(_reset == null) _reset = false;
		if(this.texture != null) this._create(_pos,_w,_h,_reset);
	}
	,init: function() {
		luxe_Visual.prototype.init.call(this);
	}
	,ondestroy: function() {
		luxe_Visual.prototype.ondestroy.call(this);
	}
	,__class__: luxe_NineSlice
});
var luxe_Parcel = function(_options) {
	this.load_start_delay = 0.2;
	this.load_time_spacing = 0.05;
	this.start_load = 0.0;
	this.time_to_load = 0.0;
	if(_options == null) _options = { };
	_options;
	if(_options.system == null) _options.system = Luxe.resources;
	_options.system;
	if(_options.id == null) _options.id = Luxe.utils.uniqueid();
	_options.id;
	if(_options.oncomplete != null) this.oncomplete = _options.oncomplete;
	if(_options.onprogress != null) this.onprogress = _options.onprogress;
	if(_options.onfailed != null) this.onfailed = _options.onfailed;
	if(_options.load_time_spacing != null) this.load_time_spacing = _options.load_time_spacing;
	if(_options.load_start_delay != null) this.load_start_delay = _options.load_start_delay;
	this.state = 0;
	this.loaded = [];
	this.emitter = new luxe_Emitter();
	this.system = _options.system;
	this.id = _options.id;
	this.list = this.empty_list();
	if(_options.bytes != null) this.list.bytes = _options.bytes;
	if(_options.texts != null) this.list.texts = _options.texts;
	if(_options.jsons != null) this.list.jsons = _options.jsons;
	if(_options.textures != null) this.list.textures = _options.textures;
	if(_options.fonts != null) this.list.fonts = _options.fonts;
	if(_options.shaders != null) this.list.shaders = _options.shaders;
	if(_options.sounds != null) this.list.sounds = _options.sounds;
	this.system.track(this);
};
$hxClasses["luxe.Parcel"] = luxe_Parcel;
luxe_Parcel.__name__ = ["luxe","Parcel"];
luxe_Parcel.prototype = {
	on: function(ev,handler) {
		this.emitter.on(ev,handler);
	}
	,off: function(ev,handler) {
		this.emitter.off(ev,handler);
	}
	,emit: function(ev,data) {
		this.emitter.emit(ev,data);
	}
	,is_loaded: function(_id) {
		return HxOverrides.indexOf(this.loaded,_id,0) != -1;
	}
	,load: function(_load_id) {
		var _g = this;
		this.emitter.emit(1,this);
		this.state = 1;
		Luxe.timer.schedule(this.load_start_delay,function() {
			_g.start_load = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
			if(_load_id == null) _load_id = _g.id;
			_load_id;
			if(_g.list.bytes.length + _g.list.texts.length + _g.list.jsons.length + _g.list.textures.length + _g.list.shaders.length + _g.list.fonts.length + _g.list.sounds.length == 0) {
				_g.state = 2;
				_g.time_to_load = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start - _g.start_load;
				_g.emitter.emit(4,_g);
				if(_g.oncomplete != null) _g.oncomplete(_g);
				return;
			}
			var _index = 0;
			var _load_index = 0;
			var _g1 = 0;
			var _g2 = _g.list.bytes;
			while(_g1 < _g2.length) {
				var _bytes = [_g2[_g1]];
				++_g1;
				++_load_index;
				if(!(HxOverrides.indexOf(_g.loaded,_bytes[0].id,0) != -1)) {
					_g.loaded.push(_bytes[0].id);
					Luxe.timer.schedule(_g.load_time_spacing * _load_index,(function(_bytes) {
						return function() {
							var _item_id = _bytes[0].id;
							var _load = _g.system.load_bytes(_bytes[0].id);
							_load.then((function() {
								return function(_res) {
									_g.one_loaded(_item_id,_load_id,_res,++_index,_g.list.bytes.length + _g.list.texts.length + _g.list.jsons.length + _g.list.textures.length + _g.list.shaders.length + _g.list.fonts.length + _g.list.sounds.length);
								};
							})(),(function() {
								return function(_err) {
									_g.one_failed(_item_id,_load_id,_err,++_index,_g.list.bytes.length + _g.list.texts.length + _g.list.jsons.length + _g.list.textures.length + _g.list.shaders.length + _g.list.fonts.length + _g.list.sounds.length);
								};
							})());
						};
					})(_bytes));
				} else {
					haxe_Log.trace("   i / parcel / " + ("" + _g.id + " / already had " + _bytes[0].id + " loaded, skipped"),{ fileName : "Parcel.hx", lineNumber : 202, className : "luxe.Parcel", methodName : "load"});
					_g.one_loaded(_bytes[0].id,_load_id,_g.system.cache.get(_bytes[0].id),++_index,_g.list.bytes.length + _g.list.texts.length + _g.list.jsons.length + _g.list.textures.length + _g.list.shaders.length + _g.list.fonts.length + _g.list.sounds.length);
				}
			}
			var _g11 = 0;
			var _g21 = _g.list.texts;
			while(_g11 < _g21.length) {
				var _text = [_g21[_g11]];
				++_g11;
				++_load_index;
				if(!(HxOverrides.indexOf(_g.loaded,_text[0].id,0) != -1)) {
					_g.loaded.push(_text[0].id);
					Luxe.timer.schedule(_g.load_time_spacing * _load_index,(function(_text) {
						return function() {
							var _item_id1 = _text[0].id;
							var _load1 = _g.system.load_text(_text[0].id);
							_load1.then((function() {
								return function(_res1) {
									_g.one_loaded(_item_id1,_load_id,_res1,++_index,_g.list.bytes.length + _g.list.texts.length + _g.list.jsons.length + _g.list.textures.length + _g.list.shaders.length + _g.list.fonts.length + _g.list.sounds.length);
								};
							})(),(function() {
								return function(_err1) {
									_g.one_failed(_item_id1,_load_id,_err1,++_index,_g.list.bytes.length + _g.list.texts.length + _g.list.jsons.length + _g.list.textures.length + _g.list.shaders.length + _g.list.fonts.length + _g.list.sounds.length);
								};
							})());
						};
					})(_text));
				} else {
					haxe_Log.trace("   i / parcel / " + ("" + _g.id + " / already had " + _text[0].id + " loaded, skipped"),{ fileName : "Parcel.hx", lineNumber : 224, className : "luxe.Parcel", methodName : "load"});
					_g.one_loaded(_text[0].id,_load_id,_g.system.cache.get(_text[0].id),++_index,_g.list.bytes.length + _g.list.texts.length + _g.list.jsons.length + _g.list.textures.length + _g.list.shaders.length + _g.list.fonts.length + _g.list.sounds.length);
				}
			}
			var _g12 = 0;
			var _g22 = _g.list.jsons;
			while(_g12 < _g22.length) {
				var _json = [_g22[_g12]];
				++_g12;
				++_load_index;
				if(!(HxOverrides.indexOf(_g.loaded,_json[0].id,0) != -1)) {
					_g.loaded.push(_json[0].id);
					Luxe.timer.schedule(_g.load_time_spacing * _load_index,(function(_json) {
						return function() {
							var _item_id2 = _json[0].id;
							var _load2 = _g.system.load_json(_json[0].id);
							_load2.then((function() {
								return function(_res2) {
									_g.one_loaded(_item_id2,_load_id,_res2,++_index,_g.list.bytes.length + _g.list.texts.length + _g.list.jsons.length + _g.list.textures.length + _g.list.shaders.length + _g.list.fonts.length + _g.list.sounds.length);
								};
							})(),(function() {
								return function(_err2) {
									_g.one_failed(_item_id2,_load_id,_err2,++_index,_g.list.bytes.length + _g.list.texts.length + _g.list.jsons.length + _g.list.textures.length + _g.list.shaders.length + _g.list.fonts.length + _g.list.sounds.length);
								};
							})());
						};
					})(_json));
				} else {
					haxe_Log.trace("   i / parcel / " + ("" + _g.id + " / already had " + _json[0].id + " loaded, skipped"),{ fileName : "Parcel.hx", lineNumber : 246, className : "luxe.Parcel", methodName : "load"});
					_g.one_loaded(_json[0].id,_load_id,_g.system.cache.get(_json[0].id),++_index,_g.list.bytes.length + _g.list.texts.length + _g.list.jsons.length + _g.list.textures.length + _g.list.shaders.length + _g.list.fonts.length + _g.list.sounds.length);
				}
			}
			var _g13 = 0;
			var _g23 = _g.list.textures;
			while(_g13 < _g23.length) {
				var _texture = [_g23[_g13]];
				++_g13;
				++_load_index;
				if(!(HxOverrides.indexOf(_g.loaded,_texture[0].id,0) != -1)) {
					_g.loaded.push(_texture[0].id);
					Luxe.timer.schedule(_g.load_time_spacing * _load_index,(function(_texture) {
						return function() {
							var _load3 = _g.system.load_texture(_texture[0].id,{ load_premultiply_alpha : _texture[0].load_premultiply_alpha, filter_min : _texture[0].filter_min, filter_mag : _texture[0].filter_mag, clamp_s : _texture[0].clamp_s, clamp_t : _texture[0].clamp_t});
							var _item_id3 = _texture[0].id;
							_load3.then((function() {
								return function(_res3) {
									_g.one_loaded(_item_id3,_load_id,_res3,++_index,_g.list.bytes.length + _g.list.texts.length + _g.list.jsons.length + _g.list.textures.length + _g.list.shaders.length + _g.list.fonts.length + _g.list.sounds.length);
								};
							})(),(function() {
								return function(_err3) {
									_g.one_failed(_item_id3,_load_id,_err3,++_index,_g.list.bytes.length + _g.list.texts.length + _g.list.jsons.length + _g.list.textures.length + _g.list.shaders.length + _g.list.fonts.length + _g.list.sounds.length);
								};
							})());
						};
					})(_texture));
				} else {
					haxe_Log.trace("   i / parcel / " + ("" + _g.id + " / already had " + _texture[0].id + " loaded, skipped"),{ fileName : "Parcel.hx", lineNumber : 276, className : "luxe.Parcel", methodName : "load"});
					_g.one_loaded(_texture[0].id,_load_id,_g.system.cache.get(_texture[0].id),++_index,_g.list.bytes.length + _g.list.texts.length + _g.list.jsons.length + _g.list.textures.length + _g.list.shaders.length + _g.list.fonts.length + _g.list.sounds.length);
				}
			}
			var _g14 = 0;
			var _g24 = _g.list.fonts;
			while(_g14 < _g24.length) {
				var _font = [_g24[_g14]];
				++_g14;
				++_load_index;
				if(!(HxOverrides.indexOf(_g.loaded,_font[0].id,0) != -1)) {
					_g.loaded.push(_font[0].id);
					Luxe.timer.schedule(_g.load_time_spacing * _load_index,(function(_font) {
						return function() {
							var _load4 = _g.system.load_font(_font[0].id,{ texture_path : _font[0].texture_path});
							var _item_id4 = _font[0].id;
							_load4.then((function() {
								return function(_res4) {
									_g.one_loaded(_item_id4,_load_id,_res4,++_index,_g.list.bytes.length + _g.list.texts.length + _g.list.jsons.length + _g.list.textures.length + _g.list.shaders.length + _g.list.fonts.length + _g.list.sounds.length);
								};
							})(),(function() {
								return function(_err4) {
									_g.one_failed(_item_id4,_load_id,_err4,++_index,_g.list.bytes.length + _g.list.texts.length + _g.list.jsons.length + _g.list.textures.length + _g.list.shaders.length + _g.list.fonts.length + _g.list.sounds.length);
								};
							})());
						};
					})(_font));
				} else {
					haxe_Log.trace("   i / parcel / " + ("" + _g.id + " / already had " + _font[0].id + " loaded, skipped"),{ fileName : "Parcel.hx", lineNumber : 302, className : "luxe.Parcel", methodName : "load"});
					_g.one_loaded(_font[0].id,_load_id,_g.system.cache.get(_font[0].id),++_index,_g.list.bytes.length + _g.list.texts.length + _g.list.jsons.length + _g.list.textures.length + _g.list.shaders.length + _g.list.fonts.length + _g.list.sounds.length);
				}
			}
			var _g15 = 0;
			var _g25 = _g.list.shaders;
			while(_g15 < _g25.length) {
				var _shader = [_g25[_g15]];
				++_g15;
				++_load_index;
				if(!(HxOverrides.indexOf(_g.loaded,_shader[0].id,0) != -1)) {
					_g.loaded.push(_shader[0].id);
					Luxe.timer.schedule(_g.load_time_spacing * _load_index,(function(_shader) {
						return function() {
							var _load5 = _g.system.load_shader(_shader[0].id,{ frag_id : _shader[0].frag_id, vert_id : _shader[0].vert_id});
							var _item_id5 = _shader[0].id;
							_load5.then((function() {
								return function(_res5) {
									_g.one_loaded(_item_id5,_load_id,_res5,++_index,_g.list.bytes.length + _g.list.texts.length + _g.list.jsons.length + _g.list.textures.length + _g.list.shaders.length + _g.list.fonts.length + _g.list.sounds.length);
								};
							})(),(function() {
								return function(_err5) {
									_g.one_failed(_item_id5,_load_id,_err5,++_index,_g.list.bytes.length + _g.list.texts.length + _g.list.jsons.length + _g.list.textures.length + _g.list.shaders.length + _g.list.fonts.length + _g.list.sounds.length);
								};
							})());
						};
					})(_shader));
				} else {
					haxe_Log.trace("   i / parcel / " + ("" + _g.id + " / already had " + _shader[0].id + " loaded, skipped"),{ fileName : "Parcel.hx", lineNumber : 329, className : "luxe.Parcel", methodName : "load"});
					_g.one_loaded(_shader[0].id,_load_id,_g.system.cache.get(_shader[0].id),++_index,_g.list.bytes.length + _g.list.texts.length + _g.list.jsons.length + _g.list.textures.length + _g.list.shaders.length + _g.list.fonts.length + _g.list.sounds.length);
				}
			}
			var _g16 = 0;
			var _g26 = _g.list.sounds;
			while(_g16 < _g26.length) {
				var _sound = [_g26[_g16]];
				++_g16;
				++_load_index;
				if(!(HxOverrides.indexOf(_g.loaded,_sound[0].id,0) != -1)) {
					_g.loaded.push(_sound[0].id);
					Luxe.timer.schedule(_g.load_time_spacing * _load_index,(function(_sound) {
						return function() {
							var _load6 = _g.system.load_audio(_sound[0].id,{ is_stream : _sound[0].is_stream});
							var _item_id6 = _sound[0].id;
							_load6.then((function() {
								return function(_res6) {
									_g.one_loaded(_item_id6,_load_id,_res6,++_index,_g.list.bytes.length + _g.list.texts.length + _g.list.jsons.length + _g.list.textures.length + _g.list.shaders.length + _g.list.fonts.length + _g.list.sounds.length);
								};
							})(),(function() {
								return function(_err6) {
									_g.one_failed(_item_id6,_load_id,_err6,++_index,_g.list.bytes.length + _g.list.texts.length + _g.list.jsons.length + _g.list.textures.length + _g.list.shaders.length + _g.list.fonts.length + _g.list.sounds.length);
								};
							})());
						};
					})(_sound));
				} else {
					haxe_Log.trace("   i / parcel / " + ("" + _g.id + " / already had " + _sound[0].id + " loaded, skipped"),{ fileName : "Parcel.hx", lineNumber : 355, className : "luxe.Parcel", methodName : "load"});
					_g.one_loaded(_sound[0].id,_load_id,_g.system.cache.get(_sound[0].id),++_index,_g.list.bytes.length + _g.list.texts.length + _g.list.jsons.length + _g.list.textures.length + _g.list.shaders.length + _g.list.fonts.length + _g.list.sounds.length);
				}
			}
		});
	}
	,unload: function(_empty_list) {
		if(_empty_list == null) _empty_list = false;
		var _g = this;
		this.emitter.emit(2,this);
		var _g1 = 0;
		var _g11 = this.list.bytes;
		while(_g1 < _g11.length) {
			var item = _g11[_g1];
			++_g1;
			var _id = item.id;
			_g.system.destroy(_id);
			HxOverrides.remove(_g.loaded,_id);
		}
		var _g2 = 0;
		var _g12 = this.list.texts;
		while(_g2 < _g12.length) {
			var item1 = _g12[_g2];
			++_g2;
			var _id1 = item1.id;
			_g.system.destroy(_id1);
			HxOverrides.remove(_g.loaded,_id1);
		}
		var _g3 = 0;
		var _g13 = this.list.jsons;
		while(_g3 < _g13.length) {
			var item2 = _g13[_g3];
			++_g3;
			var _id2 = item2.id;
			_g.system.destroy(_id2);
			HxOverrides.remove(_g.loaded,_id2);
		}
		var _g4 = 0;
		var _g14 = this.list.textures;
		while(_g4 < _g14.length) {
			var item3 = _g14[_g4];
			++_g4;
			var _id3 = item3.id;
			_g.system.destroy(_id3);
			HxOverrides.remove(_g.loaded,_id3);
		}
		var _g5 = 0;
		var _g15 = this.list.fonts;
		while(_g5 < _g15.length) {
			var item4 = _g15[_g5];
			++_g5;
			var _id4 = item4.id;
			_g.system.destroy(_id4);
			HxOverrides.remove(_g.loaded,_id4);
		}
		var _g6 = 0;
		var _g16 = this.list.shaders;
		while(_g6 < _g16.length) {
			var item5 = _g16[_g6];
			++_g6;
			var _id5 = item5.id;
			_g.system.destroy(_id5);
			HxOverrides.remove(_g.loaded,_id5);
		}
		var _g7 = 0;
		var _g17 = this.list.sounds;
		while(_g7 < _g17.length) {
			var item6 = _g17[_g7];
			++_g7;
			var _id6 = item6.id;
			_g.system.destroy(_id6);
			HxOverrides.remove(_g.loaded,_id6);
		}
		if(_empty_list) {
			this.list = null;
			this.list = this.empty_list();
		}
		this.state = 0;
	}
	,from_json: function(_json_object) {
		if(_json_object == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_json_object was null" + ""));
		if(_json_object.bytes != null) {
			var _bytes = _json_object.bytes;
			var _g = 0;
			while(_g < _bytes.length) {
				var item = _bytes[_g];
				++_g;
				if(item != null) {
					if(item == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("item was null" + ""));
					if(item.id == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("item.id was null" + ""));
					this.list.bytes.push(item);
				}
			}
		}
		if(_json_object.text != null) {
			var _texts = _json_object.text;
			var _g1 = 0;
			while(_g1 < _texts.length) {
				var item1 = _texts[_g1];
				++_g1;
				if(item1 != null) {
					if(item1 == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("item was null" + ""));
					if(item1.id == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("item.id was null" + ""));
					this.list.texts.push(item1);
				}
			}
		}
		if(_json_object.json != null) {
			var _jsons = _json_object.json;
			var _g2 = 0;
			while(_g2 < _jsons.length) {
				var item2 = _jsons[_g2];
				++_g2;
				if(item2 != null) {
					if(item2 == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("item was null" + ""));
					if(item2.id == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("item.id was null" + ""));
					this.list.jsons.push(item2);
				}
			}
		}
		if(_json_object.textures != null) {
			var _textures = _json_object.textures;
			var _g3 = 0;
			while(_g3 < _textures.length) {
				var item3 = _textures[_g3];
				++_g3;
				if(item3 == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("item was null" + ""));
				if(item3.id == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("item.id was null" + ""));
				this.list.textures.push({ id : item3.id, filter_min : (function($this) {
					var $r;
					var _filter_type = item3.filter_min;
					$r = _filter_type == null?null:(function($this) {
						var $r;
						if(!(_filter_type == "nearest" || _filter_type == "linear")) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("_filter_type == 'nearest' || _filter_type == 'linear'" + ""));
						$r = (function($this) {
							var $r;
							switch(_filter_type) {
							case "nearest":
								$r = 9728;
								break;
							case "linear":
								$r = 9729;
								break;
							default:
								$r = null;
							}
							return $r;
						}($this));
						return $r;
					}($this));
					return $r;
				}(this)), filter_mag : (function($this) {
					var $r;
					var _filter_type1 = item3.filter_mag;
					$r = _filter_type1 == null?null:(function($this) {
						var $r;
						if(!(_filter_type1 == "nearest" || _filter_type1 == "linear")) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("_filter_type == 'nearest' || _filter_type == 'linear'" + ""));
						$r = (function($this) {
							var $r;
							switch(_filter_type1) {
							case "nearest":
								$r = 9728;
								break;
							case "linear":
								$r = 9729;
								break;
							default:
								$r = null;
							}
							return $r;
						}($this));
						return $r;
					}($this));
					return $r;
				}(this)), clamp_s : (function($this) {
					var $r;
					var _clamp_type = item3.clamp_s;
					$r = _clamp_type == null?null:(function($this) {
						var $r;
						if(!(_clamp_type == "edge" || _clamp_type == "repeat" || _clamp_type == "mirror")) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("_clamp_type == 'edge' || _clamp_type == 'repeat' || _clamp_type == 'mirror'" + ""));
						$r = (function($this) {
							var $r;
							switch(_clamp_type) {
							case "edge":
								$r = 33071;
								break;
							case "mirror":
								$r = 33648;
								break;
							case "repeat":
								$r = 10497;
								break;
							default:
								$r = null;
							}
							return $r;
						}($this));
						return $r;
					}($this));
					return $r;
				}(this)), clamp_t : (function($this) {
					var $r;
					var _clamp_type1 = item3.clamp_t;
					$r = _clamp_type1 == null?null:(function($this) {
						var $r;
						if(!(_clamp_type1 == "edge" || _clamp_type1 == "repeat" || _clamp_type1 == "mirror")) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("_clamp_type == 'edge' || _clamp_type == 'repeat' || _clamp_type == 'mirror'" + ""));
						$r = (function($this) {
							var $r;
							switch(_clamp_type1) {
							case "edge":
								$r = 33071;
								break;
							case "mirror":
								$r = 33648;
								break;
							case "repeat":
								$r = 10497;
								break;
							default:
								$r = null;
							}
							return $r;
						}($this));
						return $r;
					}($this));
					return $r;
				}(this)), load_premultiply_alpha : item3.load_premultiply_alpha});
			}
		}
		if(_json_object.fonts != null) {
			var _fonts = _json_object.fonts;
			var _g4 = 0;
			while(_g4 < _fonts.length) {
				var item4 = _fonts[_g4];
				++_g4;
				if(item4 != null) {
					if(item4 == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("item was null" + ""));
					if(item4.id == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("item.id was null" + ""));
					this.list.fonts.push(item4);
				}
			}
		}
		if(_json_object.shaders != null) {
			var _shaders = _json_object.shaders;
			var _g5 = 0;
			while(_g5 < _shaders.length) {
				var item5 = _shaders[_g5];
				++_g5;
				if(item5 != null) {
					if(item5 == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("item was null" + ""));
					if(item5.id == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("item.id was null" + ""));
					if(item5.frag_id == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("item.frag_id was null" + ""));
					if(item5.vert_id == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("item.vert_id was null" + ""));
					this.list.shaders.push(item5);
				}
			}
		}
		if(_json_object.sounds != null) {
			var _sounds = _json_object.sounds;
			var _g6 = 0;
			while(_g6 < _sounds.length) {
				var item6 = _sounds[_g6];
				++_g6;
				if(item6 != null) {
					if(item6 == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("item was null" + ""));
					if(item6.id == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("item.id was null" + ""));
					this.list.sounds.push(item6);
				}
			}
		}
	}
	,one_loaded: function(_item_id,_load_id,_resource,_index,_total) {
		var _state = { id : _item_id, load_id : _load_id, resource : _resource, index : _index, total : _total};
		this.emitter.emit(3,_state);
		if(this.onprogress != null) this.onprogress(_state);
		if(_index == _total) {
			this.state = 2;
			this.time_to_load = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start - this.start_load;
			this.emitter.emit(4,this);
			if(this.oncomplete != null) this.oncomplete(this);
		}
	}
	,one_failed: function(_item_id,_load_id,_error,_index,_total) {
		var _state = { id : _item_id, load_id : _load_id, error : _error, index : _index, total : _total};
		this.emitter.emit(5,_state);
		if(this.onfailed != null) this.onfailed(_state);
	}
	,get_listed: function() {
		var _result = [];
		var _g = 0;
		var _g1 = this.list.bytes;
		while(_g < _g1.length) {
			var item = _g1[_g];
			++_g;
			_result.push(item.id);
		}
		var _g2 = 0;
		var _g11 = this.list.texts;
		while(_g2 < _g11.length) {
			var item1 = _g11[_g2];
			++_g2;
			_result.push(item1.id);
		}
		var _g3 = 0;
		var _g12 = this.list.jsons;
		while(_g3 < _g12.length) {
			var item2 = _g12[_g3];
			++_g3;
			_result.push(item2.id);
		}
		var _g4 = 0;
		var _g13 = this.list.textures;
		while(_g4 < _g13.length) {
			var item3 = _g13[_g4];
			++_g4;
			_result.push(item3.id);
		}
		var _g5 = 0;
		var _g14 = this.list.fonts;
		while(_g5 < _g14.length) {
			var item4 = _g14[_g5];
			++_g5;
			_result.push(item4.id);
		}
		var _g6 = 0;
		var _g15 = this.list.shaders;
		while(_g6 < _g15.length) {
			var item5 = _g15[_g6];
			++_g6;
			_result.push(item5.id);
		}
		var _g7 = 0;
		var _g16 = this.list.sounds;
		while(_g7 < _g16.length) {
			var item6 = _g16[_g7];
			++_g7;
			_result.push(item6.id);
		}
		return _result;
	}
	,get_length: function() {
		return this.list.bytes.length + this.list.texts.length + this.list.jsons.length + this.list.textures.length + this.list.shaders.length + this.list.fonts.length + this.list.sounds.length;
	}
	,do_complete: function(_load_id) {
		this.state = 2;
		this.time_to_load = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start - this.start_load;
		this.emitter.emit(4,this);
		if(this.oncomplete != null) this.oncomplete(this);
	}
	,empty_list: function() {
		return { bytes : [], texts : [], jsons : [], textures : [], fonts : [], shaders : [], sounds : []};
	}
	,__class__: luxe_Parcel
	,__properties__: {get_length:"get_length",get_listed:"get_listed"}
};
var luxe_ParcelProgress = function(_options) {
	this.fade_alpha = 0;
	this.height = 0;
	this.width = 0;
	var _view_width = Luxe.core.screen.get_w();
	var _view_height = Luxe.core.screen.get_h();
	if(Luxe.camera.get_size() != null) {
		_view_width = Luxe.camera.get_size().x;
		_view_height = Luxe.camera.get_size().y;
	}
	var _view_mid_x = Math.floor(_view_width / 2);
	var _view_mid_y = Math.floor(_view_height / 2);
	this.width = Math.max(Math.floor(_view_width * 0.75),2);
	this.height = Math.max(Math.floor(_view_height * 0.002),2);
	this.options = _options;
	if(this.options.no_visuals == null) this.options.no_visuals = false;
	this.options.no_visuals;
	if(this.options.bar == null) this.options.bar = new phoenix_Color().rgb(3421236);
	this.options.bar;
	if(this.options.bar_border == null) this.options.bar_border = new phoenix_Color().rgb(1447446);
	this.options.bar_border;
	if(this.options.background == null) this.options.background = new phoenix_Color().rgb(592137);
	this.options.background;
	if(this.options.fade_in == null) this.options.fade_in = true;
	this.options.fade_in;
	if(this.options.fade_out == null) this.options.fade_out = true;
	this.options.fade_out;
	if(this.options.fade_time == null) this.options.fade_time = 0.3;
	this.options.fade_time;
	this.fade_alpha = this.options.background.a;
	if(!this.options.no_visuals) {
		if(this.options.fade_in) {
			this.options.background.a = 0;
			this.options.bar.a = 0;
			this.options.bar_border.a = 0;
		}
		var _ypos = Math.floor(_view_height * 0.60);
		var _half_width = Math.floor(this.width / 2);
		var _half_height = Math.floor(this.height / 2);
		this.background = new luxe_Sprite({ no_scene : true, size : new phoenix_Vector(_view_width,_view_height), centered : false, color : this.options.background, depth : 998, visible : true});
		this.progress_bar = new luxe_Sprite({ pos : new phoenix_Vector(_view_mid_x - _half_width,_ypos - _half_height), size : new phoenix_Vector(2,this.height), no_scene : true, centered : false, color : this.options.bar, depth : 998});
		this.progress_border = new luxe_Visual({ color : this.options.bar, no_scene : true, pos : new phoenix_Vector(_view_mid_x - _half_width,_ypos - _half_height), geometry : Luxe.draw.rectangle({ w : this.width, h : this.height, depth : 998.1}), depth : 998.1});
		if(this.options.fade_in) {
			this.background.color.tween(this.options.fade_time,{ a : this.fade_alpha},true);
			this.progress_bar.color.tween(this.options.fade_time,{ a : 1},true);
			this.progress_border.color.tween(this.options.fade_time,{ a : 1},true);
		}
	}
	this.options.parcel.emitter.on(1,$bind(this,this.onbegin));
	this.options.parcel.emitter.on(3,$bind(this,this.onprogress));
	this.options.parcel.emitter.on(4,$bind(this,this.oncomplete));
};
$hxClasses["luxe.ParcelProgress"] = luxe_ParcelProgress;
luxe_ParcelProgress.__name__ = ["luxe","ParcelProgress"];
luxe_ParcelProgress.prototype = {
	set_progress: function(amount) {
		if(amount < 0) amount = 0;
		if(amount > 1) amount = 1;
		if(!this.options.no_visuals) this.progress_bar.size.set_x(Math.ceil(this.width * amount));
	}
	,onbegin: function(_parcel) {
		this.set_progress(0);
		if(!this.options.no_visuals) {
			if(this.options.fade_in) {
				this.options.background.a = 0;
				this.options.bar.a = 0;
				this.options.bar_border.a = 0;
				this.background.color.tween(this.options.fade_time,{ a : this.fade_alpha},true);
				this.progress_bar.color.tween(this.options.fade_time,{ a : 1},true);
				this.progress_border.color.tween(this.options.fade_time,{ a : 1},true);
			} else {
				this.options.background.a = 1;
				this.options.bar.a = 1;
				this.options.bar_border.a = 1;
			}
		}
	}
	,onprogress: function(_state) {
		var _amount = _state.index / _state.total;
		this.set_progress(_amount);
	}
	,oncomplete: function(_parcel) {
		if(!this.options.no_visuals && this.options.fade_out) {
			this.do_complete();
			this.background.color.tween(this.options.fade_time,{ a : 0},true);
			this.progress_bar.color.tween(this.options.fade_time,{ a : 0},true);
			this.progress_border.color.tween(this.options.fade_time,{ a : 0},true);
		} else this.do_complete();
	}
	,do_complete: function() {
		if(this.options.oncomplete != null) this.options.oncomplete(this.options.parcel);
	}
	,__class__: luxe_ParcelProgress
};
var luxe_Physics = function(_core) {
	this.step_delta = 0.016666666666666666;
	this.step_rate = 0.016666666666666666;
	this.core = _core;
	this.emitter = new luxe_Emitter();
};
$hxClasses["luxe.Physics"] = luxe_Physics;
luxe_Physics.__name__ = ["luxe","Physics"];
luxe_Physics.prototype = {
	init: function() {
		this.engines = [];
	}
	,reset: function() {
		if(this.timer != null) {
			this.timer.stop();
			this.timer = null;
		}
		if(this.step_rate != 0) this.timer = Luxe.timer.schedule(this.step_rate,$bind(this,this.fixed_update),true);
	}
	,fixed_update: function() {
		Luxe.debug.start(luxe_Physics.tag_physics);
		this.emitter.emit(1,this.step_delta * Luxe.core.timescale);
		this.update();
		this.emitter.emit(2,this.step_delta * Luxe.core.timescale);
		Luxe.debug.end(luxe_Physics.tag_physics);
	}
	,add_engine: function(type,_data) {
		var _engine_instance = Type.createInstance(type,[_data]);
		var _physics_engine = _engine_instance;
		_physics_engine.init();
		this.engines.push(_physics_engine);
		return _engine_instance;
	}
	,update: function() {
		var _g = 0;
		var _g1 = this.engines;
		while(_g < _g1.length) {
			var engine = _g1[_g];
			++_g;
			engine.update();
		}
	}
	,process: function() {
		var _g = 0;
		var _g1 = this.engines;
		while(_g < _g1.length) {
			var engine = _g1[_g];
			++_g;
			engine.process();
		}
	}
	,render: function() {
		var _g = 0;
		var _g1 = this.engines;
		while(_g < _g1.length) {
			var engine = _g1[_g];
			++_g;
			engine.render();
		}
	}
	,destroy: function() {
		if(this.timer != null) this.timer.stop();
		this.timer = null;
		var _g = 0;
		var _g1 = this.engines;
		while(_g < _g1.length) {
			var engine = _g1[_g];
			++_g;
			engine.destroy();
		}
	}
	,on: function(_event,_handler) {
		this.emitter.on(_event,_handler);
	}
	,off: function(_event,_handler) {
		return this.emitter.off(_event,_handler);
	}
	,emit: function(_event,_float) {
		this.emitter.emit(_event,_float);
	}
	,set_step_rate: function(_rate) {
		this.step_rate = _rate;
		this.step_delta = this.step_rate;
		this.reset();
		return this.step_rate;
	}
	,__class__: luxe_Physics
	,__properties__: {set_step_rate:"set_step_rate"}
};
var luxe_PhysicsEngine = function() {
	this.draw = true;
	this.paused = false;
	this.name = "engine";
	this.set_gravity(new phoenix_Vector(0,-9.8,0));
	Luxe.on(10,$bind(this,this._render));
};
$hxClasses["luxe.PhysicsEngine"] = luxe_PhysicsEngine;
luxe_PhysicsEngine.__name__ = ["luxe","PhysicsEngine"];
luxe_PhysicsEngine.prototype = {
	init: function() {
	}
	,_render: function(_) {
		this.render();
	}
	,process: function() {
	}
	,update: function() {
	}
	,render: function() {
	}
	,destroy: function() {
	}
	,get_paused: function() {
		return this.paused;
	}
	,set_paused: function(_pause) {
		return this.paused = _pause;
	}
	,get_draw: function() {
		return this.draw;
	}
	,set_draw: function(_draw) {
		return this.draw = _draw;
	}
	,get_gravity: function() {
		return this.gravity;
	}
	,set_gravity: function(_gravity) {
		return this.gravity = _gravity;
	}
	,__class__: luxe_PhysicsEngine
	,__properties__: {set_draw:"set_draw",get_draw:"get_draw",set_gravity:"set_gravity",get_gravity:"get_gravity",set_paused:"set_paused",get_paused:"get_paused"}
};
var luxe_Resources = function() {
	this.parcels = [];
	this.emitter = new luxe_Emitter();
	this.cache = new haxe_ds_StringMap();
	this.stats = new luxe_ResourceStats();
};
$hxClasses["luxe.Resources"] = luxe_Resources;
luxe_Resources.__name__ = ["luxe","Resources"];
luxe_Resources.prototype = {
	track: function(_cache) {
		if(_cache == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_cache was null" + ""));
		if(!(HxOverrides.indexOf(this.parcels,_cache,0) == -1)) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("parcels.indexOf(_cache) == -1" + ""));
		this.parcels.push(_cache);
		this.emit(11,_cache);
	}
	,untrack: function(_cache) {
		if(_cache == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_cache was null" + ""));
		var _removed = HxOverrides.remove(this.parcels,_cache);
		if(_removed) this.emit(12,_cache);
	}
	,add: function(resource) {
		if(!(!this.cache.exists(resource.id))) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("!cache.exists(resource.id)" + ""));
		this.cache.set(resource.id,resource);
		this.emit(2,resource);
		this.update_stats(resource,1);
	}
	,remove: function(resource) {
		if(!this.cache.exists(resource.id)) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("cache.exists(resource.id)" + ""));
		this.emit(7,resource);
		this.update_stats(resource,-1);
		return this.cache.remove(resource.id);
	}
	,destroy: function(_id,_force) {
		if(_force == null) _force = false;
		var _resource = this.cache.get(_id);
		if(_resource == null) return false;
		_resource.destroy(_force);
		return true;
	}
	,invalidate: function(_id) {
		var _resource = this.cache.get(_id);
		if(_resource == null) return false;
		_resource.invalidate();
		return true;
	}
	,on: function(ev,handler) {
		this.emitter.on(ev,handler);
	}
	,off: function(ev,handler) {
		this.emitter.off(ev,handler);
	}
	,emit: function(ev,data) {
		this.emitter.emit(1,data);
		this.emitter.emit(ev,data);
	}
	,load_bytes: function(_id) {
		if(_id == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_id was null" + ""));
		var _resource = this.cache.get(_id);
		if(_resource != null) {
			var _g = _resource;
			var _g1 = _g.ref;
			_g.set_ref(_g1 + 1);
			_g1;
			return snow_api_Promise.resolve(_resource);
		}
		_resource = new luxe_resource_BytesResource({ id : _id, system : this, asset : null});
		this.add(_resource);
		return _resource.reload();
	}
	,load_text: function(_id) {
		if(_id == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_id was null" + ""));
		var _resource = this.cache.get(_id);
		if(_resource != null) {
			var _g = _resource;
			var _g1 = _g.ref;
			_g.set_ref(_g1 + 1);
			_g1;
			return snow_api_Promise.resolve(_resource);
		}
		_resource = new luxe_resource_TextResource({ id : _id, system : this, asset : null});
		this.add(_resource);
		return _resource.reload();
	}
	,load_json: function(_id) {
		if(_id == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_id was null" + ""));
		var _resource = this.cache.get(_id);
		if(_resource != null) {
			var _g = _resource;
			var _g1 = _g.ref;
			_g.set_ref(_g1 + 1);
			_g1;
			return snow_api_Promise.resolve(_resource);
		}
		_resource = new luxe_resource_JSONResource({ id : _id, system : this, asset : null});
		this.add(_resource);
		return _resource.reload();
	}
	,load_texture: function(_id,_options) {
		if(_id == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_id was null" + ""));
		var _resource = this.cache.get(_id);
		if(_resource != null) {
			var _g = _resource;
			var _g1 = _g.ref;
			_g.set_ref(_g1 + 1);
			_g1;
			return snow_api_Promise.resolve(_resource);
		}
		var _filter_min = null;
		var _filter_mag = null;
		var _clamp_s = null;
		var _clamp_t = null;
		var _premultiply = null;
		if(_options != null) {
			_filter_min = _options.filter_min;
			_filter_mag = _options.filter_mag;
			_clamp_s = _options.clamp_s;
			_clamp_t = _options.clamp_t;
			_premultiply = _options.load_premultiply_alpha;
		}
		_resource = new phoenix_Texture({ id : _id, system : this, filter_min : _filter_min, filter_mag : _filter_mag, clamp_s : _clamp_s, clamp_t : _clamp_t, load_premultiply_alpha : _premultiply});
		this.add(_resource);
		return _resource.reload();
	}
	,load_font: function(_id,_options) {
		if(_id == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_id was null" + ""));
		var _resource = this.cache.get(_id);
		if(_resource != null) {
			var _g = _resource;
			var _g1 = _g.ref;
			_g.set_ref(_g1 + 1);
			_g1;
			return snow_api_Promise.resolve(_resource);
		}
		var _texture_path = null;
		if(_options != null) _texture_path = _options.texture_path;
		_resource = new phoenix_BitmapFont({ id : _id, system : this, texture_path : _texture_path});
		this.add(_resource);
		return _resource.reload();
	}
	,load_shader: function(_id,_options) {
		if(_id == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_id was null" + ""));
		var _resource = this.cache.get(_id);
		if(_resource != null) {
			var _g = _resource;
			var _g1 = _g.ref;
			_g.set_ref(_g1 + 1);
			_g1;
			return snow_api_Promise.resolve(_resource);
		}
		_resource = new phoenix_Shader({ id : _id, system : this, frag_id : _options.frag_id, vert_id : _options.vert_id});
		this.add(_resource);
		return _resource.reload();
	}
	,load_audio: function(_id,_options) {
		if(_id == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_id was null" + ""));
		var _resource = this.cache.get(_id);
		if(_resource != null) {
			var _g = _resource;
			var _g1 = _g.ref;
			_g.set_ref(_g1 + 1);
			_g1;
			return snow_api_Promise.resolve(_resource);
		}
		var _is_stream = false;
		if(_options != null) _is_stream = _options.is_stream;
		_resource = new luxe_resource_AudioResource({ id : _id, system : this, asset : null, is_stream : _is_stream});
		this.add(_resource);
		return _resource.reload();
	}
	,has: function(_id) {
		return this.cache.exists(_id);
	}
	,get: function(_id) {
		return this.cache.get(_id);
	}
	,bytes: function(_id) {
		return this.cache.get(_id);
	}
	,text: function(_id) {
		return this.cache.get(_id);
	}
	,json: function(_id) {
		return this.cache.get(_id);
	}
	,texture: function(_id) {
		return this.cache.get(_id);
	}
	,font: function(_id) {
		return this.cache.get(_id);
	}
	,shader: function(_id) {
		return this.cache.get(_id);
	}
	,audio: function(_id) {
		return this.cache.get(_id);
	}
	,fetch: function(_id) {
		return this.cache.get(_id);
	}
	,update_stats: function(_res,_offset) {
		var _g = _res.resource_type;
		switch(_g) {
		case 0:
			this.stats.unknown += _offset;
			break;
		case 3:
			this.stats.bytes += _offset;
			break;
		case 1:
			this.stats.texts += _offset;
			break;
		case 2:
			this.stats.jsons += _offset;
			break;
		case 4:
			this.stats.textures += _offset;
			break;
		case 5:
			this.stats.rtt += _offset;
			break;
		case 6:
			this.stats.fonts += _offset;
			break;
		case 7:
			this.stats.shaders += _offset;
			break;
		case 8:
			this.stats.audios += _offset;
			break;
		}
		this.stats.total += _offset;
	}
	,__class__: luxe_Resources
};
var luxe_ResourceStats = function() {
	this.unknown = 0;
	this.audios = 0;
	this.bytes = 0;
	this.jsons = 0;
	this.texts = 0;
	this.shaders = 0;
	this.rtt = 0;
	this.textures = 0;
	this.fonts = 0;
	this.total = 0;
};
$hxClasses["luxe.ResourceStats"] = luxe_ResourceStats;
luxe_ResourceStats.__name__ = ["luxe","ResourceStats"];
luxe_ResourceStats.prototype = {
	toString: function() {
		return "Resource Statistics\n" + "\ttotal : " + this.total + "\n" + "\ttexture : " + this.textures + " \n" + "" + "\trender texture : " + this.rtt + " \n" + "\tfont : " + this.fonts + "\n" + "\tshader : " + this.shaders + "\n" + "\ttext : " + this.texts + "\n" + "\tjson : " + this.jsons + "\n" + "\tbytes : " + this.bytes + "\n" + "\taudios : " + this.audios + "\n" + "\tunknown : " + this.unknown;
	}
	,reset: function() {
		this.total = 0;
		this.fonts = 0;
		this.textures = 0;
		this.rtt = 0;
		this.shaders = 0;
		this.texts = 0;
		this.jsons = 0;
		this.bytes = 0;
		this.audios = 0;
		this.unknown = 0;
	}
	,__class__: luxe_ResourceStats
};
var luxe_Scene = function(_name) {
	if(_name == null) _name = "untitled scene";
	this.entity_count = 0;
	this._has_changed = false;
	this.destroyed = false;
	this.length = 0;
	this.started = false;
	this.inited = false;
	luxe_Objects.call(this,_name);
	this.entities = new haxe_ds_StringMap();
	this._delayed_init_entities = [];
	this._delayed_reset_entities = [];
	Luxe.core.emitter.on(2,$bind(this,this.init));
	Luxe.core.emitter.on(8,$bind(this,this._destroy));
	Luxe.core.emitter.on(6,$bind(this,this.update));
	Luxe.core.emitter.on(9,$bind(this,this.prerender));
	Luxe.core.emitter.on(11,$bind(this,this.postrender));
	Luxe.core.emitter.on(10,$bind(this,this.render));
	Luxe.core.emitter.on(12,$bind(this,this.keydown));
	Luxe.core.emitter.on(13,$bind(this,this.keyup));
	Luxe.core.emitter.on(14,$bind(this,this.textinput));
	Luxe.core.emitter.on(16,$bind(this,this.inputup));
	Luxe.core.emitter.on(15,$bind(this,this.inputdown));
	Luxe.core.emitter.on(18,$bind(this,this.mouseup));
	Luxe.core.emitter.on(17,$bind(this,this.mousedown));
	Luxe.core.emitter.on(19,$bind(this,this.mousemove));
	Luxe.core.emitter.on(20,$bind(this,this.mousewheel));
	Luxe.core.emitter.on(22,$bind(this,this.touchup));
	Luxe.core.emitter.on(21,$bind(this,this.touchdown));
	Luxe.core.emitter.on(23,$bind(this,this.touchmove));
	Luxe.core.emitter.on(26,$bind(this,this.gamepadup));
	Luxe.core.emitter.on(25,$bind(this,this.gamepaddown));
	Luxe.core.emitter.on(24,$bind(this,this.gamepadaxis));
	Luxe.core.emitter.on(27,$bind(this,this.gamepaddevice));
	Luxe.core.emitter.on(29,$bind(this,this.windowmoved));
	Luxe.core.emitter.on(30,$bind(this,this.windowresized));
	Luxe.core.emitter.on(31,$bind(this,this.windowsized));
	Luxe.core.emitter.on(32,$bind(this,this.windowminimized));
	Luxe.core.emitter.on(33,$bind(this,this.windowrestored));
	if(Luxe.core.inited) this.init(null);
	var _view = Luxe.core.debug.get_view("Scenes");
	if(_view != null) _view.add_scene(this);
};
$hxClasses["luxe.Scene"] = luxe_Scene;
luxe_Scene.__name__ = ["luxe","Scene"];
luxe_Scene.__super__ = luxe_Objects;
luxe_Scene.prototype = $extend(luxe_Objects.prototype,{
	handle_duplicate_warning: function(_name) {
		if(this.entities.exists(_name)) haxe_Log.trace("    i / scene / " + ("" + this.get_name() + " / adding a second entity named " + _name + "!\r\n                This will replace the existing one, possibly leaving the previous one in limbo."),{ fileName : "Scene.hx", lineNumber : 96, className : "luxe.Scene", methodName : "handle_duplicate_warning"});
	}
	,add: function(entity) {
		if(entity == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("entity was null" + (" ( " + "can't put entity in a scene if the entity is null." + " )")));
		this.handle_duplicate_warning(entity.get_name());
		entity.set_scene(this);
		entity.set_scene_root(this);
		var key = entity.get_name();
		this.entities.set(key,entity);
		this.entity_count++;
		if(this.inited) this._delayed_init_entities.push(entity);
		if(this.started) this._delayed_reset_entities.push(entity);
		this._has_changed = true;
	}
	,remove: function(entity) {
		if(entity == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("entity was null" + (" ( " + "can't remove entity from a scene if the entity is null." + " )")));
		this._has_changed = true;
		if(entity.get_scene() == this) {
			entity.set_scene(null);
			this.entity_count--;
			var key = entity.get_name();
			return this.entities.remove(key);
		} else {
			haxe_Log.trace("    i / scene / " + ("can't remove the entity(`" + entity.get_name() + "`) from this scene(`" + this.get_name() + "`), it is not mine (entity.scene != this)"),{ fileName : "Scene.hx", lineNumber : 147, className : "luxe.Scene", methodName : "remove"});
			return false;
		}
		return false;
	}
	,get: function(_name) {
		return this.entities.get(_name);
	}
	,empty: function() {
		if(this.entity_count > 0) {
			var $it0 = this.entities.iterator();
			while( $it0.hasNext() ) {
				var entity = $it0.next();
				if(entity != null && entity != Luxe.camera) {
					entity.destroy();
					entity = null;
				}
			}
		}
	}
	,get_named_like: function(_name,into) {
		if(this.entity_count > 0) {
			var _filter = new EReg("^((?:" + _name + ")[.]{1})","g");
			var $it0 = this.entities.iterator();
			while( $it0.hasNext() ) {
				var _entity = $it0.next();
				if(_filter.match(_entity.get_name())) into.push(_entity);
			}
		}
		return into;
	}
	,render: function(_) {
		this.emit(10);
	}
	,prerender: function(_) {
		this.emit(9);
	}
	,postrender: function(_) {
		this.emit(11);
	}
	,keydown: function(e) {
		this.emit(12,e);
	}
	,keyup: function(e) {
		this.emit(13,e);
	}
	,textinput: function(e) {
		this.emit(14,e);
	}
	,mousedown: function(e) {
		this.emit(17,e);
	}
	,mousewheel: function(e) {
		this.emit(20,e);
	}
	,mouseup: function(e) {
		this.emit(18,e);
	}
	,mousemove: function(e) {
		this.emit(19,e);
	}
	,touchdown: function(event) {
		this.emit(21,event);
	}
	,touchup: function(event) {
		this.emit(22,event);
	}
	,touchmove: function(event) {
		this.emit(23,event);
	}
	,gamepadaxis: function(event) {
		this.emit(24,event);
	}
	,gamepadup: function(event) {
		this.emit(26,event);
	}
	,gamepaddown: function(event) {
		this.emit(25,event);
	}
	,gamepaddevice: function(event) {
		this.emit(27,event);
	}
	,windowmoved: function(event) {
		this.emit(29,event);
	}
	,windowresized: function(event) {
		this.emit(30,event);
	}
	,windowsized: function(event) {
		this.emit(31,event);
	}
	,windowminimized: function(event) {
		this.emit(32,event);
	}
	,windowrestored: function(event) {
		this.emit(33,event);
	}
	,inputdown: function(_event) {
		this.emit(15,_event);
	}
	,inputup: function(_event) {
		this.emit(16,_event);
	}
	,_destroy: function(_) {
		this.destroy();
	}
	,destroy: function() {
		if(!(this.destroyed == false)) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("destroyed == false" + (" ( " + ("scene / destroying repeatedly `" + this.get_name() + "`") + " )")));
		this.destroyed = true;
		Luxe.core.emitter.off(2,$bind(this,this.init));
		Luxe.core.emitter.off(8,$bind(this,this._destroy));
		Luxe.core.emitter.off(6,$bind(this,this.update));
		Luxe.core.emitter.off(9,$bind(this,this.prerender));
		Luxe.core.emitter.off(11,$bind(this,this.postrender));
		Luxe.core.emitter.off(10,$bind(this,this.render));
		Luxe.core.emitter.off(12,$bind(this,this.keydown));
		Luxe.core.emitter.off(13,$bind(this,this.keyup));
		Luxe.core.emitter.off(14,$bind(this,this.textinput));
		Luxe.core.emitter.off(16,$bind(this,this.inputup));
		Luxe.core.emitter.off(15,$bind(this,this.inputdown));
		Luxe.core.emitter.off(18,$bind(this,this.mouseup));
		Luxe.core.emitter.off(17,$bind(this,this.mousedown));
		Luxe.core.emitter.off(19,$bind(this,this.mousemove));
		Luxe.core.emitter.off(20,$bind(this,this.mousewheel));
		Luxe.core.emitter.off(22,$bind(this,this.touchup));
		Luxe.core.emitter.off(21,$bind(this,this.touchdown));
		Luxe.core.emitter.off(23,$bind(this,this.touchmove));
		Luxe.core.emitter.off(26,$bind(this,this.gamepadup));
		Luxe.core.emitter.off(25,$bind(this,this.gamepaddown));
		Luxe.core.emitter.off(24,$bind(this,this.gamepadaxis));
		Luxe.core.emitter.off(27,$bind(this,this.gamepaddevice));
		Luxe.core.emitter.off(29,$bind(this,this.windowmoved));
		Luxe.core.emitter.off(30,$bind(this,this.windowresized));
		Luxe.core.emitter.off(31,$bind(this,this.windowsized));
		Luxe.core.emitter.off(32,$bind(this,this.windowminimized));
		Luxe.core.emitter.off(33,$bind(this,this.windowrestored));
		this.emit(8);
		var _view = Luxe.core.debug.get_view("Scenes");
		if(_view != null) _view.remove_scene(this);
	}
	,_do_init: function() {
		var _before_count = this.get_length();
		if(this.entity_count > 0) {
			var $it0 = this.entities.iterator();
			while( $it0.hasNext() ) {
				var entity = $it0.next();
				if(entity != null) {
					if(!entity.inited) entity._init();
				}
			}
		}
		var _after_count = this.get_length();
		return _before_count != _after_count;
	}
	,init: function(_) {
		var _keep_going = true;
		while(_keep_going) _keep_going = this._do_init();
		this.inited = true;
		this.emit(2);
		this.reset();
	}
	,reset: function() {
		this.started = false;
		this.emit(3);
		this.started = true;
	}
	,update: function(dt) {
		Luxe.core.debug.start("scene." + this.get_name());
		this.handle_delayed_additions();
		this.emit(6,dt);
		if(this.entity_count > 0) {
			var $it0 = this.entities.iterator();
			while( $it0.hasNext() ) {
				var entity = $it0.next();
				if(entity != null) entity._update(dt);
			}
		}
		Luxe.core.debug.end("scene." + this.get_name());
	}
	,handle_delayed_additions: function() {
		if(this._delayed_init_entities.length != 0 || this._delayed_reset_entities.length != 0) null;
		if(this._delayed_init_entities.length > 0) {
			var _g = 0;
			var _g1 = this._delayed_init_entities;
			while(_g < _g1.length) {
				var entity = _g1[_g];
				++_g;
				if(entity.destroyed) continue;
				if(!entity.inited) entity._init(); else null;
			}
			this._delayed_init_entities = null;
			this._delayed_init_entities = [];
		}
		if(this._delayed_reset_entities.length > 0) {
			var _g2 = 0;
			var _g11 = this._delayed_reset_entities;
			while(_g2 < _g11.length) {
				var entity1 = _g11[_g2];
				++_g2;
				if(entity1.destroyed) continue;
				entity1._reset(null);
			}
			this._delayed_reset_entities = null;
			this._delayed_reset_entities = [];
		}
	}
	,get_length: function() {
		return Lambda.count(this.entities);
	}
	,toString: function() {
		return "luxe Scene: " + this.get_name() + " / " + this.get_length() + " entities / id: " + this.get_id();
	}
	,__class__: luxe_Scene
	,__properties__: $extend(luxe_Objects.prototype.__properties__,{get_length:"get_length"})
});
var luxe_Screen = function(_core,_w,_h) {
	this.core = _core;
	this.cursor = new luxe_Cursor(this);
	this.width = _w;
	this.height = _h;
};
$hxClasses["luxe.Screen"] = luxe_Screen;
luxe_Screen.__name__ = ["luxe","Screen"];
luxe_Screen.prototype = {
	toString: function() {
		return "luxe.Screen({ w:" + this.get_w() + ", h:" + this.get_h() + " })";
	}
	,point_inside: function(_p) {
		if(_p.x < 0) return false;
		if(_p.y < 0) return false;
		if(_p.x > this.width) return false;
		if(_p.y > this.height) return false;
		return true;
	}
	,point_inside_xy: function(_x,_y) {
		if(_x < 0) return false;
		if(_y < 0) return false;
		if(_x > this.width) return false;
		if(_y > this.height) return false;
		return true;
	}
	,internal_resized: function(_w,_h) {
		this.width = _w;
		this.height = _h;
	}
	,get_mid: function() {
		return new phoenix_Vector(Math.round(this.get_w() / 2),Math.round(this.get_h() / 2));
	}
	,get_size: function() {
		return new phoenix_Vector(this.get_w(),this.get_h());
	}
	,get_bounds: function() {
		return new phoenix_Rectangle(0,0,this.get_w(),this.get_h());
	}
	,get_w: function() {
		return this.width | 0;
	}
	,get_h: function() {
		return this.height | 0;
	}
	,get_device_pixel_ratio: function() {
		if(window.devicePixelRatio == null) return 1.0; else return window.devicePixelRatio;
	}
	,__class__: luxe_Screen
	,__properties__: {get_device_pixel_ratio:"get_device_pixel_ratio",get_h:"get_h",get_w:"get_w",get_bounds:"get_bounds",get_size:"get_size",get_mid:"get_mid"}
};
var luxe_Cursor = function(_screen) {
	this.ignore = false;
	this.grab = false;
	this.screen = _screen;
	this.pos = new phoenix_Vector();
};
$hxClasses["luxe.Cursor"] = luxe_Cursor;
luxe_Cursor.__name__ = ["luxe","Cursor"];
luxe_Cursor.prototype = {
	set_internal: function(_x,_y) {
		this.ignore = true;
		this.pos = new phoenix_Vector(_x,_y);
		this.ignore = false;
	}
	,get_grab: function() {
		return this.grab;
	}
	,set_grab: function(_grab) {
		this.screen.core.app.runtime.window_grab(_grab);
		return this.grab = _grab;
	}
	,get_pos: function() {
		return this.pos;
	}
	,__class__: luxe_Cursor
	,__properties__: {get_pos:"get_pos",set_grab:"set_grab",get_grab:"get_grab"}
};
var luxe_States = function(_options) {
	this._state_count = 0;
	this.active_count = 0;
	var _name = "";
	if(_options != null && _options.name != null) _name = _options.name;
	luxe_Objects.call(this,_name == ""?Luxe.utils.uniqueid():_name);
	this._states = new haxe_ds_StringMap();
	this.active_states = [];
	Luxe.core.emitter.on(2,$bind(this,this.init));
	Luxe.core.emitter.on(8,$bind(this,this.ondestroy));
	Luxe.core.emitter.on(6,$bind(this,this.update));
	Luxe.core.emitter.on(9,$bind(this,this.prerender));
	Luxe.core.emitter.on(11,$bind(this,this.postrender));
	Luxe.core.emitter.on(10,$bind(this,this.render));
	Luxe.core.emitter.on(12,$bind(this,this.keydown));
	Luxe.core.emitter.on(13,$bind(this,this.keyup));
	Luxe.core.emitter.on(14,$bind(this,this.textinput));
	Luxe.core.emitter.on(16,$bind(this,this.inputup));
	Luxe.core.emitter.on(15,$bind(this,this.inputdown));
	Luxe.core.emitter.on(18,$bind(this,this.mouseup));
	Luxe.core.emitter.on(17,$bind(this,this.mousedown));
	Luxe.core.emitter.on(19,$bind(this,this.mousemove));
	Luxe.core.emitter.on(20,$bind(this,this.mousewheel));
	Luxe.core.emitter.on(22,$bind(this,this.touchup));
	Luxe.core.emitter.on(21,$bind(this,this.touchdown));
	Luxe.core.emitter.on(23,$bind(this,this.touchmove));
	Luxe.core.emitter.on(26,$bind(this,this.gamepadup));
	Luxe.core.emitter.on(25,$bind(this,this.gamepaddown));
	Luxe.core.emitter.on(24,$bind(this,this.gamepadaxis));
	Luxe.core.emitter.on(27,$bind(this,this.gamepaddevice));
	Luxe.core.emitter.on(29,$bind(this,this.windowmoved));
	Luxe.core.emitter.on(30,$bind(this,this.windowresized));
	Luxe.core.emitter.on(31,$bind(this,this.windowsized));
	Luxe.core.emitter.on(32,$bind(this,this.windowminimized));
	Luxe.core.emitter.on(33,$bind(this,this.windowrestored));
};
$hxClasses["luxe.States"] = luxe_States;
luxe_States.__name__ = ["luxe","States"];
luxe_States.__super__ = luxe_Objects;
luxe_States.prototype = $extend(luxe_Objects.prototype,{
	add: function(_state) {
		this._states.set(_state.name,_state);
		this._state_count++;
		_state.machine = this;
		_state.onadded();
		if(Luxe.core.inited) {
			if(!_state.inited) {
				_state.inited = true;
				_state.init();
			}
		}
		return _state;
	}
	,remove: function(_name,_leave_with) {
		if(this._states.exists(_name)) {
			var _state = this._states.get(_name);
			if(_state != null) {
				if(_state.active) {
					this.leave(_state,_leave_with);
					if(_state == this.current_state) this.current_state = null;
				}
				if(_state.enabled) this.disable(_state.name);
				_state.onremoved();
				this._states.remove(_name);
				this._state_count--;
			}
			return _state;
		}
		return null;
	}
	,kill: function(_name) {
		if(this._state_count > 0) {
			if(this._states.exists(_name)) {
				var _state = this.remove(_name);
				if(_state != null) _state.ondestroy();
			}
		}
	}
	,enabled: function(_name) {
		if(this._state_count == 0) return false;
		var _state = this._states.get(_name);
		if(_state != null) return _state.enabled;
		return false;
	}
	,enable: function(_name,_enable_with) {
		if(this._state_count == 0) return;
		var _state = this._states.get(_name);
		if(_state != null) {
			_state.onenabled(_enable_with);
			_state.active = true;
			_state.enabled = true;
			this.active_states.push(_state);
			this.active_count++;
			null;
		}
	}
	,disable: function(_name,_disable_with) {
		if(this._state_count == 0) return;
		var _state = this._states.get(_name);
		if(_state != null) {
			_state.ondisabled(_disable_with);
			_state.active = false;
			_state.enabled = false;
			HxOverrides.remove(this.active_states,_state);
			this.active_count--;
			null;
		}
	}
	,enter: function(_state,_enter_with) {
		_state.onenter(_enter_with);
		this.active_states.push(_state);
		this.active_count++;
		_state.active = true;
	}
	,leave: function(_state,_leave_with) {
		_state.active = false;
		HxOverrides.remove(this.active_states,_state);
		this.active_count--;
		_state.onleave(_leave_with);
	}
	,set: function(name,_enter_with,_leave_with) {
		if(!this._states.exists(name)) {
			haxe_Log.trace("   i / states / " + ("cannot find state named " + name + ", is it added to this state machine?"),{ fileName : "States.hx", lineNumber : 318, className : "luxe.States", methodName : "set"});
			return false;
		}
		this.unset(_leave_with);
		this.current_state = this._states.get(name);
		this.enter(this.current_state,_enter_with);
		return true;
	}
	,unset: function(_leave_with) {
		if(this.current_state != null) {
			this.leave(this.current_state,_leave_with);
			this.current_state = null;
		}
	}
	,destroy: function() {
		if(this._state_count > 0) {
			var $it0 = this._states.iterator();
			while( $it0.hasNext() ) {
				var state = $it0.next();
				state.destroy();
			}
		}
		Luxe.core.emitter.off(2,$bind(this,this.init));
		Luxe.core.emitter.off(8,$bind(this,this.ondestroy));
		Luxe.core.emitter.off(6,$bind(this,this.update));
		Luxe.core.emitter.off(9,$bind(this,this.prerender));
		Luxe.core.emitter.off(11,$bind(this,this.postrender));
		Luxe.core.emitter.off(10,$bind(this,this.render));
		Luxe.core.emitter.off(12,$bind(this,this.keydown));
		Luxe.core.emitter.off(13,$bind(this,this.keyup));
		Luxe.core.emitter.off(14,$bind(this,this.textinput));
		Luxe.core.emitter.off(16,$bind(this,this.inputup));
		Luxe.core.emitter.off(15,$bind(this,this.inputdown));
		Luxe.core.emitter.off(18,$bind(this,this.mouseup));
		Luxe.core.emitter.off(17,$bind(this,this.mousedown));
		Luxe.core.emitter.off(19,$bind(this,this.mousemove));
		Luxe.core.emitter.off(20,$bind(this,this.mousewheel));
		Luxe.core.emitter.off(22,$bind(this,this.touchup));
		Luxe.core.emitter.off(21,$bind(this,this.touchdown));
		Luxe.core.emitter.off(23,$bind(this,this.touchmove));
		Luxe.core.emitter.off(26,$bind(this,this.gamepadup));
		Luxe.core.emitter.off(25,$bind(this,this.gamepaddown));
		Luxe.core.emitter.off(24,$bind(this,this.gamepadaxis));
		Luxe.core.emitter.off(27,$bind(this,this.gamepaddevice));
		Luxe.core.emitter.off(29,$bind(this,this.windowmoved));
		Luxe.core.emitter.off(30,$bind(this,this.windowresized));
		Luxe.core.emitter.off(31,$bind(this,this.windowsized));
		Luxe.core.emitter.off(32,$bind(this,this.windowminimized));
		Luxe.core.emitter.off(33,$bind(this,this.windowrestored));
		this.emit(8);
	}
	,init: function(_) {
		if(this._state_count > 0) {
			var $it0 = this._states.iterator();
			while( $it0.hasNext() ) {
				var state = $it0.next();
				if(!state.inited) {
					state.inited = true;
					state.init();
				}
			}
		}
	}
	,reset: function(_) {
		if(this.active_count > 0) {
			var _g = 0;
			var _g1 = this.active_states;
			while(_g < _g1.length) {
				var state = _g1[_g];
				++_g;
				state.onreset();
			}
		}
	}
	,update: function(dt) {
		if(this.active_count > 0) {
			var _g = 0;
			var _g1 = this.active_states;
			while(_g < _g1.length) {
				var state = _g1[_g];
				++_g;
				state.update(dt);
			}
		}
	}
	,ondestroy: function(_) {
		this.destroy();
	}
	,render: function(_) {
		if(this.active_count > 0) {
			var _g = 0;
			var _g1 = this.active_states;
			while(_g < _g1.length) {
				var state = _g1[_g];
				++_g;
				state.onrender();
			}
		}
	}
	,prerender: function(_) {
		if(this.active_count > 0) {
			var _g = 0;
			var _g1 = this.active_states;
			while(_g < _g1.length) {
				var state = _g1[_g];
				++_g;
				state.onprerender();
			}
		}
	}
	,postrender: function(_) {
		if(this.active_count > 0) {
			var _g = 0;
			var _g1 = this.active_states;
			while(_g < _g1.length) {
				var state = _g1[_g];
				++_g;
				state.onpostrender();
			}
		}
	}
	,keydown: function(_event) {
		if(this.active_count > 0) {
			var _g = 0;
			var _g1 = this.active_states;
			while(_g < _g1.length) {
				var state = _g1[_g];
				++_g;
				state.onkeydown(_event);
			}
		}
	}
	,keyup: function(_event) {
		if(this.active_count > 0) {
			var _g = 0;
			var _g1 = this.active_states;
			while(_g < _g1.length) {
				var state = _g1[_g];
				++_g;
				state.onkeyup(_event);
			}
		}
	}
	,textinput: function(_event) {
		if(this.active_count > 0) {
			var _g = 0;
			var _g1 = this.active_states;
			while(_g < _g1.length) {
				var state = _g1[_g];
				++_g;
				state.ontextinput(_event);
			}
		}
	}
	,inputup: function(_event) {
		if(this.active_count > 0) {
			var _g = 0;
			var _g1 = this.active_states;
			while(_g < _g1.length) {
				var state = _g1[_g];
				++_g;
				state.oninputup(_event);
			}
		}
	}
	,inputdown: function(_event) {
		if(this.active_count > 0) {
			var _g = 0;
			var _g1 = this.active_states;
			while(_g < _g1.length) {
				var state = _g1[_g];
				++_g;
				state.oninputdown(_event);
			}
		}
	}
	,mousedown: function(_event) {
		if(this.active_count > 0) {
			var _g = 0;
			var _g1 = this.active_states;
			while(_g < _g1.length) {
				var state = _g1[_g];
				++_g;
				state.onmousedown(_event);
			}
		}
	}
	,mousewheel: function(_event) {
		if(this.active_count > 0) {
			var _g = 0;
			var _g1 = this.active_states;
			while(_g < _g1.length) {
				var state = _g1[_g];
				++_g;
				state.onmousewheel(_event);
			}
		}
	}
	,mouseup: function(_event) {
		if(this.active_count > 0) {
			var _g = 0;
			var _g1 = this.active_states;
			while(_g < _g1.length) {
				var state = _g1[_g];
				++_g;
				state.onmouseup(_event);
			}
		}
	}
	,mousemove: function(_event) {
		if(this.active_count > 0) {
			var _g = 0;
			var _g1 = this.active_states;
			while(_g < _g1.length) {
				var state = _g1[_g];
				++_g;
				state.onmousemove(_event);
			}
		}
	}
	,touchdown: function(_event) {
		if(this.active_count > 0) {
			var _g = 0;
			var _g1 = this.active_states;
			while(_g < _g1.length) {
				var state = _g1[_g];
				++_g;
				state.ontouchdown(_event);
			}
		}
	}
	,touchup: function(_event) {
		if(this.active_count > 0) {
			var _g = 0;
			var _g1 = this.active_states;
			while(_g < _g1.length) {
				var state = _g1[_g];
				++_g;
				state.ontouchup(_event);
			}
		}
	}
	,touchmove: function(_event) {
		if(this.active_count > 0) {
			var _g = 0;
			var _g1 = this.active_states;
			while(_g < _g1.length) {
				var state = _g1[_g];
				++_g;
				state.ontouchmove(_event);
			}
		}
	}
	,gamepadaxis: function(_event) {
		if(this.active_count > 0) {
			var _g = 0;
			var _g1 = this.active_states;
			while(_g < _g1.length) {
				var state = _g1[_g];
				++_g;
				state.ongamepadaxis(_event);
			}
		}
	}
	,gamepadup: function(_event) {
		if(this.active_count > 0) {
			var _g = 0;
			var _g1 = this.active_states;
			while(_g < _g1.length) {
				var state = _g1[_g];
				++_g;
				state.ongamepadup(_event);
			}
		}
	}
	,gamepaddown: function(_event) {
		if(this.active_count > 0) {
			var _g = 0;
			var _g1 = this.active_states;
			while(_g < _g1.length) {
				var state = _g1[_g];
				++_g;
				state.ongamepaddown(_event);
			}
		}
	}
	,gamepaddevice: function(_event) {
		if(this.active_count > 0) {
			var _g = 0;
			var _g1 = this.active_states;
			while(_g < _g1.length) {
				var state = _g1[_g];
				++_g;
				state.ongamepaddevice(_event);
			}
		}
	}
	,windowmoved: function(_event) {
		if(this.active_count > 0) {
			var _g = 0;
			var _g1 = this.active_states;
			while(_g < _g1.length) {
				var state = _g1[_g];
				++_g;
				state.onwindowmoved(_event);
			}
		}
	}
	,windowresized: function(_event) {
		if(this.active_count > 0) {
			var _g = 0;
			var _g1 = this.active_states;
			while(_g < _g1.length) {
				var state = _g1[_g];
				++_g;
				state.onwindowresized(_event);
			}
		}
	}
	,windowsized: function(_event) {
		if(this.active_count > 0) {
			var _g = 0;
			var _g1 = this.active_states;
			while(_g < _g1.length) {
				var state = _g1[_g];
				++_g;
				state.onwindowsized(_event);
			}
		}
	}
	,windowminimized: function(_event) {
		if(this.active_count > 0) {
			var _g = 0;
			var _g1 = this.active_states;
			while(_g < _g1.length) {
				var state = _g1[_g];
				++_g;
				state.onwindowminimized(_event);
			}
		}
	}
	,windowrestored: function(_event) {
		if(this.active_count > 0) {
			var _g = 0;
			var _g1 = this.active_states;
			while(_g < _g1.length) {
				var state = _g1[_g];
				++_g;
				state.onwindowrestored(_event);
			}
		}
	}
	,__class__: luxe_States
});
var luxe_Text = function(_options) {
	this.text_options = _options;
	this.text_bounds = new phoenix_Rectangle();
	var _batcher = null;
	if(_options.no_batcher_add == null || _options.no_batcher_add == false) {
		if(_options.batcher != null) _batcher = _options.batcher; else _batcher = Luxe.renderer.batcher;
	}
	this.geom = new phoenix_geometry_TextGeometry({ batcher : _batcher, depth : _options.depth, visible : _options.visible, immediate : _options.immediate, color : _options.color, shader : _options.shader, texture : _options.texture, text : _options.text, font : _options.font, point_size : _options.point_size, line_spacing : _options.line_spacing, letter_spacing : _options.letter_spacing, bounds : _options.bounds, bounds_wrap : _options.bounds_wrap, align : _options.align, align_vertical : _options.align_vertical, sdf : _options.sdf, smoothness : _options.smoothness, thickness : _options.thickness, outline : _options.outline, outline_color : _options.outline_color, glow_threshold : _options.glow_threshold, glow_amount : _options.glow_amount, glow_color : _options.glow_color});
	this.geom.emitter.on(1,$bind(this,this.on_geom_text_update));
	_options.geometry = this.geom;
	_options.shader = this.geom.state.shader;
	luxe_Visual.call(this,_options);
	this._update_bounds();
};
$hxClasses["luxe.Text"] = luxe_Text;
luxe_Text.__name__ = ["luxe","Text"];
luxe_Text.__super__ = luxe_Visual;
luxe_Text.prototype = $extend(luxe_Visual.prototype,{
	get_text: function() {
		return this.geom.text;
	}
	,set_text: function(_s) {
		return this.geom.set_text(_s);
	}
	,get_font: function() {
		return this.geom.font;
	}
	,set_font: function(_f) {
		return this.geom.set_font(_f);
	}
	,get_point_size: function() {
		return this.geom.point_size;
	}
	,set_point_size: function(_s) {
		return this.geom.set_point_size(_s);
	}
	,get_letter_spacing: function() {
		return this.geom.letter_spacing;
	}
	,set_letter_spacing: function(_s) {
		return this.geom.set_letter_spacing(_s);
	}
	,get_line_spacing: function() {
		return this.geom.line_spacing;
	}
	,set_line_spacing: function(_s) {
		return this.geom.set_line_spacing(_s);
	}
	,get_bounds: function() {
		return this.geom.bounds;
	}
	,set_bounds: function(_b) {
		return this.geom.set_bounds(_b);
	}
	,get_bounds_wrap: function() {
		return this.geom.bounds_wrap;
	}
	,set_bounds_wrap: function(_b) {
		return this.geom.set_bounds_wrap(_b);
	}
	,get_align: function() {
		return this.geom.align;
	}
	,set_align: function(_a) {
		return this.geom.set_align(_a);
	}
	,get_align_vertical: function() {
		return this.geom.align_vertical;
	}
	,set_align_vertical: function(_a) {
		return this.geom.set_align_vertical(_a);
	}
	,get_sdf: function() {
		return this.geom.sdf;
	}
	,set_sdf: function(_s) {
		return this.geom.sdf = _s;
	}
	,get_smoothness: function() {
		return this.geom.smoothness;
	}
	,set_smoothness: function(_s) {
		return this.geom.set_smoothness(_s);
	}
	,get_thickness: function() {
		return this.geom.thickness;
	}
	,set_thickness: function(_t) {
		return this.geom.set_thickness(_t);
	}
	,get_outline: function() {
		return this.geom.outline;
	}
	,set_outline: function(_o) {
		return this.geom.set_outline(_o);
	}
	,get_outline_color: function() {
		return this.geom.outline_color;
	}
	,set_outline_color: function(_c) {
		return this.geom.set_outline_color(_c);
	}
	,get_glow_threshold: function() {
		return this.geom.glow_threshold;
	}
	,set_glow_threshold: function(_s) {
		return this.geom.set_glow_threshold(_s);
	}
	,get_glow_amount: function() {
		return this.geom.glow_amount;
	}
	,set_glow_amount: function(_e) {
		return this.geom.set_glow_amount(_e);
	}
	,get_glow_color: function() {
		return this.geom.glow_color;
	}
	,set_glow_color: function(_c) {
		return this.geom.set_glow_color(_c);
	}
	,point_inside: function(p) {
		this._update_bounds();
		return this.text_bounds.point_inside(p);
	}
	,set_pos_from_transform: function(_p) {
		luxe_Visual.prototype.set_pos_from_transform.call(this,_p);
		this._update_bounds();
		this.text_options.pos = this.get_pos();
	}
	,on_geom_text_update: function(_) {
		this._update_bounds();
	}
	,_update_bounds: function() {
		var _x = this.get_pos().x;
		var _y = this.get_pos().y;
		var _tw = this.geom.text_width;
		var _th = this.geom.text_height;
		var _bw = this.geom.text_width;
		var _bh = this.geom.text_height;
		if(this.get_bounds() != null) {
			_bh = this.get_bounds().h;
			_bw = this.get_bounds().w;
			_x = this.get_bounds().x;
			_y = this.get_bounds().y;
			var _g = this.get_align();
			switch(_g) {
			case 2:
				_x += _tw / 2;
				break;
			case 1:
				_x += _tw;
				break;
			default:
				_x += 0.0;
			}
			var _g1 = this.get_align_vertical();
			switch(_g1) {
			case 2:
				_y += _bh / 2 - _th / 2;
				break;
			case 4:
				_y += _bh - _th;
				break;
			default:
				_y += 0.0;
			}
		} else {
			var _g2 = this.get_align();
			switch(_g2) {
			case 2:
				_x -= _tw / 2;
				break;
			case 1:
				_x -= _tw;
				break;
			default:
				_x -= 0.0;
			}
			var _g3 = this.get_align_vertical();
			switch(_g3) {
			case 2:
				_y -= _th / 2;
				break;
			case 4:
				_y -= _th;
				break;
			default:
				_y -= 0.0;
			}
		}
		this.text_bounds.set(_x,_y,_tw,_th);
	}
	,ondestroy: function() {
		this.geom = null;
		this.text_options = null;
		this.text_bounds = null;
		luxe_Visual.prototype.ondestroy.call(this);
	}
	,init: function() {
		luxe_Visual.prototype.init.call(this);
	}
	,__class__: luxe_Text
	,__properties__: $extend(luxe_Visual.prototype.__properties__,{set_glow_color:"set_glow_color",get_glow_color:"get_glow_color",set_glow_amount:"set_glow_amount",get_glow_amount:"get_glow_amount",set_glow_threshold:"set_glow_threshold",get_glow_threshold:"get_glow_threshold",set_outline_color:"set_outline_color",get_outline_color:"get_outline_color",set_outline:"set_outline",get_outline:"get_outline",set_thickness:"set_thickness",get_thickness:"get_thickness",set_smoothness:"set_smoothness",get_smoothness:"get_smoothness",set_sdf:"set_sdf",get_sdf:"get_sdf",set_align_vertical:"set_align_vertical",get_align_vertical:"get_align_vertical",set_align:"set_align",get_align:"get_align",set_bounds_wrap:"set_bounds_wrap",get_bounds_wrap:"get_bounds_wrap",set_bounds:"set_bounds",get_bounds:"get_bounds",set_line_spacing:"set_line_spacing",get_line_spacing:"get_line_spacing",set_letter_spacing:"set_letter_spacing",get_letter_spacing:"get_letter_spacing",set_point_size:"set_point_size",get_point_size:"get_point_size",set_font:"set_font",get_font:"get_font",set_text:"set_text",get_text:"get_text"})
});
var luxe_Timer = function(_core) {
	this.core = _core;
	this.timers = [];
};
$hxClasses["luxe.Timer"] = luxe_Timer;
luxe_Timer.__name__ = ["luxe","Timer"];
luxe_Timer.prototype = {
	init: function() {
		null;
	}
	,destroy: function() {
		this.reset();
		null;
	}
	,process: function() {
	}
	,reset: function() {
		var _g = 0;
		var _g1 = this.timers;
		while(_g < _g1.length) {
			var t = _g1[_g];
			++_g;
			t.stop();
			t = null;
		}
		this.timers = null;
		this.timers = [];
	}
	,schedule: function(_time_in_seconds,_on_time,repeat) {
		if(repeat == null) repeat = false;
		var _g = this;
		var t = new snow_api_Timer(_time_in_seconds);
		t.run = function() {
			if(!repeat) {
				t.stop();
				HxOverrides.remove(_g.timers,t);
			}
			_on_time();
		};
		this.timers.push(t);
		return t;
	}
	,__class__: luxe_Timer
};
var luxe_collision_Collision = function() { };
$hxClasses["luxe.collision.Collision"] = luxe_collision_Collision;
luxe_collision_Collision.__name__ = ["luxe","collision","Collision"];
luxe_collision_Collision.shapeWithShape = function(shape1,shape2,into) {
	return shape1.test(shape2,into);
};
luxe_collision_Collision.shapeWithShapes = function(shape1,shapes,into) {
	var results;
	if(into != null) {
		into.count = 0;
		results = into;
	} else results = new luxe_collision_Results_$luxe_$collision_$data_$ShapeCollision(shapes.length);
	var _g = 0;
	while(_g < shapes.length) {
		var other_shape = shapes[_g];
		++_g;
		var value;
		if(results.items.length == results.count) results.items.push(new luxe_collision_data_ShapeCollision());
		value = results.items[results.count];
		var result = shape1.test(other_shape,value);
		if(result != null) {
			results.items[results.count] = result;
			results.count++;
		}
	}
	return results;
};
luxe_collision_Collision.rayWithShape = function(ray,shape,into) {
	return shape.testRay(ray,into);
};
luxe_collision_Collision.rayWithShapes = function(ray,shapes,into) {
	var results;
	if(into != null) {
		into.count = 0;
		results = into;
	} else results = new luxe_collision_Results_$luxe_$collision_$data_$RayCollision(shapes.length);
	var _g = 0;
	while(_g < shapes.length) {
		var shape = shapes[_g];
		++_g;
		var value;
		if(results.items.length == results.count) results.items.push(new luxe_collision_data_RayCollision());
		value = results.items[results.count];
		var result = shape.testRay(ray,value);
		if(result != null) {
			results.items[results.count] = result;
			results.count++;
		}
	}
	return results;
};
luxe_collision_Collision.rayWithRay = function(ray1,ray2,into) {
	return luxe_collision_sat_SAT2D.testRayVsRay(ray1,ray2,into);
};
luxe_collision_Collision.rayWithRays = function(ray,rays,into) {
	var results;
	if(into != null) {
		into.count = 0;
		results = into;
	} else results = new luxe_collision_Results_$luxe_$collision_$data_$RayIntersection(rays.length);
	var _g = 0;
	while(_g < rays.length) {
		var other = rays[_g];
		++_g;
		var value;
		if(results.items.length == results.count) results.items.push(new luxe_collision_data_RayIntersection());
		value = results.items[results.count];
		var result = luxe_collision_sat_SAT2D.testRayVsRay(ray,other,value);
		if(result != null) {
			results.items[results.count] = result;
			results.count++;
		}
	}
	return results;
};
luxe_collision_Collision.pointInPoly = function(x,y,poly) {
	var sides = poly.get_transformedVertices().length;
	var verts = poly.get_transformedVertices();
	var i = 0;
	var j = sides - 1;
	var oddNodes = false;
	var _g = 0;
	while(_g < sides) {
		var i1 = _g++;
		if(verts[i1].y < y && verts[j].y >= y || verts[j].y < y && verts[i1].y >= y) {
			if(verts[i1].x + (y - verts[i1].y) / (verts[j].y - verts[i1].y) * (verts[j].x - verts[i1].x) < x) oddNodes = !oddNodes;
		}
		j = i1;
	}
	return oddNodes;
};
var luxe_collision_ResultsIterator_$luxe_$collision_$data_$RayCollision = function(_results) {
	this.index = 0;
	this.index = 0;
	this.results = _results;
};
$hxClasses["luxe.collision.ResultsIterator_luxe_collision_data_RayCollision"] = luxe_collision_ResultsIterator_$luxe_$collision_$data_$RayCollision;
luxe_collision_ResultsIterator_$luxe_$collision_$data_$RayCollision.__name__ = ["luxe","collision","ResultsIterator_luxe_collision_data_RayCollision"];
luxe_collision_ResultsIterator_$luxe_$collision_$data_$RayCollision.prototype = {
	hasNext: function() {
		return this.index < this.results.count;
	}
	,next: function() {
		return this.results.get(this.index++);
	}
	,__class__: luxe_collision_ResultsIterator_$luxe_$collision_$data_$RayCollision
};
var luxe_collision_ResultsIterator_$luxe_$collision_$data_$RayIntersection = function(_results) {
	this.index = 0;
	this.index = 0;
	this.results = _results;
};
$hxClasses["luxe.collision.ResultsIterator_luxe_collision_data_RayIntersection"] = luxe_collision_ResultsIterator_$luxe_$collision_$data_$RayIntersection;
luxe_collision_ResultsIterator_$luxe_$collision_$data_$RayIntersection.__name__ = ["luxe","collision","ResultsIterator_luxe_collision_data_RayIntersection"];
luxe_collision_ResultsIterator_$luxe_$collision_$data_$RayIntersection.prototype = {
	hasNext: function() {
		return this.index < this.results.count;
	}
	,next: function() {
		return this.results.get(this.index++);
	}
	,__class__: luxe_collision_ResultsIterator_$luxe_$collision_$data_$RayIntersection
};
var luxe_collision_ResultsIterator_$luxe_$collision_$data_$ShapeCollision = function(_results) {
	this.index = 0;
	this.index = 0;
	this.results = _results;
};
$hxClasses["luxe.collision.ResultsIterator_luxe_collision_data_ShapeCollision"] = luxe_collision_ResultsIterator_$luxe_$collision_$data_$ShapeCollision;
luxe_collision_ResultsIterator_$luxe_$collision_$data_$ShapeCollision.__name__ = ["luxe","collision","ResultsIterator_luxe_collision_data_ShapeCollision"];
luxe_collision_ResultsIterator_$luxe_$collision_$data_$ShapeCollision.prototype = {
	hasNext: function() {
		return this.index < this.results.count;
	}
	,next: function() {
		return this.results.get(this.index++);
	}
	,__class__: luxe_collision_ResultsIterator_$luxe_$collision_$data_$ShapeCollision
};
var luxe_collision_Results_$luxe_$collision_$data_$RayCollision = function(size) {
	this.count = 0;
	var _g = [];
	var _g1 = 0;
	while(_g1 < size) {
		var i = _g1++;
		_g.push(new luxe_collision_data_RayCollision());
	}
	this.items = _g;
};
$hxClasses["luxe.collision.Results_luxe_collision_data_RayCollision"] = luxe_collision_Results_$luxe_$collision_$data_$RayCollision;
luxe_collision_Results_$luxe_$collision_$data_$RayCollision.__name__ = ["luxe","collision","Results_luxe_collision_data_RayCollision"];
luxe_collision_Results_$luxe_$collision_$data_$RayCollision.prototype = {
	push: function(value) {
		this.items[this.count] = value;
		this.count++;
	}
	,get: function(index) {
		if(index < 0 && index > this.count - 1) return null;
		return this.items[index];
	}
	,pull: function() {
		if(this.items.length == this.count) this.items.push(new luxe_collision_data_RayCollision());
		return this.items[this.count];
	}
	,clear: function() {
		this.count = 0;
		return this;
	}
	,iterator: function() {
		return new luxe_collision_ResultsIterator_$luxe_$collision_$data_$RayCollision(this);
	}
	,get_length: function() {
		return this.count;
	}
	,get_total: function() {
		return this.items.length;
	}
	,__class__: luxe_collision_Results_$luxe_$collision_$data_$RayCollision
	,__properties__: {get_total:"get_total",get_length:"get_length"}
};
var luxe_collision_Results_$luxe_$collision_$data_$RayIntersection = function(size) {
	this.count = 0;
	var _g = [];
	var _g1 = 0;
	while(_g1 < size) {
		var i = _g1++;
		_g.push(new luxe_collision_data_RayIntersection());
	}
	this.items = _g;
};
$hxClasses["luxe.collision.Results_luxe_collision_data_RayIntersection"] = luxe_collision_Results_$luxe_$collision_$data_$RayIntersection;
luxe_collision_Results_$luxe_$collision_$data_$RayIntersection.__name__ = ["luxe","collision","Results_luxe_collision_data_RayIntersection"];
luxe_collision_Results_$luxe_$collision_$data_$RayIntersection.prototype = {
	push: function(value) {
		this.items[this.count] = value;
		this.count++;
	}
	,get: function(index) {
		if(index < 0 && index > this.count - 1) return null;
		return this.items[index];
	}
	,pull: function() {
		if(this.items.length == this.count) this.items.push(new luxe_collision_data_RayIntersection());
		return this.items[this.count];
	}
	,clear: function() {
		this.count = 0;
		return this;
	}
	,iterator: function() {
		return new luxe_collision_ResultsIterator_$luxe_$collision_$data_$RayIntersection(this);
	}
	,get_length: function() {
		return this.count;
	}
	,get_total: function() {
		return this.items.length;
	}
	,__class__: luxe_collision_Results_$luxe_$collision_$data_$RayIntersection
	,__properties__: {get_total:"get_total",get_length:"get_length"}
};
var luxe_collision_Results_$luxe_$collision_$data_$ShapeCollision = function(size) {
	this.count = 0;
	var _g = [];
	var _g1 = 0;
	while(_g1 < size) {
		var i = _g1++;
		_g.push(new luxe_collision_data_ShapeCollision());
	}
	this.items = _g;
};
$hxClasses["luxe.collision.Results_luxe_collision_data_ShapeCollision"] = luxe_collision_Results_$luxe_$collision_$data_$ShapeCollision;
luxe_collision_Results_$luxe_$collision_$data_$ShapeCollision.__name__ = ["luxe","collision","Results_luxe_collision_data_ShapeCollision"];
luxe_collision_Results_$luxe_$collision_$data_$ShapeCollision.prototype = {
	push: function(value) {
		this.items[this.count] = value;
		this.count++;
	}
	,get: function(index) {
		if(index < 0 && index > this.count - 1) return null;
		return this.items[index];
	}
	,pull: function() {
		if(this.items.length == this.count) this.items.push(new luxe_collision_data_ShapeCollision());
		return this.items[this.count];
	}
	,clear: function() {
		this.count = 0;
		return this;
	}
	,iterator: function() {
		return new luxe_collision_ResultsIterator_$luxe_$collision_$data_$ShapeCollision(this);
	}
	,get_length: function() {
		return this.count;
	}
	,get_total: function() {
		return this.items.length;
	}
	,__class__: luxe_collision_Results_$luxe_$collision_$data_$ShapeCollision
	,__properties__: {get_total:"get_total",get_length:"get_length"}
};
var luxe_collision_data_RayCollision = function() {
	this.end = 0.0;
	this.start = 0.0;
};
$hxClasses["luxe.collision.data.RayCollision"] = luxe_collision_data_RayCollision;
luxe_collision_data_RayCollision.__name__ = ["luxe","collision","data","RayCollision"];
luxe_collision_data_RayCollision.prototype = {
	reset: function() {
		this.ray = null;
		this.shape = null;
		this.start = 0.0;
		this.end = 0.0;
		return this;
	}
	,copy_from: function(other) {
		this.ray = other.ray;
		this.shape = other.shape;
		this.start = other.start;
		this.end = other.end;
	}
	,clone: function() {
		var _clone = new luxe_collision_data_RayCollision();
		_clone.ray = this.ray;
		_clone.shape = this.shape;
		_clone.start = this.start;
		_clone.end = this.end;
		return _clone;
	}
	,__class__: luxe_collision_data_RayCollision
};
var luxe_collision_data_RayCollisionHelper = function() { };
$hxClasses["luxe.collision.data.RayCollisionHelper"] = luxe_collision_data_RayCollisionHelper;
luxe_collision_data_RayCollisionHelper.__name__ = ["luxe","collision","data","RayCollisionHelper"];
luxe_collision_data_RayCollisionHelper.hitStartX = function(data) {
	return data.ray.start.x + data.ray.get_dir().x * data.start;
};
luxe_collision_data_RayCollisionHelper.hitStartY = function(data) {
	return data.ray.start.y + data.ray.get_dir().y * data.start;
};
luxe_collision_data_RayCollisionHelper.hitEndX = function(data) {
	return data.ray.start.x + data.ray.get_dir().x * data.end;
};
luxe_collision_data_RayCollisionHelper.hitEndY = function(data) {
	return data.ray.start.y + data.ray.get_dir().y * data.end;
};
var luxe_collision_data_RayIntersection = function() {
	this.u2 = 0.0;
	this.u1 = 0.0;
};
$hxClasses["luxe.collision.data.RayIntersection"] = luxe_collision_data_RayIntersection;
luxe_collision_data_RayIntersection.__name__ = ["luxe","collision","data","RayIntersection"];
luxe_collision_data_RayIntersection.prototype = {
	reset: function() {
		this.ray1 = null;
		this.ray2 = null;
		this.u1 = 0.0;
		this.u2 = 0.0;
		return this;
	}
	,copy_from: function(other) {
		this.ray1 = other.ray1;
		this.ray2 = other.ray2;
		this.u1 = other.u1;
		this.u2 = other.u2;
	}
	,clone: function() {
		var _clone = new luxe_collision_data_RayIntersection();
		_clone.ray1 = this.ray1;
		_clone.ray2 = this.ray2;
		_clone.u1 = this.u1;
		_clone.u2 = this.u2;
		return _clone;
	}
	,__class__: luxe_collision_data_RayIntersection
};
var luxe_collision_data_ShapeCollision = function() {
	this.otherUnitVectorY = 0.0;
	this.otherUnitVectorX = 0.0;
	this.otherSeparationY = 0.0;
	this.otherSeparationX = 0.0;
	this.otherOverlap = 0.0;
	this.unitVectorY = 0.0;
	this.unitVectorX = 0.0;
	this.separationY = 0.0;
	this.separationX = 0.0;
	this.overlap = 0.0;
};
$hxClasses["luxe.collision.data.ShapeCollision"] = luxe_collision_data_ShapeCollision;
luxe_collision_data_ShapeCollision.__name__ = ["luxe","collision","data","ShapeCollision"];
luxe_collision_data_ShapeCollision.prototype = {
	reset: function() {
		this.shape1 = this.shape2 = null;
		this.overlap = this.separationX = this.separationY = this.unitVectorX = this.unitVectorY = 0.0;
		this.otherOverlap = this.otherSeparationX = this.otherSeparationY = this.otherUnitVectorX = this.otherUnitVectorY = 0.0;
		return this;
	}
	,clone: function() {
		var _clone = new luxe_collision_data_ShapeCollision();
		_clone.overlap = this.overlap;
		_clone.separationX = this.separationX;
		_clone.separationY = this.separationY;
		_clone.unitVectorX = this.unitVectorX;
		_clone.unitVectorY = this.unitVectorY;
		_clone.otherOverlap = this.otherOverlap;
		_clone.otherSeparationX = this.otherSeparationX;
		_clone.otherSeparationY = this.otherSeparationY;
		_clone.otherUnitVectorX = this.otherUnitVectorX;
		_clone.otherUnitVectorY = this.otherUnitVectorY;
		_clone.shape1 = this.shape1;
		_clone.shape2 = this.shape2;
		return _clone;
	}
	,copy_from: function(_other) {
		this.overlap = _other.overlap;
		this.separationX = _other.separationX;
		this.separationY = _other.separationY;
		this.unitVectorX = _other.unitVectorX;
		this.unitVectorY = _other.unitVectorY;
		this.otherOverlap = _other.otherOverlap;
		this.otherSeparationX = _other.otherSeparationX;
		this.otherSeparationY = _other.otherSeparationY;
		this.otherUnitVectorX = _other.otherUnitVectorX;
		this.otherUnitVectorY = _other.otherUnitVectorY;
		this.shape1 = _other.shape1;
		this.shape2 = _other.shape2;
	}
	,__class__: luxe_collision_data_ShapeCollision
};
var luxe_collision_sat_SAT2D = function() { };
$hxClasses["luxe.collision.sat.SAT2D"] = luxe_collision_sat_SAT2D;
luxe_collision_sat_SAT2D.__name__ = ["luxe","collision","sat","SAT2D"];
luxe_collision_sat_SAT2D.testCircleVsPolygon = function(circle,polygon,into,flip) {
	if(flip == null) flip = false;
	if(into == null) into = new luxe_collision_data_ShapeCollision(); else {
		into.shape1 = into.shape2 = null;
		into.overlap = into.separationX = into.separationY = into.unitVectorX = into.unitVectorY = 0.0;
		into.otherOverlap = into.otherSeparationX = into.otherSeparationY = into.otherUnitVectorX = into.otherUnitVectorY = 0.0;
		into = into;
	}
	var verts = polygon.get_transformedVertices();
	var circleX = circle._position.x;
	var circleY = circle._position.y;
	var testDistance = 1073741823;
	var distance = 0.0;
	var closestX = 0.0;
	var closestY = 0.0;
	var _g1 = 0;
	var _g = verts.length;
	while(_g1 < _g) {
		var i = _g1++;
		distance = luxe_utils_Maths.vec_lengthsq(circleX - verts[i].x,circleY - verts[i].y);
		if(distance < testDistance) {
			testDistance = distance;
			closestX = verts[i].x;
			closestY = verts[i].y;
		}
	}
	var normalAxisX = closestX - circleX;
	var normalAxisY = closestY - circleY;
	var normAxisLen = Math.sqrt(normalAxisX * normalAxisX + normalAxisY * normalAxisY);
	normalAxisX = luxe_utils_Maths.vec_normalize(normAxisLen,normalAxisX);
	normalAxisY = luxe_utils_Maths.vec_normalize(normAxisLen,normalAxisY);
	var test = 0.0;
	var min1 = normalAxisX * verts[0].x + normalAxisY * verts[0].y;
	var max1 = min1;
	var _g11 = 1;
	var _g2 = verts.length;
	while(_g11 < _g2) {
		var j = _g11++;
		test = normalAxisX * verts[j].x + normalAxisY * verts[j].y;
		if(test < min1) min1 = test;
		if(test > max1) max1 = test;
	}
	var max2 = circle.get_transformedRadius();
	var min2 = -circle.get_transformedRadius();
	var offset = normalAxisX * -circleX + normalAxisY * -circleY;
	min1 += offset;
	max1 += offset;
	var test1 = min1 - max2;
	var test2 = min2 - max1;
	if(test1 > 0 || test2 > 0) return null;
	var distMin = -(max2 - min1);
	if(flip) distMin *= -1;
	into.overlap = distMin;
	into.unitVectorX = normalAxisX;
	into.unitVectorY = normalAxisY;
	var closest = Math.abs(distMin);
	var _g12 = 0;
	var _g3 = verts.length;
	while(_g12 < _g3) {
		var i1 = _g12++;
		normalAxisX = luxe_collision_sat_SAT2D.findNormalAxisX(verts,i1);
		normalAxisY = luxe_collision_sat_SAT2D.findNormalAxisY(verts,i1);
		var aLen = Math.sqrt(normalAxisX * normalAxisX + normalAxisY * normalAxisY);
		normalAxisX = luxe_utils_Maths.vec_normalize(aLen,normalAxisX);
		normalAxisY = luxe_utils_Maths.vec_normalize(aLen,normalAxisY);
		min1 = normalAxisX * verts[0].x + normalAxisY * verts[0].y;
		max1 = min1;
		var _g31 = 1;
		var _g21 = verts.length;
		while(_g31 < _g21) {
			var j1 = _g31++;
			test = normalAxisX * verts[j1].x + normalAxisY * verts[j1].y;
			if(test < min1) min1 = test;
			if(test > max1) max1 = test;
		}
		max2 = circle.get_transformedRadius();
		min2 = -circle.get_transformedRadius();
		offset = normalAxisX * -circleX + normalAxisY * -circleY;
		min1 += offset;
		max1 += offset;
		test1 = min1 - max2;
		test2 = min2 - max1;
		if(test1 > 0 || test2 > 0) return null;
		distMin = -(max2 - min1);
		if(flip) distMin *= -1;
		if(Math.abs(distMin) < closest) {
			into.unitVectorX = normalAxisX;
			into.unitVectorY = normalAxisY;
			into.overlap = distMin;
			closest = Math.abs(distMin);
		}
	}
	if(flip) into.shape1 = polygon; else into.shape1 = circle;
	if(flip) into.shape2 = circle; else into.shape2 = polygon;
	into.separationX = into.unitVectorX * into.overlap;
	into.separationY = into.unitVectorY * into.overlap;
	if(!flip) {
		into.unitVectorX = -into.unitVectorX;
		into.unitVectorY = -into.unitVectorY;
	}
	return into;
};
luxe_collision_sat_SAT2D.testCircleVsCircle = function(circleA,circleB,into,flip) {
	if(flip == null) flip = false;
	var circle1;
	if(flip) circle1 = circleB; else circle1 = circleA;
	var circle2;
	if(flip) circle2 = circleA; else circle2 = circleB;
	var totalRadius = circle1.get_transformedRadius() + circle2.get_transformedRadius();
	var distancesq = luxe_utils_Maths.vec_lengthsq(circle1._position.x - circle2._position.x,circle1._position.y - circle2._position.y);
	if(distancesq < totalRadius * totalRadius) {
		if(into == null) into = new luxe_collision_data_ShapeCollision(); else {
			into.shape1 = into.shape2 = null;
			into.overlap = into.separationX = into.separationY = into.unitVectorX = into.unitVectorY = 0.0;
			into.otherOverlap = into.otherSeparationX = into.otherSeparationY = into.otherUnitVectorX = into.otherUnitVectorY = 0.0;
			into = into;
		}
		var difference = totalRadius - Math.sqrt(distancesq);
		into.shape1 = circle1;
		into.shape2 = circle2;
		var unitVecX = circle1._position.x - circle2._position.x;
		var unitVecY = circle1._position.y - circle2._position.y;
		var unitVecLen = Math.sqrt(unitVecX * unitVecX + unitVecY * unitVecY);
		unitVecX = luxe_utils_Maths.vec_normalize(unitVecLen,unitVecX);
		unitVecY = luxe_utils_Maths.vec_normalize(unitVecLen,unitVecY);
		into.unitVectorX = unitVecX;
		into.unitVectorY = unitVecY;
		into.separationX = into.unitVectorX * difference;
		into.separationY = into.unitVectorY * difference;
		into.overlap = difference;
		return into;
	}
	return null;
};
luxe_collision_sat_SAT2D.testPolygonVsPolygon = function(polygon1,polygon2,into,flip) {
	if(flip == null) flip = false;
	if(into == null) into = new luxe_collision_data_ShapeCollision(); else {
		into.shape1 = into.shape2 = null;
		into.overlap = into.separationX = into.separationY = into.unitVectorX = into.unitVectorY = 0.0;
		into.otherOverlap = into.otherSeparationX = into.otherSeparationY = into.otherUnitVectorX = into.otherUnitVectorY = 0.0;
		into = into;
	}
	if(luxe_collision_sat_SAT2D.checkPolygons(polygon1,polygon2,luxe_collision_sat_SAT2D.tmp1,flip) == null) return null;
	if(luxe_collision_sat_SAT2D.checkPolygons(polygon2,polygon1,luxe_collision_sat_SAT2D.tmp2,!flip) == null) return null;
	var result = null;
	var other = null;
	if(Math.abs(luxe_collision_sat_SAT2D.tmp1.overlap) < Math.abs(luxe_collision_sat_SAT2D.tmp2.overlap)) {
		result = luxe_collision_sat_SAT2D.tmp1;
		other = luxe_collision_sat_SAT2D.tmp2;
	} else {
		result = luxe_collision_sat_SAT2D.tmp2;
		other = luxe_collision_sat_SAT2D.tmp1;
	}
	result.otherOverlap = other.overlap;
	result.otherSeparationX = other.separationX;
	result.otherSeparationY = other.separationY;
	result.otherUnitVectorX = other.unitVectorX;
	result.otherUnitVectorY = other.unitVectorY;
	into.overlap = result.overlap;
	into.separationX = result.separationX;
	into.separationY = result.separationY;
	into.unitVectorX = result.unitVectorX;
	into.unitVectorY = result.unitVectorY;
	into.otherOverlap = result.otherOverlap;
	into.otherSeparationX = result.otherSeparationX;
	into.otherSeparationY = result.otherSeparationY;
	into.otherUnitVectorX = result.otherUnitVectorX;
	into.otherUnitVectorY = result.otherUnitVectorY;
	into.shape1 = result.shape1;
	into.shape2 = result.shape2;
	result = other = null;
	return into;
};
luxe_collision_sat_SAT2D.testRayVsCircle = function(ray,circle,into) {
	var deltaX = ray.end.x - ray.start.x;
	var deltaY = ray.end.y - ray.start.y;
	var ray2circleX = ray.start.x - circle._position.x;
	var ray2circleY = ray.start.y - circle._position.y;
	var a = deltaX * deltaX + deltaY * deltaY;
	var b = 2 * (deltaX * ray2circleX + deltaY * ray2circleY);
	var c = ray2circleX * ray2circleX + ray2circleY * ray2circleY - circle.get_transformedRadius() * circle.get_transformedRadius();
	var d = b * b - 4 * a * c;
	if(d >= 0) {
		d = Math.sqrt(d);
		var t1 = (-b - d) / (2 * a);
		var t2 = (-b + d) / (2 * a);
		var valid;
		var _g = ray.infinite;
		switch(_g[1]) {
		case 0:
			valid = t1 >= 0.0 && t1 <= 1.0;
			break;
		case 1:
			valid = t1 >= 0.0;
			break;
		case 2:
			valid = true;
			break;
		}
		if(valid) {
			if(into == null) into = new luxe_collision_data_RayCollision(); else {
				into.ray = null;
				into.shape = null;
				into.start = 0.0;
				into.end = 0.0;
				into = into;
			}
			into.shape = circle;
			into.ray = ray;
			into.start = t1;
			into.end = t2;
			return into;
		}
	}
	return null;
};
luxe_collision_sat_SAT2D.testRayVsPolygon = function(ray,polygon,into) {
	var min_u = Infinity;
	var max_u = -Infinity;
	var startX = ray.start.x;
	var startY = ray.start.y;
	var deltaX = ray.end.x - startX;
	var deltaY = ray.end.y - startY;
	var verts = polygon.get_transformedVertices();
	var v1 = verts[verts.length - 1];
	var v2 = verts[0];
	var ud = (v2.y - v1.y) * deltaX - (v2.x - v1.x) * deltaY;
	var ua = ((v2.x - v1.x) * (startY - v1.y) - (v2.y - v1.y) * (startX - v1.x)) / ud;
	var ub = (deltaX * (startY - v1.y) - deltaY * (startX - v1.x)) / ud;
	if(ud != 0.0 && ub >= 0.0 && ub <= 1.0) {
		if(ua < min_u) min_u = ua;
		if(ua > max_u) max_u = ua;
	}
	var _g1 = 1;
	var _g = verts.length;
	while(_g1 < _g) {
		var i = _g1++;
		v1 = verts[i - 1];
		v2 = verts[i];
		ud = (v2.y - v1.y) * deltaX - (v2.x - v1.x) * deltaY;
		ua = ((v2.x - v1.x) * (startY - v1.y) - (v2.y - v1.y) * (startX - v1.x)) / ud;
		ub = (deltaX * (startY - v1.y) - deltaY * (startX - v1.x)) / ud;
		if(ud != 0.0 && ub >= 0.0 && ub <= 1.0) {
			if(ua < min_u) min_u = ua;
			if(ua > max_u) max_u = ua;
		}
	}
	var valid;
	var _g2 = ray.infinite;
	switch(_g2[1]) {
	case 0:
		valid = min_u >= 0.0 && min_u <= 1.0;
		break;
	case 1:
		valid = min_u != Infinity && min_u >= 0.0;
		break;
	case 2:
		valid = min_u != Infinity;
		break;
	}
	if(valid) {
		if(into == null) into = new luxe_collision_data_RayCollision(); else {
			into.ray = null;
			into.shape = null;
			into.start = 0.0;
			into.end = 0.0;
			into = into;
		}
		into.shape = polygon;
		into.ray = ray;
		into.start = min_u;
		into.end = max_u;
		return into;
	}
	return null;
};
luxe_collision_sat_SAT2D.testRayVsRay = function(ray1,ray2,into) {
	var delta1X = ray1.end.x - ray1.start.x;
	var delta1Y = ray1.end.y - ray1.start.y;
	var delta2X = ray2.end.x - ray2.start.x;
	var delta2Y = ray2.end.y - ray2.start.y;
	var diffX = ray1.start.x - ray2.start.x;
	var diffY = ray1.start.y - ray2.start.y;
	var ud = delta2Y * delta1X - delta2X * delta1Y;
	if(ud == 0.0) return null;
	var u1 = (delta2X * diffY - delta2Y * diffX) / ud;
	var u2 = (delta1X * diffY - delta1Y * diffX) / ud;
	var valid1;
	var _g = ray1.infinite;
	switch(_g[1]) {
	case 0:
		valid1 = u1 > 0.0 && u1 <= 1.0;
		break;
	case 1:
		valid1 = u1 > 0.0;
		break;
	case 2:
		valid1 = true;
		break;
	}
	var valid2;
	var _g1 = ray2.infinite;
	switch(_g1[1]) {
	case 0:
		valid2 = u2 > 0.0 && u2 <= 1.0;
		break;
	case 1:
		valid2 = u2 > 0.0;
		break;
	case 2:
		valid2 = true;
		break;
	}
	if(valid1 && valid2) {
		if(into == null) into = new luxe_collision_data_RayIntersection(); else {
			into.ray1 = null;
			into.ray2 = null;
			into.u1 = 0.0;
			into.u2 = 0.0;
			into = into;
		}
		into.ray1 = ray1;
		into.ray2 = ray2;
		into.u1 = u1;
		into.u2 = u2;
		return into;
	}
	return null;
};
luxe_collision_sat_SAT2D.checkPolygons = function(polygon1,polygon2,into,flip) {
	if(flip == null) flip = false;
	into.shape1 = into.shape2 = null;
	into.overlap = into.separationX = into.separationY = into.unitVectorX = into.unitVectorY = 0.0;
	into.otherOverlap = into.otherSeparationX = into.otherSeparationY = into.otherUnitVectorX = into.otherUnitVectorY = 0.0;
	into;
	var offset = 0.0;
	var test1 = 0.0;
	var test2 = 0.0;
	var testNum = 0.0;
	var min1 = 0.0;
	var max1 = 0.0;
	var min2 = 0.0;
	var max2 = 0.0;
	var closest = 1073741823;
	var axisX = 0.0;
	var axisY = 0.0;
	var verts1 = polygon1.get_transformedVertices();
	var verts2 = polygon2.get_transformedVertices();
	var _g1 = 0;
	var _g = verts1.length;
	while(_g1 < _g) {
		var i = _g1++;
		axisX = luxe_collision_sat_SAT2D.findNormalAxisX(verts1,i);
		axisY = luxe_collision_sat_SAT2D.findNormalAxisY(verts1,i);
		var aLen = Math.sqrt(axisX * axisX + axisY * axisY);
		axisX = luxe_utils_Maths.vec_normalize(aLen,axisX);
		axisY = luxe_utils_Maths.vec_normalize(aLen,axisY);
		min1 = axisX * verts1[0].x + axisY * verts1[0].y;
		max1 = min1;
		var _g3 = 1;
		var _g2 = verts1.length;
		while(_g3 < _g2) {
			var j = _g3++;
			testNum = axisX * verts1[j].x + axisY * verts1[j].y;
			if(testNum < min1) min1 = testNum;
			if(testNum > max1) max1 = testNum;
		}
		min2 = axisX * verts2[0].x + axisY * verts2[0].y;
		max2 = min2;
		var _g31 = 1;
		var _g21 = verts2.length;
		while(_g31 < _g21) {
			var j1 = _g31++;
			testNum = axisX * verts2[j1].x + axisY * verts2[j1].y;
			if(testNum < min2) min2 = testNum;
			if(testNum > max2) max2 = testNum;
		}
		test1 = min1 - max2;
		test2 = min2 - max1;
		if(test1 > 0 || test2 > 0) return null;
		var distMin = -(max2 - min1);
		if(flip) distMin *= -1;
		if(Math.abs(distMin) < closest) {
			into.unitVectorX = axisX;
			into.unitVectorY = axisY;
			into.overlap = distMin;
			closest = Math.abs(distMin);
		}
	}
	if(flip) into.shape1 = polygon2; else into.shape1 = polygon1;
	if(flip) into.shape2 = polygon1; else into.shape2 = polygon2;
	into.separationX = -into.unitVectorX * into.overlap;
	into.separationY = -into.unitVectorY * into.overlap;
	if(flip) {
		into.unitVectorX = -into.unitVectorX;
		into.unitVectorY = -into.unitVectorY;
	}
	return into;
};
luxe_collision_sat_SAT2D.rayU = function(udelta,aX,aY,bX,bY,dX,dY) {
	return (dX * (aY - bY) - dY * (aX - bX)) / udelta;
};
luxe_collision_sat_SAT2D.findNormalAxisX = function(verts,index) {
	var v2;
	if(index >= verts.length - 1) v2 = verts[0]; else v2 = verts[index + 1];
	return -(v2.y - verts[index].y);
};
luxe_collision_sat_SAT2D.findNormalAxisY = function(verts,index) {
	var v2;
	if(index >= verts.length - 1) v2 = verts[0]; else v2 = verts[index + 1];
	return v2.x - verts[index].x;
};
var luxe_collision_shapes_Shape = function(_x,_y) {
	this._transformed = false;
	this._scaleY = 1;
	this._scaleX = 1;
	this._rotation_radians = 0;
	this._rotation = 0;
	this.name = "shape";
	this.active = true;
	this.tags = new haxe_ds_StringMap();
	this._position = new phoenix_Vector(_x,_y);
	this._scale = new phoenix_Vector(1,1);
	this._rotation_quat = new phoenix_Quaternion();
	this._rotation_euler = new phoenix_Vector();
	this._rotation = 0;
	this._scaleX = 1;
	this._scaleY = 1;
	var _v = this._position;
	var listener = $bind(this,this._pos_changed);
	_v.listen_x = listener;
	_v.listen_y = listener;
	_v.listen_z = listener;
	this._transformMatrix = new phoenix_Matrix();
	this._transformMatrix.makeTranslation(this._position.x,this._position.y,0);
};
$hxClasses["luxe.collision.shapes.Shape"] = luxe_collision_shapes_Shape;
luxe_collision_shapes_Shape.__name__ = ["luxe","collision","shapes","Shape"];
luxe_collision_shapes_Shape.prototype = {
	test: function(shape,into) {
		return null;
	}
	,testCircle: function(circle,into,flip) {
		if(flip == null) flip = false;
		return null;
	}
	,testPolygon: function(polygon,into,flip) {
		if(flip == null) flip = false;
		return null;
	}
	,testRay: function(ray,into) {
		return null;
	}
	,destroy: function() {
		this._position = null;
		this._scale = null;
		this._transformMatrix = null;
		this._rotation_quat = null;
		this._rotation_euler = null;
	}
	,refresh_transform: function() {
		if(this._position == null) return;
		this._rotation_euler.set_z(this._rotation_radians);
		this._rotation_quat.setFromEuler(this._rotation_euler);
		this._transformMatrix.compose(this._position,this._rotation_quat,this._scale);
		this._transformed = false;
	}
	,get_position: function() {
		return this._position;
	}
	,set_position: function(v) {
		this._position = v;
		this.refresh_transform();
		if(this._position != null) {
			var _v = this._position;
			var listener = $bind(this,this._pos_changed);
			_v.listen_x = listener;
			_v.listen_y = listener;
			_v.listen_z = listener;
		}
		return this._position;
	}
	,get_x: function() {
		return this._position.x;
	}
	,set_x: function(x) {
		this._position.ignore_listeners = true;
		this._position.set_x(x);
		this.refresh_transform();
		this._position.ignore_listeners = false;
		return this._position.x;
	}
	,get_y: function() {
		return this._position.y;
	}
	,set_y: function(y) {
		this._position.ignore_listeners = true;
		this._position.set_y(y);
		this.refresh_transform();
		this._position.ignore_listeners = false;
		return this._position.y;
	}
	,get_rotation: function() {
		return this._rotation;
	}
	,set_rotation: function(v) {
		this._rotation_radians = v * (Math.PI / 180);
		this.refresh_transform();
		return this._rotation = v;
	}
	,get_scaleX: function() {
		return this._scaleX;
	}
	,set_scaleX: function(scale) {
		this._scaleX = scale;
		this._scale.set_x(this._scaleX);
		this.refresh_transform();
		return this._scaleX;
	}
	,get_scaleY: function() {
		return this._scaleY;
	}
	,set_scaleY: function(scale) {
		this._scaleY = scale;
		this._scale.set_y(this._scaleY);
		this.refresh_transform();
		return this._scaleY;
	}
	,_pos_changed: function(_) {
		this.refresh_transform();
	}
	,__class__: luxe_collision_shapes_Shape
	,__properties__: {set_scaleY:"set_scaleY",get_scaleY:"get_scaleY",set_scaleX:"set_scaleX",get_scaleX:"get_scaleX",set_rotation:"set_rotation",get_rotation:"get_rotation",set_y:"set_y",get_y:"get_y",set_x:"set_x",get_x:"get_x",set_position:"set_position",get_position:"get_position"}
};
var luxe_collision_shapes_Circle = function(x,y,radius) {
	luxe_collision_shapes_Shape.call(this,x,y);
	this._radius = radius;
	this.name = "circle " + this._radius;
};
$hxClasses["luxe.collision.shapes.Circle"] = luxe_collision_shapes_Circle;
luxe_collision_shapes_Circle.__name__ = ["luxe","collision","shapes","Circle"];
luxe_collision_shapes_Circle.__super__ = luxe_collision_shapes_Shape;
luxe_collision_shapes_Circle.prototype = $extend(luxe_collision_shapes_Shape.prototype,{
	test: function(shape,into) {
		return shape.testCircle(this,into,true);
	}
	,testCircle: function(circle,into,flip) {
		if(flip == null) flip = false;
		return luxe_collision_sat_SAT2D.testCircleVsCircle(this,circle,into,flip);
	}
	,testPolygon: function(polygon,into,flip) {
		if(flip == null) flip = false;
		return luxe_collision_sat_SAT2D.testCircleVsPolygon(this,polygon,into,flip);
	}
	,testRay: function(ray,into) {
		return luxe_collision_sat_SAT2D.testRayVsCircle(ray,this,into);
	}
	,get_radius: function() {
		return this._radius;
	}
	,get_transformedRadius: function() {
		return this._radius * this._scaleX;
	}
	,__class__: luxe_collision_shapes_Circle
	,__properties__: $extend(luxe_collision_shapes_Shape.prototype.__properties__,{get_transformedRadius:"get_transformedRadius",get_radius:"get_radius"})
});
var luxe_collision_shapes_Polygon = function(x,y,vertices) {
	luxe_collision_shapes_Shape.call(this,x,y);
	this.name = "polygon(sides:" + vertices.length + ")";
	this._transformedVertices = [];
	this._vertices = vertices;
};
$hxClasses["luxe.collision.shapes.Polygon"] = luxe_collision_shapes_Polygon;
luxe_collision_shapes_Polygon.__name__ = ["luxe","collision","shapes","Polygon"];
luxe_collision_shapes_Polygon.create = function(x,y,sides,radius) {
	if(radius == null) radius = 100;
	if(sides < 3) throw new js__$Boot_HaxeError("Polygon - Needs at least 3 sides");
	var rotation = Math.PI * 2 / sides;
	var angle;
	var vector;
	var vertices = [];
	var _g = 0;
	while(_g < sides) {
		var i = _g++;
		angle = i * rotation + (Math.PI - rotation) * 0.5;
		vector = new phoenix_Vector();
		vector.set_x(Math.cos(angle) * radius);
		vector.set_y(Math.sin(angle) * radius);
		vertices.push(vector);
	}
	return new luxe_collision_shapes_Polygon(x,y,vertices);
};
luxe_collision_shapes_Polygon.rectangle = function(x,y,width,height,centered) {
	if(centered == null) centered = true;
	var vertices = [];
	if(centered) {
		vertices.push(new phoenix_Vector(-width / 2,-height / 2));
		vertices.push(new phoenix_Vector(width / 2,-height / 2));
		vertices.push(new phoenix_Vector(width / 2,height / 2));
		vertices.push(new phoenix_Vector(-width / 2,height / 2));
	} else {
		vertices.push(new phoenix_Vector(0,0));
		vertices.push(new phoenix_Vector(width,0));
		vertices.push(new phoenix_Vector(width,height));
		vertices.push(new phoenix_Vector(0,height));
	}
	return new luxe_collision_shapes_Polygon(x,y,vertices);
};
luxe_collision_shapes_Polygon.square = function(x,y,width,centered) {
	if(centered == null) centered = true;
	return luxe_collision_shapes_Polygon.rectangle(x,y,width,width,centered);
};
luxe_collision_shapes_Polygon.triangle = function(x,y,radius) {
	return luxe_collision_shapes_Polygon.create(x,y,3,radius);
};
luxe_collision_shapes_Polygon.__super__ = luxe_collision_shapes_Shape;
luxe_collision_shapes_Polygon.prototype = $extend(luxe_collision_shapes_Shape.prototype,{
	test: function(shape,into) {
		return shape.testPolygon(this,into,true);
	}
	,testCircle: function(circle,into,flip) {
		if(flip == null) flip = false;
		return luxe_collision_sat_SAT2D.testCircleVsPolygon(circle,this,into,!flip);
	}
	,testPolygon: function(polygon,into,flip) {
		if(flip == null) flip = false;
		return luxe_collision_sat_SAT2D.testPolygonVsPolygon(this,polygon,into,flip);
	}
	,testRay: function(ray,into) {
		return luxe_collision_sat_SAT2D.testRayVsPolygon(ray,this);
	}
	,destroy: function() {
		var _count = this._vertices.length;
		var _g = 0;
		while(_g < _count) {
			var i = _g++;
			this._vertices[i] = null;
		}
		this._transformedVertices = null;
		this._vertices = null;
		luxe_collision_shapes_Shape.prototype.destroy.call(this);
	}
	,get_transformedVertices: function() {
		if(!this._transformed) {
			this._transformedVertices = [];
			this._transformed = true;
			var _count = this._vertices.length;
			var _g = 0;
			while(_g < _count) {
				var i = _g++;
				this._transformedVertices.push((function($this) {
					var $r;
					var _this;
					{
						var _this1 = $this._vertices[i];
						_this = new phoenix_Vector(_this1.x,_this1.y,_this1.z,_this1.w);
					}
					var _x = _this.x;
					var _y = _this.y;
					var _z = _this.z;
					var e = $this._transformMatrix.elements;
					{
						var _x1 = e[0] * _x + e[4] * _y + e[8] * _z + e[12];
						var _y1 = e[1] * _x + e[5] * _y + e[9] * _z + e[13];
						var _z1 = e[2] * _x + e[6] * _y + e[10] * _z + e[14];
						var prev = _this.ignore_listeners;
						_this.ignore_listeners = true;
						_this.x = _x1;
						if(_this._construct) _this.x; else {
							if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_x1);
							_this.x;
						}
						_this.y = _y1;
						if(_this._construct) _this.y; else {
							if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_y1);
							_this.y;
						}
						_this.z = _z1;
						if(_this._construct) _this.z; else {
							if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_z1);
							_this.z;
						}
						_this.ignore_listeners = prev;
						if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_this.x);
						if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_this.y);
						if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_this.z);
						_this;
					}
					$r = _this;
					return $r;
				}(this)));
			}
		}
		return this._transformedVertices;
	}
	,get_vertices: function() {
		return this._vertices;
	}
	,__class__: luxe_collision_shapes_Polygon
	,__properties__: $extend(luxe_collision_shapes_Shape.prototype.__properties__,{get_vertices:"get_vertices",get_transformedVertices:"get_transformedVertices"})
});
var luxe_collision_shapes_Ray = function(_start,_end,_infinite) {
	this.start = _start;
	this.end = _end;
	if(_infinite == null) this.infinite = luxe_collision_shapes_InfiniteState.not_infinite; else this.infinite = _infinite;
	this.dir_cache = new phoenix_Vector(this.end.x - this.start.x,this.end.y - this.start.y);
};
$hxClasses["luxe.collision.shapes.Ray"] = luxe_collision_shapes_Ray;
luxe_collision_shapes_Ray.__name__ = ["luxe","collision","shapes","Ray"];
luxe_collision_shapes_Ray.prototype = {
	get_dir: function() {
		this.dir_cache.set_x(this.end.x - this.start.x);
		this.dir_cache.set_y(this.end.y - this.start.y);
		return this.dir_cache;
	}
	,__class__: luxe_collision_shapes_Ray
	,__properties__: {get_dir:"get_dir"}
};
var luxe_collision_shapes_InfiniteState = $hxClasses["luxe.collision.shapes.InfiniteState"] = { __ename__ : ["luxe","collision","shapes","InfiniteState"], __constructs__ : ["not_infinite","infinite_from_start","infinite"] };
luxe_collision_shapes_InfiniteState.not_infinite = ["not_infinite",0];
luxe_collision_shapes_InfiniteState.not_infinite.toString = $estr;
luxe_collision_shapes_InfiniteState.not_infinite.__enum__ = luxe_collision_shapes_InfiniteState;
luxe_collision_shapes_InfiniteState.infinite_from_start = ["infinite_from_start",1];
luxe_collision_shapes_InfiniteState.infinite_from_start.toString = $estr;
luxe_collision_shapes_InfiniteState.infinite_from_start.__enum__ = luxe_collision_shapes_InfiniteState;
luxe_collision_shapes_InfiniteState.infinite = ["infinite",2];
luxe_collision_shapes_InfiniteState.infinite.toString = $estr;
luxe_collision_shapes_InfiniteState.infinite.__enum__ = luxe_collision_shapes_InfiniteState;
var luxe_components_Components = function(_entity) {
	var _map = new haxe_ds_StringMap();
	this.components = new luxe_structural_OrderedMap_$String_$luxe_$Component(_map);
	this.entity = _entity;
};
$hxClasses["luxe.components.Components"] = luxe_components_Components;
luxe_components_Components.__name__ = ["luxe","components","Components"];
luxe_components_Components.prototype = {
	destroy: function() {
		this.components.map = null;
		this.components = null;
		this.entity = null;
	}
	,add: function(_component) {
		if(_component == null) {
			haxe_Log.trace("attempt to add null component to " + this.entity.get_name(),{ fileName : "Components.hx", lineNumber : 36, className : "luxe.components.Components", methodName : "add"});
			return _component;
		}
		_component.set_entity(this.entity);
		this.components.set(_component.name,_component);
		_component.onadded();
		if(this.entity.inited) _component.init();
		if(this.entity.started) _component.onreset();
		return _component;
	}
	,remove: function(_name) {
		if(!this.components.map.exists(_name)) {
			haxe_Log.trace("attempt to remove " + _name + " from " + this.entity.get_name() + " failed because that component was not attached to this entity",{ fileName : "Components.hx", lineNumber : 69, className : "luxe.components.Components", methodName : "remove"});
			return false;
		}
		var _component = this.components.map.get(_name);
		_component.onremoved();
		_component.set_entity(null);
		return this.components.remove(_name);
	}
	,get: function(_name,in_children) {
		if(in_children == null) in_children = false;
		if(!in_children) return this.components.map.get(_name); else {
			var in_this_entity = this.components.map.get(_name);
			if(in_this_entity != null) return in_this_entity;
			var _g = 0;
			var _g1 = this.entity.children;
			while(_g < _g1.length) {
				var _child = _g1[_g];
				++_g;
				var found = _child._components.get(_name,true);
				if(found != null) return found;
			}
			return null;
		}
		return null;
	}
	,get_any: function(_name,in_children,first_only) {
		if(first_only == null) first_only = true;
		if(in_children == null) in_children = false;
		var results = [];
		if(!in_children) return [this.components.map.get(_name)]; else {
			var in_this_entity = this.components.map.get(_name);
			if(in_this_entity != null) {
				if(first_only) return [in_this_entity]; else results.push(in_this_entity);
			}
			var _g = 0;
			var _g1 = this.entity.children;
			while(_g < _g1.length) {
				var _child = _g1[_g];
				++_g;
				var found = _child._components.get_any(_name,true,first_only);
				if(found != null) {
					if(first_only && found.length > 0) return [found[0]]; else results.concat(found);
				}
			}
		}
		return results;
	}
	,has: function(_name) {
		return this.components.map.exists(_name);
	}
	,__class__: luxe_components_Components
};
var luxe_components_sprite_SpriteAnimation = function(options) {
	this.next_frame_time = 0;
	this.time = 0;
	this.frame = 1;
	this.speed = 30.0;
	this.reverse = false;
	this.pingpong = false;
	this.loop = false;
	this.playing = false;
	this.image_frame = 0;
	luxe_Component.call(this,options);
	this.animations = new haxe_ds_StringMap();
	this.uv_cache = new phoenix_Rectangle();
};
$hxClasses["luxe.components.sprite.SpriteAnimation"] = luxe_components_sprite_SpriteAnimation;
luxe_components_sprite_SpriteAnimation.__name__ = ["luxe","components","sprite","SpriteAnimation"];
luxe_components_sprite_SpriteAnimation.__super__ = luxe_Component;
luxe_components_sprite_SpriteAnimation.prototype = $extend(luxe_Component.prototype,{
	onadded: function() {
		this.sprite = this.get_entity();
		if(this.sprite == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("sprite was null" + (" ( " + "SpriteAnimation belongs on a Sprite instance" + " )")));
	}
	,init: function() {
	}
	,restart: function() {
		this.set_frame(1);
		this.play();
	}
	,play: function() {
		this.playing = true;
	}
	,stop: function() {
		this.playing = false;
	}
	,add_from_anim_data: function(_data) {
		this.animations.set(_data.name,_data);
	}
	,add_from_json_object: function(_json_object) {
		var anim_items = _json_object;
		var anims = Reflect.fields(anim_items);
		if(anims.length > 0) {
			var _g = 0;
			while(_g < anims.length) {
				var anim = anims[_g];
				++_g;
				var animdata = Reflect.field(anim_items,anim);
				var _anim = new luxe_components_sprite_SpriteAnimationData(this.get_entity(),anim);
				_anim.from_json(animdata);
				this.animations.set(anim,_anim);
			}
		} else haxe_Log.trace("i / spriteanimation / " + ("" + this.get_entity().get_name() + " / add_from_json_object given an empty json object... This is probably an error."),{ fileName : "SpriteAnimation.hx", lineNumber : 132, className : "luxe.components.sprite.SpriteAnimation", methodName : "add_from_json_object"});
	}
	,add_from_json: function(_json_string) {
		var _json_object = JSON.parse(_json_string);
		this.add_from_json_object(_json_object);
	}
	,remove_event: function(_animation,_image_frame,_event) {
		if(_event == null) _event = "";
		if(this.animations.exists(_animation)) {
			var _anim = this.animations.get(_animation);
			var _g = 0;
			var _g1 = _anim.frameset;
			while(_g < _g1.length) {
				var _anim_frame = _g1[_g];
				++_g;
				if(_anim_frame.image_frame != _image_frame) continue;
				var _g2 = 0;
				var _g3 = _anim_frame.events;
				while(_g2 < _g3.length) {
					var _frame_event = _g3[_g2];
					++_g2;
					if(_frame_event.frame != _image_frame) continue;
					if(_frame_event.event != _event) continue;
					HxOverrides.remove(_anim_frame.events,_frame_event);
					null;
				}
			}
		} else haxe_Log.trace("i / spriteanimation / " + ("" + this.get_entity().get_name() + " / " + this.animation + " requested an event to be added, but that animation is not found in the `" + this.name + "` component"),{ fileName : "SpriteAnimation.hx", lineNumber : 176, className : "luxe.components.sprite.SpriteAnimation", methodName : "remove_event"});
	}
	,remove_events: function(_animation,_image_frame) {
		if(this.animations.exists(_animation)) {
			var _anim = this.animations.get(_animation);
			var _g = 0;
			var _g1 = _anim.frameset;
			while(_g < _g1.length) {
				var _anim_frame = _g1[_g];
				++_g;
				if(_anim_frame.image_frame == _image_frame) _anim_frame.events = [];
			}
		} else haxe_Log.trace("i / spriteanimation / " + ("" + this.get_entity().get_name() + " / " + this.animation + " requested an event to be removed, but that animation is not found in the `" + this.name + "` component"),{ fileName : "SpriteAnimation.hx", lineNumber : 193, className : "luxe.components.sprite.SpriteAnimation", methodName : "remove_events"});
	}
	,add_event: function(_animation,_image_frame,_event) {
		if(_event == null) _event = "";
		if(this.animations.exists(_animation)) {
			var _anim = this.animations.get(_animation);
			var _g = 0;
			var _g1 = _anim.frameset;
			while(_g < _g1.length) {
				var _anim_frame = _g1[_g];
				++_g;
				if(_anim_frame.image_frame == _image_frame) {
					var _add_event = true;
					var _g2 = 0;
					var _g3 = _anim_frame.events;
					while(_g2 < _g3.length) {
						var _frame_event = _g3[_g2];
						++_g2;
						if(_frame_event.frame == _image_frame && _frame_event.event == _event) {
							_add_event = false;
							null;
						}
					}
					if(_add_event) {
						_anim_frame.events.push({ frame : _image_frame, event : _event});
						null;
					}
				}
			}
		} else haxe_Log.trace("i / spriteanimation / " + ("" + this.get_entity().get_name() + " / " + this.animation + " requested an event to be added, but that animation is not found in the `" + this.name + "` component"),{ fileName : "SpriteAnimation.hx", lineNumber : 233, className : "luxe.components.sprite.SpriteAnimation", methodName : "add_event"});
	}
	,update: function(dt) {
		if(this.current == null) return;
		if(!this.playing) return;
		var end = false;
		var _frame = this.get_frame();
		this.time += dt;
		if(this.time >= this.next_frame_time) {
			this.next_frame_time = this.time + this.current.frame_time;
			if(!this.reverse) _frame += 1; else _frame -= 1;
			if(!this.reverse) {
				if(_frame > this.current.get_frame_count()) {
					end = true;
					if(!this.loop) _frame = this.current.get_frame_count();
				}
			} else if(_frame < 1) {
				end = true;
				if(!this.loop) _frame = 1;
			}
			if(end) {
				if(this.loop) {
					if(this.pingpong) this.reverse = !this.reverse;
					if(!this.reverse) _frame = 1; else _frame = this.current.get_frame_count();
					this.emit_anim_event("loop");
				} else {
					this.stop();
					this.emit_anim_event("end");
					_frame = this.get_frame();
				}
			}
			this.set_frame(_frame);
		}
	}
	,refresh_sprite: function() {
		if(this.sprite == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("sprite was null" + (" ( " + "SpriteAnimation requires non-null sprite instance" + " )")));
		if(this.current.type == luxe_components_sprite_SpriteAnimationType.animated_uv) {
			if(this.sprite.texture == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("sprite.texture was null" + (" ( " + "SpriteAnimation with animated_uv type requires a texture that is not null" + " )")));
			this.uv_cache.set(this.current_frame.frame_source.x,this.current_frame.frame_source.y,this.current_frame.frame_source.w,this.current_frame.frame_source.h);
			var _ratio_x = this.current_frame.frame_size.x / this.sprite.size.x;
			var _ratio_y = this.current_frame.frame_size.y / this.sprite.size.y;
			this.sprite.geometry.transform.local.scale.set_x(this.current_frame.frame_source.w / this.current_frame.frame_size.x * this.sprite.get_scale().x);
			this.sprite.geometry.transform.local.scale.set_y(this.current_frame.frame_source.h / this.current_frame.frame_size.y * this.sprite.get_scale().y);
			this.sprite.geometry.transform.origin.set_x(-(this.current_frame.frame_pos.x / _ratio_x * this.sprite.get_scale().x) / this.sprite.geometry.transform.local.scale.x);
			this.sprite.geometry.transform.origin.set_y(-(this.current_frame.frame_pos.y / _ratio_y * this.sprite.get_scale().y) / this.sprite.geometry.transform.local.scale.y);
			this.sprite.set_uv(this.uv_cache);
		} else if(this.current.type == luxe_components_sprite_SpriteAnimationType.animated_texture) {
			if(this.image_frame <= this.current.image_set.length) {
				this.sprite.set_texture(this.current.image_set[this.image_frame - 1]);
				this.uv_cache.set(this.current_frame.frame_source.x,this.current_frame.frame_source.y,this.current_frame.frame_source.w,this.current_frame.frame_source.h);
				this.sprite.set_uv(this.uv_cache);
			}
		}
	}
	,get_frame: function() {
		return this.frame;
	}
	,set_frame: function(_frame) {
		this.frame = _frame;
		if(this.current == null) return this.get_frame();
		if(this.get_entity() == null || this.get_entity().destroyed) return this.get_frame();
		this.current_frame = this.current.frameset[this.get_frame() - 1];
		this.image_frame = this.current_frame.image_frame;
		this.emit_frame_events();
		this.refresh_sprite();
		return this.get_frame();
	}
	,get_speed: function() {
		return this.speed;
	}
	,set_speed: function(_speed) {
		if(this.current != null) this.current.frame_time = 1 / _speed;
		return this.speed = _speed;
	}
	,get_animation: function() {
		return this.animation;
	}
	,set_animation: function(_name) {
		if(!this.animations.exists(_name)) {
			haxe_Log.trace("i / spriteanimation / " + ("" + this.get_entity().get_name() + " / set animation `" + _name + "`, but that animation is not found in the `" + this.name + "` component"),{ fileName : "SpriteAnimation.hx", lineNumber : 418, className : "luxe.components.sprite.SpriteAnimation", methodName : "set_animation"});
			return this.animation;
		}
		this.current = this.animations.get(_name);
		this.loop = this.current.loop;
		this.pingpong = this.current.pingpong;
		this.reverse = this.current.reverse;
		this.next_frame_time = this.time + this.current.frame_time;
		this.set_frame(1);
		return this.animation = _name;
	}
	,emit_frame_events: function() {
		var _g = 0;
		var _g1 = this.current_frame.events;
		while(_g < _g1.length) {
			var _event = _g1[_g];
			++_g;
			var _event_emit_name = _event.event;
			if(_event_emit_name == "") _event_emit_name = "animation." + this.animation + "." + this.current_frame.image_frame;
			this.get_entity().events.fire(_event_emit_name,{ animation : this.animation, event : _event_emit_name, frame_event : _event, frame : this.current_frame, image_frame : this.current_frame.image_frame});
		}
	}
	,emit_anim_event: function(_name) {
		var _event_emit_name = "animation." + this.animation + "." + _name;
		this.get_entity().events.fire(_event_emit_name,{ animation : this.animation, event : _event_emit_name, frame_event : null, frame : this.current_frame, image_frame : this.current_frame.image_frame});
	}
	,ondestroy: function() {
		luxe_Component.prototype.ondestroy.call(this);
	}
	,onremoved: function() {
		luxe_Component.prototype.onremoved.call(this);
	}
	,__class__: luxe_components_sprite_SpriteAnimation
	,__properties__: $extend(luxe_Component.prototype.__properties__,{set_frame:"set_frame",get_frame:"get_frame",set_speed:"set_speed",get_speed:"get_speed",set_animation:"set_animation",get_animation:"get_animation"})
});
var luxe_components_sprite_SpriteAnimationType = $hxClasses["luxe.components.sprite.SpriteAnimationType"] = { __ename__ : ["luxe","components","sprite","SpriteAnimationType"], __constructs__ : ["animated_texture","animated_uv"] };
luxe_components_sprite_SpriteAnimationType.animated_texture = ["animated_texture",0];
luxe_components_sprite_SpriteAnimationType.animated_texture.toString = $estr;
luxe_components_sprite_SpriteAnimationType.animated_texture.__enum__ = luxe_components_sprite_SpriteAnimationType;
luxe_components_sprite_SpriteAnimationType.animated_uv = ["animated_uv",1];
luxe_components_sprite_SpriteAnimationType.animated_uv.toString = $estr;
luxe_components_sprite_SpriteAnimationType.animated_uv.__enum__ = luxe_components_sprite_SpriteAnimationType;
var luxe_components_sprite_SpriteAnimationData = function(_sprite,_name) {
	if(_name == null) _name = "anim";
	this.frame_count = 0;
	this.reverse = false;
	this.pingpong = false;
	this.loop = false;
	this.frame_time = 0.05;
	this.name = _name;
	this.sprite = _sprite;
	this.frameset = [];
	this.frame_sources = [];
	this.frame_size = new phoenix_Vector();
};
$hxClasses["luxe.components.sprite.SpriteAnimationData"] = luxe_components_sprite_SpriteAnimationData;
luxe_components_sprite_SpriteAnimationData.__name__ = ["luxe","components","sprite","SpriteAnimationData"];
luxe_components_sprite_SpriteAnimationData.prototype = {
	get_frame_count: function() {
		return this.frameset.length;
	}
	,from_json: function(_animdata) {
		if(_animdata == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_animdata was null" + (" ( " + "Null animation object passed to from_json in SpriteAnimation" + " )")));
		var _json_frameset = _animdata.frameset;
		var _json_frame_size = _animdata.frame_size;
		var _json_pingpong = _animdata.pingpong;
		var _json_loop = _animdata.loop;
		var _json_reverse = _animdata.reverse;
		var _json_speed = _animdata.speed;
		var _json_image_sequence = _animdata.image_sequence;
		var _json_filter_type = _animdata.filter_type;
		var _json_events_list = _animdata.events;
		var _json_framesource_list = _animdata.frame_sources;
		if(_json_frameset == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_json_frameset was null" + (" ( " + "SpriteAnimation passed invalid json, anim data requires frameset as an array of strings." + " )")));
		var _frameset = this.parse_frameset(_json_frameset);
		this.type = luxe_components_sprite_SpriteAnimationType.animated_uv;
		if(_json_filter_type != null) switch(_json_filter_type) {
		case "nearest":
			this.filter_type = 9728;
			break;
		case "linear":
			this.filter_type = 9729;
			break;
		}
		var _frame_size = new phoenix_Vector();
		if(_json_frame_size != null) {
			var _x = Std.parseFloat(_json_frame_size.x);
			var _y = Std.parseFloat(_json_frame_size.y);
			var prev = _frame_size.ignore_listeners;
			_frame_size.ignore_listeners = true;
			_frame_size.x = _x;
			if(_frame_size._construct) _frame_size.x; else {
				if(_frame_size.listen_x != null && !_frame_size.ignore_listeners) _frame_size.listen_x(_x);
				_frame_size.x;
			}
			_frame_size.y = _y;
			if(_frame_size._construct) _frame_size.y; else {
				if(_frame_size.listen_y != null && !_frame_size.ignore_listeners) _frame_size.listen_y(_y);
				_frame_size.y;
			}
			_frame_size.ignore_listeners = prev;
			if(_frame_size.listen_x != null && !_frame_size.ignore_listeners) _frame_size.listen_x(_frame_size.x);
			if(_frame_size.listen_y != null && !_frame_size.ignore_listeners) _frame_size.listen_y(_frame_size.y);
			_frame_size;
		}
		var _pingpong = false;
		if(_json_pingpong != null) {
			if(_json_pingpong == "true" || _json_pingpong == true) _pingpong = true; else _pingpong = false;
		}
		var _loop = false;
		if(_json_loop != null) {
			if(_json_loop == "true" || _json_loop == true) _loop = true; else _loop = false;
		}
		var _reverse = false;
		if(_json_reverse != null) {
			if(_json_reverse == "true" || _json_reverse == true) _reverse = true; else _reverse = false;
		}
		var _speed = 2;
		if(_json_speed != null) _speed = Std.parseFloat(_json_speed);
		var _events = null;
		if(_json_events_list != null) _events = this.parse_event_set(_json_events_list);
		this.frame_size = _frame_size;
		var _frame_sources = null;
		if(_json_framesource_list != null) _frame_sources = this.parse_frame_sources_set(_json_framesource_list);
		var _g = 0;
		while(_g < _frameset.length) {
			var _frame = _frameset[_g];
			++_g;
			this.frameset.push({ image_frame : _frame, events : this.parse_event_for_frame(_events,_frame), frame_source : this.parse_source_for_frame(_frame_sources,_frame), frame_size : this.parse_source_size_for_frame(_frame_sources,_frame), frame_pos : this.parse_source_pos_for_frame(_frame_sources,_frame)});
		}
		if(_json_image_sequence != null) {
			var _images_list = Luxe.utils.find_assets_sequence(_json_image_sequence);
			this.type = luxe_components_sprite_SpriteAnimationType.animated_texture;
			this.image_set = [];
			var _textures = [];
			if(_images_list.length > 0) {
				this.image_set_list = _images_list;
				var _g1 = 0;
				while(_g1 < _images_list.length) {
					var _image = _images_list[_g1];
					++_g1;
					var _texture = Luxe.resources.cache.get(_image);
					if(_texture == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_texture was null" + (" ( " + ("SpriteAnimation texture id was not found : " + _image) + " )")));
					this.image_set.push(_texture);
				}
				var _g2 = 0;
				var _g11 = this.frameset;
				while(_g2 < _g11.length) {
					var _frame1 = _g11[_g2];
					++_g2;
					if(_frame1.image_frame <= this.image_set.length) {
						_frame1.image_source = this.image_set[_frame1.image_frame - 1];
						if(this.filter_type != null) _frame1.image_source.set_filter_min(_frame1.image_source.set_filter_mag(this.filter_type));
					}
				}
			}
		}
		this.pingpong = _pingpong;
		this.loop = _loop;
		this.reverse = _reverse;
		this.frame_time = 1 / _speed;
		return this;
	}
	,parse_event_for_frame: function(_events,_frame) {
		if(_events == null) return [];
		if(_events.length == 0) return [];
		var _resulting_events = [];
		var _g = 0;
		while(_g < _events.length) {
			var _event = _events[_g];
			++_g;
			if(_event.frame == _frame) _resulting_events.push(_event);
		}
		return _resulting_events;
	}
	,parse_source_size_for_frame: function(_sources,_frame) {
		if(_sources != null) {
			var _g = 0;
			while(_g < _sources.length) {
				var _source = _sources[_g];
				++_g;
				if(_source.frame == _frame) return _source.size;
			}
		}
		return this.frame_size;
	}
	,parse_source_pos_for_frame: function(_sources,_frame) {
		if(_sources != null) {
			var _g = 0;
			while(_g < _sources.length) {
				var _source = _sources[_g];
				++_g;
				if(_source.frame == _frame) return _source.pos;
			}
		}
		return new phoenix_Vector();
	}
	,parse_source_for_frame: function(_sources,_frame) {
		var _explicit_source = null;
		if(_sources != null) {
			var _g = 0;
			while(_g < _sources.length) {
				var _source = _sources[_g];
				++_g;
				if(_source.frame == _frame) _explicit_source = _source.source;
			}
		}
		if(_explicit_source == null) {
			var result = new phoenix_Rectangle(0,0,this.frame_size.x,this.frame_size.y);
			if(this.sprite.texture != null) {
				var _g1 = this.type;
				switch(_g1[1]) {
				case 1:
					var frames_per_row = (this.sprite.texture.width - this.sprite.texture.width % this.frame_size.x) / this.frame_size.x;
					var image_row = Math.ceil(_frame / frames_per_row);
					var image_x = (_frame - 1) * this.frame_size.x % this.sprite.texture.width;
					var image_y = (image_row - 1) * this.frame_size.y;
					result = new phoenix_Rectangle(image_x,image_y,this.frame_size.x,this.frame_size.y);
					break;
				default:
				}
			}
			return result;
		} else return _explicit_source;
	}
	,parse_frame_sources_set: function(_sources) {
		if(_sources == null) return [];
		var resulting_sources = [];
		var _g = 0;
		while(_g < _sources.length) {
			var _json_source = _sources[_g];
			++_g;
			var _json_size = _json_source.size;
			var _json_source_rect = _json_source.source;
			var _json_pos = _json_source.pos;
			var _x = 0;
			var _y = 0;
			var _w = 0;
			var _h = 0;
			var _sx = 0;
			var _sy = 0;
			var _px = 0;
			var _py = 0;
			if(_json_source_rect != null) {
				_x = Std.parseFloat(_json_source_rect.x);
				_y = Std.parseFloat(_json_source_rect.y);
				_w = Std.parseFloat(_json_source_rect.w);
				_h = Std.parseFloat(_json_source_rect.h);
			}
			if(_json_size != null) {
				_sx = Std.parseFloat(_json_size.x);
				_sy = Std.parseFloat(_json_size.y);
			}
			if(_json_pos != null) {
				_px = Std.parseFloat(_json_pos.x);
				_py = Std.parseFloat(_json_pos.y);
			}
			var _source = { frame : Std.parseInt(_json_source.frame), source : new phoenix_Rectangle(_x,_y,_w,_h), size : new phoenix_Vector(_sx,_sy), pos : new phoenix_Vector(_px,_py)};
			resulting_sources.push(_source);
		}
		return resulting_sources;
	}
	,parse_event_set: function(_events) {
		if(_events == null) return [];
		var resulting_events = [];
		var _g = 0;
		while(_g < _events.length) {
			var _json_event = _events[_g];
			++_g;
			if(_json_event.frame != null) {
				var _event = { frame : Std.parseInt(_json_event.frame), event : _json_event.event == null?"":_json_event.event};
				resulting_events.push(_event);
			}
		}
		return resulting_events;
	}
	,parse_frameset_range: function(_frameset,regex,_frame) {
		var _start = Std.parseInt(regex.matched(1));
		var _end = Std.parseInt(regex.matched(3));
		var _count = Std["int"](Math.abs(_start - _end));
		if(_count == 0) _frameset.push(_start); else if(_start > _end) {
			var _g1 = 0;
			var _g = _count + 1;
			while(_g1 < _g) {
				var _i = _g1++;
				_frameset.push(_start - _i);
			}
		} else {
			var _g11 = _start;
			var _g2 = _end + 1;
			while(_g11 < _g2) {
				var i = _g11++;
				_frameset.push(i);
			}
		}
	}
	,parse_frameset_hold: function(_frameset,regex,_frame) {
		var _frame_index = Std.parseInt(regex.matched(1));
		var _amount = Std.parseInt(regex.matched(3));
		var _g = 0;
		while(_g < _amount) {
			var _i = _g++;
			_frameset.push(_frame_index);
		}
	}
	,parse_frameset_prev_hold: function(_frameset,regex,_frame) {
		if(!(_frameset.length > 0)) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("_frameset.length > 0" + (" ( " + "Animation frames given a hold with no prior frame, if you want to do that you can use `1 hold 10` where 1 is the frame index, 10 is the amount." + " )")));
		var _frame1 = _frameset[_frameset.length - 1];
		var _amount = Std.parseInt(regex.matched(2));
		var _g = 0;
		while(_g < _amount) {
			var _i = _g++;
			_frameset.push(_frame1);
		}
	}
	,parse_frameset_frame: function(_frameset,regex,_frame) {
		var _frame1 = Std.parseInt(regex.matched(1));
		_frameset.push(_frame1);
	}
	,parse_frameset: function(_json_frameset) {
		var _final_frameset = [];
		var _g = 0;
		while(_g < _json_frameset.length) {
			var _frame = _json_frameset[_g];
			++_g;
			if(luxe_components_sprite_SpriteAnimationData.frame_range_regex.match(_frame)) this.parse_frameset_range(_final_frameset,luxe_components_sprite_SpriteAnimationData.frame_range_regex,_frame); else if(luxe_components_sprite_SpriteAnimationData.frame_hold_regex.match(_frame)) this.parse_frameset_hold(_final_frameset,luxe_components_sprite_SpriteAnimationData.frame_hold_regex,_frame); else if(luxe_components_sprite_SpriteAnimationData.frame_hold_prev_regex.match(_frame)) this.parse_frameset_prev_hold(_final_frameset,luxe_components_sprite_SpriteAnimationData.frame_hold_prev_regex,_frame); else if(luxe_components_sprite_SpriteAnimationData.frame_regex.match(_frame)) this.parse_frameset_frame(_final_frameset,luxe_components_sprite_SpriteAnimationData.frame_regex,_frame);
		}
		return _final_frameset;
	}
	,__class__: luxe_components_sprite_SpriteAnimationData
	,__properties__: {get_frame_count:"get_frame_count"}
};
var luxe_debug_DebugView = function(_debug) {
	this.visible = false;
	luxe_Objects.call(this);
	this.debug = _debug;
};
$hxClasses["luxe.debug.DebugView"] = luxe_debug_DebugView;
luxe_debug_DebugView.__name__ = ["luxe","debug","DebugView"];
luxe_debug_DebugView.__super__ = luxe_Objects;
luxe_debug_DebugView.prototype = $extend(luxe_Objects.prototype,{
	refresh: function() {
	}
	,process: function() {
	}
	,ontouchdown: function(e) {
	}
	,ontouchup: function(e) {
	}
	,ontouchmove: function(e) {
	}
	,onmousedown: function(e) {
	}
	,onmouseup: function(e) {
	}
	,onmousemove: function(e) {
	}
	,onmousewheel: function(e) {
	}
	,onkeydown: function(e) {
	}
	,onkeyup: function(e) {
	}
	,onwindowsized: function(e) {
	}
	,create: function() {
	}
	,show: function() {
		this.visible = true;
	}
	,hide: function() {
		this.visible = false;
	}
	,__class__: luxe_debug_DebugView
});
var luxe_debug_Inspector = function(_options) {
	this.set_size(new phoenix_Vector(Std["int"](Luxe.core.screen.get_w() * 0.2),Std["int"](Luxe.core.screen.get_h() * 0.6)));
	this.set_pos(new phoenix_Vector(Luxe.core.screen.get_w() / 2 - this.size.x / 2,Luxe.core.screen.get_h() / 2 - this.size.y / 2));
	this.batcher = Luxe.renderer.batcher;
	if(_options != null) {
		if(_options.batcher != null) this.batcher = _options.batcher;
		if(_options.size != null) this.set_size(_options.size);
		if(_options.pos != null) this.set_pos(_options.pos);
	}
};
$hxClasses["luxe.debug.Inspector"] = luxe_debug_Inspector;
luxe_debug_Inspector.__name__ = ["luxe","debug","Inspector"];
luxe_debug_Inspector.prototype = {
	refresh: function() {
		if(this.window == null) this.create_window();
		if(this.onrefresh != null) this.onrefresh();
	}
	,show: function() {
		this.refresh();
		this.window.set_visible(true);
		this.title.set_visible(true);
		this.version.set_visible(true);
	}
	,hide: function() {
		this.window.set_visible(false);
		this.title.set_visible(false);
		this.version.set_visible(false);
	}
	,set_size: function(_size) {
		if(_size != null && this.window != null) {
			this.window.set_size(_size);
			this.window.geometry.set_dirty(true);
		}
		if(this.version != null) this.version.set_pos(new phoenix_Vector(this.pos.x + (_size.x - 14),this.pos.y + 6));
		return this.size = _size;
	}
	,set_pos: function(_pos) {
		if(_pos != null && this.window != null) {
			this.window.set_pos(_pos);
			this.window.geometry.set_dirty(true);
		}
		if(this.title != null) this.title.set_pos(new phoenix_Vector(_pos.x + 14,_pos.y + 6));
		if(this.version != null) this.version.set_pos(new phoenix_Vector(_pos.x + (this.size.x - 14),_pos.y + 6));
		return this.pos = _pos;
	}
	,create_window: function() {
		this.window = new luxe_Sprite({ name : "debug.window", batcher : this.batcher, no_scene : true, depth : 999.1, visible : false, color : new phoenix_Color().rgb(1447449), centered : false, size : this.size, pos : this.pos});
		this.title = new luxe_Text({ name : "debug.title", batcher : this.batcher, no_scene : true, depth : 999.2, visible : false, color : new phoenix_Color().rgb(16121979), pos : new phoenix_Vector(this.pos.x + 14,this.pos.y + 6), text : "Inspector", point_size : 15, align : 0});
		this.version = new luxe_Text({ name : "debug.version", batcher : this.batcher, no_scene : true, depth : 999.2, visible : false, color : new phoenix_Color().rgb(5526617), pos : new phoenix_Vector(this.pos.x + (this.size.x - 14),this.pos.y + 6), text : "" + Luxe.core.runtime_info(), point_size : 13, align : 1});
		this.window.set_locked(true);
		this.window.geometry.id = "debug.Inspector";
		this.title.geometry.id = "debug.title.text";
		this.version.geometry.id = "debug.version.text";
	}
	,__class__: luxe_debug_Inspector
	,__properties__: {set_size:"set_size",set_pos:"set_pos"}
};
var phoenix_Color = function(_r,_g,_b,_a) {
	if(_a == null) _a = 1.0;
	if(_b == null) _b = 1.0;
	if(_g == null) _g = 1.0;
	if(_r == null) _r = 1.0;
	this.refreshing = false;
	this.is_hsv = false;
	this.is_hsl = false;
	this.a = 1.0;
	this.b = 1.0;
	this.g = 1.0;
	this.r = 1.0;
	this.set_r(_r);
	this.set_g(_g);
	this.set_b(_b);
	this.a = _a;
};
$hxClasses["phoenix.Color"] = phoenix_Color;
phoenix_Color.__name__ = ["phoenix","Color"];
phoenix_Color.random = function(_include_alpha) {
	if(_include_alpha == null) _include_alpha = false;
	return new phoenix_Color(Math.random(),Math.random(),Math.random(),_include_alpha?Math.random():1.0);
};
phoenix_Color.prototype = {
	set_r: function(_r) {
		this.r = _r;
		if(!this.refreshing) {
			if(this.is_hsl) {
				var colorhsl = this;
				colorhsl.fromColor(this);
			} else if(this.is_hsv) {
				var colorhsv = this;
				colorhsv.fromColor(this);
			}
		}
		return this.r;
	}
	,set_g: function(_g) {
		this.g = _g;
		if(!this.refreshing) {
			if(this.is_hsl) {
				var colorhsl = this;
				colorhsl.fromColor(this);
			} else if(this.is_hsv) {
				var colorhsv = this;
				colorhsv.fromColor(this);
			}
		}
		return this.g;
	}
	,set_b: function(_b) {
		this.b = _b;
		if(!this.refreshing) {
			if(this.is_hsl) {
				var colorhsl = this;
				colorhsl.fromColor(this);
			} else if(this.is_hsv) {
				var colorhsv = this;
				colorhsv.fromColor(this);
			}
		}
		return this.b;
	}
	,set: function(_r,_g,_b,_a) {
		var _setr = this.r;
		var _setg = this.g;
		var _setb = this.b;
		var _seta = this.a;
		if(_r != null) _setr = _r;
		if(_g != null) _setg = _g;
		if(_b != null) _setb = _b;
		if(_a != null) _seta = _a;
		this.set_r(_setr);
		this.set_g(_setg);
		this.set_b(_setb);
		this.a = _seta;
		return this;
	}
	,maxRGB: function() {
		return Math.max(this.r,Math.max(this.g,this.b));
	}
	,minRGB: function() {
		return Math.min(this.r,Math.min(this.g,this.b));
	}
	,tween: function(_time_in_seconds,_properties_to_tween,_override) {
		if(_override == null) _override = true;
		if(_time_in_seconds == null) _time_in_seconds = 0.5;
		if(_properties_to_tween != null) {
			var _dest_r = this.r;
			var _dest_g = this.g;
			var _dest_b = this.b;
			var _dest_a = this.a;
			var _change_r = false;
			var _change_g = false;
			var _change_b = false;
			var _change_a = false;
			if(js_Boot.__instanceof(_properties_to_tween,phoenix_Color)) {
				_dest_r = _properties_to_tween.r;
				_dest_g = _properties_to_tween.g;
				_dest_b = _properties_to_tween.b;
				_dest_a = _properties_to_tween.a;
				_change_r = true;
				_change_g = true;
				_change_b = true;
				_change_a = true;
			} else {
				if(_properties_to_tween.r != null) {
					_dest_r = _properties_to_tween.r;
					_change_r = true;
				}
				if(_properties_to_tween.g != null) {
					_dest_g = _properties_to_tween.g;
					_change_g = true;
				}
				if(_properties_to_tween.b != null) {
					_dest_b = _properties_to_tween.b;
					_change_b = true;
				}
				if(_properties_to_tween.a != null) {
					_dest_a = _properties_to_tween.a;
					_change_a = true;
				}
			}
			var _properties = { };
			if(_change_r) _properties.r = _dest_r;
			if(_change_g) _properties.g = _dest_g;
			if(_change_b) _properties.b = _dest_b;
			if(_change_a) _properties.a = _dest_a;
			return luxe_tween_Actuate.tween(this,_time_in_seconds,_properties,_override);
		} else throw new js__$Boot_HaxeError(" Warning: Color.tween passed a null destination ");
	}
	,clone: function() {
		return new phoenix_Color(this.r,this.g,this.b,this.a);
	}
	,rgb: function(_rgb) {
		if(_rgb == null) _rgb = 16777215;
		this.from_int(_rgb);
		return this;
	}
	,toColorHSL: function() {
		return new phoenix_ColorHSL().fromColor(this);
	}
	,toColorHSV: function() {
		return new phoenix_ColorHSV().fromColor(this);
	}
	,fromColorHSV: function(_color_hsv) {
		var d = _color_hsv.h % 360 / 60;
		if(d < 0) d += 6;
		var hf = Math.floor(d);
		var hi = hf % 6;
		var f = d - hf;
		var v = _color_hsv.v;
		var p = _color_hsv.v * (1 - _color_hsv.s);
		var q = _color_hsv.v * (1 - f * _color_hsv.s);
		var t = _color_hsv.v * (1 - (1 - f) * _color_hsv.s);
		switch(hi) {
		case 0:
			this.set_r(v);
			this.set_g(t);
			this.set_b(p);
			break;
		case 1:
			this.set_r(q);
			this.set_g(v);
			this.set_b(p);
			break;
		case 2:
			this.set_r(p);
			this.set_g(v);
			this.set_b(t);
			break;
		case 3:
			this.set_r(p);
			this.set_g(q);
			this.set_b(v);
			break;
		case 4:
			this.set_r(t);
			this.set_g(p);
			this.set_b(v);
			break;
		case 5:
			this.set_r(v);
			this.set_g(p);
			this.set_b(q);
			break;
		}
		this.a = _color_hsv.a;
	}
	,fromColorHSL: function(_color_hsl) {
		var q = 1;
		if(_color_hsl.l < 0.5) q = _color_hsl.l * (1 + _color_hsl.s); else q = _color_hsl.l + _color_hsl.s - _color_hsl.l * _color_hsl.s;
		var p = 2 * _color_hsl.l - q;
		var hk = _color_hsl.h % 360 / 360;
		var tr = hk + 0.33333333333333331;
		var tg = hk;
		var tb = hk - 0.33333333333333331;
		var tc = [tr,tg,tb];
		var _g1 = 0;
		var _g = tc.length;
		while(_g1 < _g) {
			var n = _g1++;
			var t = tc[n];
			if(t < 0) t += 1;
			if(t > 1) t -= 1;
			if(t < 0.16666666666666666) tc[n] = p + (q - p) * 6 * t; else if(t < 0.5) tc[n] = q; else if(t < 0.66666666666666663) tc[n] = p + (q - p) * 6 * (0.66666666666666663 - t); else tc[n] = p;
		}
		this.set_r(tc[0]);
		this.set_g(tc[1]);
		this.set_b(tc[2]);
		this.a = _color_hsl.a;
		return this;
	}
	,toString: function() {
		return "{ r:" + this.r + " , g:" + this.g + " , b:" + this.b + " , a:" + this.a + " }";
	}
	,from_int: function(_i) {
		var _r = _i >> 16;
		var _g = _i >> 8 & 255;
		var _b = _i & 255;
		this.set_r(_r / 255);
		this.set_g(_g / 255);
		this.set_b(_b / 255);
	}
	,__class__: phoenix_Color
	,__properties__: {set_b:"set_b",set_g:"set_g",set_r:"set_r"}
};
var luxe_debug_ProfilerDebugView = function(_debug) {
	this._setup = false;
	this._byte_levels = ["bytes","Kb","MB","GB","TB"];
	this.minpeak = 1.0;
	this.peak = 1.0;
	this.nexttick = 0.0;
	this.tickamount = 0.017;
	this.margin = 32;
	luxe_debug_DebugView.call(this,_debug);
	this.set_name("Profiler");
	luxe_debug_ProfilerDebugView.lists = new haxe_ds_StringMap();
};
$hxClasses["luxe.debug.ProfilerDebugView"] = luxe_debug_ProfilerDebugView;
luxe_debug_ProfilerDebugView.__name__ = ["luxe","debug","ProfilerDebugView"];
luxe_debug_ProfilerDebugView.add_offset = function(_id,_offset) {
	var _item = luxe_debug_ProfilerDebugView.lists.get(_id);
	var _offsetitem = luxe_debug_ProfilerDebugView.lists.get(_offset);
	if(_item != null && _offsetitem != null) _item.offsets.push(_offsetitem); else {
		haxe_Log.trace("not found for " + _id + " or " + _offset,{ fileName : "ProfilerDebugView.hx", lineNumber : 158, className : "luxe.debug.ProfilerDebugView", methodName : "add_offset"});
		haxe_Log.trace(Std.string(_item) + " / " + Std.string(_offsetitem),{ fileName : "ProfilerDebugView.hx", lineNumber : 159, className : "luxe.debug.ProfilerDebugView", methodName : "add_offset"});
	}
};
luxe_debug_ProfilerDebugView.hide_item = function(_id) {
	var _item = luxe_debug_ProfilerDebugView.lists.get(_id);
	if(_item != null) {
		_item.hidden = true;
		_item.bar.hide();
	}
};
luxe_debug_ProfilerDebugView.show_item = function(_id) {
	var _item = luxe_debug_ProfilerDebugView.lists.get(_id);
	if(_item != null) {
		_item.hidden = false;
		_item.bar.show();
	}
};
luxe_debug_ProfilerDebugView.start = function(_id,_max) {
	var _item = luxe_debug_ProfilerDebugView.lists.get(_id);
	if(_item == null) {
		_item = new luxe_debug__$ProfilerDebugView_ProfilerValue(_id,new luxe_debug__$ProfilerDebugView_ProfilerBar(_id,_max,new phoenix_Color().rgb(16121979)));
		_item.bar.set_pos(new phoenix_Vector(Luxe.debug.padding.x * 2,Luxe.debug.padding.y * 3 + Lambda.count(luxe_debug_ProfilerDebugView.lists) * 20));
		luxe_debug_ProfilerDebugView.lists.set(_id,_item);
	}
	_item.start = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
};
luxe_debug_ProfilerDebugView.end = function(_id) {
	var _item = luxe_debug_ProfilerDebugView.lists.get(_id);
	if(_item != null) _item.set(); else throw new js__$Boot_HaxeError("Debug / profile end called for " + _id + " but no start called");
};
luxe_debug_ProfilerDebugView.__super__ = luxe_debug_DebugView;
luxe_debug_ProfilerDebugView.prototype = $extend(luxe_debug_DebugView.prototype,{
	create: function() {
	}
	,update_graph: function(graph,val) {
		var _byte_index = Math.floor(Math.log(val) / Math.log(1024));
		var _byte_value = val / Math.pow(1024,_byte_index);
		if(_byte_value > this.peak) this.peak = Math.ceil(_byte_value + _byte_value * 0.1);
		if(_byte_value < this.minpeak) this.minpeak = Math.floor(_byte_value - _byte_value * 0.1);
		if(graph.max != this.peak) graph.set_max(this.peak);
		graph.set_ping(luxe_utils_Maths.fixed(_byte_value,4));
	}
	,process: function() {
	}
	,show: function() {
		var $it0 = luxe_debug_ProfilerDebugView.lists.iterator();
		while( $it0.hasNext() ) {
			var _item = $it0.next();
			if(!_item.hidden) _item.bar.show();
		}
		if(!this._setup) this._setup = true;
	}
	,hide: function() {
		var $it0 = luxe_debug_ProfilerDebugView.lists.iterator();
		while( $it0.hasNext() ) {
			var _item = $it0.next();
			_item.bar.hide();
		}
	}
	,__class__: luxe_debug_ProfilerDebugView
});
var luxe_debug__$ProfilerDebugView_ProfilerValue = function(_name,_bar) {
	this.accum = 0;
	this.count = 0;
	this.hidden = false;
	this.avg = 10;
	this.start = 0.0;
	this.name = _name;
	this.bar = _bar;
	this.history = [];
	this.offsets = [];
};
$hxClasses["luxe.debug._ProfilerDebugView.ProfilerValue"] = luxe_debug__$ProfilerDebugView_ProfilerValue;
luxe_debug__$ProfilerDebugView_ProfilerValue.__name__ = ["luxe","debug","_ProfilerDebugView","ProfilerValue"];
luxe_debug__$ProfilerDebugView_ProfilerValue.prototype = {
	set: function() {
		var _t = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start - this.start;
		var _g = 0;
		var _g1 = this.offsets;
		while(_g < _g1.length) {
			var _offset = _g1[_g];
			++_g;
			_t -= _offset.history[_offset.history.length - 1];
		}
		this.history.push(_t);
		if(this.history.length > this.avg) this.history.shift();
		this.count++;
		if(this.count == this.avg) {
			var __t = this.accum / this.avg;
			this.bar.set_value(__t);
			this.accum = 0;
			this.count = 0;
		}
		this.accum += _t;
		if(this.bar.visible) this.bar.set_text(Std.string(luxe_utils_Maths.fixed(_t * 1000,4)));
	}
	,__class__: luxe_debug__$ProfilerDebugView_ProfilerValue
};
var luxe_debug__$ProfilerDebugView_ProfilerGraph = function(_name,_bg) {
	if(_bg == null) _bg = true;
	this.visible = false;
	this.history = 33;
	this.height2 = 8;
	this.height = 8;
	this.width = 128;
	this.bg = true;
	this.bg = _bg;
	this.name = _name;
	this.color = new phoenix_Color();
	this.set_max(luxe_utils_Maths.fixed(16.666666666666668,2));
};
$hxClasses["luxe.debug._ProfilerDebugView.ProfilerGraph"] = luxe_debug__$ProfilerDebugView_ProfilerGraph;
luxe_debug__$ProfilerDebugView_ProfilerGraph.__name__ = ["luxe","debug","_ProfilerDebugView","ProfilerGraph"];
luxe_debug__$ProfilerDebugView_ProfilerGraph.prototype = {
	create: function() {
		this.segment = this.width / this.history;
		this.height2 = this.height * 2;
		if(this.bg) this.graphbg_geometry = Luxe.draw.box({ color : new phoenix_Color().rgb(1052688), depth : 999.3, batcher : Luxe.debug.batcher, x : 0, y : 0, w : this.width - this.segment, h : this.height2});
		this.graph_geometry = new phoenix_geometry_Geometry({ color : this.color, depth : 999.33, batcher : Luxe.debug.batcher});
		var _g1 = 0;
		var _g = this.history;
		while(_g1 < _g) {
			var i = _g1++;
			var _b = new phoenix_geometry_Vertex(new phoenix_Vector(this.segment * i,this.height2),this.color);
			this.graph_geometry.add(_b);
		}
		this.graph_geometry.set_primitive_type(3);
		this.hide();
	}
	,set_max: function(_v) {
		var oldmax = this.max;
		this.max = _v;
		if(this.graph_geometry != null) {
			var ratio = 1.0;
			if(oldmax != 0) ratio = oldmax / _v;
			var _g = 0;
			var _g1 = this.graph_geometry.vertices;
			while(_g < _g1.length) {
				var v = _g1[_g];
				++_g;
				if(v != null) {
					var vp = 1.0 - v.pos.y / this.height2;
					var vv = vp * oldmax;
					vp = vv / this.max;
					v.pos.set_y(this.height2 * (1.0 - vp));
				}
			}
		}
		return this.max;
	}
	,set_ping: function(_v) {
		var _vv = luxe_utils_Maths.fixed(_v,4);
		var _p = _vv / this.max;
		var _g1 = 0;
		var _g = this.history;
		while(_g1 < _g) {
			var i = _g1++;
			var v = this.graph_geometry.vertices[i];
			if(i < this.history - 1) {
				var v1 = this.graph_geometry.vertices[i + 1];
				if(v1 != null) {
					v.pos.set_y(Math.floor(v1.pos.y));
					v.color = v1.color;
				}
			}
		}
		if(_p < 0.001) _p = 0.001; else if(_p > 1) _p = 1; else _p = _p;
		if(_p > 1) this.graph_geometry.vertices[this.history - 1].color = luxe_debug_ProfilerDebugView.color_red; else if(_p < 0.2) this.graph_geometry.vertices[this.history - 1].color = luxe_debug_ProfilerDebugView.color_green; else this.graph_geometry.vertices[this.history - 1].color = this.color;
		this.graph_geometry.vertices[this.history - 1].pos.set_y(Math.floor(this.height2 * (1.0 - _p)));
		return this.ping = _v;
	}
	,hide: function() {
		this.visible = false;
		this.graph_geometry.set_visible(false);
		if(this.graphbg_geometry != null) this.graphbg_geometry.set_visible(false);
	}
	,show: function() {
		this.visible = true;
		this.graph_geometry.set_visible(true);
		if(this.graphbg_geometry != null) this.graphbg_geometry.set_visible(true);
	}
	,set_pos: function(_p) {
		if(this.graphbg_geometry != null) {
			var _this = this.graphbg_geometry.transform.local.pos;
			var _x = _p.x;
			var _y = _p.y;
			var _z = _p.z;
			var prev = _this.ignore_listeners;
			_this.ignore_listeners = true;
			_this.x = _x;
			if(_this._construct) _this.x; else {
				if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_x);
				_this.x;
			}
			_this.y = _y;
			if(_this._construct) _this.y; else {
				if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_y);
				_this.y;
			}
			_this.z = _z;
			if(_this._construct) _this.z; else {
				if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_z);
				_this.z;
			}
			_this.w = _p.w;
			_this.ignore_listeners = prev;
			if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_this.x);
			if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_this.y);
			if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_this.z);
			_this;
			_this;
		}
		var _this1 = this.graph_geometry.transform.local.pos;
		var _x1 = _p.x;
		var _y1 = _p.y;
		var _z1 = _p.z;
		var prev1 = _this1.ignore_listeners;
		_this1.ignore_listeners = true;
		_this1.x = _x1;
		if(_this1._construct) _this1.x; else {
			if(_this1.listen_x != null && !_this1.ignore_listeners) _this1.listen_x(_x1);
			_this1.x;
		}
		_this1.y = _y1;
		if(_this1._construct) _this1.y; else {
			if(_this1.listen_y != null && !_this1.ignore_listeners) _this1.listen_y(_y1);
			_this1.y;
		}
		_this1.z = _z1;
		if(_this1._construct) _this1.z; else {
			if(_this1.listen_z != null && !_this1.ignore_listeners) _this1.listen_z(_z1);
			_this1.z;
		}
		_this1.w = _p.w;
		_this1.ignore_listeners = prev1;
		if(_this1.listen_x != null && !_this1.ignore_listeners) _this1.listen_x(_this1.x);
		if(_this1.listen_y != null && !_this1.ignore_listeners) _this1.listen_y(_this1.y);
		if(_this1.listen_z != null && !_this1.ignore_listeners) _this1.listen_z(_this1.z);
		_this1;
		_this1;
		return this.pos = _p;
	}
	,__class__: luxe_debug__$ProfilerDebugView_ProfilerGraph
	,__properties__: {set_pos:"set_pos",set_ping:"set_ping",set_max:"set_max"}
};
var luxe_debug__$ProfilerDebugView_ProfilerBar = function(_name,_max,_color) {
	this.max = 16.7;
	this.height = 8;
	this.visible = false;
	this.name = _name;
	this.graph = new luxe_debug__$ProfilerDebugView_ProfilerGraph(_name);
	this.graph.create();
	if(_max != null) this.graph.set_max(_max);
	this.text_item = new luxe_Text({ no_scene : true, name : "profiler.text." + _name, pos : new phoenix_Vector(0,0), color : _color, point_size : this.height * 1.8, depth : 999.3, text : "", batcher : Luxe.debug.batcher});
	this.bg_geometry = Luxe.draw.box({ color : new phoenix_Color().rgb(592137), depth : 999.3, batcher : Luxe.debug.batcher, x : 0, y : 0, w : this.graph.width, h : this.graph.height});
	this.bar_geometry = Luxe.draw.box({ color : _color, depth : 999.33, batcher : Luxe.debug.batcher, x : 1, y : 1, w : this.graph.width - 2, h : this.graph.height - 2});
	this.hide();
};
$hxClasses["luxe.debug._ProfilerDebugView.ProfilerBar"] = luxe_debug__$ProfilerDebugView_ProfilerBar;
luxe_debug__$ProfilerDebugView_ProfilerBar.__name__ = ["luxe","debug","_ProfilerDebugView","ProfilerBar"];
luxe_debug__$ProfilerDebugView_ProfilerBar.prototype = {
	hide: function() {
		this.visible = false;
		this.bar_geometry.set_visible(false);
		this.bg_geometry.set_visible(false);
		this.text_item.set_visible(false);
		this.graph.hide();
	}
	,show: function() {
		this.visible = true;
		this.bar_geometry.set_visible(true);
		this.bg_geometry.set_visible(true);
		this.text_item.set_visible(true);
		this.graph.show();
	}
	,set_value: function(_v) {
		this.graph.set_ping(_v * 1000);
		if(!this.visible) return this.value = _v;
		var _vv = luxe_utils_Maths.fixed(_v * 1000,4);
		var _p = _vv / this.max;
		if(_p < 0.005) _p = 0.005; else if(_p > 1) _p = 1; else _p = _p;
		if(_p > 1) this.bar_geometry.set_color(luxe_debug_ProfilerDebugView.color_red); else if(_p < 0.15) this.bar_geometry.set_color(luxe_debug_ProfilerDebugView.color_green); else this.bar_geometry.set_color(luxe_debug_ProfilerDebugView.color_normal);
		var nx = (this.graph.width - 2) * _p;
		this.bar_geometry.resize_xy(nx,this.graph.height - 2);
		return this.value = _v;
	}
	,set_pos: function(_p) {
		this.bg_geometry.transform.local.set_pos(_p);
		var _this = this.bar_geometry.transform.local.pos;
		var _x = _p.x + 1;
		var _y = _p.y + 1;
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = _x;
		if(_this._construct) _this.x; else {
			if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_x);
			_this.x;
		}
		_this.y = _y;
		if(_this._construct) _this.y; else {
			if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_y);
			_this.y;
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_this.x);
		if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_this.y);
		_this;
		var _this1 = this.text_item.get_pos();
		var _x1 = _p.x + this.graph.width * 2 + 10;
		var _y1 = _p.y - 6;
		var prev1 = _this1.ignore_listeners;
		_this1.ignore_listeners = true;
		_this1.x = _x1;
		if(_this1._construct) _this1.x; else {
			if(_this1.listen_x != null && !_this1.ignore_listeners) _this1.listen_x(_x1);
			_this1.x;
		}
		_this1.y = _y1;
		if(_this1._construct) _this1.y; else {
			if(_this1.listen_y != null && !_this1.ignore_listeners) _this1.listen_y(_y1);
			_this1.y;
		}
		_this1.ignore_listeners = prev1;
		if(_this1.listen_x != null && !_this1.ignore_listeners) _this1.listen_x(_this1.x);
		if(_this1.listen_y != null && !_this1.ignore_listeners) _this1.listen_y(_this1.y);
		_this1;
		this.graph.set_pos((function($this) {
			var $r;
			var _this2 = new phoenix_Vector(_p.x,_p.y,_p.z,_p.w);
			{
				var _x2 = _this2.x + ($this.graph.width + 2);
				var _y2 = _this2.y + (-$this.graph.height + 4);
				var _z = _this2.z;
				var prev2 = _this2.ignore_listeners;
				_this2.ignore_listeners = true;
				_this2.x = _x2;
				if(_this2._construct) _this2.x; else {
					if(_this2.listen_x != null && !_this2.ignore_listeners) _this2.listen_x(_x2);
					_this2.x;
				}
				_this2.y = _y2;
				if(_this2._construct) _this2.y; else {
					if(_this2.listen_y != null && !_this2.ignore_listeners) _this2.listen_y(_y2);
					_this2.y;
				}
				_this2.z = _z;
				if(_this2._construct) _this2.z; else {
					if(_this2.listen_z != null && !_this2.ignore_listeners) _this2.listen_z(_z);
					_this2.z;
				}
				_this2.ignore_listeners = prev2;
				if(_this2.listen_x != null && !_this2.ignore_listeners) _this2.listen_x(_this2.x);
				if(_this2.listen_y != null && !_this2.ignore_listeners) _this2.listen_y(_this2.y);
				if(_this2.listen_z != null && !_this2.ignore_listeners) _this2.listen_z(_this2.z);
				_this2;
			}
			$r = _this2;
			return $r;
		}(this)));
		return this.pos = _p;
	}
	,set_text: function(_t) {
		this.text_item.set_text("" + this.name + " (" + this.graph.max + "ms) | " + _t + "ms");
		return this.text = _t;
	}
	,__class__: luxe_debug__$ProfilerDebugView_ProfilerBar
	,__properties__: {set_value:"set_value",set_pos:"set_pos",set_text:"set_text"}
};
var luxe_debug_SceneDebugView = function(_debug) {
	this.hide_ids = true;
	this.font_size = 15.0;
	this.margin = 32;
	luxe_debug_DebugView.call(this,_debug);
	this.set_name("Scenes");
	this.scenes = [];
};
$hxClasses["luxe.debug.SceneDebugView"] = luxe_debug_SceneDebugView;
luxe_debug_SceneDebugView.__name__ = ["luxe","debug","SceneDebugView"];
luxe_debug_SceneDebugView.__super__ = luxe_debug_DebugView;
luxe_debug_SceneDebugView.prototype = $extend(luxe_debug_DebugView.prototype,{
	create: function() {
		var debug = Luxe.debug;
		this.items_list = new luxe_Text({ name : "debug.scene.list", depth : 999.3, no_scene : true, color : new phoenix_Color(0,0,0,1).rgb(16121979), pos : new phoenix_Vector(0,0), font : Luxe.renderer.font, text : this.get_list(), point_size : this.font_size, batcher : debug.batcher, visible : false});
		this.items_list.geometry.id = "debug.scene.list.geometry";
		this.resize();
	}
	,add_scene: function(_scene) {
		if(!(HxOverrides.indexOf(this.scenes,_scene,0) == -1)) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("scenes.indexOf(_scene) == -1" + ""));
		this.scenes.push(_scene);
	}
	,remove_scene: function(_scene) {
		if(!(HxOverrides.indexOf(this.scenes,_scene,0) != -1)) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("scenes.indexOf(_scene) != -1" + ""));
		var _result = HxOverrides.remove(this.scenes,_scene);
		this.refresh();
		return _result;
	}
	,onkeydown: function(e) {
		if(e.keycode == 50 && this.visible) this.toggle_ids();
	}
	,toggle_ids: function() {
		this.hide_ids = !this.hide_ids;
		this.refresh();
	}
	,tabs: function(_d) {
		var res = "";
		var _g = 0;
		while(_g < _d) {
			var i = _g++;
			res += "    ";
		}
		return res;
	}
	,list_entity: function(_list,e,_depth) {
		if(_depth == null) _depth = 1;
		var _active;
		if(e.get_active()) _active = ""; else _active = "/ inactive";
		var _pre;
		if(_depth == 1) _pre = this.tabs(_depth); else _pre = this.tabs(_depth) + "> ";
		var _id;
		if(this.hide_ids) _id = ""; else _id = e.get_id();
		var _comp_count = Lambda.count(e._components.components);
		var _comp = "• " + _comp_count;
		var _childs = "> " + e.children.length;
		_list += "" + _pre + _id + " " + e.get_name() + " " + _childs + " " + _comp + " " + _active + "\n";
		var $it0 = HxOverrides.iter(e._components.components._keys);
		while( $it0.hasNext() ) {
			var _name = $it0.next();
			var comp = e._components.components.map.get(_name);
			var _comp_id;
			if(this.hide_ids) _comp_id = ""; else _comp_id = " " + comp.id;
			_list += this.tabs(_depth + 1) + ("•" + _comp_id + " " + comp.name + "\n");
		}
		var _g = 0;
		var _g1 = e.children;
		while(_g < _g1.length) {
			var _child = _g1[_g];
			++_g;
			_list = this.list_entity(_list,_child,_depth + 2);
		}
		return _list;
	}
	,get_list: function() {
		var _result = "";
		var _g = 0;
		var _g1 = this.scenes;
		while(_g < _g1.length) {
			var _scene = _g1[_g];
			++_g;
			var _id;
			if(this.hide_ids) _id = ""; else _id = "" + _scene.get_id() + " ";
			_result += _id;
			_result += "" + _scene.get_name() + " ";
			_result += "( " + _scene.get_length() + " )\n";
			var $it0 = _scene.entities.iterator();
			while( $it0.hasNext() ) {
				var _entity = $it0.next();
				_result = this.list_entity(_result,_entity,null);
			}
		}
		return _result;
	}
	,refresh: function() {
		this.items_list.set_text(this.get_list());
	}
	,process: function() {
		if(!this.visible) return;
		var _has_changed = false;
		var _g = 0;
		var _g1 = this.scenes;
		while(_g < _g1.length) {
			var _scene = _g1[_g];
			++_g;
			if(_scene._has_changed) {
				_has_changed = true;
				_scene._has_changed = false;
			}
		}
		if(_has_changed) this.refresh();
	}
	,onmousewheel: function(e) {
		var h = this.items_list.text_bounds.h;
		var vh = Luxe.debug.inspector.size.y - this.margin;
		var diff = h - vh;
		var new_y = this.items_list.get_pos().y;
		var max_y = Luxe.debug.padding.y + this.margin * 1.5;
		var min_y = max_y;
		if(diff > 0) min_y = max_y - (diff + this.margin * 2);
		new_y -= this.margin / 2 * e.y;
		if(new_y < min_y) new_y = min_y; else if(new_y > max_y) new_y = max_y; else new_y = new_y;
		this.items_list.get_pos().set_y(new_y);
	}
	,show: function() {
		luxe_debug_DebugView.prototype.show.call(this);
		this.refresh();
		this.items_list.set_visible(true);
	}
	,hide: function() {
		luxe_debug_DebugView.prototype.hide.call(this);
		this.items_list.set_visible(false);
	}
	,resize: function() {
		var debug = Luxe.debug;
		var viewrect = new phoenix_Rectangle(debug.inspector.pos.x + this.margin / 2,debug.inspector.pos.y + this.margin * 1.5,debug.inspector.size.x - this.margin,debug.inspector.size.y - this.margin - this.margin * 1.5);
		var left = debug.padding.x + this.margin;
		var top = debug.padding.y + this.margin * 1.5;
		if(this.items_list != null) {
			this.items_list.set_pos(new phoenix_Vector(left,top));
			this.items_list.set_clip_rect(viewrect);
		}
	}
	,onwindowsized: function(e) {
		this.resize();
	}
	,__class__: luxe_debug_SceneDebugView
});
var luxe_debug_StatsDebugView = function(_debug) {
	this.margin = 32;
	this.font_size = 15;
	this.debug_geometry_count = 13;
	this.debug_draw_call_count = 3;
	luxe_debug_DebugView.call(this,_debug);
	this.set_name("Statistics");
	this._last_render_stats = { batchers : 0, geometry_count : 0, dynamic_batched_count : 0, static_batched_count : 0, visible_count : 0, draw_calls : 0, vert_count : 0};
	this._render_stats = { batchers : 0, geometry_count : 0, dynamic_batched_count : 0, static_batched_count : 0, visible_count : 0, draw_calls : 0, vert_count : 0};
};
$hxClasses["luxe.debug.StatsDebugView"] = luxe_debug_StatsDebugView;
luxe_debug_StatsDebugView.__name__ = ["luxe","debug","StatsDebugView"];
luxe_debug_StatsDebugView.__super__ = luxe_debug_DebugView;
luxe_debug_StatsDebugView.prototype = $extend(luxe_debug_DebugView.prototype,{
	get_resource_stats_string: function() {
		return Std.string(Luxe.resources.stats);
	}
	,get_batcher_info: function(b) {
		var _s;
		_s = "  " + b.name + " (enabled " + (b.enabled == null?"null":"" + b.enabled) + ", layer " + b.layer + ")\n";
		_s += "    shader: " + (b.shader == null?"none":b.shader.id) + "\n";
		_s += "    max verts/batch: " + b.max_verts + "\n";
		_s += "    visible geom: " + b.visible_count + "\n";
		_s += "    verts: " + b.vert_count + "\n";
		_s += "    draw calls: " + b.draw_calls + "\n";
		_s += "    batched: " + b.dynamic_batched_count + "\n";
		_s += "    static: " + b.static_batched_count + "\n";
		return _s;
	}
	,get_render_stats_string: function() {
		var _bs = "";
		var _g = 0;
		var _g1 = phoenix_Batcher.all;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			if(b.show_stats != 0) _bs += this.get_batcher_info(b);
		}
		return "Renderer Statistics\n\n" + "total geometry : " + this._render_stats.geometry_count + "\n" + "visible geometry : " + this._render_stats.visible_count + "\n" + "dynamic batch count : " + this._render_stats.dynamic_batched_count + "\n" + "static batch count : " + this._render_stats.static_batched_count + "\n" + "total draw calls : " + this._render_stats.draw_calls + "\n" + "total vert count : " + this._render_stats.vert_count + "\n" + "batchers : " + this._render_stats.batchers + "\n" + _bs;
	}
	,create: function() {
		var _g = this;
		var debug = Luxe.debug;
		this.render_stats_text = new luxe_Text({ name : "debug.render.stats", depth : 999.3, no_scene : true, color : new phoenix_Color(0,0,0,1).rgb(16121979), pos : new phoenix_Vector(0,0), font : Luxe.renderer.font, text : this.get_render_stats_string(), point_size : this.font_size, batcher : debug.batcher, visible : false});
		this.resource_list_text = new luxe_Text({ name : "debug.resource.stats", depth : 999.3, no_scene : true, color : new phoenix_Color(0,0,0,1).rgb(16121979), pos : new phoenix_Vector(0,0), font : Luxe.renderer.font, text : "", align : 1, point_size : this.font_size * 0.9, batcher : debug.batcher, visible : false});
		this.render_stats_text.geometry.id = "debug.render.stats.geometry";
		this.render_stats_text.geometry.id = "debug.resource.stats.geometry";
		this.resize();
		Luxe.resources.on(1,function(_) {
			if(_g.visible) _g.refresh();
		});
	}
	,resize: function() {
		if(this.resource_list_text == null || this.render_stats_text == null) return;
		var debug = Luxe.debug;
		var viewrect = new phoenix_Rectangle(debug.inspector.pos.x + this.margin / 2,debug.inspector.pos.y + this.margin * 1.5,debug.inspector.size.x - this.margin,debug.inspector.size.y - this.margin - this.margin * 1.5);
		var left = debug.padding.x + this.margin;
		var right = debug.padding.x + debug.inspector.size.x - this.margin;
		var top = debug.padding.y + this.margin * 1.5;
		var render_w = this.render_stats_text.text_bounds.w;
		var render_h = this.render_stats_text.text_bounds.h;
		if(this.resource_list_text != null) {
			this.resource_list_text.set_pos(new phoenix_Vector(right,top));
			this.resource_list_text.set_clip_rect(viewrect);
		}
		if(this.render_stats_text != null) {
			this.render_stats_text.set_pos(new phoenix_Vector(left,top));
			this.render_stats_text.set_clip_rect(viewrect);
		}
		this.reset_tween();
	}
	,onwindowsized: function(e) {
		this.resize();
	}
	,refresh: function() {
		var bytes_lists = "";
		var text_lists = "";
		var json_lists = "";
		var texture_lists = "";
		var rtt_lists = "";
		var font_lists = "";
		var shader_lists = "";
		var audio_lists = "";
		var _total_txt = 0;
		var _total_tex = 0;
		var _total_rtt = 0;
		var _total_snd = 0;
		var _total_all = 0;
		var _snd = function(res) {
			var _s = "";
			if(res.source != null) {
				if(res.source.data.is_stream) _s += "STREAM •"; else _s += "";
				_s += " " + res.id + " • " + res.ref + "\t\n";
				if(res.source.data != null && !res.source.data.is_stream) {
					_s += "~" + Luxe.utils.bytes_to_string(res.source.data.length);
					_total_snd += res.source.data.length;
				}
				if(res.source.data != null) {
					_s += " " + res.source.data.channels + "ch";
					_s += " " + luxe_utils_Maths.fixed(res.source.data.rate / 1000,1) + "khz";
					_s += " " + (function($this) {
						var $r;
						var this1 = res.source.data.format;
						$r = this1 != null?(function($this) {
							var $r;
							switch(this1) {
							case 0:
								$r = "af_unknown";
								break;
							case 1:
								$r = "af_custom";
								break;
							case 2:
								$r = "af_ogg";
								break;
							case 3:
								$r = "af_wav";
								break;
							case 4:
								$r = "af_pcm";
								break;
							default:
								$r = "" + this1;
							}
							return $r;
						}($this)):"" + this1;
						return $r;
					}(this));
					_s += " " + luxe_utils_Maths.fixed(res.source.duration(),4) + "s";
				}
				_s += "\t\t\n\n";
			} else _s += "" + res.id + " • " + res.ref + "\t\n";
			return _s;
		};
		var $it0 = Luxe.resources.cache.iterator();
		while( $it0.hasNext() ) {
			var res1 = $it0.next();
			var _g = res1.resource_type;
			switch(_g) {
			case 3:
				bytes_lists += "" + res1.id + " • " + res1.ref + "\t\n";
				break;
			case 1:
				var res2 = res1;
				var _l;
				if(res2.asset != null && res2.asset.text != null) _l = res2.asset.text.length; else _l = 0;
				_total_txt += _l;
				text_lists += "(~" + Luxe.utils.bytes_to_string(_l) + ") " + res2.id + " • " + res2.ref + "\t\n";
				break;
			case 2:
				json_lists += "" + res1.id + " • " + res1.ref + "\t\n";
				break;
			case 4:
				var tex = res1;
				if(tex.resource_type == 5) _total_rtt += tex.memory_use(); else _total_tex += tex.memory_use();
				texture_lists += "(" + tex.width_actual + "x" + tex.height_actual + " ~" + Luxe.utils.bytes_to_string(tex.memory_use()) + ")    " + tex.id + " • " + tex.ref + "\t\n";
				break;
			case 5:
				var tex1 = res1;
				if(tex1.resource_type == 5) _total_rtt += tex1.memory_use(); else _total_tex += tex1.memory_use();
				rtt_lists += "(" + tex1.width_actual + "x" + tex1.height_actual + " ~" + Luxe.utils.bytes_to_string(tex1.memory_use()) + ")    " + tex1.id + " • " + tex1.ref + "\t\n";
				break;
			case 6:
				font_lists += "" + res1.id + " • " + res1.ref + "\t\n";
				break;
			case 7:
				var res3 = res1;
				shader_lists += "(" + res3.vert_id + ", " + res3.frag_id + ")    " + res3.id + " • " + res3.ref + "\t\n";
				break;
			case 8:
				audio_lists += _snd(res1);
				break;
			default:
			}
		}
		_total_all += _total_txt;
		_total_all += _total_tex;
		_total_all += _total_rtt;
		_total_all += _total_snd;
		var lists = "Resource list (" + Luxe.resources.stats.total + " • ~" + Luxe.utils.bytes_to_string(_total_all) + ")\n\n";
		lists += "Bytes (" + Luxe.resources.stats.bytes + ")\n";
		if(bytes_lists == "") lists += "-\t\n"; else lists += bytes_lists;
		lists += "\nText (" + Luxe.resources.stats.texts + " • ~" + Luxe.utils.bytes_to_string(_total_txt) + ")\n";
		if(text_lists == "") lists += "-\t\n"; else lists += text_lists;
		lists += "\nJSON (" + Luxe.resources.stats.jsons + ")\n";
		if(json_lists == "") lists += "-\t\n"; else lists += json_lists;
		lists += "\nTexture (" + Luxe.resources.stats.textures + " • ~" + Luxe.utils.bytes_to_string(_total_tex) + ")\n";
		if(texture_lists == "") lists += "-\t\n"; else lists += texture_lists;
		lists += "\nRenderTexture (" + Luxe.resources.stats.rtt + " • ~" + Luxe.utils.bytes_to_string(_total_rtt) + ")\n";
		if(rtt_lists == "") lists += "-\t\n"; else lists += rtt_lists;
		lists += "\nFont (" + Luxe.resources.stats.fonts + ")\n";
		if(font_lists == "") lists += "-\t\n"; else lists += font_lists;
		lists += "\nShader (" + Luxe.resources.stats.shaders + ")\n";
		if(shader_lists == "") lists += "-\t\n"; else lists += shader_lists;
		lists += "\nAudio (" + Luxe.resources.stats.audios + " • ~" + Luxe.utils.bytes_to_string(_total_snd) + ")\n";
		if(audio_lists == "") lists += "-\t\n"; else lists += audio_lists;
		this.resource_list_text.set_text(lists);
		if(this.resource_list_text.geometry != null) this.resource_list_text.geometry.set_dirty(true);
		this.reset_tween();
	}
	,process: function() {
		if(!this.visible) return;
		var dirty = false;
		this.update_render_stats();
		if(this._last_render_stats.batchers != this._render_stats.batchers) {
			dirty = true;
			this._last_render_stats.batchers = this._render_stats.batchers;
		}
		if(this._last_render_stats.geometry_count != this._render_stats.geometry_count) {
			dirty = true;
			this._last_render_stats.geometry_count = this._render_stats.geometry_count;
		}
		if(this._last_render_stats.dynamic_batched_count != this._render_stats.dynamic_batched_count) {
			dirty = true;
			this._last_render_stats.dynamic_batched_count = this._render_stats.dynamic_batched_count;
		}
		if(this._last_render_stats.static_batched_count != this._render_stats.static_batched_count) {
			dirty = true;
			this._last_render_stats.static_batched_count = this._render_stats.static_batched_count;
		}
		if(this._last_render_stats.visible_count != this._render_stats.visible_count) {
			dirty = true;
			this._last_render_stats.visible_count = this._render_stats.visible_count;
		}
		if(this._last_render_stats.draw_calls != this._render_stats.draw_calls) {
			dirty = true;
			this._last_render_stats.draw_calls = this._render_stats.draw_calls;
		}
		if(this._last_render_stats.vert_count != this._render_stats.vert_count) {
			dirty = true;
			this._last_render_stats.vert_count = this._render_stats.vert_count;
		}
		if(dirty) this.refresh_render_stats();
	}
	,onmousewheel: function(e) {
		luxe_tween_Actuate.stop(this.resource_list_text.get_pos());
		luxe_tween_Actuate.stop(this.render_stats_text.get_pos());
		var vh = Luxe.debug.inspector.size.y - this.margin;
		var max_y = Luxe.debug.padding.y + this.margin * 1.5;
		var min_y = max_y;
		var px = e.pos.x / Luxe.core.screen.get_w();
		if(px > 0.5) {
			var h = this.resource_list_text.text_bounds.h;
			var diff = h - vh;
			var new_y = this.resource_list_text.get_pos().y;
			if(diff > 0) min_y = max_y - (diff + this.margin * 2);
			new_y -= this.margin / 2 * e.y;
			if(new_y < min_y) new_y = min_y; else if(new_y > max_y) new_y = max_y; else new_y = new_y;
			this.resource_list_text.get_pos().set_y(new_y);
			this.resource_list_text.geometry.set_dirty(true);
		} else {
			var h1 = this.render_stats_text.text_bounds.h;
			var diff1 = h1 - vh;
			var new_y1 = this.render_stats_text.get_pos().y;
			if(diff1 > 0) min_y = max_y - (diff1 + this.margin * 2);
			new_y1 -= this.margin / 2 * e.y;
			if(new_y1 < min_y) new_y1 = min_y; else if(new_y1 > max_y) new_y1 = max_y; else new_y1 = new_y1;
			this.render_stats_text.get_pos().set_y(new_y1);
			this.render_stats_text.geometry.set_dirty(true);
		}
	}
	,onkeydown: function(e) {
		if(e.keycode == 50 && this.visible) {
			if(this.debug.batcher.show_stats == 0) this.debug.batcher.set_show_stats(1); else this.debug.batcher.set_show_stats(0);
		}
	}
	,show: function() {
		luxe_debug_DebugView.prototype.show.call(this);
		this.refresh();
		this.render_stats_text.set_visible(true);
		this.resource_list_text.set_visible(true);
	}
	,hide: function() {
		luxe_debug_DebugView.prototype.hide.call(this);
		this.render_stats_text.set_visible(false);
		this.resource_list_text.set_visible(false);
		luxe_tween_Actuate.stop(this.resource_list_text.get_pos());
		luxe_tween_Actuate.stop(this.render_stats_text.get_pos());
	}
	,reset_tween: function() {
		var _g = this;
		luxe_tween_Actuate.stop(this.resource_list_text.get_pos());
		luxe_tween_Actuate.stop(this.render_stats_text.get_pos());
		var vh = Luxe.debug.inspector.size.y - this.margin;
		var start_y = Luxe.debug.padding.y + this.margin * 1.5;
		var h = this.resource_list_text.text_bounds.h;
		var diff = h - vh;
		this.resource_list_text.get_pos().set_y(start_y);
		if(diff > 0) {
			var end_y = start_y - (diff + this.margin * 2);
			luxe_tween_Actuate.tween(this.resource_list_text.get_pos(),8,{ y : end_y}).repeat().delay(4).reflect().ease(luxe_tween_easing_Linear.get_easeNone()).onUpdate(function() {
				_g.resource_list_text.geometry.set_dirty(true);
			});
		}
		h = this.render_stats_text.text_bounds.h;
		diff = h - vh;
		this.render_stats_text.get_pos().set_y(start_y);
		if(diff > 0) {
			var end_y1 = start_y - (diff + this.margin * 2);
			luxe_tween_Actuate.tween(this.render_stats_text.get_pos(),8,{ y : end_y1}).repeat().delay(4).reflect().ease(luxe_tween_easing_Linear.get_easeNone()).onUpdate(function() {
				_g.render_stats_text.geometry.set_dirty(true);
			});
		}
	}
	,refresh_render_stats: function() {
		if(!this.visible) return;
		this.render_stats_text.set_text(this.get_render_stats_string());
		this.render_stats_text.set_locked(true);
		if(this.render_stats_text.geometry != null) this.render_stats_text.geometry.set_dirty(true);
	}
	,update_render_stats: function() {
		this._render_stats.batchers = Luxe.renderer.stats.batchers;
		this._render_stats.geometry_count = Luxe.renderer.stats.geometry_count;
		this._render_stats.visible_count = Luxe.renderer.stats.visible_count;
		this._render_stats.dynamic_batched_count = Luxe.renderer.stats.dynamic_batched_count;
		this._render_stats.static_batched_count = Luxe.renderer.stats.static_batched_count;
		this._render_stats.draw_calls = Luxe.renderer.stats.draw_calls;
		this._render_stats.vert_count = Luxe.renderer.stats.vert_count;
	}
	,__class__: luxe_debug_StatsDebugView
});
var luxe_debug_TraceDebugView = function(_debug) {
	this._last_logged_length = 0;
	this.max_lines = 35;
	luxe_debug_DebugView.call(this,_debug);
	this.set_name("Log");
	luxe_Debug.trace_callbacks.push($bind(this,this.on_trace));
	this.logged = [];
	this.add_line("luxe version " + this.debug.app.runtime_info());
};
$hxClasses["luxe.debug.TraceDebugView"] = luxe_debug_TraceDebugView;
luxe_debug_TraceDebugView.__name__ = ["luxe","debug","TraceDebugView"];
luxe_debug_TraceDebugView.__super__ = luxe_debug_DebugView;
luxe_debug_TraceDebugView.prototype = $extend(luxe_debug_DebugView.prototype,{
	on_trace: function(v,inf) {
		this.add_line(inf.fileName + ":" + inf.lineNumber + " " + Std.string(v));
	}
	,create: function() {
		var text_bounds = new phoenix_Rectangle(this.debug.padding.x + 20,this.debug.padding.y + 40,Luxe.core.screen.get_w() - this.debug.padding.x * 2 - 20,Luxe.core.screen.get_h() - this.debug.padding.y * 2 - 40);
		this.lines = new luxe_Text({ name : "debug.log.text", no_scene : true, depth : 999.3, color : new phoenix_Color().rgb(8947848), bounds : text_bounds, bounds_wrap : true, font : Luxe.renderer.font, text : "", align_vertical : 4, point_size : 12, batcher : this.debug.batcher, visible : false});
		if(this.lines.geometry != null) {
			this.lines.geometry.set_clip_rect(text_bounds);
			this.lines.geometry.set_locked(true);
			this.lines.geometry.id = "debug.log.text.geometry";
		}
	}
	,onwindowsized: function(e) {
		var debug = Luxe.debug;
		var text_bounds = new phoenix_Rectangle(debug.padding.x + 20,debug.padding.y + 40,Luxe.core.screen.get_w() - debug.padding.x * 2 - 20,Luxe.core.screen.get_h() - debug.padding.y * 2 - 40);
		this.lines.set_bounds(text_bounds);
		this.lines.set_clip_rect(text_bounds);
		if(this.lines.geometry != null) {
			this.lines.geometry.set_locked(true);
			this.lines.geometry.set_dirty(true);
		}
	}
	,add_line: function(_t) {
		if(this.logged == null) return;
		this.logged.push(_t);
		if(!this.visible) return;
		this.refresh_lines();
	}
	,refresh_lines: function() {
		if(this._last_logged_length == this.logged.length) return;
		var _final = "";
		if(this.logged.length <= this.max_lines) {
			var _g = 0;
			var _g1 = this.logged;
			while(_g < _g1.length) {
				var _line = _g1[_g];
				++_g;
				_final += _line + "\n";
			}
		} else {
			var _start = this.logged.length - this.max_lines;
			var _total = this.logged.length;
			var _g11 = _start;
			var _g2 = this.logged.length;
			while(_g11 < _g2) {
				var i = _g11++;
				var _line1 = this.logged[i];
				_final += _line1 + "\n";
			}
		}
		this.lines.set_text(_final);
		if(this.lines.geometry != null) {
			this.lines.geometry.set_locked(true);
			this.lines.geometry.set_dirty(true);
		}
		this._last_logged_length = this.logged.length;
	}
	,refresh: function() {
	}
	,process: function() {
	}
	,show: function() {
		luxe_debug_DebugView.prototype.show.call(this);
		this.refresh_lines();
		this.lines.set_visible(true);
	}
	,hide: function() {
		luxe_debug_DebugView.prototype.hide.call(this);
		this.lines.set_visible(false);
	}
	,__class__: luxe_debug_TraceDebugView
});
var luxe_importers_bitmapfont_BitmapFontParser = function() { };
$hxClasses["luxe.importers.bitmapfont.BitmapFontParser"] = luxe_importers_bitmapfont_BitmapFontParser;
luxe_importers_bitmapfont_BitmapFontParser.__name__ = ["luxe","importers","bitmapfont","BitmapFontParser"];
luxe_importers_bitmapfont_BitmapFontParser.parse = function(_font_data) {
	if(_font_data.length == 0) throw new js__$Boot_HaxeError("BitmapFont:Parser: _font_data is 0 length");
	var _info = { face : null, chars : new haxe_ds_IntMap(), point_size : 0, base_size : 0, char_count : 0, line_height : 0, pages : [], kernings : new haxe_ds_IntMap()};
	var _lines = _font_data.split("\n");
	if(_lines.length == 0) throw new js__$Boot_HaxeError("BitmapFont; invalid font data specified for parser.");
	var _first = _lines[0];
	if((function($this) {
		var $r;
		var _this = StringTools.ltrim(_first);
		$r = HxOverrides.substr(_this,0,4);
		return $r;
	}(this)) != "info") throw new js__$Boot_HaxeError("BitmapFont; invalid font data specified for parser. Format should be plain ascii text .fnt file only currently.");
	var _g = 0;
	while(_g < _lines.length) {
		var _line = _lines[_g];
		++_g;
		var _tokens = _line.split(" ");
		var _g1 = 0;
		while(_g1 < _tokens.length) {
			var _current = _tokens[_g1];
			++_g1;
			luxe_importers_bitmapfont_BitmapFontParser.parse_token(_current,_tokens,_info);
		}
		_tokens = null;
	}
	_lines = null;
	return _info;
};
luxe_importers_bitmapfont_BitmapFontParser.parse_token = function(_token,_tokens,_info) {
	_tokens.shift();
	var _items = luxe_importers_bitmapfont_BitmapFontParser.tokenize_line(_tokens);
	switch(_token) {
	case "info":
		_info.face = luxe_importers_bitmapfont_BitmapFontParser.unquote(__map_reserved.face != null?_items.getReserved("face"):_items.h["face"]);
		_info.point_size = Std.parseFloat(__map_reserved.size != null?_items.getReserved("size"):_items.h["size"]);
		break;
	case "common":
		_info.line_height = Std.parseFloat(__map_reserved.lineHeight != null?_items.getReserved("lineHeight"):_items.h["lineHeight"]);
		_info.base_size = Std.parseFloat(__map_reserved.base != null?_items.getReserved("base"):_items.h["base"]);
		break;
	case "page":
		_info.pages.push({ id : Std.parseInt(__map_reserved.id != null?_items.getReserved("id"):_items.h["id"]), file : luxe_importers_bitmapfont_BitmapFontParser.trim(luxe_importers_bitmapfont_BitmapFontParser.unquote(__map_reserved.file != null?_items.getReserved("file"):_items.h["file"]))});
		break;
	case "chars":
		_info.char_count = Std.parseInt(__map_reserved.count != null?_items.getReserved("count"):_items.h["count"]);
		break;
	case "char":
		var _char = { id : Std.parseInt(__map_reserved.id != null?_items.getReserved("id"):_items.h["id"]), x : Std.parseFloat(__map_reserved.x != null?_items.getReserved("x"):_items.h["x"]), y : Std.parseFloat(__map_reserved.y != null?_items.getReserved("y"):_items.h["y"]), width : Std.parseFloat(__map_reserved.width != null?_items.getReserved("width"):_items.h["width"]), height : Std.parseFloat(__map_reserved.height != null?_items.getReserved("height"):_items.h["height"]), xoffset : Std.parseFloat(__map_reserved.xoffset != null?_items.getReserved("xoffset"):_items.h["xoffset"]), yoffset : Std.parseFloat(__map_reserved.yoffset != null?_items.getReserved("yoffset"):_items.h["yoffset"]), xadvance : Std.parseFloat(__map_reserved.xadvance != null?_items.getReserved("xadvance"):_items.h["xadvance"]), page : Std.parseInt(__map_reserved.page != null?_items.getReserved("page"):_items.h["page"])};
		_info.chars.h[_char.id] = _char;
		break;
	case "kerning":
		var _first = Std.parseInt(__map_reserved.first != null?_items.getReserved("first"):_items.h["first"]);
		var _second = Std.parseInt(__map_reserved.second != null?_items.getReserved("second"):_items.h["second"]);
		var _amount = Std.parseFloat(__map_reserved.amount != null?_items.getReserved("amount"):_items.h["amount"]);
		var _map = _info.kernings.h[_first];
		if(_map == null) {
			_map = new haxe_ds_IntMap();
			_info.kernings.h[_first] = _map;
		}
		_map.h[_second] = _amount;
		break;
	default:
	}
	_items = null;
};
luxe_importers_bitmapfont_BitmapFontParser.tokenize_line = function(_tokens) {
	var _item_map = new haxe_ds_StringMap();
	var _g = 0;
	while(_g < _tokens.length) {
		var _token = _tokens[_g];
		++_g;
		var _items = _token.split("=");
		_item_map.set(_items[0],_items[1]);
		_items = null;
	}
	return _item_map;
};
luxe_importers_bitmapfont_BitmapFontParser.trim = function(_s) {
	return StringTools.trim(_s);
};
luxe_importers_bitmapfont_BitmapFontParser.unquote = function(_s) {
	if(_s.indexOf("\"") != -1) _s = StringTools.replace(_s,"\"","");
	return _s;
};
var luxe_importers_tiled_TiledImageLayer = function(_map) {
	this.visible = true;
	this.opacity = 1.0;
	this.y = 0;
	this.x = 0;
	this.name = "";
	this.map = _map;
	this.properties = new haxe_ds_StringMap();
};
$hxClasses["luxe.importers.tiled.TiledImageLayer"] = luxe_importers_tiled_TiledImageLayer;
luxe_importers_tiled_TiledImageLayer.__name__ = ["luxe","importers","tiled","TiledImageLayer"];
luxe_importers_tiled_TiledImageLayer.prototype = {
	from_xml: function(xml) {
		this.name = xml.get("name");
		this.x = Std.parseInt(xml.get("x"));
		this.y = Std.parseInt(xml.get("y"));
		var _opacity = xml.get("opacity");
		var _visible = xml.get("visible");
		if(_opacity == null) this.opacity = 1.0; else this.opacity = parseFloat(_opacity);
		if(_visible == "0") this.visible = false; else this.visible = true;
		var $it0 = (function($this) {
			var $r;
			if(xml.nodeType != Xml.Document && xml.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + xml.nodeType);
			$r = HxOverrides.iter(xml.children);
			return $r;
		}(this));
		while( $it0.hasNext() ) {
			var child = $it0.next();
			if(luxe_importers_tiled_TiledUtil.valid_element(child)) {
				if((function($this) {
					var $r;
					if(child.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + child.nodeType);
					$r = child.nodeName;
					return $r;
				}(this)) == "properties") {
					var $it1 = (function($this) {
						var $r;
						if(child.nodeType != Xml.Document && child.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + child.nodeType);
						$r = HxOverrides.iter(child.children);
						return $r;
					}(this));
					while( $it1.hasNext() ) {
						var property = $it1.next();
						if(luxe_importers_tiled_TiledUtil.valid_element(property)) {
							var key = property.get("name");
							var value = property.get("value");
							this.properties.set(key,value);
						}
					}
				}
				if((function($this) {
					var $r;
					if(child.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + child.nodeType);
					$r = child.nodeName;
					return $r;
				}(this)) == "image") {
					var _source = child.get("source");
					var _format = child.get("format");
					var _transparent_col = child.get("trans");
					if(_transparent_col == null) _transparent_col = "";
					_transparent_col = StringTools.replace(_transparent_col,"#","");
					this.image = new luxe_importers_tiled_TiledImage(this,_format,_source,Std.parseInt(_transparent_col));
				}
			}
		}
	}
	,from_json: function(json) {
		this.name = Reflect.field(json,"name");
		this.x = Reflect.field(json,"x");
		this.y = Reflect.field(json,"y");
		this.opacity = Reflect.field(json,"opacity");
		this.visible = Reflect.field(json,"visible");
		var _image = Reflect.field(json,"image");
		var _transparent_col = Reflect.field(json,"transparentcolor");
		var _w = Reflect.field(json,"width");
		var _h = Reflect.field(json,"height");
		var _format = Reflect.field(json,"format");
		if(_transparent_col == null) _transparent_col = "";
		_transparent_col = StringTools.replace(_transparent_col,"#","");
		this.image = new luxe_importers_tiled_TiledImage(this,_format,_image,Std.parseInt(_transparent_col),_w,_h);
		var _properties = Reflect.field(json,"properties");
		if(_properties != null) {
			var _props = Reflect.fields(_properties);
			var _g = 0;
			while(_g < _props.length) {
				var property_name = _props[_g];
				++_g;
				var value = Reflect.field(_properties,property_name);
				this.properties.set(property_name,value);
			}
		}
	}
	,__class__: luxe_importers_tiled_TiledImageLayer
};
var luxe_importers_tiled_TiledImage = function(_image_layer,_format,_source,_transparent_color,_width,_height) {
	this.height = 0;
	this.width = 0;
	this.image_layer = _image_layer;
	if(_format == null) this.format = ""; else this.format = _format;
	this.source = _source;
	this.transparent_color = _transparent_color;
	this.width = _width;
	this.height = _height;
};
$hxClasses["luxe.importers.tiled.TiledImage"] = luxe_importers_tiled_TiledImage;
luxe_importers_tiled_TiledImage.__name__ = ["luxe","importers","tiled","TiledImage"];
luxe_importers_tiled_TiledImage.prototype = {
	__class__: luxe_importers_tiled_TiledImage
};
var luxe_importers_tiled_TiledLayer = function(_map) {
	this.visible = true;
	this.opacity = 1.0;
	this.map = _map;
	this.properties = new haxe_ds_StringMap();
	this.tiles = [];
};
$hxClasses["luxe.importers.tiled.TiledLayer"] = luxe_importers_tiled_TiledLayer;
luxe_importers_tiled_TiledLayer.__name__ = ["luxe","importers","tiled","TiledLayer"];
luxe_importers_tiled_TiledLayer.bytes_get_int32 = function(bytes,pos) {
	return bytes.b[pos] | bytes.b[pos + 1] << 8 | bytes.b[pos + 2] << 16 | bytes.b[pos + 3] << 24;
};
luxe_importers_tiled_TiledLayer.base64_to_array = function(input,compression) {
	if(luxe_importers_tiled_TiledLayer.base_lookup.length == 0) {
		var _g1 = 0;
		var _g = luxe_importers_tiled_TiledLayer.base_chars.length;
		while(_g1 < _g) {
			var c = _g1++;
			luxe_importers_tiled_TiledLayer.base_lookup[HxOverrides.cca(luxe_importers_tiled_TiledLayer.base_chars,c)] = c;
		}
	}
	var result = [];
	var bytes = haxe_io_Bytes.alloc(input.length / 4 * 3 | 0);
	var byte_pos = 0;
	var i = 0;
	while(i < input.length - 3) {
		var input_ch = input.charAt(i);
		if(input_ch == " " || input_ch == "\n" || input_ch == "\r") {
			i++;
			continue;
		}
		var a0 = luxe_importers_tiled_TiledLayer.base_lookup[HxOverrides.cca(input,i)];
		var a1 = luxe_importers_tiled_TiledLayer.base_lookup[HxOverrides.cca(input,i + 1)];
		var a2 = luxe_importers_tiled_TiledLayer.base_lookup[HxOverrides.cca(input,i + 2)];
		var a3 = luxe_importers_tiled_TiledLayer.base_lookup[HxOverrides.cca(input,i + 3)];
		if(a1 < 64) bytes.set(byte_pos++,(a0 << 2) + ((a1 & 48) >> 4));
		if(a2 < 64) bytes.set(byte_pos++,((a1 & 15) << 4) + ((a2 & 60) >> 2));
		if(a3 < 64) bytes.set(byte_pos++,((a2 & 3) << 6) + a3);
		i += 4;
	}
	if(compression != null) {
		if(compression != null) switch(compression) {
		case "gzip":
			throw new js__$Boot_HaxeError("TiledMap: gzip compression is not currently supported. Try zlib/zip compression instead.");
			break;
		case "zlib":
			bytes = haxe_zip_Uncompress.run(bytes);
			break;
		}
	}
	var byte_len = bytes.length;
	byte_pos = 0;
	while(byte_pos < byte_len) {
		result.push(bytes.b[byte_pos] | bytes.b[byte_pos + 1] << 8 | bytes.b[byte_pos + 2] << 16 | bytes.b[byte_pos + 3] << 24);
		byte_pos += 4;
	}
	bytes = null;
	return result;
};
luxe_importers_tiled_TiledLayer.prototype = {
	from_xml: function(xml) {
		var tileGIDs = [];
		var root = xml;
		this.name = root.get("name");
		this.width = Std.parseInt(root.get("width"));
		this.height = Std.parseInt(root.get("height"));
		var _opacity = root.get("opacity");
		var _visible = root.get("visible");
		if(_opacity == null) this.opacity = 1.0; else this.opacity = parseFloat(_opacity);
		if(_visible == "0") this.visible = false; else this.visible = true;
		var $it0 = (function($this) {
			var $r;
			if(root.nodeType != Xml.Document && root.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + root.nodeType);
			$r = HxOverrides.iter(root.children);
			return $r;
		}(this));
		while( $it0.hasNext() ) {
			var child = $it0.next();
			if(luxe_importers_tiled_TiledUtil.valid_element(child)) {
				var _g;
				if(child.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + child.nodeType);
				_g = child.nodeName;
				switch(_g) {
				case "properties":
					var $it1 = (function($this) {
						var $r;
						if(child.nodeType != Xml.Document && child.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + child.nodeType);
						$r = HxOverrides.iter(child.children);
						return $r;
					}(this));
					while( $it1.hasNext() ) {
						var property = $it1.next();
						if(!luxe_importers_tiled_TiledUtil.valid_element(property)) continue;
						var key = property.get("name");
						var value = property.get("value");
						this.properties.set(key,value);
					}
					break;
				case "data":
					var encoding;
					if(child.exists("encoding")) encoding = child.get("encoding"); else encoding = "";
					var node_value = ((function($this) {
						var $r;
						if(child.nodeType != Xml.Document && child.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + child.nodeType);
						$r = child.children[0];
						return $r;
					}(this))).get_nodeValue();
					switch(encoding) {
					case "base64":
						tileGIDs = luxe_importers_tiled_TiledLayer.base64_to_array(node_value,child.get("compression"));
						break;
					case "csv":
						tileGIDs = this.csv_to_array(node_value);
						break;
					default:
						var $it2 = (function($this) {
							var $r;
							if(child.nodeType != Xml.Document && child.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + child.nodeType);
							$r = HxOverrides.iter(child.children);
							return $r;
						}(this));
						while( $it2.hasNext() ) {
							var tile = $it2.next();
							if(luxe_importers_tiled_TiledUtil.valid_element(tile)) {
								var gid = Std.parseInt(tile.get("gid"));
								tileGIDs.push(gid);
							}
						}
					}
					break;
				}
			}
		}
		var _g1 = 0;
		while(_g1 < tileGIDs.length) {
			var gid1 = tileGIDs[_g1];
			++_g1;
			this.tiles.push(new luxe_importers_tiled_TiledTile(this,gid1));
		}
	}
	,from_json: function(json) {
		var tileGIDs = [];
		this.name = Reflect.field(json,"name");
		this.width = Std.parseInt(Reflect.field(json,"width"));
		this.height = Std.parseInt(Reflect.field(json,"height"));
		this.opacity = Std.parseFloat(Reflect.field(json,"opacity"));
		if(Reflect.field(json,"visible") == "false") this.visible = false; else this.visible = true;
		var fields = Reflect.fields(json);
		var _g = 0;
		while(_g < fields.length) {
			var nodename = fields[_g];
			++_g;
			var child = Reflect.field(json,nodename);
			switch(nodename) {
			case "properties":
				var child_fields = Reflect.fields(child);
				var _g1 = 0;
				while(_g1 < child_fields.length) {
					var property_name = child_fields[_g1];
					++_g1;
					var value = Reflect.field(child,property_name);
					this.properties.set(property_name,value);
				}
				break;
			case "data":
				tileGIDs = child;
				break;
			}
		}
		var _g2 = 0;
		while(_g2 < tileGIDs.length) {
			var gid = tileGIDs[_g2];
			++_g2;
			this.tiles.push(new luxe_importers_tiled_TiledTile(this,gid | 0));
		}
	}
	,csv_to_array: function(input) {
		var result = [];
		var rows = StringTools.trim(input).split("\n");
		var row;
		var _g = 0;
		while(_g < rows.length) {
			var row1 = rows[_g];
			++_g;
			if(row1 != "") {
				var resultRow = [];
				var entries = StringTools.trim(row1).split(",");
				var entry;
				var _g1 = 0;
				while(_g1 < entries.length) {
					var entry1 = entries[_g1];
					++_g1;
					if(entry1 != "") result.push(Std.parseInt(entry1));
				}
			}
		}
		return result;
	}
	,__class__: luxe_importers_tiled_TiledLayer
};
var luxe_tilemaps_Tilemap = function(options) {
	this.total_height = 0;
	this.total_width = 0;
	this.height = 0;
	this.width = 0;
	this.tile_height = 0;
	this.tile_width = 0;
	this.width = options.w;
	this.height = options.h;
	this.tile_width = options.tile_width;
	this.tile_height = options.tile_height;
	if(options.x != null && options.y != null) this.pos = new phoenix_Vector(options.x,options.y); else {
		this.pos = new phoenix_Vector();
		if(options.x != null) this.pos.set_x(options.x);
		if(options.y != null) this.pos.set_y(options.y);
	}
	if(options.orientation == null) this.orientation = luxe_tilemaps_TilemapOrientation.none; else this.orientation = options.orientation;
	this.properties = new haxe_ds_StringMap();
	this.tilesets = new haxe_ds_StringMap();
	this.layers = new haxe_ds_StringMap();
	this.layers_ordered = [];
};
$hxClasses["luxe.tilemaps.Tilemap"] = luxe_tilemaps_Tilemap;
luxe_tilemaps_Tilemap.__name__ = ["luxe","tilemaps","Tilemap"];
luxe_tilemaps_Tilemap.prototype = {
	display: function(options) {
		var _g = this.orientation;
		switch(_g[1]) {
		case 0:
			this.visual = new luxe_tilemaps_OrthoVisual(this,options);
			break;
		case 1:
			this.visual = new luxe_tilemaps_IsometricVisual(this,options);
			break;
		case 2:
			break;
		}
	}
	,inside: function(x,y) {
		if(this.width == 0 || this.height == 0) return false;
		if(x < 0) return false;
		if(y < 0) return false;
		if(y > this.height - 1) return false;
		if(x > this.width - 1) return false;
		return true;
	}
	,tile_pos: function(x,y,scale,offset_x,offset_y) {
		if(scale == null) scale = 1.0;
		if(this.inside(x,y)) {
			var _g = this.orientation;
			switch(_g[1]) {
			case 0:
				var _worldpos = luxe_tilemaps_Ortho.tile_coord_to_worldpos(x,y,this.tile_width,this.tile_height,scale,offset_x,offset_y);
				var other = this.pos;
				if(other == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("other was null" + ""));
				var _x = _worldpos.x + other.x;
				var _y = _worldpos.y + other.y;
				var _z = _worldpos.z + other.z;
				var prev = _worldpos.ignore_listeners;
				_worldpos.ignore_listeners = true;
				_worldpos.x = _x;
				if(_worldpos._construct) _worldpos.x; else {
					if(_worldpos.listen_x != null && !_worldpos.ignore_listeners) _worldpos.listen_x(_x);
					_worldpos.x;
				}
				_worldpos.y = _y;
				if(_worldpos._construct) _worldpos.y; else {
					if(_worldpos.listen_y != null && !_worldpos.ignore_listeners) _worldpos.listen_y(_y);
					_worldpos.y;
				}
				_worldpos.z = _z;
				if(_worldpos._construct) _worldpos.z; else {
					if(_worldpos.listen_z != null && !_worldpos.ignore_listeners) _worldpos.listen_z(_z);
					_worldpos.z;
				}
				_worldpos.ignore_listeners = prev;
				if(_worldpos.listen_x != null && !_worldpos.ignore_listeners) _worldpos.listen_x(_worldpos.x);
				if(_worldpos.listen_y != null && !_worldpos.ignore_listeners) _worldpos.listen_y(_worldpos.y);
				if(_worldpos.listen_z != null && !_worldpos.ignore_listeners) _worldpos.listen_z(_worldpos.z);
				_worldpos;
				return _worldpos;
			case 1:
				var _worldpos1 = luxe_tilemaps_Isometric.tile_coord_to_worldpos(x,y,this.tile_width,this.tile_height,scale,offset_x,offset_y);
				var other1 = this.pos;
				if(other1 == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("other was null" + ""));
				var _x1 = _worldpos1.x + other1.x;
				var _y1 = _worldpos1.y + other1.y;
				var _z1 = _worldpos1.z + other1.z;
				var prev1 = _worldpos1.ignore_listeners;
				_worldpos1.ignore_listeners = true;
				_worldpos1.x = _x1;
				if(_worldpos1._construct) _worldpos1.x; else {
					if(_worldpos1.listen_x != null && !_worldpos1.ignore_listeners) _worldpos1.listen_x(_x1);
					_worldpos1.x;
				}
				_worldpos1.y = _y1;
				if(_worldpos1._construct) _worldpos1.y; else {
					if(_worldpos1.listen_y != null && !_worldpos1.ignore_listeners) _worldpos1.listen_y(_y1);
					_worldpos1.y;
				}
				_worldpos1.z = _z1;
				if(_worldpos1._construct) _worldpos1.z; else {
					if(_worldpos1.listen_z != null && !_worldpos1.ignore_listeners) _worldpos1.listen_z(_z1);
					_worldpos1.z;
				}
				_worldpos1.ignore_listeners = prev1;
				if(_worldpos1.listen_x != null && !_worldpos1.ignore_listeners) _worldpos1.listen_x(_worldpos1.x);
				if(_worldpos1.listen_y != null && !_worldpos1.ignore_listeners) _worldpos1.listen_y(_worldpos1.y);
				if(_worldpos1.listen_z != null && !_worldpos1.ignore_listeners) _worldpos1.listen_z(_worldpos1.z);
				_worldpos1;
				return _worldpos1;
			default:
			}
		}
		return new phoenix_Vector();
	}
	,tile_coord: function(_world_pos_x,_world_pos_y,_scale,_rounded) {
		if(_rounded == null) _rounded = true;
		if(_scale == null) _scale = 1.0;
		var _g = this.orientation;
		switch(_g[1]) {
		case 0:
			return luxe_tilemaps_Ortho.worldpos_to_tile_coord(_world_pos_x - this.pos.x,_world_pos_y - this.pos.y,this.tile_width,this.tile_height,_scale,_rounded);
		case 1:
			return luxe_tilemaps_Isometric.worldpos_to_tile_coord(_world_pos_x - this.pos.x,_world_pos_y - this.pos.y,this.tile_width,this.tile_height,_scale,_rounded);
		default:
			return null;
		}
	}
	,tile_at_pos: function(layer_name,_world_pos_x,_world_pos_y,_scale) {
		if(_scale == null) _scale = 1.0;
		var _g = this.orientation;
		switch(_g[1]) {
		case 0:
			var _tile_pos = luxe_tilemaps_Ortho.worldpos_to_tile_coord(_world_pos_x - this.pos.x,_world_pos_y - this.pos.y,this.tile_width,this.tile_height,_scale);
			return this.tile_at(layer_name,Math.floor(_tile_pos.x),Math.floor(_tile_pos.y));
		case 1:
			var _tile_pos1 = luxe_tilemaps_Isometric.worldpos_to_tile_coord(_world_pos_x - this.pos.x,_world_pos_y - this.pos.y,this.tile_width,this.tile_height,_scale);
			return this.tile_at(layer_name,Math.floor(_tile_pos1.x),Math.floor(_tile_pos1.y));
		default:
			return null;
		}
	}
	,layer: function(layer_name) {
		return this.layers.get(layer_name);
	}
	,tileset: function(tileset_name) {
		return this.tilesets.get(tileset_name);
	}
	,tile_at: function(layer_name,x,y) {
		if(this.inside(x,y)) {
			var _layer = this.layers.get(layer_name);
			if(_layer != null) return _layer.tiles[y][x]; else {
				haxe_Log.trace("No tile layer called '" + layer_name + "' for tile_at " + x + "," + y,{ fileName : "Tilemap.hx", lineNumber : 646, className : "luxe.tilemaps.Tilemap", methodName : "tile_at"});
				return null;
			}
		} else return null;
	}
	,iterator: function() {
		return HxOverrides.iter(this.layers_ordered);
	}
	,add_tileset: function(options) {
		var tileset = new luxe_tilemaps_Tileset(options);
		this.tilesets.set(tileset.name,tileset);
		return tileset;
	}
	,tileset_from_id: function(_id) {
		var tileset = null;
		var max = 0;
		var $it0 = this.tilesets.iterator();
		while( $it0.hasNext() ) {
			var t = $it0.next();
			if(_id >= t.first_id && t.first_id >= max) {
				max = t.first_id;
				tileset = t;
			}
		}
		return tileset;
	}
	,remove_tile: function(layer_name,x,y) {
		if(this.inside(x,y)) {
			var _layer = this.layer(layer_name);
			if(_layer != null) _layer.tiles[y][x].set_id(0);
		}
		return false;
	}
	,remove_tileset: function(name,_destroy_textures) {
		if(_destroy_textures == null) _destroy_textures = false;
		var _tileset = this.tileset(name);
		if(_tileset != null && _destroy_textures) _tileset.texture.destroy();
		return this.tilesets.remove(name);
	}
	,remove_layer: function(name) {
		var _layer = this.layer(name);
		if(_layer != null) HxOverrides.remove(this.layers_ordered,_layer);
		return this.layers.remove(name);
	}
	,add_layer: function(options) {
		if(options.map == null) options.map = this;
		options.map;
		var new_layer = new luxe_tilemaps_TileLayer(options);
		this.layers.set(new_layer.name,new_layer);
		this.layers_ordered.push(new_layer);
		this.sort_layers();
		return new_layer;
	}
	,add_tiles_fill_by_id: function(layer_name,_tileid) {
		if(_tileid == null) _tileid = 0;
		var _layer = this.layers.get(layer_name);
		if(_layer != null) {
			_layer.tiles = null;
			_layer.tiles = [];
			var _g1 = 0;
			var _g = this.height;
			while(_g1 < _g) {
				var y = _g1++;
				var _tile_row = [];
				var _g3 = 0;
				var _g2 = this.width;
				while(_g3 < _g2) {
					var x = _g3++;
					var _tile = new luxe_tilemaps_Tile({ layer : _layer, id : _tileid, x : x, y : y});
					_tile_row.push(_tile);
				}
				_layer.tiles.push(_tile_row);
			}
		} else haxe_Log.trace("No tile layer called '" + layer_name + "' for add_tiles_fill_by_id",{ fileName : "Tilemap.hx", lineNumber : 783, className : "luxe.tilemaps.Tilemap", methodName : "add_tiles_fill_by_id"});
	}
	,add_tiles_from_grid: function(layer_name,grid) {
		if(grid.length != this.height) throw new js__$Boot_HaxeError("add_tiles_from_grid requires a grid of integers the same size as the tilemap! height != grid.length");
		if(grid.length != 0) {
			if(grid[0].length != this.width) throw new js__$Boot_HaxeError("add_tiles_from_grid requires a grid of integers the same size as the tilemap! width != grid[0].length");
		}
		var _layer = this.layers.get(layer_name);
		if(_layer != null) {
			_layer.tiles = null;
			_layer.tiles = [];
			var _g1 = 0;
			var _g = this.height;
			while(_g1 < _g) {
				var y = _g1++;
				var _tile_row = [];
				var _g3 = 0;
				var _g2 = this.width;
				while(_g3 < _g2) {
					var x = _g3++;
					var tileid = grid[y][x];
					var _tile = new luxe_tilemaps_Tile({ layer : _layer, id : tileid, x : x, y : y});
					_tile_row.push(_tile);
				}
				_layer.tiles.push(_tile_row);
			}
		} else haxe_Log.trace("No tile layer called '" + layer_name + "' for add_tiles_from_grid",{ fileName : "Tilemap.hx", lineNumber : 830, className : "luxe.tilemaps.Tilemap", methodName : "add_tiles_from_grid"});
	}
	,destroy: function(_keep_visual) {
		if(_keep_visual == null) _keep_visual = false;
		this.layers = null;
		this.layers_ordered = null;
		this.tilesets = null;
		this.properties = null;
		this.orientation = null;
		this.pos = null;
		this.tile_width = 0;
		this.tile_height = 0;
		this.width = 0;
		this.height = 0;
		if(!_keep_visual && this.visual != null) this.visual.destroy();
	}
	,_sort_layers: function(a,b) {
		if(a.layer < b.layer) return -1;
		if(a.layer >= b.layer) return 1;
		return 1;
	}
	,sort_layers: function() {
		this.layers_ordered.sort($bind(this,this._sort_layers));
	}
	,get_bounds: function() {
		return new phoenix_Rectangle(this.pos.x,this.pos.y,this.pos.x + this.get_total_width(),this.pos.y + this.get_total_height());
	}
	,get_total_width: function() {
		return this.width * this.tile_width;
	}
	,get_total_height: function() {
		return this.height * this.tile_height;
	}
	,__class__: luxe_tilemaps_Tilemap
	,__properties__: {get_bounds:"get_bounds",get_total_height:"get_total_height",get_total_width:"get_total_width"}
};
var luxe_importers_tiled_TiledMap = function(options) {
	if(options.format == null) options.format = "xml";
	options.format;
	if(options.asset_path == null) options.asset_path = "assets/";
	options.asset_path;
	if(options.pos == null) options.pos = new phoenix_Vector();
	options.pos;
	if(options.tiled_file_data == null || options.tiled_file_data.length == 0) throw new js__$Boot_HaxeError("TiledMap handed invalid file data, pass the text contents of the tmx/json file");
	this.tiledmap_data = new luxe_importers_tiled_TiledMapData();
	if(options.format == "json") this.tiledmap_data.parseFromJSON(JSON.parse(options.tiled_file_data)); else this.tiledmap_data.parseFromXML(Xml.parse(options.tiled_file_data));
	luxe_tilemaps_Tilemap.call(this,{ x : options.pos.x | 0, y : options.pos.y | 0, w : this.tiledmap_data.width, h : this.tiledmap_data.height, tile_width : this.tiledmap_data.tile_width, tile_height : this.tiledmap_data.tile_height});
	this._load_tilesets(options);
	this._load_layers(options);
	this.orientation = this.tiledmap_data.orientation;
};
$hxClasses["luxe.importers.tiled.TiledMap"] = luxe_importers_tiled_TiledMap;
luxe_importers_tiled_TiledMap.__name__ = ["luxe","importers","tiled","TiledMap"];
luxe_importers_tiled_TiledMap.__super__ = luxe_tilemaps_Tilemap;
luxe_importers_tiled_TiledMap.prototype = $extend(luxe_tilemaps_Tilemap.prototype,{
	_load_tilesets: function(options) {
		var _g = 0;
		var _g1 = this.tiledmap_data.tilesets;
		while(_g < _g1.length) {
			var _tileset = _g1[_g];
			++_g;
			var _tileset_id = haxe_io_Path.join([options.asset_path,_tileset.texture_name]);
			var _texture = Luxe.resources.cache.get(_tileset_id);
			if(_texture == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_texture was null" + (" ( " + ("Tiled; trying to load " + _tileset_id + " but texture not found in resources") + " )")));
			this.add_tileset({ name : _tileset.name, texture : _texture, first_id : _tileset.first_id, tile_width : _tileset.tile_width, tile_height : _tileset.tile_height, spacing : _tileset.spacing, margin : _tileset.margin});
		}
	}
	,_load_layers: function(options) {
		var layer_index = 0;
		var _g = 0;
		var _g1 = this.tiledmap_data.layers;
		while(_g < _g1.length) {
			var _layer = _g1[_g];
			++_g;
			var _layer_properties = new haxe_ds_StringMap();
			var $it0 = _layer.properties.keys();
			while( $it0.hasNext() ) {
				var _prop = $it0.next();
				var value = _layer.properties.get(_prop);
				if(__map_reserved[_prop] != null) _layer_properties.setReserved(_prop,value); else _layer_properties.h[_prop] = value;
			}
			this.add_layer({ name : _layer.name, layer : layer_index, opacity : _layer.opacity, visible : _layer.visible, properties : _layer_properties});
			this.add_tiles_fill_by_id(_layer.name,0);
			var tilemap_layer = this.layers.get(_layer.name);
			var _gid_counter = 0;
			var _g3 = 0;
			var _g2 = _layer.height;
			while(_g3 < _g2) {
				var _y = _g3++;
				var _g5 = 0;
				var _g4 = _layer.width;
				while(_g5 < _g4) {
					var _x = _g5++;
					var _layer_tile = _layer.tiles[_gid_counter];
					if(_layer_tile.id != 0) {
						var tile = tilemap_layer.tiles[_y][_x];
						tile.set_id(_layer_tile.id);
						tile.set_flipx(_layer_tile.flip_horizontal);
						tile.set_flipy(_layer_tile.flip_vertical);
						if(_layer_tile.flip_diagonal) {
							tile.set_angle(90);
							tile.set_flipx(!tile.flipx);
						}
					}
					_gid_counter++;
				}
			}
			layer_index++;
		}
	}
	,__class__: luxe_importers_tiled_TiledMap
});
var luxe_importers_tiled_TiledMapData = function() {
	this.background_color = "";
	this.version = "";
	this.width = 0;
	this.height = 0;
	this.tile_width = 0;
	this.tile_height = 0;
	this.orientation = luxe_tilemaps_TilemapOrientation.none;
	this.tilesets = [];
	this.layers = [];
	this.properties = new haxe_ds_StringMap();
	this.object_groups = [];
	this.image_layers = [];
};
$hxClasses["luxe.importers.tiled.TiledMapData"] = luxe_importers_tiled_TiledMapData;
luxe_importers_tiled_TiledMapData.__name__ = ["luxe","importers","tiled","TiledMapData"];
luxe_importers_tiled_TiledMapData.prototype = {
	toString: function() {
		return "TiledMap : layers(" + this.layers.length + ") tilesets(" + this.tilesets.length + ")" + " tilew,tileh(" + this.tile_width + "," + this.tile_height + ")";
	}
	,parseFromXML: function(xml) {
		var root = xml.firstElement();
		this.version = root.get("version");
		this.background_color = root.get("backgroundcolor");
		this.width = Std.parseInt(root.get("width"));
		this.height = Std.parseInt(root.get("height"));
		this.orientation = luxe_importers_tiled_TiledUtil.orientation_from_string(root.get("orientation"));
		this.tile_width = Std.parseInt(root.get("tilewidth"));
		this.tile_height = Std.parseInt(root.get("tileheight"));
		var $it0 = (function($this) {
			var $r;
			if(root.nodeType != Xml.Document && root.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + root.nodeType);
			$r = HxOverrides.iter(root.children);
			return $r;
		}(this));
		while( $it0.hasNext() ) {
			var child = $it0.next();
			if(luxe_importers_tiled_TiledUtil.valid_element(child)) {
				var _g;
				if(child.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + child.nodeType);
				_g = child.nodeName;
				switch(_g) {
				case "tileset":
					var tileset = new luxe_importers_tiled_TiledTileset();
					if(child.get("source") != null) haxe_Log.trace("tilesets from other sources are not available right now? " + child.get("source"),{ fileName : "TiledMapData.hx", lineNumber : 81, className : "luxe.importers.tiled.TiledMapData", methodName : "parseFromXML"}); else tileset.from_xml(child);
					tileset.first_id = Std.parseInt(child.get("firstgid"));
					this.tilesets.push(tileset);
					break;
				case "properties":
					var $it1 = (function($this) {
						var $r;
						if(child.nodeType != Xml.Document && child.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + child.nodeType);
						$r = HxOverrides.iter(child.children);
						return $r;
					}(this));
					while( $it1.hasNext() ) {
						var property = $it1.next();
						if(!luxe_importers_tiled_TiledUtil.valid_element(property)) continue;
						var key = property.get("name");
						var value = property.get("value");
						this.properties.set(key,value);
					}
					break;
				case "layer":
					var layer = new luxe_importers_tiled_TiledLayer(this);
					layer.from_xml(child);
					this.layers.push(layer);
					break;
				case "objectgroup":
					var object_group = new luxe_importers_tiled_TiledObjectGroup(this);
					object_group.from_xml(child);
					this.object_groups.push(object_group);
					break;
				case "imagelayer":
					var image_layer = new luxe_importers_tiled_TiledImageLayer(this);
					image_layer.from_xml(child);
					this.image_layers.push(image_layer);
					break;
				}
			}
		}
	}
	,parseFromJSON: function(json) {
		this.version = Reflect.field(json,"version");
		this.background_color = Reflect.field(json,"backgroundcolor");
		this.width = Std.parseInt(Reflect.field(json,"width"));
		this.height = Std.parseInt(Reflect.field(json,"height"));
		this.orientation = luxe_importers_tiled_TiledUtil.orientation_from_string(Reflect.field(json,"orientation"));
		this.tile_width = Std.parseInt(Reflect.field(json,"tilewidth"));
		this.tile_height = Std.parseInt(Reflect.field(json,"tileheight"));
		var fields = Reflect.fields(json);
		var _g = 0;
		while(_g < fields.length) {
			var nodename = fields[_g];
			++_g;
			var child = Reflect.field(json,nodename);
			switch(nodename) {
			case "tilesets":
				var list = child;
				var _g1 = 0;
				while(_g1 < list.length) {
					var _tileset_json = list[_g1];
					++_g1;
					var tileset = new luxe_importers_tiled_TiledTileset();
					tileset.from_json(_tileset_json);
					tileset.first_id = Std.parseInt(Reflect.field(_tileset_json,"firstgid"));
					this.tilesets.push(tileset);
				}
				break;
			case "properties":
				var child_fields = Reflect.fields(child);
				var _g11 = 0;
				while(_g11 < child_fields.length) {
					var property_name = child_fields[_g11];
					++_g11;
					var value = Reflect.field(child,property_name);
					this.properties.set(property_name,value);
				}
				break;
			case "layers":
				var list1 = child;
				var _g12 = 0;
				while(_g12 < list1.length) {
					var _layer_json = list1[_g12];
					++_g12;
					var type = Reflect.field(_layer_json,"type");
					switch(type) {
					case "tilelayer":
						var layer = new luxe_importers_tiled_TiledLayer(this);
						layer.from_json(_layer_json);
						this.layers.push(layer);
						break;
					case "objectgroup":
						var object_group = new luxe_importers_tiled_TiledObjectGroup(this);
						object_group.from_json(_layer_json);
						this.object_groups.push(object_group);
						break;
					case "imagelayer":
						var image_layer = new luxe_importers_tiled_TiledImageLayer(this);
						image_layer.from_json(_layer_json);
						this.image_layers.push(image_layer);
						break;
					}
				}
				break;
			}
		}
	}
	,__class__: luxe_importers_tiled_TiledMapData
};
var luxe_importers_tiled_TiledPropertyTile = function(_id,_properties) {
	this.id = _id;
	this.properties = _properties;
};
$hxClasses["luxe.importers.tiled.TiledPropertyTile"] = luxe_importers_tiled_TiledPropertyTile;
luxe_importers_tiled_TiledPropertyTile.__name__ = ["luxe","importers","tiled","TiledPropertyTile"];
luxe_importers_tiled_TiledPropertyTile.prototype = {
	__class__: luxe_importers_tiled_TiledPropertyTile
};
var luxe_importers_tiled_TiledObjectType = $hxClasses["luxe.importers.tiled.TiledObjectType"] = { __ename__ : ["luxe","importers","tiled","TiledObjectType"], __constructs__ : ["polyline","polygon","rectangle","ellipse"] };
luxe_importers_tiled_TiledObjectType.polyline = ["polyline",0];
luxe_importers_tiled_TiledObjectType.polyline.toString = $estr;
luxe_importers_tiled_TiledObjectType.polyline.__enum__ = luxe_importers_tiled_TiledObjectType;
luxe_importers_tiled_TiledObjectType.polygon = ["polygon",1];
luxe_importers_tiled_TiledObjectType.polygon.toString = $estr;
luxe_importers_tiled_TiledObjectType.polygon.__enum__ = luxe_importers_tiled_TiledObjectType;
luxe_importers_tiled_TiledObjectType.rectangle = ["rectangle",2];
luxe_importers_tiled_TiledObjectType.rectangle.toString = $estr;
luxe_importers_tiled_TiledObjectType.rectangle.__enum__ = luxe_importers_tiled_TiledObjectType;
luxe_importers_tiled_TiledObjectType.ellipse = ["ellipse",3];
luxe_importers_tiled_TiledObjectType.ellipse.toString = $estr;
luxe_importers_tiled_TiledObjectType.ellipse.__enum__ = luxe_importers_tiled_TiledObjectType;
var luxe_importers_tiled_TiledPolyObject = function(_origin,_points) {
	this.origin = _origin;
	this.points = _points;
};
$hxClasses["luxe.importers.tiled.TiledPolyObject"] = luxe_importers_tiled_TiledPolyObject;
luxe_importers_tiled_TiledPolyObject.__name__ = ["luxe","importers","tiled","TiledPolyObject"];
luxe_importers_tiled_TiledPolyObject.prototype = {
	__class__: luxe_importers_tiled_TiledPolyObject
};
var luxe_importers_tiled_TiledObject = function(_group) {
	this.visible = true;
	this.group = _group;
	this.properties = new haxe_ds_StringMap();
	this.pos = new phoenix_Vector();
};
$hxClasses["luxe.importers.tiled.TiledObject"] = luxe_importers_tiled_TiledObject;
luxe_importers_tiled_TiledObject.__name__ = ["luxe","importers","tiled","TiledObject"];
luxe_importers_tiled_TiledObject.prototype = {
	polyobject_from_xml: function(xml) {
		var points = [];
		var pointsAsString = xml.get("points");
		var pointsAsStringArray = pointsAsString.split(" ");
		var _g = 0;
		while(_g < pointsAsStringArray.length) {
			var point = pointsAsStringArray[_g];
			++_g;
			var coords = point.split(",");
			points.push(new phoenix_Vector(Std.parseInt(coords[0]),Std.parseInt(coords[1])));
		}
		return new luxe_importers_tiled_TiledPolyObject((function($this) {
			var $r;
			var _this = $this.pos;
			$r = new phoenix_Vector(_this.x,_this.y,_this.z,_this.w);
			return $r;
		}(this)),points);
	}
	,polyobject_from_json: function(json) {
		var points = [];
		var point_list = json;
		var _g = 0;
		while(_g < point_list.length) {
			var point = point_list[_g];
			++_g;
			var _x = Reflect.field(point,"x");
			var _y = Reflect.field(point,"y");
			points.push(new phoenix_Vector(_x,_y));
		}
		return new luxe_importers_tiled_TiledPolyObject((function($this) {
			var $r;
			var _this = $this.pos;
			$r = new phoenix_Vector(_this.x,_this.y,_this.z,_this.w);
			return $r;
		}(this)),points);
	}
	,from_xml: function(xml) {
		if(xml.get("gid") != null) this.gid = Std.parseInt(xml.get("gid")); else this.gid = 0;
		this.id = Std.parseInt(xml.get("id"));
		this.name = xml.get("name");
		this.type = xml.get("type");
		this.visible = xml.get("visible") != "0";
		this.pos.set_x(Std.parseInt(xml.get("x")));
		this.pos.set_y(Std.parseInt(xml.get("y")));
		this.width = Std.parseInt(xml.get("width"));
		this.height = Std.parseInt(xml.get("height"));
		if(xml.get("rotation") != null) this.rotation = Std.parseFloat(xml.get("rotation")); else this.rotation = 0;
		this.object_type = luxe_importers_tiled_TiledObjectType.rectangle;
		var $it0 = (function($this) {
			var $r;
			if(xml.nodeType != Xml.Document && xml.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + xml.nodeType);
			$r = HxOverrides.iter(xml.children);
			return $r;
		}(this));
		while( $it0.hasNext() ) {
			var child = $it0.next();
			if(luxe_importers_tiled_TiledUtil.valid_element(child)) {
				var _g;
				if(child.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + child.nodeType);
				_g = child.nodeName;
				switch(_g) {
				case "polygon":
					this.object_type = luxe_importers_tiled_TiledObjectType.polygon;
					this.polyobject = this.polyobject_from_xml(child);
					break;
				case "polyline":
					this.object_type = luxe_importers_tiled_TiledObjectType.polyline;
					this.polyobject = this.polyobject_from_xml(child);
					break;
				case "ellipse":
					this.object_type = luxe_importers_tiled_TiledObjectType.ellipse;
					var _mid_x = this.width / 2 | 0;
					var _mid_y = this.height / 2 | 0;
					var _g1 = this.pos;
					_g1.set_x(_g1.x + _mid_x);
					var _g11 = this.pos;
					_g11.set_y(_g11.y + _mid_y);
					break;
				case "properties":
					var $it1 = (function($this) {
						var $r;
						if(child.nodeType != Xml.Document && child.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + child.nodeType);
						$r = HxOverrides.iter(child.children);
						return $r;
					}(this));
					while( $it1.hasNext() ) {
						var property = $it1.next();
						if(luxe_importers_tiled_TiledUtil.valid_element(property)) {
							var key = property.get("name");
							var value = property.get("value");
							this.properties.set(key,value);
						}
					}
					break;
				}
			}
		}
	}
	,from_json: function(json) {
		var _gid = Reflect.field(json,"gid");
		if(_gid != null) this.gid = _gid; else this.gid = 0;
		this.id = Reflect.field(json,"id");
		this.name = Reflect.field(json,"name");
		this.type = Reflect.field(json,"type");
		this.visible = Reflect.field(json,"visible");
		this.pos.set_x(Reflect.field(json,"x"));
		this.pos.set_y(Reflect.field(json,"y"));
		this.width = Reflect.field(json,"width");
		this.height = Reflect.field(json,"height");
		var _rotation = Reflect.field(json,"rotation");
		if(_rotation != null) this.rotation = _rotation; else this.rotation = 0;
		this.object_type = luxe_importers_tiled_TiledObjectType.rectangle;
		var fields = Reflect.fields(json);
		var _g = 0;
		while(_g < fields.length) {
			var nodename = fields[_g];
			++_g;
			var child = Reflect.field(json,nodename);
			switch(nodename) {
			case "polygon":
				this.object_type = luxe_importers_tiled_TiledObjectType.polygon;
				this.polyobject = this.polyobject_from_json(child);
				break;
			case "polyline":
				this.object_type = luxe_importers_tiled_TiledObjectType.polyline;
				this.polyobject = this.polyobject_from_json(child);
				break;
			case "ellipse":
				this.object_type = luxe_importers_tiled_TiledObjectType.ellipse;
				var _mid_x = this.width / 2 | 0;
				var _mid_y = this.height / 2 | 0;
				var _g1 = this.pos;
				_g1.set_x(_g1.x + _mid_x);
				var _g11 = this.pos;
				_g11.set_y(_g11.y + _mid_y);
				break;
			case "properties":
				var child_fields = Reflect.fields(child);
				var _g12 = 0;
				while(_g12 < child_fields.length) {
					var property_name = child_fields[_g12];
					++_g12;
					var value = Reflect.field(child,property_name);
					this.properties.set(property_name,value);
				}
				break;
			}
		}
	}
	,__class__: luxe_importers_tiled_TiledObject
};
var luxe_importers_tiled_TiledObjectGroup = function(_map) {
	this.color = "";
	this.opacity = 1.0;
	this.visible = true;
	this.height = 0;
	this.width = 0;
	this.name = "";
	this.map = _map;
	this.properties = new haxe_ds_StringMap();
	this.objects = [];
};
$hxClasses["luxe.importers.tiled.TiledObjectGroup"] = luxe_importers_tiled_TiledObjectGroup;
luxe_importers_tiled_TiledObjectGroup.__name__ = ["luxe","importers","tiled","TiledObjectGroup"];
luxe_importers_tiled_TiledObjectGroup.prototype = {
	from_xml: function(xml) {
		this.name = xml.get("name");
		this.color = xml.get("color");
		this.visible = xml.get("visible") != "0";
		if(xml.get("opacity") == null) this.opacity = 1; else this.opacity = Std.parseFloat(xml.get("opacity"));
		this.width = Std.parseInt(xml.get("width"));
		this.height = Std.parseInt(xml.get("height"));
		var $it0 = (function($this) {
			var $r;
			if(xml.nodeType != Xml.Document && xml.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + xml.nodeType);
			$r = HxOverrides.iter(xml.children);
			return $r;
		}(this));
		while( $it0.hasNext() ) {
			var child = $it0.next();
			if(luxe_importers_tiled_TiledUtil.valid_element(child)) {
				if((function($this) {
					var $r;
					if(child.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + child.nodeType);
					$r = child.nodeName;
					return $r;
				}(this)) == "properties") {
					var $it1 = (function($this) {
						var $r;
						if(child.nodeType != Xml.Document && child.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + child.nodeType);
						$r = HxOverrides.iter(child.children);
						return $r;
					}(this));
					while( $it1.hasNext() ) {
						var property = $it1.next();
						if(luxe_importers_tiled_TiledUtil.valid_element(property)) {
							var key = property.get("name");
							var value = property.get("value");
							this.properties.set(key,value);
						}
					}
				}
				if((function($this) {
					var $r;
					if(child.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + child.nodeType);
					$r = child.nodeName;
					return $r;
				}(this)) == "object") {
					var object = new luxe_importers_tiled_TiledObject(this);
					object.from_xml(child);
					this.objects.push(object);
				}
			}
		}
	}
	,from_json: function(json) {
		this.name = Reflect.field(json,"name");
		this.color = Reflect.field(json,"color");
		this.visible = Reflect.field(json,"visible");
		this.opacity = Reflect.field(json,"opacity");
		this.width = Reflect.field(json,"width");
		this.height = Reflect.field(json,"height");
		var fields = Reflect.fields(json);
		var _g = 0;
		while(_g < fields.length) {
			var nodename = fields[_g];
			++_g;
			var child = Reflect.field(json,nodename);
			switch(nodename) {
			case "objects":
				var list = child;
				var _g1 = 0;
				while(_g1 < list.length) {
					var _object_json = list[_g1];
					++_g1;
					var object = new luxe_importers_tiled_TiledObject(this);
					object.from_json(_object_json);
					this.objects.push(object);
				}
				break;
			case "properties":
				var child_fields = Reflect.fields(child);
				var _g11 = 0;
				while(_g11 < child_fields.length) {
					var property_name = child_fields[_g11];
					++_g11;
					var value = Reflect.field(child,property_name);
					this.properties.set(property_name,value);
				}
				break;
			}
		}
	}
	,__class__: luxe_importers_tiled_TiledObjectGroup
};
var luxe_importers_tiled_TiledTile = function(_layer,_id) {
	this.layer = _layer;
	this.flip_horizontal = (_id & -2147483648) != 0;
	this.flip_vertical = (_id & 1073741824) != 0;
	this.flip_diagonal = (_id & 536870912) != 0;
	this.id = _id & 536870911;
};
$hxClasses["luxe.importers.tiled.TiledTile"] = luxe_importers_tiled_TiledTile;
luxe_importers_tiled_TiledTile.__name__ = ["luxe","importers","tiled","TiledTile"];
luxe_importers_tiled_TiledTile.prototype = {
	get_width: function() {
		return this.layer.map.tile_width;
	}
	,get_height: function() {
		return this.layer.map.tile_height;
	}
	,__class__: luxe_importers_tiled_TiledTile
	,__properties__: {get_height:"get_height",get_width:"get_width"}
};
var luxe_importers_tiled_TiledTileset = function() {
	this.spacing = 0;
	this.margin = 0;
	this.tile_height = 0;
	this.tile_width = 0;
	this.first_id = 1;
	this.texture_name = "";
	this.name = "";
	this.properties = new haxe_ds_StringMap();
	this.property_tiles = new haxe_ds_IntMap();
};
$hxClasses["luxe.importers.tiled.TiledTileset"] = luxe_importers_tiled_TiledTileset;
luxe_importers_tiled_TiledTileset.__name__ = ["luxe","importers","tiled","TiledTileset"];
luxe_importers_tiled_TiledTileset.prototype = {
	from_xml: function(xml) {
		var root = xml;
		this.name = root.get("name");
		this.tile_width = Std.parseInt(root.get("tilewidth"));
		this.tile_height = Std.parseInt(root.get("tileheight"));
		this.spacing = Std.parseInt(root.get("spacing"));
		this.margin = Std.parseInt(root.get("margin"));
		var $it0 = root.elements();
		while( $it0.hasNext() ) {
			var child = $it0.next();
			if(luxe_importers_tiled_TiledUtil.valid_element(child)) {
				var _g;
				if(child.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + child.nodeType);
				_g = child.nodeName;
				switch(_g) {
				case "properties":
					var $it1 = (function($this) {
						var $r;
						if(child.nodeType != Xml.Document && child.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + child.nodeType);
						$r = HxOverrides.iter(child.children);
						return $r;
					}(this));
					while( $it1.hasNext() ) {
						var property = $it1.next();
						if(luxe_importers_tiled_TiledUtil.valid_element(property)) {
							var key = property.get("name");
							var value = property.get("value");
							this.properties.set(key,value);
						}
					}
					break;
				case "image":
					this.texture_name = child.get("source");
					break;
				case "tile":
					var _tile_id = Std.parseInt(child.get("id"));
					var _tile_props = new haxe_ds_StringMap();
					var $it2 = (function($this) {
						var $r;
						if(child.nodeType != Xml.Document && child.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + child.nodeType);
						$r = HxOverrides.iter(child.children);
						return $r;
					}(this));
					while( $it2.hasNext() ) {
						var element = $it2.next();
						if(luxe_importers_tiled_TiledUtil.valid_element(element)) {
							if((function($this) {
								var $r;
								if(element.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + element.nodeType);
								$r = element.nodeName;
								return $r;
							}(this)) == "properties") {
								var $it3 = (function($this) {
									var $r;
									if(element.nodeType != Xml.Document && element.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + element.nodeType);
									$r = HxOverrides.iter(element.children);
									return $r;
								}(this));
								while( $it3.hasNext() ) {
									var property1 = $it3.next();
									if(!luxe_importers_tiled_TiledUtil.valid_element(property1)) continue;
									var key1 = property1.get("name");
									var value1 = property1.get("value");
									if(__map_reserved[key1] != null) _tile_props.setReserved(key1,value1); else _tile_props.h[key1] = value1;
								}
							}
						}
					}
					var value2 = new luxe_importers_tiled_TiledPropertyTile(_tile_id,_tile_props);
					this.property_tiles.h[_tile_id] = value2;
					break;
				}
			}
		}
	}
	,from_json: function(json) {
		this.name = Reflect.field(json,"name");
		this.tile_width = Reflect.field(json,"tilewidth");
		this.tile_height = Reflect.field(json,"tileheight");
		this.spacing = Reflect.field(json,"spacing");
		this.margin = Reflect.field(json,"margin");
		var fields = Reflect.fields(json);
		var _g = 0;
		while(_g < fields.length) {
			var nodename = fields[_g];
			++_g;
			var child = Reflect.field(json,nodename);
			switch(nodename) {
			case "properties":
				var child_fields = Reflect.fields(child);
				var _g1 = 0;
				while(_g1 < child_fields.length) {
					var property_name = child_fields[_g1];
					++_g1;
					var value = Reflect.field(child,property_name);
					this.properties.set(property_name,value);
				}
				break;
			case "image":
				this.texture_name = child;
				break;
			case "tile":
				var _tile_id = Reflect.field(child,"id");
				var _tile_props = new haxe_ds_StringMap();
				var tile_fields = Reflect.fields(child);
				var _g11 = 0;
				while(_g11 < tile_fields.length) {
					var tile_node = tile_fields[_g11];
					++_g11;
					if(tile_node == "properties") {
						var tile_item = Reflect.field(child,tile_node);
						var child_fields1 = Reflect.fields(tile_item);
						var _g2 = 0;
						while(_g2 < child_fields1.length) {
							var property_name1 = child_fields1[_g2];
							++_g2;
							var value1 = Reflect.field(tile_item,property_name1);
							this.properties.set(property_name1,value1);
						}
					}
				}
				var value2 = new luxe_importers_tiled_TiledPropertyTile(_tile_id,_tile_props);
				this.property_tiles.h[_tile_id] = value2;
				break;
			}
		}
	}
	,__class__: luxe_importers_tiled_TiledTileset
};
var luxe_importers_tiled_TiledUtil = function() { };
$hxClasses["luxe.importers.tiled.TiledUtil"] = luxe_importers_tiled_TiledUtil;
luxe_importers_tiled_TiledUtil.__name__ = ["luxe","importers","tiled","TiledUtil"];
luxe_importers_tiled_TiledUtil.valid_element = function(element) {
	return element.nodeType == 0;
};
luxe_importers_tiled_TiledUtil.orientation_from_string = function(_orientation_string) {
	switch(_orientation_string) {
	case "orthogonal":
		return luxe_tilemaps_TilemapOrientation.ortho;
	case "isometric":
		return luxe_tilemaps_TilemapOrientation.isometric;
	default:
		return luxe_tilemaps_TilemapOrientation.none;
	}
};
var luxe_macros_BuildVersion = function() { };
$hxClasses["luxe.macros.BuildVersion"] = luxe_macros_BuildVersion;
luxe_macros_BuildVersion.__name__ = ["luxe","macros","BuildVersion"];
luxe_macros_BuildVersion.try_git = function(root) {
	return "";
};
var luxe_options__$DrawOptions_DrawOptions = function() { };
$hxClasses["luxe.options._DrawOptions.DrawOptions"] = luxe_options__$DrawOptions_DrawOptions;
luxe_options__$DrawOptions_DrawOptions.__name__ = ["luxe","options","_DrawOptions","DrawOptions"];
var luxe_resource_Resource = function(_options) {
	this.ref = 0;
	if(_options == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options was null" + ""));
	if(_options.id == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options.id was null" + ""));
	if(_options.system == null) _options.system = Luxe.resources;
	_options.system;
	if(_options.resource_type == null) _options.resource_type = 0;
	_options.resource_type;
	this.id = _options.id;
	this.system = _options.system;
	this.resource_type = _options.resource_type;
	this.set_state(0);
	this.set_ref(1);
};
$hxClasses["luxe.resource.Resource"] = luxe_resource_Resource;
luxe_resource_Resource.__name__ = ["luxe","resource","Resource"];
luxe_resource_Resource.prototype = {
	destroy: function(_force) {
		if(_force == null) _force = false;
		if(!(this.state != 6)) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("state != ResourceState.destroyed" + ""));
		if(!_force) {
			if(!(this.ref > 0)) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("ref > 0" + ""));
			var _g = this;
			var _g1 = _g.ref;
			_g.set_ref(_g1 - 1);
			_g1;
			if(!(this.ref >= 0)) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("ref >= 0" + ""));
		}
		if(this.ref == 0 || _force) {
			this.clear();
			this.set_state(6);
			this.system.remove(this);
			this.system.emit(8,this);
		}
	}
	,invalidate: function() {
		if(!(this.state != 6)) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("state != ResourceState.destroyed" + ""));
		this.clear();
		this.set_state(5);
		this.system.emit(6,this);
	}
	,reload: function() {
		return null;
	}
	,memory_use: function() {
		return 0;
	}
	,set_ref: function(_ref) {
		var pre = this.ref;
		this.ref = _ref;
		if(this.ref > pre) this.system.emit(9,this); else if(this.ref < pre) this.system.emit(10,this);
		return this.ref;
	}
	,set_state: function(_state) {
		this.state = _state;
		var _g = this.state;
		switch(_g) {
		case 2:
			this.system.emit(3,this);
			break;
		case 3:
			this.system.emit(4,this);
			break;
		case 4:
			this.system.emit(5,this);
			break;
		default:
		}
		return this.state;
	}
	,clear: function() {
	}
	,state_string: function() {
		var _g = this.state;
		switch(_g) {
		case 1:
			return "listed";
		case 2:
			return "loading";
		case 3:
			return "loaded";
		case 4:
			return "failed";
		case 5:
			return "invalidated";
		case 6:
			return "destroyed";
		default:
			return "unknown";
		}
	}
	,type_string: function() {
		var _g = this.resource_type;
		switch(_g) {
		case 3:
			return "bytes";
		case 1:
			return "text";
		case 2:
			return "json";
		case 4:
			return "texture";
		case 7:
			return "shader";
		case 6:
			return "font";
		default:
			return "" + this.resource_type;
		}
	}
	,toString: function() {
		return "Resource(`" + this.id + "`, " + this.type_string() + ", " + this.state_string() + ")";
	}
	,__class__: luxe_resource_Resource
	,__properties__: {set_ref:"set_ref",set_state:"set_state"}
};
var luxe_resource_BytesResource = function(_options) {
	if(_options == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options was null" + ""));
	_options.resource_type = 3;
	luxe_resource_Resource.call(this,_options);
	this.asset = _options.asset;
};
$hxClasses["luxe.resource.BytesResource"] = luxe_resource_BytesResource;
luxe_resource_BytesResource.__name__ = ["luxe","resource","BytesResource"];
luxe_resource_BytesResource.__super__ = luxe_resource_Resource;
luxe_resource_BytesResource.prototype = $extend(luxe_resource_Resource.prototype,{
	reload: function() {
		var _g = this;
		if(!(this.state != 6)) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("state != ResourceState.destroyed" + ""));
		this.clear();
		return new snow_api_Promise(function(resolve,reject) {
			_g.set_state(2);
			var get = snow_systems_assets_AssetBytes.load(Luxe.core.app.assets,_g.id);
			get.then(function(_asset) {
				_g.asset = _asset;
				_g.set_state(3);
				resolve(_g);
			});
			get.error(function(_error) {
				_g.set_state(4);
				reject(_error);
			});
		});
	}
	,clear: function() {
		if(this.asset != null) {
			this.asset.destroy();
			this.asset = null;
		}
	}
	,memory_use: function() {
		if(this.asset == null) return 0;
		return this.asset.bytes.byteLength;
	}
	,__class__: luxe_resource_BytesResource
});
var luxe_resource_TextResource = function(_options) {
	if(_options == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options was null" + ""));
	_options.resource_type = 1;
	luxe_resource_Resource.call(this,_options);
	this.asset = _options.asset;
};
$hxClasses["luxe.resource.TextResource"] = luxe_resource_TextResource;
luxe_resource_TextResource.__name__ = ["luxe","resource","TextResource"];
luxe_resource_TextResource.__super__ = luxe_resource_Resource;
luxe_resource_TextResource.prototype = $extend(luxe_resource_Resource.prototype,{
	reload: function() {
		var _g = this;
		if(!(this.state != 6)) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("state != ResourceState.destroyed" + ""));
		this.clear();
		return new snow_api_Promise(function(resolve,reject) {
			_g.set_state(2);
			var get = snow_systems_assets_AssetText.load(Luxe.core.app.assets,_g.id);
			get.then(function(_asset) {
				_g.asset = _asset;
				_g.set_state(3);
				resolve(_g);
			});
			get.error(function(_error) {
				_g.set_state(4);
				reject(_error);
			});
		});
	}
	,clear: function() {
		if(this.asset != null) {
			this.asset.destroy();
			this.asset = null;
		}
	}
	,memory_use: function() {
		if(this.asset == null) return 0;
		return this.asset.text.length;
	}
	,__class__: luxe_resource_TextResource
});
var luxe_resource_JSONResource = function(_options) {
	if(_options == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options was null" + ""));
	_options.resource_type = 2;
	luxe_resource_Resource.call(this,_options);
	this.asset = _options.asset;
};
$hxClasses["luxe.resource.JSONResource"] = luxe_resource_JSONResource;
luxe_resource_JSONResource.__name__ = ["luxe","resource","JSONResource"];
luxe_resource_JSONResource.__super__ = luxe_resource_Resource;
luxe_resource_JSONResource.prototype = $extend(luxe_resource_Resource.prototype,{
	reload: function() {
		var _g = this;
		if(!(this.state != 6)) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("state != ResourceState.destroyed" + ""));
		this.clear();
		return new snow_api_Promise(function(resolve,reject) {
			_g.set_state(2);
			var get = snow_systems_assets_AssetJSON.load(Luxe.core.app.assets,_g.id);
			get.then(function(_asset) {
				_g.asset = _asset;
				_g.set_state(3);
				resolve(_g);
			});
			get.error(function(_error) {
				_g.set_state(4);
				reject(_error);
			});
		});
	}
	,clear: function() {
		if(this.asset != null) {
			this.asset.destroy();
			this.asset = null;
		}
	}
	,__class__: luxe_resource_JSONResource
});
var luxe_resource_AudioResource = function(_options) {
	this.is_stream = false;
	if(_options == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options was null" + ""));
	_options.resource_type = 8;
	luxe_resource_Resource.call(this,_options);
	this.asset = _options.asset;
	if(_options.is_stream == null) _options.is_stream = false;
	this.is_stream = _options.is_stream;
	if(this.asset != null) this.source = new snow_systems_audio_AudioSource(Luxe.core.app,this.asset.audio);
};
$hxClasses["luxe.resource.AudioResource"] = luxe_resource_AudioResource;
luxe_resource_AudioResource.__name__ = ["luxe","resource","AudioResource"];
luxe_resource_AudioResource.__super__ = luxe_resource_Resource;
luxe_resource_AudioResource.prototype = $extend(luxe_resource_Resource.prototype,{
	reload: function() {
		var _g = this;
		if(!(this.state != 6)) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("state != ResourceState.destroyed" + ""));
		this.clear();
		return new snow_api_Promise(function(resolve,reject) {
			_g.set_state(2);
			var get = snow_systems_assets_AssetAudio.load(Luxe.core.app.assets,_g.id,_g.is_stream);
			get.then(function(_asset) {
				_g.asset = _asset;
				_g.source = new snow_systems_audio_AudioSource(Luxe.core.app,_g.asset.audio);
				_g.set_state(3);
				resolve(_g);
			});
			get.error(function(_error) {
				_g.set_state(4);
				reject(_error);
			});
		});
	}
	,clear: function() {
		if(this.asset != null) {
			this.asset.destroy();
			this.asset = null;
		}
		if(this.source != null) {
			this.source.destroy();
			this.source = null;
		}
	}
	,__class__: luxe_resource_AudioResource
});
var luxe_structural_BalancedBST = function(compare_function) {
	this.compare = compare_function;
};
$hxClasses["luxe.structural.BalancedBST"] = luxe_structural_BalancedBST;
luxe_structural_BalancedBST.__name__ = ["luxe","structural","BalancedBST"];
luxe_structural_BalancedBST.prototype = {
	size: function() {
		return this.node_count(this.root);
	}
	,depth: function() {
		return this.node_depth(this.root);
	}
	,insert: function(_key,_value) {
		this.root = this.node_insert(this.root,_key,_value);
		this.root.color = false;
	}
	,contains: function(_key) {
		return this.find(_key) != null;
	}
	,find: function(_key) {
		return this.node_find(this.root,_key);
	}
	,rank: function(_key) {
		return this.node_rank(_key,this.root);
	}
	,select: function(_rank) {
		var _node = this.node_select(this.root,_rank);
		if(_node != null) return _node.key; else return null;
	}
	,smallest: function() {
		var _node = this.node_smallest(this.root);
		if(_node != null) return _node.key; else return null;
	}
	,largest: function() {
		var _node = this.node_largest(this.root);
		if(_node != null) return _node.key; else return null;
	}
	,remove: function(_key) {
		if(!this.is_red(this.root.left) && !this.is_red(this.root.right)) this.root.color = true;
		if(!this.contains(_key)) return false;
		this.root = this.node_remove(this.root,_key);
		if(this.root != null) this.root.color = false;
		return true;
	}
	,remove_smallest: function() {
		if(!this.is_red(this.root.left) && !this.is_red(this.root.right)) this.root.color = true;
		this.root = this.node_remove_smallest(this.root);
		if(this.root != null) this.root.color = false;
		return true;
	}
	,remove_largest: function() {
		if(!this.is_red(this.root.left) && !this.is_red(this.root.right)) this.root.color = true;
		this.root = this.node_remove_largest(this.root);
		if(this.root != null) this.root.color = false;
		return true;
	}
	,floor: function(_key) {
		var _node = this.node_floor(this.root,_key);
		if(_node == null) return null;
		return _node.key;
	}
	,ceil: function(_key) {
		var _node = this.node_ceil(this.root,_key);
		if(_node == null) return null;
		return _node.key;
	}
	,toArray: function() {
		var a = [];
		this.traverse_node(this.root,luxe_structural_BalancedBSTTraverseMethod.order_retain,function(_node) {
			a.push(_node.value);
		});
		return a;
	}
	,keys: function() {
		var a = [];
		this.traverse_node(this.root,luxe_structural_BalancedBSTTraverseMethod.order_retain,function(_node) {
			a.push(_node.key);
		});
		return a;
	}
	,iterator: function() {
		return new luxe_structural_BalancedBSTIterator(this);
	}
	,traverse_node: function(_node,_method,_on_traverse) {
		if(_node != null) switch(_method[1]) {
		case 0:
			_on_traverse(_node);
			this.traverse_node(_node.left,_method,_on_traverse);
			this.traverse_node(_node.right,_method,_on_traverse);
			break;
		case 1:
			this.traverse_node(_node.left,_method,_on_traverse);
			_on_traverse(_node);
			this.traverse_node(_node.right,_method,_on_traverse);
			break;
		case 2:
			this.traverse_node(_node.left,_method,_on_traverse);
			this.traverse_node(_node.right,_method,_on_traverse);
			_on_traverse(_node);
			break;
		}
	}
	,get_empty: function() {
		return this.root == null;
	}
	,node_depth: function(_node) {
		if(_node == null) return 0;
		var _n_depth = Math.max(this.node_depth(_node.left),this.node_depth(_node.right));
		return 1 + (_n_depth | 0);
	}
	,node_count: function(_node) {
		if(_node == null) return 0; else return _node.nodecount;
	}
	,node_insert: function(_node,_key,_value) {
		if(_node == null) return new luxe_structural_BalancedBSTNode(_key,_value,1,true);
		var comparison = this.compare(_key,_node.key);
		if(comparison < 0) _node.left = this.node_insert(_node.left,_key,_value); else if(comparison > 0) _node.right = this.node_insert(_node.right,_key,_value); else _node.value = _value;
		if(this.is_red(_node.right) && !this.is_red(_node.left)) _node = this.rotate_left(_node);
		if(this.is_red(_node.left) && this.is_red(_node.left.left)) _node = this.rotate_right(_node);
		if(this.is_red(_node.left) && this.is_red(_node.right)) this.swap_color(_node);
		_node.nodecount = this.node_count(_node.left) + this.node_count(_node.right) + 1;
		_node;
		return _node;
	}
	,node_update_count: function(_node) {
		_node.nodecount = this.node_count(_node.left) + this.node_count(_node.right) + 1;
		return _node;
	}
	,node_find: function(_node,_key) {
		if(_node == null) return null;
		var comparison = this.compare(_key,_node.key);
		if(comparison < 0) return this.node_find(_node.left,_key); else if(comparison > 0) return this.node_find(_node.right,_key); else return _node.value;
	}
	,node_rank: function(_key,_node) {
		if(_node == null) return 0;
		var comparison = this.compare(_key,_node.key);
		if(comparison < 0) return this.node_rank(_key,_node.left); else if(comparison > 0) return 1 + this.node_count(_node.left) + this.node_rank(_key,_node.right); else return this.node_count(_node.left);
	}
	,node_select: function(_node,_rank) {
		if(_node == null) return null;
		var _r = this.node_count(_node.left);
		if(_r > _rank) return this.node_select(_node.left,_rank); else if(_r < _rank) return this.node_select(_node.right,_rank - _r - 1); else return _node;
	}
	,node_smallest: function(_node) {
		if(_node.left == null) return _node;
		return this.node_smallest(_node.left);
	}
	,node_largest: function(_node) {
		if(_node.right == null) return _node; else return this.node_largest(_node.right);
	}
	,node_floor: function(_node,_key) {
		if(_node == null) return null;
		var comparison = this.compare(_key,_node.key);
		if(comparison == 0) return _node; else if(comparison < 0) return this.node_floor(_node.left,_key);
		var _n = this.node_floor(_node.right,_key);
		if(_n != null) return _n; else return _node;
	}
	,node_ceil: function(_node,_key) {
		if(_node == null) return null;
		var comparison = this.compare(_key,_node.key);
		if(comparison == 0) return _node; else if(comparison < 0) {
			var _n = this.node_ceil(_node.left,_key);
			if(_n != null) return _n; else return _node;
		}
		return this.node_ceil(_node.right,_key);
	}
	,node_remove_smallest: function(_node) {
		if(_node.left == null) return null;
		if(!this.is_red(_node.left) && !this.is_red(_node.left.left)) _node = this.move_red_left(_node);
		_node.left = this.node_remove_smallest(_node.left);
		_node.nodecount = this.node_count(_node.left) + this.node_count(_node.right) + 1;
		_node;
		return this.balance(_node);
	}
	,node_remove_largest: function(_node) {
		if(this.is_red(_node.left)) _node = this.rotate_right(_node);
		if(_node.right == null) return null;
		if(!this.is_red(_node.right) && !this.is_red(_node.right.left)) _node = this.move_red_right(_node);
		_node.right = this.node_remove_largest(_node.right);
		_node.nodecount = this.node_count(_node.left) + this.node_count(_node.right) + 1;
		_node;
		return this.balance(_node);
	}
	,node_remove: function(_node,_key) {
		var comparison = this.compare(_key,_node.key);
		if(comparison < 0) {
			if(!this.is_red(_node.left) && !this.is_red(_node.left.left)) _node = this.move_red_left(_node);
			_node.left = this.node_remove(_node.left,_key);
		} else {
			if(this.is_red(_node.left)) _node = this.rotate_right(_node);
			var comparison1 = this.compare(_key,_node.key);
			if(comparison1 == 0 && _node.right == null) return null;
			if(!this.is_red(_node.right) && !this.is_red(_node.right.left)) _node = this.move_red_right(_node);
			var comparison2 = this.compare(_key,_node.key);
			if(comparison2 == 0) {
				var _n = this.node_smallest(_node.right);
				_node.key = _n.key;
				_node.value = _n.value;
				_node.right = this.node_remove_smallest(_node.right);
			} else _node.right = this.node_remove(_node.right,_key);
		}
		return this.balance(_node);
	}
	,is_red: function(_node) {
		if(_node == null) return false;
		return _node.color == true;
	}
	,rotate_left: function(_node) {
		var _n = _node.right;
		_n.color = _node.color;
		_node.color = true;
		_node.right = _n.left;
		_n.left = _node;
		_n.nodecount = _node.nodecount;
		_node.nodecount = this.node_count(_node.left) + this.node_count(_node.right) + 1;
		_node;
		return _n;
	}
	,rotate_right: function(_node) {
		var _n = _node.left;
		_n.color = _node.color;
		_node.color = true;
		_node.left = _n.right;
		_n.right = _node;
		_n.nodecount = _node.nodecount;
		_node.nodecount = this.node_count(_node.left) + this.node_count(_node.right) + 1;
		_node;
		return _n;
	}
	,swap_color: function(_node) {
		_node.color = !_node.color;
		_node.left.color = !_node.left.color;
		_node.right.color = !_node.right.color;
	}
	,move_red_left: function(_node) {
		this.swap_color(_node);
		if(this.is_red(_node.right.left)) {
			_node.right = this.rotate_right(_node.right);
			_node = this.rotate_left(_node);
		}
		return _node;
	}
	,move_red_right: function(_node) {
		this.swap_color(_node);
		if(this.is_red(_node.left.left)) _node = this.rotate_right(_node);
		return _node;
	}
	,balance: function(_node) {
		if(this.is_red(_node.right)) _node = this.rotate_left(_node);
		if(this.is_red(_node.left) && this.is_red(_node.left.left)) _node = this.rotate_right(_node);
		if(this.is_red(_node.left) && this.is_red(_node.right)) this.swap_color(_node);
		_node.nodecount = this.node_count(_node.left) + this.node_count(_node.right) + 1;
		_node;
		return _node;
	}
	,__class__: luxe_structural_BalancedBST
	,__properties__: {get_empty:"get_empty"}
};
var luxe_structural_BalancedBSTIterator = function(_tree) {
	if(_tree == null) return;
	if(_tree.root == null) return;
	this.tree = _tree;
	this.current = this._min(this.tree.root);
	this.rightest = this._max(this.tree.root);
};
$hxClasses["luxe.structural.BalancedBSTIterator"] = luxe_structural_BalancedBSTIterator;
luxe_structural_BalancedBSTIterator.__name__ = ["luxe","structural","BalancedBSTIterator"];
luxe_structural_BalancedBSTIterator.prototype = {
	hasNext: function() {
		if(this.current == null || this.rightest == null) return false;
		return this.tree.compare(this.current.key,this.rightest.key) <= 0;
	}
	,next: function() {
		var _temp = this.current;
		this.current = this.update_next();
		return _temp.value;
	}
	,update_next: function() {
		if(!(this.current == null || this.rightest == null?false:this.tree.compare(this.current.key,this.rightest.key) <= 0)) return null;
		if(this.current.right != null) return this._min(this.current.right);
		var _next = null;
		var _temp = this.tree.root;
		while(_temp != null) {
			var _comp = this.tree.compare(this.current.key,_temp.key);
			if(_comp < 0) {
				_next = _temp;
				_temp = _temp.left;
			} else if(_comp > 0) _temp = _temp.right; else {
				this.current = _next;
				break;
			}
		}
		return _next;
	}
	,_min: function(_node) {
		while(_node.left != null) _node = _node.left;
		return _node;
	}
	,_max: function(_node) {
		while(_node.right != null) _node = _node.right;
		return _node;
	}
	,__class__: luxe_structural_BalancedBSTIterator
};
var luxe_structural__$BalancedBST_NodeColor = function() { };
$hxClasses["luxe.structural._BalancedBST.NodeColor"] = luxe_structural__$BalancedBST_NodeColor;
luxe_structural__$BalancedBST_NodeColor.__name__ = ["luxe","structural","_BalancedBST","NodeColor"];
var luxe_structural_BalancedBSTNode = function(_key,_value,_node_count,_color) {
	this.left = null;
	this.right = null;
	this.key = _key;
	this.value = _value;
	this.nodecount = _node_count;
	this.color = _color;
};
$hxClasses["luxe.structural.BalancedBSTNode"] = luxe_structural_BalancedBSTNode;
luxe_structural_BalancedBSTNode.__name__ = ["luxe","structural","BalancedBSTNode"];
luxe_structural_BalancedBSTNode.prototype = {
	__class__: luxe_structural_BalancedBSTNode
};
var luxe_structural_BalancedBSTTraverseMethod = $hxClasses["luxe.structural.BalancedBSTTraverseMethod"] = { __ename__ : ["luxe","structural","BalancedBSTTraverseMethod"], __constructs__ : ["order_pre","order_retain","order_post"] };
luxe_structural_BalancedBSTTraverseMethod.order_pre = ["order_pre",0];
luxe_structural_BalancedBSTTraverseMethod.order_pre.toString = $estr;
luxe_structural_BalancedBSTTraverseMethod.order_pre.__enum__ = luxe_structural_BalancedBSTTraverseMethod;
luxe_structural_BalancedBSTTraverseMethod.order_retain = ["order_retain",1];
luxe_structural_BalancedBSTTraverseMethod.order_retain.toString = $estr;
luxe_structural_BalancedBSTTraverseMethod.order_retain.__enum__ = luxe_structural_BalancedBSTTraverseMethod;
luxe_structural_BalancedBSTTraverseMethod.order_post = ["order_post",2];
luxe_structural_BalancedBSTTraverseMethod.order_post.toString = $estr;
luxe_structural_BalancedBSTTraverseMethod.order_post.__enum__ = luxe_structural_BalancedBSTTraverseMethod;
var luxe_structural_BalancedBSTIterator_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry = function(_tree) {
	if(_tree == null) return;
	if(_tree.root == null) return;
	this.tree = _tree;
	this.current = this._min(this.tree.root);
	this.rightest = this._max(this.tree.root);
};
$hxClasses["luxe.structural.BalancedBSTIterator_phoenix_geometry_GeometryKey_phoenix_geometry_Geometry"] = luxe_structural_BalancedBSTIterator_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry;
luxe_structural_BalancedBSTIterator_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry.__name__ = ["luxe","structural","BalancedBSTIterator_phoenix_geometry_GeometryKey_phoenix_geometry_Geometry"];
luxe_structural_BalancedBSTIterator_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry.prototype = {
	hasNext: function() {
		if(this.current == null || this.rightest == null) return false;
		return this.tree.compare(this.current.key,this.rightest.key) <= 0;
	}
	,next: function() {
		var _temp = this.current;
		this.current = this.update_next();
		return _temp.value;
	}
	,update_next: function() {
		if(!(this.current == null || this.rightest == null?false:this.tree.compare(this.current.key,this.rightest.key) <= 0)) return null;
		if(this.current.right != null) return this._min(this.current.right);
		var _next = null;
		var _temp = this.tree.root;
		while(_temp != null) {
			var _comp = this.tree.compare(this.current.key,_temp.key);
			if(_comp < 0) {
				_next = _temp;
				_temp = _temp.left;
			} else if(_comp > 0) _temp = _temp.right; else {
				this.current = _next;
				break;
			}
		}
		return _next;
	}
	,_min: function(_node) {
		while(_node.left != null) _node = _node.left;
		return _node;
	}
	,_max: function(_node) {
		while(_node.right != null) _node = _node.right;
		return _node;
	}
	,__class__: luxe_structural_BalancedBSTIterator_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry
};
var luxe_structural_BalancedBSTNode_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry = function(_key,_value,_node_count,_color) {
	this.left = null;
	this.right = null;
	this.key = _key;
	this.value = _value;
	this.nodecount = _node_count;
	this.color = _color;
};
$hxClasses["luxe.structural.BalancedBSTNode_phoenix_geometry_GeometryKey_phoenix_geometry_Geometry"] = luxe_structural_BalancedBSTNode_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry;
luxe_structural_BalancedBSTNode_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry.__name__ = ["luxe","structural","BalancedBSTNode_phoenix_geometry_GeometryKey_phoenix_geometry_Geometry"];
luxe_structural_BalancedBSTNode_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry.prototype = {
	__class__: luxe_structural_BalancedBSTNode_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry
};
var luxe_structural_BalancedBST_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry = function(compare_function) {
	this.compare = compare_function;
};
$hxClasses["luxe.structural.BalancedBST_phoenix_geometry_GeometryKey_phoenix_geometry_Geometry"] = luxe_structural_BalancedBST_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry;
luxe_structural_BalancedBST_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry.__name__ = ["luxe","structural","BalancedBST_phoenix_geometry_GeometryKey_phoenix_geometry_Geometry"];
luxe_structural_BalancedBST_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry.prototype = {
	size: function() {
		return this.node_count(this.root);
	}
	,depth: function() {
		return this.node_depth(this.root);
	}
	,insert: function(_key,_value) {
		this.root = this.node_insert(this.root,_key,_value);
		this.root.color = false;
	}
	,contains: function(_key) {
		return this.find(_key) != null;
	}
	,find: function(_key) {
		return this.node_find(this.root,_key);
	}
	,rank: function(_key) {
		return this.node_rank(_key,this.root);
	}
	,select: function(_rank) {
		var _node = this.node_select(this.root,_rank);
		if(_node != null) return _node.key; else return null;
	}
	,smallest: function() {
		var _node = this.node_smallest(this.root);
		if(_node != null) return _node.key; else return null;
	}
	,largest: function() {
		var _node = this.node_largest(this.root);
		if(_node != null) return _node.key; else return null;
	}
	,remove: function(_key) {
		if(!this.is_red(this.root.left) && !this.is_red(this.root.right)) this.root.color = true;
		if(!this.contains(_key)) return false;
		this.root = this.node_remove(this.root,_key);
		if(this.root != null) this.root.color = false;
		return true;
	}
	,remove_smallest: function() {
		if(!this.is_red(this.root.left) && !this.is_red(this.root.right)) this.root.color = true;
		this.root = this.node_remove_smallest(this.root);
		if(this.root != null) this.root.color = false;
		return true;
	}
	,remove_largest: function() {
		if(!this.is_red(this.root.left) && !this.is_red(this.root.right)) this.root.color = true;
		this.root = this.node_remove_largest(this.root);
		if(this.root != null) this.root.color = false;
		return true;
	}
	,floor: function(_key) {
		var _node = this.node_floor(this.root,_key);
		if(_node == null) return null;
		return _node.key;
	}
	,ceil: function(_key) {
		var _node = this.node_ceil(this.root,_key);
		if(_node == null) return null;
		return _node.key;
	}
	,toArray: function() {
		var a = [];
		this.traverse_node(this.root,luxe_structural_BalancedBSTTraverseMethod.order_retain,function(_node) {
			a.push(_node.value);
		});
		return a;
	}
	,keys: function() {
		var a = [];
		this.traverse_node(this.root,luxe_structural_BalancedBSTTraverseMethod.order_retain,function(_node) {
			a.push(_node.key);
		});
		return a;
	}
	,iterator: function() {
		return new luxe_structural_BalancedBSTIterator_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry(this);
	}
	,traverse_node: function(_node,_method,_on_traverse) {
		if(_node != null) switch(_method[1]) {
		case 0:
			_on_traverse(_node);
			this.traverse_node(_node.left,_method,_on_traverse);
			this.traverse_node(_node.right,_method,_on_traverse);
			break;
		case 1:
			this.traverse_node(_node.left,_method,_on_traverse);
			_on_traverse(_node);
			this.traverse_node(_node.right,_method,_on_traverse);
			break;
		case 2:
			this.traverse_node(_node.left,_method,_on_traverse);
			this.traverse_node(_node.right,_method,_on_traverse);
			_on_traverse(_node);
			break;
		}
	}
	,get_empty: function() {
		return this.root == null;
	}
	,node_depth: function(_node) {
		if(_node == null) return 0;
		var _n_depth = Math.max(this.node_depth(_node.left),this.node_depth(_node.right));
		return 1 + (_n_depth | 0);
	}
	,node_count: function(_node) {
		if(_node == null) return 0; else return _node.nodecount;
	}
	,node_insert: function(_node,_key,_value) {
		if(_node == null) return new luxe_structural_BalancedBSTNode_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry(_key,_value,1,true);
		var comparison = this.compare(_key,_node.key);
		if(comparison < 0) _node.left = this.node_insert(_node.left,_key,_value); else if(comparison > 0) _node.right = this.node_insert(_node.right,_key,_value); else _node.value = _value;
		if(this.is_red(_node.right) && !this.is_red(_node.left)) _node = this.rotate_left(_node);
		if(this.is_red(_node.left) && this.is_red(_node.left.left)) _node = this.rotate_right(_node);
		if(this.is_red(_node.left) && this.is_red(_node.right)) this.swap_color(_node);
		_node.nodecount = this.node_count(_node.left) + this.node_count(_node.right) + 1;
		_node;
		return _node;
	}
	,node_update_count: function(_node) {
		_node.nodecount = this.node_count(_node.left) + this.node_count(_node.right) + 1;
		return _node;
	}
	,node_find: function(_node,_key) {
		if(_node == null) return null;
		var comparison = this.compare(_key,_node.key);
		if(comparison < 0) return this.node_find(_node.left,_key); else if(comparison > 0) return this.node_find(_node.right,_key); else return _node.value;
	}
	,node_rank: function(_key,_node) {
		if(_node == null) return 0;
		var comparison = this.compare(_key,_node.key);
		if(comparison < 0) return this.node_rank(_key,_node.left); else if(comparison > 0) return 1 + this.node_count(_node.left) + this.node_rank(_key,_node.right); else return this.node_count(_node.left);
	}
	,node_select: function(_node,_rank) {
		if(_node == null) return null;
		var _r = this.node_count(_node.left);
		if(_r > _rank) return this.node_select(_node.left,_rank); else if(_r < _rank) return this.node_select(_node.right,_rank - _r - 1); else return _node;
	}
	,node_smallest: function(_node) {
		if(_node.left == null) return _node;
		return this.node_smallest(_node.left);
	}
	,node_largest: function(_node) {
		if(_node.right == null) return _node; else return this.node_largest(_node.right);
	}
	,node_floor: function(_node,_key) {
		if(_node == null) return null;
		var comparison = this.compare(_key,_node.key);
		if(comparison == 0) return _node; else if(comparison < 0) return this.node_floor(_node.left,_key);
		var _n = this.node_floor(_node.right,_key);
		if(_n != null) return _n; else return _node;
	}
	,node_ceil: function(_node,_key) {
		if(_node == null) return null;
		var comparison = this.compare(_key,_node.key);
		if(comparison == 0) return _node; else if(comparison < 0) {
			var _n = this.node_ceil(_node.left,_key);
			if(_n != null) return _n; else return _node;
		}
		return this.node_ceil(_node.right,_key);
	}
	,node_remove_smallest: function(_node) {
		if(_node.left == null) return null;
		if(!this.is_red(_node.left) && !this.is_red(_node.left.left)) _node = this.move_red_left(_node);
		_node.left = this.node_remove_smallest(_node.left);
		_node.nodecount = this.node_count(_node.left) + this.node_count(_node.right) + 1;
		_node;
		return this.balance(_node);
	}
	,node_remove_largest: function(_node) {
		if(this.is_red(_node.left)) _node = this.rotate_right(_node);
		if(_node.right == null) return null;
		if(!this.is_red(_node.right) && !this.is_red(_node.right.left)) _node = this.move_red_right(_node);
		_node.right = this.node_remove_largest(_node.right);
		_node.nodecount = this.node_count(_node.left) + this.node_count(_node.right) + 1;
		_node;
		return this.balance(_node);
	}
	,node_remove: function(_node,_key) {
		var comparison = this.compare(_key,_node.key);
		if(comparison < 0) {
			if(!this.is_red(_node.left) && !this.is_red(_node.left.left)) _node = this.move_red_left(_node);
			_node.left = this.node_remove(_node.left,_key);
		} else {
			if(this.is_red(_node.left)) _node = this.rotate_right(_node);
			var comparison1 = this.compare(_key,_node.key);
			if(comparison1 == 0 && _node.right == null) return null;
			if(!this.is_red(_node.right) && !this.is_red(_node.right.left)) _node = this.move_red_right(_node);
			var comparison2 = this.compare(_key,_node.key);
			if(comparison2 == 0) {
				var _n = this.node_smallest(_node.right);
				_node.key = _n.key;
				_node.value = _n.value;
				_node.right = this.node_remove_smallest(_node.right);
			} else _node.right = this.node_remove(_node.right,_key);
		}
		return this.balance(_node);
	}
	,is_red: function(_node) {
		if(_node == null) return false;
		return _node.color == true;
	}
	,rotate_left: function(_node) {
		var _n = _node.right;
		_n.color = _node.color;
		_node.color = true;
		_node.right = _n.left;
		_n.left = _node;
		_n.nodecount = _node.nodecount;
		_node.nodecount = this.node_count(_node.left) + this.node_count(_node.right) + 1;
		_node;
		return _n;
	}
	,rotate_right: function(_node) {
		var _n = _node.left;
		_n.color = _node.color;
		_node.color = true;
		_node.left = _n.right;
		_n.right = _node;
		_n.nodecount = _node.nodecount;
		_node.nodecount = this.node_count(_node.left) + this.node_count(_node.right) + 1;
		_node;
		return _n;
	}
	,swap_color: function(_node) {
		_node.color = !_node.color;
		_node.left.color = !_node.left.color;
		_node.right.color = !_node.right.color;
	}
	,move_red_left: function(_node) {
		this.swap_color(_node);
		if(this.is_red(_node.right.left)) {
			_node.right = this.rotate_right(_node.right);
			_node = this.rotate_left(_node);
		}
		return _node;
	}
	,move_red_right: function(_node) {
		this.swap_color(_node);
		if(this.is_red(_node.left.left)) _node = this.rotate_right(_node);
		return _node;
	}
	,balance: function(_node) {
		if(this.is_red(_node.right)) _node = this.rotate_left(_node);
		if(this.is_red(_node.left) && this.is_red(_node.left.left)) _node = this.rotate_right(_node);
		if(this.is_red(_node.left) && this.is_red(_node.right)) this.swap_color(_node);
		_node.nodecount = this.node_count(_node.left) + this.node_count(_node.right) + 1;
		_node;
		return _node;
	}
	,__class__: luxe_structural_BalancedBST_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry
	,__properties__: {get_empty:"get_empty"}
};
var luxe_structural_OrderedMapIterator = function(omap) {
	this.index = 0;
	this.map = omap;
};
$hxClasses["luxe.structural.OrderedMapIterator"] = luxe_structural_OrderedMapIterator;
luxe_structural_OrderedMapIterator.__name__ = ["luxe","structural","OrderedMapIterator"];
luxe_structural_OrderedMapIterator.prototype = {
	hasNext: function() {
		return this.index < this.map._keys.length;
	}
	,next: function() {
		return this.map.get(this.map._keys[this.index++]);
	}
	,__class__: luxe_structural_OrderedMapIterator
};
var luxe_structural_OrderedMap = function(_map) {
	this.idx = 0;
	this._keys = [];
	this.map = _map;
};
$hxClasses["luxe.structural.OrderedMap"] = luxe_structural_OrderedMap;
luxe_structural_OrderedMap.__name__ = ["luxe","structural","OrderedMap"];
luxe_structural_OrderedMap.__interfaces__ = [haxe_IMap];
luxe_structural_OrderedMap.prototype = {
	set: function(key,value) {
		if(!this.map.exists(key)) this._keys.push(key);
		{
			this.map.set(key,value);
			value;
		}
	}
	,toString: function() {
		var _ret = "";
		var _cnt = 0;
		var _len = this._keys.length;
		var _g = 0;
		var _g1 = this._keys;
		while(_g < _g1.length) {
			var k = _g1[_g];
			++_g;
			_ret += "" + Std.string(k) + " => " + Std.string(this.map.get(k)) + (_cnt++ < _len - 1?", ":"");
		}
		return "{" + _ret + "}";
	}
	,iterator: function() {
		return new luxe_structural_OrderedMapIterator(this);
	}
	,remove: function(key) {
		return this.map.remove(key) && HxOverrides.remove(this._keys,key);
	}
	,exists: function(key) {
		return this.map.exists(key);
	}
	,get: function(key) {
		return this.map.get(key);
	}
	,keys: function() {
		return HxOverrides.iter(this._keys);
	}
	,__class__: luxe_structural_OrderedMap
};
var luxe_structural_OrderedMapIterator_$String_$luxe_$Component = function(omap) {
	this.index = 0;
	this.map = omap;
};
$hxClasses["luxe.structural.OrderedMapIterator_String_luxe_Component"] = luxe_structural_OrderedMapIterator_$String_$luxe_$Component;
luxe_structural_OrderedMapIterator_$String_$luxe_$Component.__name__ = ["luxe","structural","OrderedMapIterator_String_luxe_Component"];
luxe_structural_OrderedMapIterator_$String_$luxe_$Component.prototype = {
	hasNext: function() {
		return this.index < this.map._keys.length;
	}
	,next: function() {
		return this.map.get(this.map._keys[this.index++]);
	}
	,__class__: luxe_structural_OrderedMapIterator_$String_$luxe_$Component
};
var luxe_structural_OrderedMap_$String_$luxe_$Component = function(_map) {
	this.idx = 0;
	this._keys = [];
	this.map = _map;
};
$hxClasses["luxe.structural.OrderedMap_String_luxe_Component"] = luxe_structural_OrderedMap_$String_$luxe_$Component;
luxe_structural_OrderedMap_$String_$luxe_$Component.__name__ = ["luxe","structural","OrderedMap_String_luxe_Component"];
luxe_structural_OrderedMap_$String_$luxe_$Component.__interfaces__ = [haxe_IMap];
luxe_structural_OrderedMap_$String_$luxe_$Component.prototype = {
	set: function(key,value) {
		if(!this.map.exists(key)) this._keys.push(key);
		{
			this.map.set(key,value);
			value;
		}
	}
	,toString: function() {
		var _ret = "";
		var _cnt = 0;
		var _len = this._keys.length;
		var _g = 0;
		var _g1 = this._keys;
		while(_g < _g1.length) {
			var k = _g1[_g];
			++_g;
			_ret += "" + (k == null?"null":"" + k) + " => " + Std.string(this.map.get(k)) + (_cnt++ < _len - 1?", ":"");
		}
		return "{" + _ret + "}";
	}
	,iterator: function() {
		return new luxe_structural_OrderedMapIterator_$String_$luxe_$Component(this);
	}
	,remove: function(key) {
		return this.map.remove(key) && HxOverrides.remove(this._keys,key);
	}
	,exists: function(key) {
		return this.map.exists(key);
	}
	,get: function(key) {
		return this.map.get(key);
	}
	,keys: function() {
		return HxOverrides.iter(this._keys);
	}
	,__class__: luxe_structural_OrderedMap_$String_$luxe_$Component
};
var luxe_tilemaps_Isometric = function() { };
$hxClasses["luxe.tilemaps.Isometric"] = luxe_tilemaps_Isometric;
luxe_tilemaps_Isometric.__name__ = ["luxe","tilemaps","Isometric"];
luxe_tilemaps_Isometric.worldpos_to_tile_coord = function(world_x,world_y,tile_width,tile_height,scale,rounded) {
	if(rounded == null) rounded = true;
	if(scale == null) scale = 1.0;
	var tile_coord = new phoenix_Vector();
	var _scaled_tw = tile_width * scale;
	var _scaled_th = tile_height * scale;
	var tile_width_half = _scaled_tw / 2;
	var tile_height_half = _scaled_th / 2;
	tile_coord.set_x((world_x / tile_width_half + world_y / tile_height_half) / 2);
	tile_coord.set_y((world_y / tile_height_half - world_x / tile_width_half) / 2);
	if(rounded) {
		tile_coord.set_x(Math.floor(tile_coord.x));
		tile_coord.set_y(Math.floor(tile_coord.y));
	}
	return tile_coord;
};
luxe_tilemaps_Isometric.tile_coord_to_worldpos = function(tile_x,tile_y,tile_width,tile_height,scale,offset_x,offset_y) {
	if(scale == null) scale = 1.0;
	var world_pos = new phoenix_Vector();
	var _scaled_tw = tile_width * scale;
	var _scaled_th = tile_height * scale;
	var tile_width_half = _scaled_tw / 2;
	var tile_height_half = _scaled_th / 2;
	if(offset_x == null) offset_x = luxe_tilemaps_TileOffset.left;
	offset_x;
	if(offset_y == null) offset_y = luxe_tilemaps_TileOffset.top;
	offset_y;
	var tile_offset_x = 0;
	var tile_offset_y = 0;
	if(offset_x != null) switch(offset_x[1]) {
	case 0:
		tile_offset_x += _scaled_tw / 2;
		tile_offset_x /= _scaled_tw;
		break;
	case 4:
		tile_offset_x += _scaled_tw;
		tile_offset_x /= _scaled_tw;
		break;
	default:
	} else {
	}
	if(offset_y != null) switch(offset_y[1]) {
	case 0:
		tile_offset_y += _scaled_th / 2;
		tile_offset_y /= _scaled_th;
		break;
	case 2:
		tile_offset_y += _scaled_th;
		tile_offset_y /= _scaled_th;
		break;
	default:
	} else {
	}
	tile_offset_x += tile_x;
	tile_offset_y += tile_y;
	world_pos.set_x((tile_offset_x - tile_offset_y) * tile_width_half);
	world_pos.set_y((tile_offset_x + tile_offset_y) * tile_height_half);
	return world_pos;
};
var luxe_tilemaps_TilemapVisual = function(_map,_options) {
	this.geometry = new haxe_ds_StringMap();
	this.map = _map;
	this.options = _options;
	this.default_options();
	this.create();
};
$hxClasses["luxe.tilemaps.TilemapVisual"] = luxe_tilemaps_TilemapVisual;
luxe_tilemaps_TilemapVisual.__name__ = ["luxe","tilemaps","TilemapVisual"];
luxe_tilemaps_TilemapVisual.prototype = {
	create: function() {
		if(this.options.no_destroy != null && this.options.no_destroy != true) {
			this.destroy();
			this.geometry = new haxe_ds_StringMap();
		}
	}
	,geometry_for_tile: function(_layer,x,y) {
		if(!this.geometry.exists(_layer)) {
			haxe_Log.trace("  i / tilemap / " + ("visual / geometry_for_layer / " + _layer + " does not exist in tilemap visual"),{ fileName : "Tilemap.hx", lineNumber : 47, className : "luxe.tilemaps.TilemapVisual", methodName : "geometry_for_tile"});
			return null;
		}
		var geomlayer = this.geometry_for_layer(_layer);
		return geomlayer[y][x];
	}
	,geometry_for_layer: function(_layer) {
		if(!this.geometry.exists(_layer)) haxe_Log.trace("  i / tilemap / " + ("visual / geometry_for_layer / " + _layer + " does not exist in tilemap visual"),{ fileName : "Tilemap.hx", lineNumber : 60, className : "luxe.tilemaps.TilemapVisual", methodName : "geometry_for_layer"});
		return this.geometry.get(_layer);
	}
	,default_options: function() {
		if(this.options.batcher == null) this.options.batcher = Luxe.renderer.batcher;
		this.options.batcher;
		if(this.options.depth == null) this.options.depth = 0.0;
		this.options.depth;
		if(this.options.scale == null) this.options.scale = 1;
		this.options.scale;
		if(this.options.grid == null) this.options.grid = false;
		this.options.grid;
		if(this.options.filter == null) this.options.filter = 9728;
		this.options.filter;
	}
	,create_tile_for_layer: function(layer,x,y) {
		return null;
	}
	,update_tile_id: function(_geom,_layer_name,_x,_y,_id,_flipx,_flipy,_angle) {
	}
	,refresh_tile_id: function(_layer_name,_x,_y,_id,_flipx,_flipy,_angle) {
		if(_angle == null) _angle = 0;
		if(_flipy == null) _flipy = false;
		if(_flipx == null) _flipx = false;
		var _tile_layer = this.map.layer(_layer_name);
		var _geom_layer = this.geometry_for_layer(_layer_name);
		if(_geom_layer != null) {
			if(this.map.inside(_x,_y)) {
				var _geom = _geom_layer[_y][_x];
				if(_geom == null) {
					if(_id != 0) {
						_geom = this.create_tile_for_layer(this.map.layer(_layer_name),_x,_y);
						_geom_layer[_y][_x] = _geom;
					}
				} else if(_id == 0) {
					_geom.drop();
					_geom = null;
					_geom_layer[_y][_x] = null;
				} else this.update_tile_id(_geom,_layer_name,_x,_y,_id,_flipx,_flipy,_angle);
			} else haxe_Log.trace("cannot refresh tile " + _x + "," + _y + " because the coords were out of the map width/height : " + _layer_name + " and " + this.map.width + "," + this.map.height,{ fileName : "Tilemap.hx", lineNumber : 138, className : "luxe.tilemaps.TilemapVisual", methodName : "refresh_tile_id"});
		} else haxe_Log.trace("cannot refresh tile " + _x + "," + _y + " because layer was not found : " + _layer_name,{ fileName : "Tilemap.hx", lineNumber : 142, className : "luxe.tilemaps.TilemapVisual", methodName : "refresh_tile_id"});
	}
	,destroy: function() {
		if(this.geometry != null) {
			var $it0 = this.geometry.keys();
			while( $it0.hasNext() ) {
				var _name = $it0.next();
				var layer = this.geometry.get(_name);
				var _g = 0;
				while(_g < layer.length) {
					var row = layer[_g];
					++_g;
					var _g1 = 0;
					while(_g1 < row.length) {
						var tile = row[_g1];
						++_g1;
						if(tile != null) tile.drop();
						tile = null;
					}
					row = null;
				}
				this.geometry.remove(_name);
			}
		}
		this.geometry = null;
	}
	,__class__: luxe_tilemaps_TilemapVisual
};
var luxe_tilemaps_IsometricVisual = function(_map,_options) {
	luxe_tilemaps_TilemapVisual.call(this,_map,_options);
};
$hxClasses["luxe.tilemaps.IsometricVisual"] = luxe_tilemaps_IsometricVisual;
luxe_tilemaps_IsometricVisual.__name__ = ["luxe","tilemaps","IsometricVisual"];
luxe_tilemaps_IsometricVisual.__super__ = luxe_tilemaps_TilemapVisual;
luxe_tilemaps_IsometricVisual.prototype = $extend(luxe_tilemaps_TilemapVisual.prototype,{
	create: function() {
		var $it0 = this.map.iterator();
		while( $it0.hasNext() ) {
			var layer = $it0.next();
			var _layer_geom = [];
			var _g1 = 0;
			var _g = this.map.height;
			while(_g1 < _g) {
				var y = _g1++;
				var _geom_row = [];
				var _g3 = 0;
				var _g2 = this.map.width;
				while(_g3 < _g2) {
					var x = _g3++;
					var _tile_geom = this.create_tile_for_layer(layer,x,y);
					_geom_row.push(_tile_geom);
				}
				_layer_geom.push(_geom_row);
			}
			this.geometry.set(layer.name,_layer_geom);
		}
		if(this.options.grid) {
			var color = new phoenix_Color(1,1,1,0.8).rgb(13369344);
			var _g11 = 0;
			var _g4 = this.map.width + 1;
			while(_g11 < _g4) {
				var x1 = _g11++;
				var ip = luxe_tilemaps_Isometric.tile_coord_to_worldpos(x1,0,this.map.tile_width,this.map.tile_height,this.options.scale);
				var ip_bot = luxe_tilemaps_Isometric.tile_coord_to_worldpos(x1,this.map.height,this.map.tile_width,this.map.tile_height,this.options.scale);
				Luxe.draw.line({ p0 : new phoenix_Vector(this.map.pos.x + ip.x,this.map.pos.y + ip.y), p1 : new phoenix_Vector(this.map.pos.x + ip_bot.x,this.map.pos.y + ip_bot.y), color : color, depth : this.options.depth + 0.001, batcher : this.options.batcher});
			}
			var _g12 = 0;
			var _g5 = this.map.height + 1;
			while(_g12 < _g5) {
				var y1 = _g12++;
				var ip1 = luxe_tilemaps_Isometric.tile_coord_to_worldpos(0,y1,this.map.tile_width,this.map.tile_height,this.options.scale);
				var ip_bot1 = luxe_tilemaps_Isometric.tile_coord_to_worldpos(this.map.width,y1,this.map.tile_width,this.map.tile_height,this.options.scale);
				Luxe.draw.line({ p0 : new phoenix_Vector(this.map.pos.x + ip1.x,this.map.pos.y + ip1.y), p1 : new phoenix_Vector(this.map.pos.x + ip_bot1.x,this.map.pos.y + ip_bot1.y), color : color, depth : this.options.depth + 0.001, batcher : this.options.batcher});
			}
		}
	}
	,update_tile_id: function(_geom,_layer_name,_x,_y,_id,_flipx,_flipy,_angle) {
		var tileset = this.map.tileset_from_id(_id);
		var image_coord = tileset.pos_in_texture(_id);
		var g = _geom;
		g.uv(new phoenix_Rectangle(tileset.margin + (image_coord.x * tileset.tile_width + image_coord.x * tileset.spacing),tileset.margin + (image_coord.y * tileset.tile_height + image_coord.y * tileset.spacing),tileset.tile_width,tileset.tile_height));
	}
	,create_tile_for_layer: function(layer,x,y) {
		var _scaled_tilewidth = this.map.tile_width * this.options.scale;
		var _scaled_tileheight = this.map.tile_height * this.options.scale;
		var tile = layer.tiles[y][x];
		if(tile.id == 0) return null;
		var tileset = this.map.tileset_from_id(tile.id);
		if(tileset == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("tileset was null" + (" ( " + ("Tilemap Iso cannot find tileset for tile id " + tile.id) + " )")));
		var _scaled_tileset_tilewidth = tileset.tile_width * this.options.scale;
		var _scaled_tileset_tileheight = tileset.tile_height * this.options.scale;
		var _half_world_tile_width = _scaled_tilewidth / 2;
		var _half_world_tile_height = _scaled_tileheight / 2;
		var _tile_geom = Luxe.draw.box({ x : this.map.pos.x + (x - y) * _half_world_tile_width - _half_world_tile_width, y : this.map.pos.y + (x + y) * _half_world_tile_height - _half_world_tile_height, w : _scaled_tileset_tilewidth, h : _scaled_tileset_tileheight, texture : tileset != null?tileset.texture:null, visible : layer.visible, color : new phoenix_Color(1,1,1,layer.opacity), depth : this.options.depth, batcher : this.options.batcher});
		if(tileset.texture != null) {
			var image_coord = tileset.pos_in_texture(tile.id);
			_tile_geom.uv(new phoenix_Rectangle(tileset.margin + (image_coord.x * tileset.tile_width + image_coord.x * tileset.spacing),tileset.margin + (image_coord.y * tileset.tile_height + image_coord.y * tileset.spacing),tileset.tile_width,tileset.tile_height));
			tileset.texture.set_filter_min(tileset.texture.set_filter_mag(this.options.filter));
		}
		return _tile_geom;
	}
	,__class__: luxe_tilemaps_IsometricVisual
});
var luxe_tilemaps_Ortho = function() { };
$hxClasses["luxe.tilemaps.Ortho"] = luxe_tilemaps_Ortho;
luxe_tilemaps_Ortho.__name__ = ["luxe","tilemaps","Ortho"];
luxe_tilemaps_Ortho.worldpos_to_tile_coord = function(world_x,world_y,tile_width,tile_height,scale,rounded) {
	if(rounded == null) rounded = true;
	if(scale == null) scale = 1.0;
	var tile_coord = new phoenix_Vector();
	tile_coord.set_x(world_x / (tile_width * scale));
	tile_coord.set_y(world_y / (tile_height * scale));
	if(rounded) {
		tile_coord.set_x(Math.floor(tile_coord.x));
		tile_coord.set_y(Math.floor(tile_coord.y));
	}
	return tile_coord;
};
luxe_tilemaps_Ortho.tile_coord_to_worldpos = function(tile_x,tile_y,tile_width,tile_height,scale,offset_x,offset_y) {
	if(scale == null) scale = 1.0;
	var world_pos = new phoenix_Vector();
	var _scaled_tw = tile_width * scale;
	var _scaled_th = tile_height * scale;
	world_pos.set_x(tile_x * _scaled_tw);
	world_pos.set_y(tile_y * _scaled_th);
	if(offset_x == null) offset_x = luxe_tilemaps_TileOffset.left;
	offset_x;
	if(offset_y == null) offset_y = luxe_tilemaps_TileOffset.top;
	offset_y;
	if(offset_x != null) switch(offset_x[1]) {
	case 0:
		var _g = world_pos;
		_g.set_x(_g.x + _scaled_tw / 2);
		break;
	case 4:
		var _g1 = world_pos;
		_g1.set_x(_g1.x + _scaled_tw);
		break;
	default:
	} else {
	}
	if(offset_y != null) switch(offset_y[1]) {
	case 0:
		var _g2 = world_pos;
		_g2.set_y(_g2.y + _scaled_th / 2);
		break;
	case 2:
		var _g3 = world_pos;
		_g3.set_y(_g3.y + _scaled_th);
		break;
	default:
	} else {
	}
	return world_pos;
};
var luxe_tilemaps_OrthoVisual = function(_map,_options) {
	luxe_tilemaps_TilemapVisual.call(this,_map,_options);
};
$hxClasses["luxe.tilemaps.OrthoVisual"] = luxe_tilemaps_OrthoVisual;
luxe_tilemaps_OrthoVisual.__name__ = ["luxe","tilemaps","OrthoVisual"];
luxe_tilemaps_OrthoVisual.__super__ = luxe_tilemaps_TilemapVisual;
luxe_tilemaps_OrthoVisual.prototype = $extend(luxe_tilemaps_TilemapVisual.prototype,{
	create: function() {
		luxe_tilemaps_TilemapVisual.prototype.create.call(this);
		var _map_scaled_tw = this.map.tile_width * this.options.scale;
		var _map_scaled_th = this.map.tile_height * this.options.scale;
		var $it0 = this.map.iterator();
		while( $it0.hasNext() ) {
			var layer = $it0.next();
			var _layer_geom = [];
			var _g1 = 0;
			var _g = this.map.height;
			while(_g1 < _g) {
				var y = _g1++;
				var _geom_row = [];
				var _g3 = 0;
				var _g2 = this.map.width;
				while(_g3 < _g2) {
					var x = _g3++;
					var _tile_geom = this.create_tile_for_layer(layer,x,y);
					_geom_row.push(_tile_geom);
				}
				_layer_geom.push(_geom_row);
			}
			this.geometry.set(layer.name,_layer_geom);
		}
		if(this.options.grid) {
			var color = new phoenix_Color(1,1,1,0.8).rgb(13369344);
			var _g11 = 0;
			var _g4 = this.map.width + 1;
			while(_g11 < _g4) {
				var x1 = _g11++;
				Luxe.draw.line({ p0 : new phoenix_Vector(this.map.pos.x + x1 * _map_scaled_tw,this.map.pos.y), p1 : new phoenix_Vector(this.map.pos.x + x1 * _map_scaled_tw,this.map.pos.y + this.map.height * _map_scaled_th), color : color, depth : this.options.depth + 0.0001, batcher : this.options.batcher});
			}
			var _g12 = 0;
			var _g5 = this.map.height + 1;
			while(_g12 < _g5) {
				var y1 = _g12++;
				Luxe.draw.line({ p0 : new phoenix_Vector(this.map.pos.x,this.map.pos.y + y1 * _map_scaled_th), p1 : new phoenix_Vector(this.map.pos.x + this.map.width * _map_scaled_tw,this.map.pos.y + y1 * _map_scaled_th), color : color, depth : this.options.depth + 0.0001, batcher : this.options.batcher});
			}
		}
	}
	,update_tile_id: function(_geom,_layer_name,_x,_y,_id,_flipx,_flipy,_angle) {
		var tileset = this.map.tileset_from_id(_id);
		var image_coord = tileset.pos_in_texture(_id);
		var g = _geom;
		g.uv(new phoenix_Rectangle(tileset.margin + (image_coord.x * tileset.tile_width + image_coord.x * tileset.spacing),tileset.margin + (image_coord.y * tileset.tile_height + image_coord.y * tileset.spacing),tileset.tile_width,tileset.tile_height));
		g.set_flipx(_flipx);
		g.set_flipy(_flipy);
		g.set_uv_angle(_angle);
	}
	,create_tile_for_layer: function(layer,x,y) {
		var _map_scaled_tw = this.map.tile_width * this.options.scale;
		var _map_scaled_th = this.map.tile_height * this.options.scale;
		var tile = layer.tiles[y][x];
		if(tile.id == 0) return null;
		var tileset = this.map.tileset_from_id(tile.id);
		if(tileset == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("tileset was null" + (" ( " + ("Tilemap Ortho cannot find tileset for tile id " + tile.id) + " )")));
		var _scaled_tilewidth = tileset.tile_width * this.options.scale;
		var _scaled_tileheight = tileset.tile_height * this.options.scale;
		var _offset_x = 0;
		var _offset_y = _scaled_tileheight - _map_scaled_th;
		var _tile_geom = Luxe.draw.box({ x : this.map.pos.x + tile.x * _map_scaled_tw - _offset_x, y : this.map.pos.y + tile.y * _map_scaled_th - _offset_y, w : _scaled_tilewidth, h : _scaled_tileheight, visible : layer.visible, texture : tileset != null?tileset.texture:null, color : new phoenix_Color(1,1,1,layer.opacity), depth : this.options.depth + layer.layer / this.map.layers_ordered.length, batcher : this.options.batcher});
		if(tileset.texture != null) {
			var image_coord = tileset.pos_in_texture(tile.id);
			_tile_geom.uv(new phoenix_Rectangle(tileset.margin + (image_coord.x * tileset.tile_width + image_coord.x * tileset.spacing),tileset.margin + (image_coord.y * tileset.tile_height + image_coord.y * tileset.spacing),tileset.tile_width,tileset.tile_height));
			_tile_geom.set_uv_angle(tile.angle);
			_tile_geom.set_flipx(tile.flipx);
			_tile_geom.set_flipy(tile.flipy);
			tileset.texture.set_filter_min(tileset.texture.set_filter_mag(this.options.filter));
		}
		return _tile_geom;
	}
	,__class__: luxe_tilemaps_OrthoVisual
});
var luxe_tilemaps_Tile = function(options) {
	this.id = 0;
	this.uuid = Luxe.utils.uniqueid();
	this.set_id(options.id);
	this.layer = options.layer;
	this.map = options.layer.map;
	this.x = options.x;
	this.y = options.y;
	this.set_flipx((function($this) {
		var $r;
		if(options.flipx == null) options.flipx = false;
		$r = options.flipx;
		return $r;
	}(this)));
	this.set_flipy((function($this) {
		var $r;
		if(options.flipy == null) options.flipy = false;
		$r = options.flipy;
		return $r;
	}(this)));
	this.set_angle((function($this) {
		var $r;
		if(options.angle == null) options.angle = 0;
		$r = options.angle;
		return $r;
	}(this)));
	var _tileset = this.map.tileset_from_id(this.id);
	if(_tileset != null) this.size = new phoenix_Vector(_tileset.tile_width,_tileset.tile_height); else this.size = new phoenix_Vector(this.map.tile_width,this.map.tile_height);
};
$hxClasses["luxe.tilemaps.Tile"] = luxe_tilemaps_Tile;
luxe_tilemaps_Tile.__name__ = ["luxe","tilemaps","Tile"];
luxe_tilemaps_Tile.prototype = {
	toString: function() {
		var _pos = this.map.tile_pos(this.x,this.y);
		return "Tile: id:" + this.id + " x,y:" + this.x + "," + this.y + " layer(" + this.layer.name + ") coord(" + this.x + "," + this.y + ") pos(" + _pos.x + "," + _pos.y + ") size(" + this.size.x + "," + this.size.y + ") flipx,flipy:" + Std.string(this.flipx) + "," + Std.string(this.flipy) + " angle:" + this.angle;
	}
	,set_id: function(_id) {
		this.id = _id;
		if(this.map != null) {
			if(this.map.visual != null) this.map.visual.refresh_tile_id(this.layer.name,this.x,this.y,_id,this.flipx,this.flipy,this.angle);
		}
		return this.id;
	}
	,set_flipx: function(_val) {
		this.flipx = _val;
		if(this.map != null && this.map.visual != null) this.map.visual.refresh_tile_id(this.layer.name,this.x,this.y,this.id,this.flipx,this.flipy,this.angle);
		return this.flipx;
	}
	,set_flipy: function(_val) {
		this.flipy = _val;
		if(this.map != null && this.map.visual != null) this.map.visual.refresh_tile_id(this.layer.name,this.x,this.y,this.id,this.flipx,this.flipy,this.angle);
		return this.flipy;
	}
	,set_angle: function(_val) {
		if(!(_val % 90 == 0)) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("_val % 90 == 0" + (" ( " + "Tile angle has to be a multiple of 90" + " )")));
		this.angle = _val;
		if(this.map != null && this.map.visual != null) this.map.visual.refresh_tile_id(this.layer.name,this.x,this.y,this.id,this.flipx,this.flipy,this.angle);
		return this.angle;
	}
	,__class__: luxe_tilemaps_Tile
	,__properties__: {set_id:"set_id",set_angle:"set_angle",set_flipy:"set_flipy",set_flipx:"set_flipx"}
};
var luxe_tilemaps_TileLayer = function(options) {
	this.fixed = true;
	this.visible = true;
	this.opacity = 1.0;
	if(options.map == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("options.map was null" + (" ( " + "TileLayer requires a Tilemap passed into the options, as map:Tilemap" + " )")));
	this.id = Luxe.utils.uniqueid();
	this.name = options.name;
	this.map = options.map;
	if(options.layer == null) options.layer = 0;
	this.layer = options.layer;
	if(options.opacity == null) options.opacity = 1.0;
	this.opacity = options.opacity;
	if(options.visible == null) options.visible = true;
	this.visible = options.visible;
	if(options.fixed == null) options.fixed = true;
	this.fixed = options.fixed;
	if(options.properties == null) options.properties = new haxe_ds_StringMap();
	this.properties = options.properties;
	this.tiles = [];
};
$hxClasses["luxe.tilemaps.TileLayer"] = luxe_tilemaps_TileLayer;
luxe_tilemaps_TileLayer.__name__ = ["luxe","tilemaps","TileLayer"];
luxe_tilemaps_TileLayer.prototype = {
	bounds_fitted: function() {
		var checked = [];
		var rectangles = [];
		var startCol = -1;
		var index = -1;
		var tileID = -1;
		var width = this.map.width;
		var height = this.map.height;
		var _g = 0;
		while(_g < height) {
			var y = _g++;
			var _g1 = 0;
			while(_g1 < width) {
				var x = _g1++;
				index = y * width + x;
				tileID = this.tiles[y][x].id;
				if(tileID > 0 && (checked[index] == false || checked[index] == null)) {
					if(startCol == -1) startCol = x;
					checked[index] = true;
				} else if(tileID == 0 || checked[index] == true) {
					if(startCol != -1) {
						rectangles.push(this.find_bounds_rect(y,startCol,x,checked));
						startCol = -1;
					}
				}
			}
			if(startCol != -1) {
				rectangles.push(this.find_bounds_rect(y,startCol,width,checked));
				startCol = -1;
			}
		}
		return rectangles;
	}
	,find_bounds_rect: function(start_y,start_x,end_x,checked) {
		var index = -1;
		var tileID = -1;
		var width = this.map.width;
		var height = this.map.height;
		var _g = start_y + 1;
		while(_g < height) {
			var y = _g++;
			var _g1 = start_x;
			while(_g1 < end_x) {
				var x = _g1++;
				index = y * width + x;
				tileID = this.tiles[y][x].id;
				if(tileID == 0 || checked[index] == true) {
					var _g2 = start_x;
					while(_g2 < x) {
						var _x = _g2++;
						index = y * width + _x;
						checked[index] = false;
					}
					return new phoenix_Rectangle(start_x,start_y,end_x - start_x,y - start_y);
				}
				checked[index] = true;
			}
		}
		return new phoenix_Rectangle(start_x,start_y,end_x - start_x,height - start_y);
	}
	,__class__: luxe_tilemaps_TileLayer
};
var luxe_tilemaps_Tileset = function(options) {
	this.spacing = 0;
	this.margin = 0;
	this.tile_height = 0;
	this.tile_width = 0;
	this.first_id = 1;
	if(options == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("options was null" + (" ( " + "Tileset requires a non-null options on new()" + " )")));
	if(options.texture == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("options.texture was null" + (" ( " + "Tileset requires a texture that is not null" + " )")));
	this.name = options.name;
	this.texture = options.texture;
	this.tile_width = options.tile_width;
	this.tile_height = options.tile_height;
	if(options.first_id == null) options.first_id = 1;
	this.first_id = options.first_id;
	if(options.margin == null) options.margin = 0;
	this.margin = options.margin;
	if(options.spacing == null) options.spacing = 0;
	this.spacing = options.spacing;
};
$hxClasses["luxe.tilemaps.Tileset"] = luxe_tilemaps_Tileset;
luxe_tilemaps_Tileset.__name__ = ["luxe","tilemaps","Tileset"];
luxe_tilemaps_Tileset.prototype = {
	toString: function() {
		return "Tileset; " + this.name + " tw(" + this.tile_width + ") th(" + this.tile_height + ") first_id(" + this.first_id + ") margin(" + this.margin + ") spacing(" + this.spacing + ")";
	}
	,pos_in_texture: function(_id) {
		var tileid = _id - this.first_id;
		return new phoenix_Vector(this.texture_x(tileid),this.texture_y(tileid));
	}
	,texture_x: function(_id) {
		var _tx = this.texture.width / (this.tile_width + this.spacing) | 0;
		if(_tx == 0) return 0; else return _id % _tx;
	}
	,texture_y: function(_id) {
		var _ty = this.texture.width / (this.tile_width + this.spacing) | 0;
		if(_ty == 0) return 0; else return _id / _ty | 0;
	}
	,__class__: luxe_tilemaps_Tileset
};
var luxe_tilemaps_TilemapOrientation = $hxClasses["luxe.tilemaps.TilemapOrientation"] = { __ename__ : ["luxe","tilemaps","TilemapOrientation"], __constructs__ : ["ortho","isometric","none"] };
luxe_tilemaps_TilemapOrientation.ortho = ["ortho",0];
luxe_tilemaps_TilemapOrientation.ortho.toString = $estr;
luxe_tilemaps_TilemapOrientation.ortho.__enum__ = luxe_tilemaps_TilemapOrientation;
luxe_tilemaps_TilemapOrientation.isometric = ["isometric",1];
luxe_tilemaps_TilemapOrientation.isometric.toString = $estr;
luxe_tilemaps_TilemapOrientation.isometric.__enum__ = luxe_tilemaps_TilemapOrientation;
luxe_tilemaps_TilemapOrientation.none = ["none",2];
luxe_tilemaps_TilemapOrientation.none.toString = $estr;
luxe_tilemaps_TilemapOrientation.none.__enum__ = luxe_tilemaps_TilemapOrientation;
var luxe_tilemaps_TileOffset = $hxClasses["luxe.tilemaps.TileOffset"] = { __ename__ : ["luxe","tilemaps","TileOffset"], __constructs__ : ["center","top","bottom","left","right"] };
luxe_tilemaps_TileOffset.center = ["center",0];
luxe_tilemaps_TileOffset.center.toString = $estr;
luxe_tilemaps_TileOffset.center.__enum__ = luxe_tilemaps_TileOffset;
luxe_tilemaps_TileOffset.top = ["top",1];
luxe_tilemaps_TileOffset.top.toString = $estr;
luxe_tilemaps_TileOffset.top.__enum__ = luxe_tilemaps_TileOffset;
luxe_tilemaps_TileOffset.bottom = ["bottom",2];
luxe_tilemaps_TileOffset.bottom.toString = $estr;
luxe_tilemaps_TileOffset.bottom.__enum__ = luxe_tilemaps_TileOffset;
luxe_tilemaps_TileOffset.left = ["left",3];
luxe_tilemaps_TileOffset.left.toString = $estr;
luxe_tilemaps_TileOffset.left.__enum__ = luxe_tilemaps_TileOffset;
luxe_tilemaps_TileOffset.right = ["right",4];
luxe_tilemaps_TileOffset.right.toString = $estr;
luxe_tilemaps_TileOffset.right.__enum__ = luxe_tilemaps_TileOffset;
var luxe_tween_actuators_IGenericActuator = function() { };
$hxClasses["luxe.tween.actuators.IGenericActuator"] = luxe_tween_actuators_IGenericActuator;
luxe_tween_actuators_IGenericActuator.__name__ = ["luxe","tween","actuators","IGenericActuator"];
luxe_tween_actuators_IGenericActuator.prototype = {
	__class__: luxe_tween_actuators_IGenericActuator
};
var luxe_tween_actuators_GenericActuator = function(target,duration,properties) {
	this.timescaled = false;
	this._autoVisible = true;
	this._delay = 0;
	this._reflect = false;
	this._repeat = 0;
	this._reverse = false;
	this._smartRotation = false;
	this._snapping = false;
	this.special = false;
	this.target = target;
	this.properties = properties;
	this.duration = duration;
	this._ease = luxe_tween_Actuate.defaultEase;
};
$hxClasses["luxe.tween.actuators.GenericActuator"] = luxe_tween_actuators_GenericActuator;
luxe_tween_actuators_GenericActuator.__name__ = ["luxe","tween","actuators","GenericActuator"];
luxe_tween_actuators_GenericActuator.__interfaces__ = [luxe_tween_actuators_IGenericActuator];
luxe_tween_actuators_GenericActuator.prototype = {
	apply: function() {
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			if(Object.prototype.hasOwnProperty.call(this.target,i)) Reflect.setField(this.target,i,Reflect.field(this.properties,i)); else Reflect.setProperty(this.target,i,Reflect.field(this.properties,i));
		}
	}
	,autoVisible: function(value) {
		if(value == null) value = true;
		this._autoVisible = value;
		return this;
	}
	,callMethod: function(method,params) {
		if(params == null) params = [];
		return Reflect.callMethod(method,method,params);
	}
	,change: function() {
		if(this._onUpdate != null) this.callMethod(this._onUpdate,this._onUpdateParams);
	}
	,complete: function(sendEvent) {
		if(sendEvent == null) sendEvent = true;
		if(sendEvent) {
			this.change();
			if(this._onComplete != null) this.callMethod(this._onComplete,this._onCompleteParams);
		}
		luxe_tween_Actuate.unload(this);
	}
	,delay: function(duration) {
		this._delay = duration;
		return this;
	}
	,ease: function(easing) {
		this._ease = easing;
		return this;
	}
	,move: function() {
	}
	,timescale: function(_value) {
		if(_value == null) _value = true;
		this.timescaled = _value;
		return this;
	}
	,onComplete: function(handler,parameters) {
		this._onComplete = handler;
		if(parameters == null) this._onCompleteParams = []; else this._onCompleteParams = parameters;
		if(this.duration == 0) this.complete();
		return this;
	}
	,onRepeat: function(handler,parameters) {
		this._onRepeat = handler;
		if(parameters == null) this._onRepeatParams = []; else this._onRepeatParams = parameters;
		return this;
	}
	,onUpdate: function(handler,parameters) {
		this._onUpdate = handler;
		if(parameters == null) this._onUpdateParams = []; else this._onUpdateParams = parameters;
		return this;
	}
	,pause: function() {
	}
	,reflect: function(value) {
		if(value == null) value = true;
		this._reflect = value;
		this.special = true;
		return this;
	}
	,repeat: function(times) {
		if(times == null) times = -1;
		this._repeat = times;
		return this;
	}
	,resume: function() {
	}
	,reverse: function(value) {
		if(value == null) value = true;
		this._reverse = value;
		this.special = true;
		return this;
	}
	,smartRotation: function(value) {
		if(value == null) value = true;
		this._smartRotation = value;
		this.special = true;
		return this;
	}
	,snapping: function(value) {
		if(value == null) value = true;
		this._snapping = value;
		this.special = true;
		return this;
	}
	,stop: function(properties,complete,sendEvent) {
	}
	,__class__: luxe_tween_actuators_GenericActuator
};
var luxe_tween_actuators_SimpleActuator = function(target,duration,properties) {
	this.has_timescaled_starttime = false;
	this.active = true;
	this.propertyDetails = [];
	this.sendChange = false;
	this.paused = false;
	this.cacheVisible = false;
	this.initialized = false;
	this.setVisible = false;
	this.toggleVisible = false;
	this.startTime = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
	luxe_tween_actuators_GenericActuator.call(this,target,duration,properties);
	if(!luxe_tween_actuators_SimpleActuator.addedEvent) {
		luxe_tween_actuators_SimpleActuator.addedEvent = true;
		Luxe.on(4,luxe_tween_actuators_SimpleActuator.on_internal_update);
	}
};
$hxClasses["luxe.tween.actuators.SimpleActuator"] = luxe_tween_actuators_SimpleActuator;
luxe_tween_actuators_SimpleActuator.__name__ = ["luxe","tween","actuators","SimpleActuator"];
luxe_tween_actuators_SimpleActuator.on_internal_update = function(_) {
	luxe_tween_actuators_SimpleActuator.update_timer += Luxe.core.frame_delta;
	luxe_tween_actuators_SimpleActuator.current_time = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
	var currentTime = luxe_tween_actuators_SimpleActuator.current_time;
	var actuator;
	var j = 0;
	var cleanup = false;
	var _g1 = 0;
	var _g = luxe_tween_actuators_SimpleActuator.actuatorsLength;
	while(_g1 < _g) {
		var i = _g1++;
		actuator = luxe_tween_actuators_SimpleActuator.actuators[j];
		if(actuator != null && actuator.active) {
			if(actuator.timescaled) currentTime = luxe_tween_actuators_SimpleActuator.update_timer; else currentTime = luxe_tween_actuators_SimpleActuator.current_time;
			if(actuator.timescaled && !actuator.has_timescaled_starttime) {
				actuator.has_timescaled_starttime = true;
				actuator.startTime = luxe_tween_actuators_SimpleActuator.update_timer;
				actuator.timeOffset = actuator.startTime;
			}
			if(currentTime > actuator.timeOffset) actuator.update(currentTime);
			j++;
		} else {
			luxe_tween_actuators_SimpleActuator.actuators.splice(j,1);
			--luxe_tween_actuators_SimpleActuator.actuatorsLength;
		}
	}
};
luxe_tween_actuators_SimpleActuator.__super__ = luxe_tween_actuators_GenericActuator;
luxe_tween_actuators_SimpleActuator.prototype = $extend(luxe_tween_actuators_GenericActuator.prototype,{
	autoVisible: function(value) {
		if(value == null) value = true;
		this._autoVisible = value;
		if(!value) {
			this.toggleVisible = false;
			if(this.setVisible) this.setField(this.target,"visible",this.cacheVisible);
		}
		return this;
	}
	,delay: function(duration) {
		this._delay = duration;
		this.timeOffset = this.startTime + duration;
		return this;
	}
	,getField: function(target,propertyName) {
		var value = null;
		if(Object.prototype.hasOwnProperty.call(target,propertyName)) value = Reflect.field(target,propertyName); else value = Reflect.getProperty(target,propertyName);
		return value;
	}
	,initialize: function() {
		var details;
		var start;
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var i = _g1[_g];
			++_g;
			var isField = true;
			if(Object.prototype.hasOwnProperty.call(this.target,i) && (!this.target.__properties__ || !this.target.__properties__["set_" + i])) start = Reflect.field(this.target,i); else {
				isField = false;
				start = Reflect.getProperty(this.target,i);
			}
			if(typeof(start) == "number") {
				details = new luxe_tween_actuators_PropertyDetails(this.target,i,start,this.getField(this.properties,i) - start,isField);
				this.propertyDetails.push(details);
			}
		}
		this.detailsLength = this.propertyDetails.length;
		this.initialized = true;
	}
	,move: function() {
		this.toggleVisible = Object.prototype.hasOwnProperty.call(this.properties,"alpha") && Object.prototype.hasOwnProperty.call(this.properties,"visible");
		if(this.toggleVisible && this.properties.alpha != 0 && !this.getField(this.target,"visible")) {
			this.setVisible = true;
			this.cacheVisible = this.getField(this.target,"visible");
			this.setField(this.target,"visible",true);
		}
		this.timeOffset = this.startTime;
		luxe_tween_actuators_SimpleActuator.actuators.push(this);
		++luxe_tween_actuators_SimpleActuator.actuatorsLength;
	}
	,onUpdate: function(handler,parameters) {
		this._onUpdate = handler;
		if(parameters == null) this._onUpdateParams = []; else this._onUpdateParams = parameters;
		this.sendChange = true;
		return this;
	}
	,pause: function() {
		this.paused = true;
		if(this.timescaled) this.pauseTime = luxe_tween_actuators_SimpleActuator.update_timer; else this.pauseTime = luxe_tween_actuators_SimpleActuator.current_time;
	}
	,resume: function() {
		if(this.paused) {
			this.paused = false;
			this.timeOffset += (this.timescaled?luxe_tween_actuators_SimpleActuator.update_timer:luxe_tween_actuators_SimpleActuator.current_time) - this.pauseTime;
		}
	}
	,setField: function(target,propertyName,value) {
		if(Object.prototype.hasOwnProperty.call(target,propertyName)) target[propertyName] = value; else Reflect.setProperty(target,propertyName,value);
	}
	,setProperty: function(details,value) {
		if(details.isField) Reflect.setProperty(details.target,details.propertyName,value); else Reflect.setProperty(details.target,details.propertyName,value);
	}
	,stop: function(properties,complete,sendEvent) {
		if(this.active) {
			if(properties == null) {
				this.active = false;
				if(complete) this.apply();
				this.complete(sendEvent);
				return;
			}
			var _g = 0;
			var _g1 = Reflect.fields(properties);
			while(_g < _g1.length) {
				var i = _g1[_g];
				++_g;
				if(Object.prototype.hasOwnProperty.call(this.properties,i)) {
					this.active = false;
					if(complete) this.apply();
					this.complete(sendEvent);
					return;
				}
			}
		}
	}
	,update: function(currentTime) {
		if(!this.paused) {
			var details;
			var easing;
			var i;
			var tweenPosition = (currentTime - this.timeOffset) / this.duration;
			if(tweenPosition > 1) tweenPosition = 1;
			if(!this.initialized) this.initialize();
			if(!this.special) {
				easing = this._ease.calculate(tweenPosition);
				var _g1 = 0;
				var _g = this.detailsLength;
				while(_g1 < _g) {
					var i1 = _g1++;
					details = this.propertyDetails[i1];
					this.setProperty(details,details.start + details.change * easing);
				}
			} else {
				if(!this._reverse) easing = this._ease.calculate(tweenPosition); else easing = this._ease.calculate(1 - tweenPosition);
				var endValue;
				var _g11 = 0;
				var _g2 = this.detailsLength;
				while(_g11 < _g2) {
					var i2 = _g11++;
					details = this.propertyDetails[i2];
					if(this._smartRotation && (details.propertyName == "rotation" || details.propertyName == "rotationX" || details.propertyName == "rotationY" || details.propertyName == "rotationZ")) {
						var rotation = details.change % 360;
						if(rotation > 180) rotation -= 360; else if(rotation < -180) rotation += 360;
						endValue = details.start + rotation * easing;
					} else endValue = details.start + details.change * easing;
					if(!this._snapping) {
						if(details.isField) Reflect.setProperty(details.target,details.propertyName,endValue); else Reflect.setProperty(details.target,details.propertyName,endValue);
					} else this.setProperty(details,Math.round(endValue));
				}
			}
			if(tweenPosition == 1) {
				if(this._repeat == 0) {
					this.active = false;
					if(this.toggleVisible && this.getField(this.target,"alpha") == 0) this.setField(this.target,"visible",false);
					this.complete(true);
					return;
				} else {
					if(this._onRepeat != null) this.callMethod(this._onRepeat,this._onRepeatParams);
					if(this._reflect) this._reverse = !this._reverse;
					this.startTime = currentTime;
					this.timeOffset = this.startTime + this._delay;
					if(this._repeat > 0) this._repeat--;
				}
			}
			if(this.sendChange) this.change();
		}
	}
	,__class__: luxe_tween_actuators_SimpleActuator
});
var luxe_tween_easing_Quad = function() { };
$hxClasses["luxe.tween.easing.Quad"] = luxe_tween_easing_Quad;
luxe_tween_easing_Quad.__name__ = ["luxe","tween","easing","Quad"];
luxe_tween_easing_Quad.__properties__ = {get_easeOut:"get_easeOut",get_easeInOut:"get_easeInOut",get_easeIn:"get_easeIn"}
luxe_tween_easing_Quad.get_easeIn = function() {
	return new luxe_tween_easing_QuadEaseIn();
};
luxe_tween_easing_Quad.get_easeInOut = function() {
	return new luxe_tween_easing_QuadEaseInOut();
};
luxe_tween_easing_Quad.get_easeOut = function() {
	return new luxe_tween_easing_QuadEaseOut();
};
var luxe_tween_easing_IEasing = function() { };
$hxClasses["luxe.tween.easing.IEasing"] = luxe_tween_easing_IEasing;
luxe_tween_easing_IEasing.__name__ = ["luxe","tween","easing","IEasing"];
luxe_tween_easing_IEasing.prototype = {
	__class__: luxe_tween_easing_IEasing
};
var luxe_tween_easing_QuadEaseOut = function() {
};
$hxClasses["luxe.tween.easing.QuadEaseOut"] = luxe_tween_easing_QuadEaseOut;
luxe_tween_easing_QuadEaseOut.__name__ = ["luxe","tween","easing","QuadEaseOut"];
luxe_tween_easing_QuadEaseOut.__interfaces__ = [luxe_tween_easing_IEasing];
luxe_tween_easing_QuadEaseOut.prototype = {
	calculate: function(k) {
		return -k * (k - 2);
	}
	,ease: function(t,b,c,d) {
		return -c * (t /= d) * (t - 2) + b;
	}
	,__class__: luxe_tween_easing_QuadEaseOut
};
var luxe_tween_Actuate = function() { };
$hxClasses["luxe.tween.Actuate"] = luxe_tween_Actuate;
luxe_tween_Actuate.__name__ = ["luxe","tween","Actuate"];
luxe_tween_Actuate.apply = function(target,properties,customActuator) {
	luxe_tween_Actuate.stop(target,properties);
	if(customActuator == null) customActuator = luxe_tween_Actuate.defaultActuator;
	var actuator = Type.createInstance(customActuator,[target,0,properties]);
	actuator.apply();
	return actuator;
};
luxe_tween_Actuate.getLibrary = function(target,allowCreation) {
	if(allowCreation == null) allowCreation = true;
	if(!luxe_tween_Actuate.targetLibraries.exists(target) && allowCreation) luxe_tween_Actuate.targetLibraries.set(target,[]);
	return luxe_tween_Actuate.targetLibraries.get(target);
};
luxe_tween_Actuate.motionPath = function(target,duration,properties,overwrite) {
	if(overwrite == null) overwrite = true;
	return luxe_tween_Actuate.tween(target,duration,properties,overwrite,luxe_tween_actuators_MotionPathActuator);
};
luxe_tween_Actuate.pause = function(target) {
	if(js_Boot.__instanceof(target,luxe_tween_actuators_GenericActuator)) (js_Boot.__cast(target , luxe_tween_actuators_GenericActuator)).pause(); else {
		var library = luxe_tween_Actuate.getLibrary(target,false);
		if(library != null) {
			var _g = 0;
			while(_g < library.length) {
				var actuator = library[_g];
				++_g;
				actuator.pause();
			}
		}
	}
};
luxe_tween_Actuate.pauseAll = function() {
	var $it0 = luxe_tween_Actuate.targetLibraries.iterator();
	while( $it0.hasNext() ) {
		var library = $it0.next();
		var _g = 0;
		while(_g < library.length) {
			var actuator = library[_g];
			++_g;
			actuator.pause();
		}
	}
};
luxe_tween_Actuate.reset = function() {
	var $it0 = luxe_tween_Actuate.targetLibraries.iterator();
	while( $it0.hasNext() ) {
		var library = $it0.next();
		var i = library.length - 1;
		while(i >= 0) {
			library[i].stop(null,false,false);
			i--;
		}
	}
	luxe_tween_Actuate.targetLibraries = new haxe_ds_ObjectMap();
};
luxe_tween_Actuate.resume = function(target) {
	if(js_Boot.__instanceof(target,luxe_tween_actuators_GenericActuator)) (js_Boot.__cast(target , luxe_tween_actuators_GenericActuator)).resume(); else {
		var library = luxe_tween_Actuate.getLibrary(target,false);
		if(library != null) {
			var _g = 0;
			while(_g < library.length) {
				var actuator = library[_g];
				++_g;
				actuator.resume();
			}
		}
	}
};
luxe_tween_Actuate.resumeAll = function() {
	var $it0 = luxe_tween_Actuate.targetLibraries.iterator();
	while( $it0.hasNext() ) {
		var library = $it0.next();
		var _g = 0;
		while(_g < library.length) {
			var actuator = library[_g];
			++_g;
			actuator.resume();
		}
	}
};
luxe_tween_Actuate.stop = function(target,properties,complete,sendEvent) {
	if(sendEvent == null) sendEvent = true;
	if(complete == null) complete = false;
	if(target != null) {
		if(js_Boot.__instanceof(target,luxe_tween_actuators_GenericActuator)) (js_Boot.__cast(target , luxe_tween_actuators_GenericActuator)).stop(null,complete,sendEvent); else {
			var library = luxe_tween_Actuate.getLibrary(target,false);
			if(library != null) {
				if(typeof(properties) == "string") {
					var temp = { };
					Reflect.setField(temp,properties,null);
					properties = temp;
				} else if((properties instanceof Array) && properties.__enum__ == null) {
					var temp1 = { };
					var _g = 0;
					var _g1;
					_g1 = js_Boot.__cast(properties , Array);
					while(_g < _g1.length) {
						var property = _g1[_g];
						++_g;
						Reflect.setField(temp1,property,null);
					}
					properties = temp1;
				}
				var i = library.length - 1;
				while(i >= 0) {
					library[i].stop(properties,complete,sendEvent);
					i--;
				}
			}
		}
	}
};
luxe_tween_Actuate.timer = function(duration,customActuator) {
	return luxe_tween_Actuate.tween(new luxe_tween__$Actuate_TweenTimer(0),duration,new luxe_tween__$Actuate_TweenTimer(1),false,customActuator);
};
luxe_tween_Actuate.tween = function(target,duration,properties,overwrite,customActuator) {
	if(overwrite == null) overwrite = true;
	if(target != null) {
		if(duration > 0) {
			if(customActuator == null) customActuator = luxe_tween_Actuate.defaultActuator;
			var actuator = Type.createInstance(customActuator,[target,duration,properties]);
			var library = luxe_tween_Actuate.getLibrary(actuator.target);
			if(overwrite) {
				var i = library.length - 1;
				while(i >= 0) {
					library[i].stop(actuator.properties,false,false);
					i--;
				}
				library = luxe_tween_Actuate.getLibrary(actuator.target);
			}
			library.push(actuator);
			actuator.move();
			return actuator;
		} else return luxe_tween_Actuate.apply(target,properties,customActuator);
	}
	return null;
};
luxe_tween_Actuate.unload = function(actuator) {
	var target = actuator.target;
	if(luxe_tween_Actuate.targetLibraries.h.__keys__[target.__id__] != null) {
		HxOverrides.remove(luxe_tween_Actuate.targetLibraries.h[target.__id__],actuator);
		if(luxe_tween_Actuate.targetLibraries.h[target.__id__].length == 0) luxe_tween_Actuate.targetLibraries.remove(target);
	}
};
luxe_tween_Actuate.update = function(target,duration,start,end,overwrite) {
	if(overwrite == null) overwrite = true;
	var properties = { start : start, end : end};
	return luxe_tween_Actuate.tween(target,duration,properties,overwrite,luxe_tween_actuators_MethodActuator);
};
var luxe_tween__$Actuate_TweenTimer = function(progress) {
	this.progress = progress;
};
$hxClasses["luxe.tween._Actuate.TweenTimer"] = luxe_tween__$Actuate_TweenTimer;
luxe_tween__$Actuate_TweenTimer.__name__ = ["luxe","tween","_Actuate","TweenTimer"];
luxe_tween__$Actuate_TweenTimer.prototype = {
	__class__: luxe_tween__$Actuate_TweenTimer
};
var luxe_tween_MotionPath = function() {
	this._x = new luxe_tween_ComponentPath();
	this._y = new luxe_tween_ComponentPath();
	this._rotation = null;
};
$hxClasses["luxe.tween.MotionPath"] = luxe_tween_MotionPath;
luxe_tween_MotionPath.__name__ = ["luxe","tween","MotionPath"];
luxe_tween_MotionPath.prototype = {
	bezier: function(x,y,controlX,controlY,strength) {
		if(strength == null) strength = 1;
		this._x.addPath(new luxe_tween_BezierPath(x,controlX,strength));
		this._y.addPath(new luxe_tween_BezierPath(y,controlY,strength));
		return this;
	}
	,line: function(x,y,strength) {
		if(strength == null) strength = 1;
		this._x.addPath(new luxe_tween_LinearPath(x,strength));
		this._y.addPath(new luxe_tween_LinearPath(y,strength));
		return this;
	}
	,get_rotation: function() {
		if(this._rotation == null) this._rotation = new luxe_tween_RotationPath(this._x,this._y);
		return this._rotation;
	}
	,get_x: function() {
		return this._x;
	}
	,get_y: function() {
		return this._y;
	}
	,__class__: luxe_tween_MotionPath
	,__properties__: {get_y:"get_y",get_x:"get_x",get_rotation:"get_rotation"}
};
var luxe_tween_IComponentPath = function() { };
$hxClasses["luxe.tween.IComponentPath"] = luxe_tween_IComponentPath;
luxe_tween_IComponentPath.__name__ = ["luxe","tween","IComponentPath"];
luxe_tween_IComponentPath.prototype = {
	__class__: luxe_tween_IComponentPath
	,__properties__: {get_end:"get_end"}
};
var luxe_tween_ComponentPath = function() {
	this.paths = [];
	this.start = 0;
	this.totalStrength = 0;
};
$hxClasses["luxe.tween.ComponentPath"] = luxe_tween_ComponentPath;
luxe_tween_ComponentPath.__name__ = ["luxe","tween","ComponentPath"];
luxe_tween_ComponentPath.__interfaces__ = [luxe_tween_IComponentPath];
luxe_tween_ComponentPath.prototype = {
	addPath: function(path) {
		this.paths.push(path);
		this.totalStrength += path.strength;
	}
	,calculate: function(k) {
		if(this.paths.length == 1) return this.paths[0].calculate(this.start,k); else {
			var ratio = k * this.totalStrength;
			var lastEnd = this.start;
			var _g = 0;
			var _g1 = this.paths;
			while(_g < _g1.length) {
				var path = _g1[_g];
				++_g;
				if(ratio > path.strength) {
					ratio -= path.strength;
					lastEnd = path.end;
				} else return path.calculate(lastEnd,ratio / path.strength);
			}
		}
		return 0;
	}
	,get_end: function() {
		if(this.paths.length > 0) {
			var path = this.paths[this.paths.length - 1];
			return path.end;
		} else return this.start;
	}
	,__class__: luxe_tween_ComponentPath
	,__properties__: {get_end:"get_end"}
};
var luxe_tween_BezierPath = function(end,control,strength) {
	this.end = end;
	this.control = control;
	this.strength = strength;
};
$hxClasses["luxe.tween.BezierPath"] = luxe_tween_BezierPath;
luxe_tween_BezierPath.__name__ = ["luxe","tween","BezierPath"];
luxe_tween_BezierPath.prototype = {
	calculate: function(start,k) {
		return (1 - k) * (1 - k) * start + 2 * (1 - k) * k * this.control + k * k * this.end;
	}
	,__class__: luxe_tween_BezierPath
};
var luxe_tween_LinearPath = function(end,strength) {
	luxe_tween_BezierPath.call(this,end,0,strength);
};
$hxClasses["luxe.tween.LinearPath"] = luxe_tween_LinearPath;
luxe_tween_LinearPath.__name__ = ["luxe","tween","LinearPath"];
luxe_tween_LinearPath.__super__ = luxe_tween_BezierPath;
luxe_tween_LinearPath.prototype = $extend(luxe_tween_BezierPath.prototype,{
	calculate: function(start,k) {
		return start + k * (this.end - start);
	}
	,__class__: luxe_tween_LinearPath
});
var luxe_tween_RotationPath = function(x,y) {
	this.step = 0.01;
	this._x = x;
	this._y = y;
	this.offset = 0;
	this.start = this.calculate(0.0);
};
$hxClasses["luxe.tween.RotationPath"] = luxe_tween_RotationPath;
luxe_tween_RotationPath.__name__ = ["luxe","tween","RotationPath"];
luxe_tween_RotationPath.__interfaces__ = [luxe_tween_IComponentPath];
luxe_tween_RotationPath.prototype = {
	calculate: function(k) {
		var dX = this._x.calculate(k) - this._x.calculate(k + this.step);
		var dY = this._y.calculate(k) - this._y.calculate(k + this.step);
		var angle = Math.atan2(dY,dX) * (180 / Math.PI);
		angle = (angle + this.offset) % 360;
		return angle;
	}
	,get_end: function() {
		return this.calculate(1.0);
	}
	,__class__: luxe_tween_RotationPath
	,__properties__: {get_end:"get_end"}
};
var luxe_tween_actuators_MethodActuator = function(target,duration,properties) {
	this.currentParameters = [];
	this.tweenProperties = { };
	luxe_tween_actuators_SimpleActuator.call(this,target,duration,properties);
	if(!Object.prototype.hasOwnProperty.call(properties,"start")) this.properties.start = [];
	if(!Object.prototype.hasOwnProperty.call(properties,"end")) this.properties.end = this.properties.start;
	var _g1 = 0;
	var _g = this.properties.start.length;
	while(_g1 < _g) {
		var i = _g1++;
		this.currentParameters.push(null);
	}
};
$hxClasses["luxe.tween.actuators.MethodActuator"] = luxe_tween_actuators_MethodActuator;
luxe_tween_actuators_MethodActuator.__name__ = ["luxe","tween","actuators","MethodActuator"];
luxe_tween_actuators_MethodActuator.__super__ = luxe_tween_actuators_SimpleActuator;
luxe_tween_actuators_MethodActuator.prototype = $extend(luxe_tween_actuators_SimpleActuator.prototype,{
	apply: function() {
		this.callMethod(this.target,this.properties.end);
	}
	,complete: function(sendEvent) {
		if(sendEvent == null) sendEvent = true;
		var _g1 = 0;
		var _g = this.properties.start.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.currentParameters[i] = Reflect.field(this.tweenProperties,"param" + i);
		}
		this.callMethod(this.target,this.currentParameters);
		luxe_tween_actuators_SimpleActuator.prototype.complete.call(this,sendEvent);
	}
	,initialize: function() {
		var details;
		var propertyName;
		var start;
		var _g1 = 0;
		var _g = this.properties.start.length;
		while(_g1 < _g) {
			var i = _g1++;
			propertyName = "param" + i;
			start = this.properties.start[i];
			this.tweenProperties[propertyName] = start;
			if(typeof(start) == "number" || ((start | 0) === start)) {
				details = new luxe_tween_actuators_PropertyDetails(this.tweenProperties,propertyName,start,this.properties.end[i] - start);
				this.propertyDetails.push(details);
			}
		}
		this.detailsLength = this.propertyDetails.length;
		this.initialized = true;
	}
	,update: function(currentTime) {
		luxe_tween_actuators_SimpleActuator.prototype.update.call(this,currentTime);
		if(this.active) {
			var _g1 = 0;
			var _g = this.properties.start.length;
			while(_g1 < _g) {
				var i = _g1++;
				this.currentParameters[i] = Reflect.field(this.tweenProperties,"param" + i);
			}
			this.callMethod(this.target,this.currentParameters);
		}
	}
	,__class__: luxe_tween_actuators_MethodActuator
});
var luxe_tween_actuators_MotionPathActuator = function(target,duration,properties) {
	luxe_tween_actuators_SimpleActuator.call(this,target,duration,properties);
};
$hxClasses["luxe.tween.actuators.MotionPathActuator"] = luxe_tween_actuators_MotionPathActuator;
luxe_tween_actuators_MotionPathActuator.__name__ = ["luxe","tween","actuators","MotionPathActuator"];
luxe_tween_actuators_MotionPathActuator.__super__ = luxe_tween_actuators_SimpleActuator;
luxe_tween_actuators_MotionPathActuator.prototype = $extend(luxe_tween_actuators_SimpleActuator.prototype,{
	apply: function() {
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var propertyName = _g1[_g];
			++_g;
			if(Object.prototype.hasOwnProperty.call(this.target,propertyName)) Reflect.setField(this.target,propertyName,(js_Boot.__cast(Reflect.field(this.properties,propertyName) , luxe_tween_IComponentPath)).get_end()); else Reflect.setProperty(this.target,propertyName,(js_Boot.__cast(Reflect.field(this.properties,propertyName) , luxe_tween_IComponentPath)).get_end());
		}
	}
	,initialize: function() {
		var details;
		var path;
		var _g = 0;
		var _g1 = Reflect.fields(this.properties);
		while(_g < _g1.length) {
			var propertyName = _g1[_g];
			++_g;
			path = js_Boot.__cast(Reflect.field(this.properties,propertyName) , luxe_tween_IComponentPath);
			if(path != null) {
				var isField = true;
				if(Object.prototype.hasOwnProperty.call(this.target,propertyName)) path.start = Reflect.field(this.target,propertyName); else {
					isField = false;
					path.start = Reflect.getProperty(this.target,propertyName);
				}
				details = new luxe_tween_actuators_PropertyPathDetails(this.target,propertyName,path,isField);
				this.propertyDetails.push(details);
			}
		}
		this.detailsLength = this.propertyDetails.length;
		this.initialized = true;
	}
	,update: function(currentTime) {
		if(!this.paused) {
			var details;
			var easing;
			var tweenPosition = (currentTime - this.timeOffset) / this.duration;
			if(tweenPosition > 1) tweenPosition = 1;
			if(!this.initialized) this.initialize();
			if(!this.special) {
				easing = this._ease.calculate(tweenPosition);
				var _g = 0;
				var _g1 = this.propertyDetails;
				while(_g < _g1.length) {
					var details1 = _g1[_g];
					++_g;
					if(details1.isField) Reflect.setField(details1.target,details1.propertyName,(js_Boot.__cast(details1 , luxe_tween_actuators_PropertyPathDetails)).path.calculate(easing)); else Reflect.setProperty(details1.target,details1.propertyName,(js_Boot.__cast(details1 , luxe_tween_actuators_PropertyPathDetails)).path.calculate(easing));
				}
			} else {
				if(!this._reverse) easing = this._ease.calculate(tweenPosition); else easing = this._ease.calculate(1 - tweenPosition);
				var endValue;
				var _g2 = 0;
				var _g11 = this.propertyDetails;
				while(_g2 < _g11.length) {
					var details2 = _g11[_g2];
					++_g2;
					if(!this._snapping) {
						if(details2.isField) Reflect.setField(details2.target,details2.propertyName,(js_Boot.__cast(details2 , luxe_tween_actuators_PropertyPathDetails)).path.calculate(easing)); else Reflect.setProperty(details2.target,details2.propertyName,(js_Boot.__cast(details2 , luxe_tween_actuators_PropertyPathDetails)).path.calculate(easing));
					} else if(details2.isField) Reflect.setField(details2.target,details2.propertyName,Math.round((js_Boot.__cast(details2 , luxe_tween_actuators_PropertyPathDetails)).path.calculate(easing))); else Reflect.setProperty(details2.target,details2.propertyName,Math.round((js_Boot.__cast(details2 , luxe_tween_actuators_PropertyPathDetails)).path.calculate(easing)));
				}
			}
			if(tweenPosition == 1) {
				if(this._repeat == 0) {
					this.active = false;
					if(this.toggleVisible && this.getField(this.target,"alpha") == 0) this.setField(this.target,"visible",false);
					this.complete(true);
					return;
				} else {
					if(this._reflect) this._reverse = !this._reverse;
					this.startTime = currentTime;
					this.timeOffset = this.startTime + this._delay;
					if(this._repeat > 0) this._repeat--;
				}
			}
			if(this.sendChange) this.change();
		}
	}
	,__class__: luxe_tween_actuators_MotionPathActuator
});
var luxe_tween_actuators_PropertyDetails = function(target,propertyName,start,change,isField) {
	if(isField == null) isField = true;
	this.target = target;
	this.propertyName = propertyName;
	this.start = start;
	this.change = change;
	this.isField = isField;
};
$hxClasses["luxe.tween.actuators.PropertyDetails"] = luxe_tween_actuators_PropertyDetails;
luxe_tween_actuators_PropertyDetails.__name__ = ["luxe","tween","actuators","PropertyDetails"];
luxe_tween_actuators_PropertyDetails.prototype = {
	__class__: luxe_tween_actuators_PropertyDetails
};
var luxe_tween_actuators_PropertyPathDetails = function(target,propertyName,path,isField) {
	if(isField == null) isField = true;
	luxe_tween_actuators_PropertyDetails.call(this,target,propertyName,0,0,isField);
	this.path = path;
};
$hxClasses["luxe.tween.actuators.PropertyPathDetails"] = luxe_tween_actuators_PropertyPathDetails;
luxe_tween_actuators_PropertyPathDetails.__name__ = ["luxe","tween","actuators","PropertyPathDetails"];
luxe_tween_actuators_PropertyPathDetails.__super__ = luxe_tween_actuators_PropertyDetails;
luxe_tween_actuators_PropertyPathDetails.prototype = $extend(luxe_tween_actuators_PropertyDetails.prototype,{
	__class__: luxe_tween_actuators_PropertyPathDetails
});
var luxe_tween_easing_Linear = function() { };
$hxClasses["luxe.tween.easing.Linear"] = luxe_tween_easing_Linear;
luxe_tween_easing_Linear.__name__ = ["luxe","tween","easing","Linear"];
luxe_tween_easing_Linear.__properties__ = {get_easeNone:"get_easeNone"}
luxe_tween_easing_Linear.get_easeNone = function() {
	return new luxe_tween_easing_LinearEaseNone();
};
var luxe_tween_easing_LinearEaseNone = function() {
};
$hxClasses["luxe.tween.easing.LinearEaseNone"] = luxe_tween_easing_LinearEaseNone;
luxe_tween_easing_LinearEaseNone.__name__ = ["luxe","tween","easing","LinearEaseNone"];
luxe_tween_easing_LinearEaseNone.__interfaces__ = [luxe_tween_easing_IEasing];
luxe_tween_easing_LinearEaseNone.prototype = {
	calculate: function(k) {
		return k;
	}
	,ease: function(t,b,c,d) {
		return c * t / d + b;
	}
	,__class__: luxe_tween_easing_LinearEaseNone
};
var luxe_tween_easing_QuadEaseIn = function() {
};
$hxClasses["luxe.tween.easing.QuadEaseIn"] = luxe_tween_easing_QuadEaseIn;
luxe_tween_easing_QuadEaseIn.__name__ = ["luxe","tween","easing","QuadEaseIn"];
luxe_tween_easing_QuadEaseIn.__interfaces__ = [luxe_tween_easing_IEasing];
luxe_tween_easing_QuadEaseIn.prototype = {
	calculate: function(k) {
		return k * k;
	}
	,ease: function(t,b,c,d) {
		return c * (t /= d) * t + b;
	}
	,__class__: luxe_tween_easing_QuadEaseIn
};
var luxe_tween_easing_QuadEaseInOut = function() {
};
$hxClasses["luxe.tween.easing.QuadEaseInOut"] = luxe_tween_easing_QuadEaseInOut;
luxe_tween_easing_QuadEaseInOut.__name__ = ["luxe","tween","easing","QuadEaseInOut"];
luxe_tween_easing_QuadEaseInOut.__interfaces__ = [luxe_tween_easing_IEasing];
luxe_tween_easing_QuadEaseInOut.prototype = {
	calculate: function(k) {
		if((k *= 2) < 1) return 0.5 * k * k;
		return -0.5 * ((k - 1) * (k - 3) - 1);
	}
	,ease: function(t,b,c,d) {
		if((t /= d / 2) < 1) return c / 2 * t * t + b;
		return -c / 2 * ((t - 1) * (t - 3) - 1) + b;
	}
	,__class__: luxe_tween_easing_QuadEaseInOut
};
var luxe_utils_GeometryUtils = function() {
	this._v_cache = new phoenix_Vector();
};
$hxClasses["luxe.utils.GeometryUtils"] = luxe_utils_GeometryUtils;
luxe_utils_GeometryUtils.__name__ = ["luxe","utils","GeometryUtils"];
luxe_utils_GeometryUtils.prototype = {
	segments_for_smooth_circle: function(_radius,_smooth) {
		if(_smooth == null) _smooth = 5;
		return Std["int"](_smooth * Math.sqrt(_radius));
	}
	,random_point_in_unit_circle: function() {
		var _r = Math.sqrt(Math.random());
		var _t = (-1 + 2 * Math.random()) * 6.283185307179586;
		return new phoenix_Vector(_r * Math.cos(_t),_r * Math.sin(_t));
	}
	,point_in_polygon: function(_point,_offset,_verts) {
		if(_offset == null) _offset = new phoenix_Vector();
		_offset;
		var c = false;
		var nvert = _verts.length;
		var j = nvert - 1;
		var _g = 0;
		while(_g < nvert) {
			var i = _g++;
			if(_verts[i].y + _offset.y > _point.y != _verts[j].y + _offset.y > _point.y && _point.x < (_verts[j].x + _offset.x - (_verts[i].x + _offset.x)) * (_point.y - (_verts[i].y + _offset.y)) / (_verts[j].y + _offset.y - (_verts[i].y + _offset.y)) + (_verts[i].x + _offset.x)) c = !c;
			j = i;
		}
		return c;
	}
	,point_in_geometry: function(_point,_geometry) {
		var c = false;
		var nvert = _geometry.vertices.length;
		var j = nvert - 1;
		var _px = _point.x;
		var _py = _point.y;
		var _g = 0;
		while(_g < nvert) {
			var i = _g++;
			var _vert_i = _geometry.vertices[i].pos;
			var _vert_j = _geometry.vertices[j].pos;
			var _this = this._v_cache;
			var _x = _vert_i.x;
			var _y = _vert_i.y;
			var prev = _this.ignore_listeners;
			_this.ignore_listeners = true;
			_this.x = _x;
			if(_this._construct) _this.x; else {
				if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_x);
				_this.x;
			}
			_this.y = _y;
			if(_this._construct) _this.y; else {
				if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_y);
				_this.y;
			}
			_this.ignore_listeners = prev;
			if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_this.x);
			if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_this.y);
			_this;
			var _this1 = this._v_cache;
			var _m = _geometry.transform.get_world().get_matrix();
			var _x1 = _this1.x;
			var _y1 = _this1.y;
			var _z = _this1.z;
			var e = _m.elements;
			var _x2 = e[0] * _x1 + e[4] * _y1 + e[8] * _z + e[12];
			var _y2 = e[1] * _x1 + e[5] * _y1 + e[9] * _z + e[13];
			var _z1 = e[2] * _x1 + e[6] * _y1 + e[10] * _z + e[14];
			var prev1 = _this1.ignore_listeners;
			_this1.ignore_listeners = true;
			_this1.x = _x2;
			if(_this1._construct) _this1.x; else {
				if(_this1.listen_x != null && !_this1.ignore_listeners) _this1.listen_x(_x2);
				_this1.x;
			}
			_this1.y = _y2;
			if(_this1._construct) _this1.y; else {
				if(_this1.listen_y != null && !_this1.ignore_listeners) _this1.listen_y(_y2);
				_this1.y;
			}
			_this1.z = _z1;
			if(_this1._construct) _this1.z; else {
				if(_this1.listen_z != null && !_this1.ignore_listeners) _this1.listen_z(_z1);
				_this1.z;
			}
			_this1.ignore_listeners = prev1;
			if(_this1.listen_x != null && !_this1.ignore_listeners) _this1.listen_x(_this1.x);
			if(_this1.listen_y != null && !_this1.ignore_listeners) _this1.listen_y(_this1.y);
			if(_this1.listen_z != null && !_this1.ignore_listeners) _this1.listen_z(_this1.z);
			_this1;
			_this1;
			var _vert_i_x = this._v_cache.x;
			var _vert_i_y = this._v_cache.y;
			var _this2 = this._v_cache;
			var _x3 = _vert_j.x;
			var _y3 = _vert_j.y;
			var prev2 = _this2.ignore_listeners;
			_this2.ignore_listeners = true;
			_this2.x = _x3;
			if(_this2._construct) _this2.x; else {
				if(_this2.listen_x != null && !_this2.ignore_listeners) _this2.listen_x(_x3);
				_this2.x;
			}
			_this2.y = _y3;
			if(_this2._construct) _this2.y; else {
				if(_this2.listen_y != null && !_this2.ignore_listeners) _this2.listen_y(_y3);
				_this2.y;
			}
			_this2.ignore_listeners = prev2;
			if(_this2.listen_x != null && !_this2.ignore_listeners) _this2.listen_x(_this2.x);
			if(_this2.listen_y != null && !_this2.ignore_listeners) _this2.listen_y(_this2.y);
			_this2;
			var _this3 = this._v_cache;
			var _m1 = _geometry.transform.get_world().get_matrix();
			var _x4 = _this3.x;
			var _y4 = _this3.y;
			var _z2 = _this3.z;
			var e1 = _m1.elements;
			var _x5 = e1[0] * _x4 + e1[4] * _y4 + e1[8] * _z2 + e1[12];
			var _y5 = e1[1] * _x4 + e1[5] * _y4 + e1[9] * _z2 + e1[13];
			var _z3 = e1[2] * _x4 + e1[6] * _y4 + e1[10] * _z2 + e1[14];
			var prev3 = _this3.ignore_listeners;
			_this3.ignore_listeners = true;
			_this3.x = _x5;
			if(_this3._construct) _this3.x; else {
				if(_this3.listen_x != null && !_this3.ignore_listeners) _this3.listen_x(_x5);
				_this3.x;
			}
			_this3.y = _y5;
			if(_this3._construct) _this3.y; else {
				if(_this3.listen_y != null && !_this3.ignore_listeners) _this3.listen_y(_y5);
				_this3.y;
			}
			_this3.z = _z3;
			if(_this3._construct) _this3.z; else {
				if(_this3.listen_z != null && !_this3.ignore_listeners) _this3.listen_z(_z3);
				_this3.z;
			}
			_this3.ignore_listeners = prev3;
			if(_this3.listen_x != null && !_this3.ignore_listeners) _this3.listen_x(_this3.x);
			if(_this3.listen_y != null && !_this3.ignore_listeners) _this3.listen_y(_this3.y);
			if(_this3.listen_z != null && !_this3.ignore_listeners) _this3.listen_z(_this3.z);
			_this3;
			_this3;
			var _vert_j_x = this._v_cache.x;
			var _vert_j_y = this._v_cache.y;
			if(_vert_i_y > _point.y != _vert_j_y > _point.y && _point.x < (_vert_j_x - _vert_i_x) * (_point.y - _vert_i_y) / (_vert_j_y - _vert_i_y) + _vert_i_x) c = !c;
			j = i;
		}
		return c;
	}
	,intersect_ray_plane: function(_ray_start,_ray_dir,_plane_normal,_plane_point) {
		var part1;
		var other = new phoenix_Vector(_plane_point.x - _ray_start.x,_plane_point.y - _ray_start.y,_plane_point.z - _ray_start.z);
		part1 = _plane_normal.x * other.x + _plane_normal.y * other.y + _plane_normal.z * other.z;
		var part2 = _plane_normal.x * _ray_dir.x + _plane_normal.y * _ray_dir.y + _plane_normal.z * _ray_dir.z;
		var T = part1 / part2;
		var b = new phoenix_Vector(_ray_dir.x * T,_ray_dir.y * T,_ray_dir.z * T);
		return new phoenix_Vector(_ray_start.x + b.x,_ray_start.y + b.y,_ray_start.z + b.z);
	}
	,__class__: luxe_utils_GeometryUtils
};
var luxe_utils_Maths = function() {
};
$hxClasses["luxe.utils.Maths"] = luxe_utils_Maths;
luxe_utils_Maths.__name__ = ["luxe","utils","Maths"];
luxe_utils_Maths.fixed = function(value,precision) {
	var n = Math.pow(10,precision);
	return (value * n | 0) / n;
};
luxe_utils_Maths.lerp = function(value,target,t) {
	if(t < 0) t = 0; else if(t > 1) t = 1; else t = t;
	return value + t * (target - value);
};
luxe_utils_Maths.weighted_avg = function(value,target,slowness) {
	if(slowness == 0) slowness = 0.00000001;
	return (value * (slowness - 1) + target) / slowness;
};
luxe_utils_Maths.clamp = function(value,a,b) {
	if(value < a) return a; else if(value > b) return b; else return value;
};
luxe_utils_Maths.clampi = function(value,a,b) {
	if(value < a) return a; else if(value > b) return b; else return value;
};
luxe_utils_Maths.clamp_bottom = function(value,a) {
	if(value < a) return a; else return value;
};
luxe_utils_Maths.within_range = function(value,start_range,end_range) {
	return value >= start_range && value <= end_range;
};
luxe_utils_Maths.wrap_angle = function(degrees,lower,upper) {
	var _radians = degrees * 0.017453292519943278;
	var _distance = upper - lower;
	var _times = Math.floor((degrees - lower) / _distance);
	return degrees - _times * _distance;
};
luxe_utils_Maths.nearest_power_of_two = function(_value) {
	_value--;
	_value |= _value >> 1;
	_value |= _value >> 2;
	_value |= _value >> 4;
	_value |= _value >> 8;
	_value |= _value >> 16;
	_value++;
	return _value;
};
luxe_utils_Maths.map_linear = function(value,a1,a2,b1,b2) {
	return b1 + (value - a1) * (b2 - b1) / (a2 - a1);
};
luxe_utils_Maths.smoothstep = function(x,min,max) {
	if(x <= min) return 0;
	if(x >= max) return 1;
	x = (x - min) / (max - min);
	return x * x * (3 - 2 * x);
};
luxe_utils_Maths.smootherstep = function(x,min,max) {
	if(x <= min) return 0;
	if(x >= max) return 1;
	x = (x - min) / (max - min);
	return x * x * x * (x * (x * 6 - 15) + 10);
};
luxe_utils_Maths.sign = function(x) {
	if(x >= 0) return 1; else return -1;
};
luxe_utils_Maths.sign0 = function(x) {
	if(x < 0) return -1; else if(x > 0) return 1; else return 0;
};
luxe_utils_Maths.radians = function(degrees) {
	return degrees * 0.017453292519943278;
};
luxe_utils_Maths.degrees = function(radians) {
	return radians * 57.29577951308238;
};
luxe_utils_Maths.vec_lengthsq = function(x,y) {
	return x * x + y * y;
};
luxe_utils_Maths.vec_length = function(x,y) {
	return Math.sqrt(x * x + y * y);
};
luxe_utils_Maths.vec_normalize = function(length,component) {
	if(length == 0) return 0;
	return component /= length;
};
luxe_utils_Maths.vec_dot = function(x,y,otherx,othery) {
	return x * otherx + y * othery;
};
luxe_utils_Maths.prototype = {
	__class__: luxe_utils_Maths
};
var luxe_utils_Random = function(_initial_seed) {
	if(!(_initial_seed > 0)) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("_initial_seed > 0" + (" ( " + "initial negative seed will return negative random results, if this was intentional, define luxe_random_allow_negative_seed" + " )")));
	this.initial = this.seed = _initial_seed;
	this.seed = this.initial;
};
$hxClasses["luxe.utils.Random"] = luxe_utils_Random;
luxe_utils_Random.__name__ = ["luxe","utils","Random"];
luxe_utils_Random.prototype = {
	get: function() {
		return (this.seed = this.seed * 16807 % 2147483647) / 2147483647 + 0.000000000233;
	}
	,'float': function(min,max) {
		if(max == null) {
			max = min;
			min = 0;
		}
		return ((this.seed = this.seed * 16807 % 2147483647) / 2147483647 + 0.000000000233) * (max - min) + min;
	}
	,'int': function(min,max) {
		if(max == null) {
			max = min;
			min = 0;
		}
		return Math.floor(this["float"](min,max));
	}
	,bool: function(chance) {
		if(chance == null) chance = 0.5;
		return (this.seed = this.seed * 16807 % 2147483647) / 2147483647 + 0.000000000233 < chance;
	}
	,sign: function(chance) {
		if(chance == null) chance = 0.5;
		if((this.seed = this.seed * 16807 % 2147483647) / 2147483647 + 0.000000000233 < chance) return 1; else return -1;
	}
	,bit: function(chance) {
		if(chance == null) chance = 0.5;
		if((this.seed = this.seed * 16807 % 2147483647) / 2147483647 + 0.000000000233 < chance) return 1; else return 0;
	}
	,reset: function() {
		var s = this.seed;
		this.initial = this.seed = s;
		this.initial;
	}
	,set_initial: function(_initial) {
		this.initial = this.seed = _initial;
		return this.initial;
	}
	,__class__: luxe_utils_Random
	,__properties__: {set_initial:"set_initial"}
};
var luxe_utils_Utils = function(_luxe) {
	this.core = _luxe;
	this.geometry = new luxe_utils_GeometryUtils();
	this.random = new luxe_utils_Random(Math.random() * 2147483647);
	this._byte_levels = ["bytes","Kb","MB","GB","TB"];
};
$hxClasses["luxe.utils.Utils"] = luxe_utils_Utils;
luxe_utils_Utils.__name__ = ["luxe","utils","Utils"];
luxe_utils_Utils.prototype = {
	pos_info: function(pos) {
		return "" + pos.fileName + ":" + pos.lineNumber + ":(" + pos.className + ":" + pos.methodName + ")";
	}
	,uniqueid: function(val) {
		if(val == null) val = Std.random(2147483647);
		var to_char = function(value) {
			if(value > 9) {
				var ascii = 65 + (value - 10);
				if(ascii > 90) ascii += 6;
				return String.fromCharCode(ascii);
			} else return (value == null?"null":"" + value).charAt(0);
		};
		var r = val % 62 | 0;
		var q = val / 62 | 0;
		if(q > 0) return this.uniqueid(q) + to_char(r); else return Std.string(to_char(r));
	}
	,uniquehash: function() {
		return this.hash(this.uniqueid());
	}
	,hash: function(string) {
		return this.hashdjb2(string);
	}
	,hashdjb2: function(string) {
		var _hash = 5381;
		var _g1 = 0;
		var _g = string.length;
		while(_g1 < _g) {
			var i = _g1++;
			_hash = (_hash << 5) + _hash + HxOverrides.cca(string,i);
		}
		return _hash;
	}
	,uniqueid2: function() {
		return haxe_crypto_Md5.encode(Std.string((window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start) * Math.random()));
	}
	,stacktrace: function(_depth) {
		if(_depth == null) _depth = 100;
		var result = "\n";
		var stack = haxe_CallStack.callStack();
		stack.shift();
		stack.reverse();
		var total = Std["int"](Math.min(stack.length,_depth));
		var _g = 0;
		while(_g < total) {
			var i = _g++;
			var stackitem = stack[i];
			{
				var _g1 = stack[i];
				switch(_g1[1]) {
				case 2:
					var line = _g1[4];
					var file = _g1[3];
					var s = _g1[2];
					if(s != null) switch(s[1]) {
					case 3:
						var method = s[3];
						var classname = s[2];
						result += "   at " + file + ":" + line + ": " + classname + "." + method;
						break;
					default:
					} else {
					}
					break;
				default:
				}
			}
			if(i != total - 1) result += "\n";
		}
		return result;
	}
	,path_is_relative: function(_path) {
		return _path.charAt(0) != "#" && _path.charAt(0) != "/" && _path.indexOf(":\\") == -1 && _path.indexOf(":/") == -1 && (_path.indexOf("//") == -1 || _path.indexOf("//") > _path.indexOf("#") || _path.indexOf("//") > _path.indexOf("?"));
	}
	,find_assets_sequence: function(_name,_ext,_start) {
		if(_start == null) _start = "1";
		if(_ext == null) _ext = ".png";
		var _final = [];
		var _sequence_type = "";
		var _pattern_regex = null;
		var _type0 = _name + _start + _ext;
		var _type0_re = new EReg("(" + _name + ")(\\d+\\b)","gi");
		var _type1 = _name + "_" + _start + _ext;
		var _type1_re = new EReg("(" + _name + "_)(\\d+\\b)","gi");
		var _type2 = _name + "-" + _start + _ext;
		var _type2_re = new EReg("(" + _name + "-)(\\d+\\b)","gi");
		if(Luxe.resources.cache.exists(_type0)) {
			_sequence_type = _type0;
			_pattern_regex = _type0_re;
		} else if(Luxe.resources.cache.exists(_type1)) {
			_sequence_type = _type1;
			_pattern_regex = _type1_re;
		} else if(Luxe.resources.cache.exists(_type2)) {
			_sequence_type = _type2;
			_pattern_regex = _type2_re;
		} else haxe_Log.trace("Sequence requested from " + _name + " but no assets found like `" + _type0 + "` or `" + _type1 + "` or `" + _type2 + "`",{ fileName : "Utils.hx", lineNumber : 168, className : "luxe.utils.Utils", methodName : "find_assets_sequence"});
		if(_sequence_type != "") {
			var $it0 = this.core.resources.cache.iterator();
			while( $it0.hasNext() ) {
				var _asset = $it0.next();
				if(_pattern_regex.match(_asset.id)) _final.push(_asset.id);
			}
			_final.sort(function(a,b) {
				if(a == b) return 0;
				_pattern_regex.match(a);
				var _a_index = Std.parseInt(_pattern_regex.matched(2));
				_pattern_regex.match(b);
				var _b_index = Std.parseInt(_pattern_regex.matched(2));
				if(_a_index < _b_index) return -1;
				return 1;
			});
		}
		return _final;
	}
	,text_wrap_column_knuth_plass: function(_string,_column) {
		if(_column == null) _column = 80;
		var result = [];
		var words = [];
		var lengths = [];
		var badness;
		var _g = new haxe_ds_IntMap();
		_g.h[0] = 0;
		badness = _g;
		var extra = new haxe_ds_IntMap();
		var s = _string;
		var rgx = new EReg("(\\b[^\\s]+\\b)","gm");
		while(rgx.match(s)) {
			words.push(rgx.matched(1));
			s = rgx.matchedRight();
		}
		if(words.length == 0) words.push(_string);
		words;
		words.map(function(w) {
			lengths.push(w.length);
		});
		var n = words.length;
		var _g2 = 1;
		var _g1 = n + 1;
		while(_g2 < _g1) {
			var i = _g2++;
			var sums = new haxe_ds_IntMap();
			var k = i;
			while((function($this) {
				var $r;
				var total = 0;
				{
					var _g3 = k - 1;
					while(_g3 < i) {
						var i1 = _g3++;
						total += lengths[i1];
					}
				}
				$r = total + (i - k + 1);
				return $r;
			}(this)) <= _column && k > 0) {
				var a;
				a = _column - (function($this) {
					var $r;
					var total1 = 0;
					{
						var _g4 = k - 1;
						while(_g4 < i) {
							var i2 = _g4++;
							total1 += lengths[i2];
						}
					}
					$r = total1 + (i - k + 1);
					return $r;
				}(this));
				var k1 = Std["int"](Math.pow(a,3) + badness.h[k - 1]);
				sums.h[k1] = k;
				k;
				k -= 1;
			}
			var mn;
			var min = 1073741823;
			var $it0 = sums.keys();
			while( $it0.hasNext() ) {
				var item = $it0.next();
				if(item < min) min = item;
			}
			mn = min;
			{
				badness.h[i] = mn;
				mn;
			}
			var v = sums.h[mn];
			extra.h[i] = v;
			v;
		}
		var line = 1;
		while(n > 1) {
			result.unshift(words.slice(extra.h[n] - 1,n).join(" "));
			n = extra.h[n] - 1;
			line += 1;
		}
		if(result.length == 0) result.push(_string);
		return result;
	}
	,text_wrap_column: function(_text,_brk,_column) {
		if(_column == null) _column = 80;
		if(_brk == null) _brk = "\n";
		var result = new EReg("(.{1," + _column + "})(?: +|$)\n?|(.{" + _column + "})","gimu").replace(_text,"$1$2" + _brk);
		return StringTools.rtrim(result);
	}
	,bytes_to_string: function(bytes,precision) {
		if(precision == null) precision = 3;
		var index;
		if(bytes == 0) index = 0; else index = Math.floor(Math.log(bytes) / Math.log(1024));
		var _byte_value = bytes / Math.pow(1024,index);
		_byte_value = luxe_utils_Maths.fixed(_byte_value,precision);
		return _byte_value + " " + this._byte_levels[index];
	}
	,array_to_bytes: function(array) {
		if(array == null) return null;
		var bytes = haxe_io_Bytes.alloc(array.length);
		var _g1 = 0;
		var _g = bytes.length;
		while(_g1 < _g) {
			var n = _g1++;
			bytes.b[n] = array[n] & 255;
		}
		return bytes;
	}
	,premultiply_alpha: function(_pixels) {
		var count = _pixels.length;
		var read = _pixels[0];
		var index = 0;
		while(index < count) {
			var r = _pixels[index];
			var g = _pixels[index + 1];
			var b = _pixels[index + 2];
			var a = _pixels[index + 3] / 255.0;
			_pixels[index] = r * a | 0;
			_pixels[index + 1] = g * a | 0;
			_pixels[index + 2] = b * a | 0;
			index += 4;
		}
		return _pixels;
	}
	,premultiply_alpha_normalized: function(_pixels) {
		var count = _pixels.length;
		var read = _pixels[0];
		var index = 0;
		while(index < count) {
			var r = _pixels[index];
			var g = _pixels[index + 1];
			var b = _pixels[index + 2];
			var a = _pixels[index + 3];
			_pixels[index] = r * a;
			_pixels[index + 1] = g * a;
			_pixels[index + 2] = b * a;
			index += 4;
		}
		return _pixels;
	}
	,__class__: luxe_utils_Utils
};
var luxe_utils_unifill__$CodePoint_CodePoint_$Impl_$ = {};
$hxClasses["luxe.utils.unifill._CodePoint.CodePoint_Impl_"] = luxe_utils_unifill__$CodePoint_CodePoint_$Impl_$;
luxe_utils_unifill__$CodePoint_CodePoint_$Impl_$.__name__ = ["luxe","utils","unifill","_CodePoint","CodePoint_Impl_"];
luxe_utils_unifill__$CodePoint_CodePoint_$Impl_$.cons = function(a,b) {
	return luxe_utils_unifill_InternalEncoding.fromCodePoint(a) + b;
};
luxe_utils_unifill__$CodePoint_CodePoint_$Impl_$.snoc = function(a,b) {
	return a + luxe_utils_unifill_InternalEncoding.fromCodePoint(b);
};
luxe_utils_unifill__$CodePoint_CodePoint_$Impl_$.addInt = function(a,b) {
	return a + b;
};
luxe_utils_unifill__$CodePoint_CodePoint_$Impl_$.sub = function(a,b) {
	return a - b;
};
luxe_utils_unifill__$CodePoint_CodePoint_$Impl_$.subInt = function(a,b) {
	return a - b;
};
luxe_utils_unifill__$CodePoint_CodePoint_$Impl_$._new = function(code) {
	var this1;
	if(!(0 <= code && code <= 1114111 && !(55296 <= code && code <= 56319) && !(56320 <= code && code <= 57343))) throw new js__$Boot_HaxeError(luxe_utils_unifill_Exception.InvalidCodePoint(code));
	this1 = code;
	return this1;
};
luxe_utils_unifill__$CodePoint_CodePoint_$Impl_$.toString = function(this1) {
	return luxe_utils_unifill_InternalEncoding.fromCodePoint(this1);
};
luxe_utils_unifill__$CodePoint_CodePoint_$Impl_$.toInt = function(this1) {
	return this1;
};
var luxe_utils_unifill_CodePointIter = function(s) {
	this.i = 0;
	this.string = s;
	this.index = 0;
	this.endIndex = s.length;
};
$hxClasses["luxe.utils.unifill.CodePointIter"] = luxe_utils_unifill_CodePointIter;
luxe_utils_unifill_CodePointIter.__name__ = ["luxe","utils","unifill","CodePointIter"];
luxe_utils_unifill_CodePointIter.prototype = {
	hasNext: function() {
		return this.index < this.endIndex;
	}
	,next: function() {
		this.i = this.index;
		this.index += luxe_utils_unifill_InternalEncoding.codePointWidthAt(this.string,this.index);
		return luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointAt(this.string,this.i);
	}
	,__class__: luxe_utils_unifill_CodePointIter
};
var luxe_utils_unifill_Exception = $hxClasses["luxe.utils.unifill.Exception"] = { __ename__ : ["luxe","utils","unifill","Exception"], __constructs__ : ["InvalidCodePoint","InvalidCodeUnitSequence"] };
luxe_utils_unifill_Exception.InvalidCodePoint = function(code) { var $x = ["InvalidCodePoint",0,code]; $x.__enum__ = luxe_utils_unifill_Exception; $x.toString = $estr; return $x; };
luxe_utils_unifill_Exception.InvalidCodeUnitSequence = function(index) { var $x = ["InvalidCodeUnitSequence",1,index]; $x.__enum__ = luxe_utils_unifill_Exception; $x.toString = $estr; return $x; };
var luxe_utils_unifill_InternalEncoding = function() { };
$hxClasses["luxe.utils.unifill.InternalEncoding"] = luxe_utils_unifill_InternalEncoding;
luxe_utils_unifill_InternalEncoding.__name__ = ["luxe","utils","unifill","InternalEncoding"];
luxe_utils_unifill_InternalEncoding.__properties__ = {get_internalEncoding:"get_internalEncoding"}
luxe_utils_unifill_InternalEncoding.get_internalEncoding = function() {
	return "UTF-16";
};
luxe_utils_unifill_InternalEncoding.codeUnitAt = function(s,index) {
	return s.charCodeAt(index);
};
luxe_utils_unifill_InternalEncoding.codePointAt = function(s,index) {
	return luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointAt(s,index);
};
luxe_utils_unifill_InternalEncoding.charAt = function(s,index) {
	var this1;
	var this2 = s;
	var s1;
	var len;
	var c = this2.charCodeAt(index);
	if(!(55296 <= c && c <= 56319)) len = 1; else len = 2;
	var s2 = HxOverrides.substr(this2,index,len);
	s1 = s2;
	this1 = s1;
	return this1;
};
luxe_utils_unifill_InternalEncoding.codePointCount = function(s,beginIndex,endIndex) {
	return luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointCount(s,beginIndex,endIndex);
};
luxe_utils_unifill_InternalEncoding.codePointWidthAt = function(s,index) {
	var c = s.charCodeAt(index);
	if(!(55296 <= c && c <= 56319)) return 1; else return 2;
};
luxe_utils_unifill_InternalEncoding.codePointWidthBefore = function(s,index) {
	var this1 = s;
	return luxe_utils_unifill__$Utf16_Utf16Impl.find_prev_code_point(function(i) {
		return this1.charCodeAt(i);
	},index);
};
luxe_utils_unifill_InternalEncoding.offsetByCodePoints = function(s,index,codePointOffset) {
	var this1 = s;
	if(codePointOffset >= 0) {
		var index1 = index;
		var len = this1.length;
		var i = 0;
		while(i < codePointOffset && index1 < len) {
			var c = this1.charCodeAt(index1);
			if(!(55296 <= c && c <= 56319)) index1 += 1; else index1 += 2;
			++i;
		}
		return index1;
	} else {
		var index2 = index;
		var count = 0;
		while(count < -codePointOffset && 0 < index2) {
			var this2 = [this1];
			index2 -= luxe_utils_unifill__$Utf16_Utf16Impl.find_prev_code_point((function(this2) {
				return function(i1) {
					return this2[0].charCodeAt(i1);
				};
			})(this2),index2);
			++count;
		}
		return index2;
	}
};
luxe_utils_unifill_InternalEncoding.backwardOffsetByCodePoints = function(s,index,codePointOffset) {
	var this1 = s;
	var codePointOffset1 = -codePointOffset;
	if(codePointOffset1 >= 0) {
		var index1 = index;
		var len = this1.length;
		var i = 0;
		while(i < codePointOffset1 && index1 < len) {
			var c = this1.charCodeAt(index1);
			if(!(55296 <= c && c <= 56319)) index1 += 1; else index1 += 2;
			++i;
		}
		return index1;
	} else {
		var index2 = index;
		var count = 0;
		while(count < -codePointOffset1 && 0 < index2) {
			var this2 = [this1];
			index2 -= luxe_utils_unifill__$Utf16_Utf16Impl.find_prev_code_point((function(this2) {
				return function(i1) {
					return this2[0].charCodeAt(i1);
				};
			})(this2),index2);
			++count;
		}
		return index2;
	}
};
luxe_utils_unifill_InternalEncoding.fromCodePoint = function(codePoint) {
	var this1;
	if(codePoint <= 65535) {
		var s;
		var s1 = String.fromCharCode(codePoint);
		s = s1;
		this1 = s;
	} else {
		var s2;
		var s3 = String.fromCharCode((codePoint >> 10) + 55232) + String.fromCharCode(codePoint & 1023 | 56320);
		s2 = s3;
		this1 = s2;
	}
	return this1;
};
luxe_utils_unifill_InternalEncoding.fromCodePoints = function(codePoints) {
	var this1;
	var buf = new StringBuf();
	var $it0 = $iterator(codePoints)();
	while( $it0.hasNext() ) {
		var c = $it0.next();
		luxe_utils_unifill__$Utf16_Utf16Impl.encode_code_point(function(x) {
			buf.b += String.fromCharCode(x);
		},c);
	}
	this1 = buf.b;
	return this1;
};
luxe_utils_unifill_InternalEncoding.validate = function(s) {
	luxe_utils_unifill__$Utf16_Utf16_$Impl_$.validate(s);
};
luxe_utils_unifill_InternalEncoding.isValidString = function(s) {
	try {
		luxe_utils_unifill__$Utf16_Utf16_$Impl_$.validate(s);
		return true;
	} catch( e ) {
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		if( js_Boot.__instanceof(e,luxe_utils_unifill_Exception) ) {
			switch(e[1]) {
			case 1:
				var index = e[2];
				return false;
			default:
				throw new js__$Boot_HaxeError(e);
			}
		} else throw(e);
	}
};
var luxe_utils_unifill_InternalEncodingIter = function(s,beginIndex,endIndex) {
	this.i = 0;
	this.string = s;
	this.index = beginIndex;
	this.endIndex = endIndex;
};
$hxClasses["luxe.utils.unifill.InternalEncodingIter"] = luxe_utils_unifill_InternalEncodingIter;
luxe_utils_unifill_InternalEncodingIter.__name__ = ["luxe","utils","unifill","InternalEncodingIter"];
luxe_utils_unifill_InternalEncodingIter.prototype = {
	hasNext: function() {
		return this.index < this.endIndex;
	}
	,next: function() {
		this.i = this.index;
		this.index += luxe_utils_unifill_InternalEncoding.codePointWidthAt(this.string,this.index);
		return this.i;
	}
	,__class__: luxe_utils_unifill_InternalEncodingIter
};
var luxe_utils_unifill_Unicode = function() { };
$hxClasses["luxe.utils.unifill.Unicode"] = luxe_utils_unifill_Unicode;
luxe_utils_unifill_Unicode.__name__ = ["luxe","utils","unifill","Unicode"];
luxe_utils_unifill_Unicode.decodeSurrogate = function(hi,lo) {
	return hi - 55232 << 10 | lo & 1023;
};
luxe_utils_unifill_Unicode.encodeHighSurrogate = function(c) {
	return (c >> 10) + 55232;
};
luxe_utils_unifill_Unicode.encodeLowSurrogate = function(c) {
	return c & 1023 | 56320;
};
luxe_utils_unifill_Unicode.isScalar = function(code) {
	return 0 <= code && code <= 1114111 && !(55296 <= code && code <= 56319) && !(56320 <= code && code <= 57343);
};
luxe_utils_unifill_Unicode.isHighSurrogate = function(code) {
	return 55296 <= code && code <= 56319;
};
luxe_utils_unifill_Unicode.isLowSurrogate = function(code) {
	return 56320 <= code && code <= 57343;
};
var luxe_utils_unifill_Unifill = function() { };
$hxClasses["luxe.utils.unifill.Unifill"] = luxe_utils_unifill_Unifill;
luxe_utils_unifill_Unifill.__name__ = ["luxe","utils","unifill","Unifill"];
luxe_utils_unifill_Unifill.uLength = function(s) {
	return luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointCount(s,0,s.length);
};
luxe_utils_unifill_Unifill.uCharAt = function(s,index) {
	var i = luxe_utils_unifill_InternalEncoding.offsetByCodePoints(s,0,index);
	return luxe_utils_unifill_InternalEncoding.charAt(s,i);
};
luxe_utils_unifill_Unifill.uCharCodeAt = function(s,index) {
	var i = luxe_utils_unifill_InternalEncoding.offsetByCodePoints(s,0,index);
	return luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointAt(s,i);
};
luxe_utils_unifill_Unifill.uCodePointAt = function(s,index) {
	return luxe_utils_unifill_Unifill.uCharCodeAt(s,index);
};
luxe_utils_unifill_Unifill.uIndexOf = function(s,value,startIndex) {
	if(startIndex == null) startIndex = 0;
	var index = s.indexOf(value,luxe_utils_unifill_InternalEncoding.offsetByCodePoints(s,0,startIndex));
	if(index >= 0) return luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointCount(s,0,index); else return -1;
};
luxe_utils_unifill_Unifill.uLastIndexOf = function(s,value,startIndex) {
	if(startIndex == null) startIndex = s.length - 1;
	var index = s.lastIndexOf(value,luxe_utils_unifill_InternalEncoding.offsetByCodePoints(s,0,startIndex));
	if(index >= 0) return luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointCount(s,0,index); else return -1;
};
luxe_utils_unifill_Unifill.uSplit = function(s,delimiter) {
	if(delimiter.length == 0) {
		var _g = [];
		var _g1_i = 0;
		var _g1_string = s;
		var _g1_index = 0;
		var _g1_endIndex = s.length;
		while(_g1_index < _g1_endIndex) {
			var i;
			_g1_i = _g1_index;
			_g1_index += luxe_utils_unifill_InternalEncoding.codePointWidthAt(_g1_string,_g1_index);
			i = _g1_i;
			_g.push(luxe_utils_unifill_InternalEncoding.charAt(s,i));
		}
		return _g;
	} else return s.split(delimiter);
};
luxe_utils_unifill_Unifill.uSubstr = function(s,startIndex,length) {
	var si = luxe_utils_unifill_InternalEncoding.offsetByCodePoints(s,startIndex >= 0?0:s.length,startIndex);
	var ei;
	if(length == null) ei = s.length; else if(length < 0) ei = si; else ei = luxe_utils_unifill_InternalEncoding.offsetByCodePoints(s,si,length);
	return s.substring(si,ei);
};
luxe_utils_unifill_Unifill.uSubstring = function(s,startIndex,endIndex) {
	var si;
	if(startIndex < 0) si = 0; else si = luxe_utils_unifill_InternalEncoding.offsetByCodePoints(s,0,startIndex);
	var ei;
	if(endIndex == null) ei = s.length; else if(endIndex < 0) ei = 0; else ei = luxe_utils_unifill_InternalEncoding.offsetByCodePoints(s,0,endIndex);
	return s.substring(si,ei);
};
luxe_utils_unifill_Unifill.uIterator = function(s) {
	return new luxe_utils_unifill_CodePointIter(s);
};
luxe_utils_unifill_Unifill.uCompare = function(a,b) {
	var aiter_i = 0;
	var aiter_string = a;
	var aiter_index = 0;
	var aiter_endIndex = a.length;
	var biter_i = 0;
	var biter_string = b;
	var biter_index = 0;
	var biter_endIndex = b.length;
	while(aiter_index < aiter_endIndex && biter_index < biter_endIndex) {
		var acode = luxe_utils_unifill_InternalEncoding.codePointAt(a,(function($this) {
			var $r;
			aiter_i = aiter_index;
			aiter_index += luxe_utils_unifill_InternalEncoding.codePointWidthAt(aiter_string,aiter_index);
			$r = aiter_i;
			return $r;
		}(this)));
		var bcode = luxe_utils_unifill_InternalEncoding.codePointAt(b,(function($this) {
			var $r;
			biter_i = biter_index;
			biter_index += luxe_utils_unifill_InternalEncoding.codePointWidthAt(biter_string,biter_index);
			$r = biter_i;
			return $r;
		}(this)));
		if(acode < bcode) return -1;
		if(acode > bcode) return 1;
	}
	if(biter_index < biter_endIndex) return -1;
	if(aiter_index < aiter_endIndex) return 1;
	return 0;
};
luxe_utils_unifill_Unifill.uToString = function(codePoints) {
	return luxe_utils_unifill_InternalEncoding.fromCodePoints(codePoints);
};
var luxe_utils_unifill__$Utf16_Utf16_$Impl_$ = {};
$hxClasses["luxe.utils.unifill._Utf16.Utf16_Impl_"] = luxe_utils_unifill__$Utf16_Utf16_$Impl_$;
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.__name__ = ["luxe","utils","unifill","_Utf16","Utf16_Impl_"];
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.__properties__ = {get_length:"get_length"}
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.fromCodePoint = function(codePoint) {
	if(codePoint <= 65535) {
		var s;
		var s1 = String.fromCharCode(codePoint);
		s = s1;
		return s;
	} else {
		var s2;
		var s3 = String.fromCharCode((codePoint >> 10) + 55232) + String.fromCharCode(codePoint & 1023 | 56320);
		s2 = s3;
		return s2;
	}
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.fromCodePoints = function(codePoints) {
	var buf = new StringBuf();
	var $it0 = $iterator(codePoints)();
	while( $it0.hasNext() ) {
		var c = $it0.next();
		luxe_utils_unifill__$Utf16_Utf16Impl.encode_code_point(function(x) {
			buf.b += String.fromCharCode(x);
		},c);
	}
	return buf.b;
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.fromString = function(s) {
	return s;
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.fromArray = function(a) {
	var s;
	var buf_b = "";
	var _g = 0;
	while(_g < a.length) {
		var x = a[_g];
		++_g;
		buf_b += String.fromCharCode(x);
	}
	s = buf_b;
	return s;
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codeUnitAt = function(this1,index) {
	return this1.charCodeAt(index);
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointAt = function(this1,index) {
	return luxe_utils_unifill__$Utf16_Utf16Impl.decode_code_point(this1.length,function(i) {
		return this1.charCodeAt(i);
	},index);
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.charAt = function(this1,index) {
	var s;
	var len;
	var c = this1.charCodeAt(index);
	if(!(55296 <= c && c <= 56319)) len = 1; else len = 2;
	var s1 = HxOverrides.substr(this1,index,len);
	s = s1;
	return s;
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointCount = function(this1,beginIndex,endIndex) {
	var index = beginIndex;
	var i = 0;
	while(index < endIndex) {
		var c = this1.charCodeAt(index);
		if(!(55296 <= c && c <= 56319)) index += 1; else index += 2;
		++i;
	}
	return i;
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointWidthAt = function(this1,index) {
	var c = this1.charCodeAt(index);
	if(!(55296 <= c && c <= 56319)) return 1; else return 2;
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointWidthBefore = function(this1,index) {
	return luxe_utils_unifill__$Utf16_Utf16Impl.find_prev_code_point(function(i) {
		return this1.charCodeAt(i);
	},index);
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.offsetByCodePoints = function(this1,index,codePointOffset) {
	if(codePointOffset >= 0) {
		var index1 = index;
		var len = this1.length;
		var i = 0;
		while(i < codePointOffset && index1 < len) {
			var c = this1.charCodeAt(index1);
			if(!(55296 <= c && c <= 56319)) index1 += 1; else index1 += 2;
			++i;
		}
		return index1;
	} else {
		var index2 = index;
		var count = 0;
		while(count < -codePointOffset && 0 < index2) {
			var this2 = [this1];
			index2 -= luxe_utils_unifill__$Utf16_Utf16Impl.find_prev_code_point((function(this2) {
				return function(i1) {
					return this2[0].charCodeAt(i1);
				};
			})(this2),index2);
			++count;
		}
		return index2;
	}
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.substr = function(this1,index,len) {
	var s;
	var s1 = HxOverrides.substr(this1,index,len);
	s = s1;
	return s;
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.validate = function(this1) {
	var len = this1.length;
	var accessor = function(i) {
		return this1.charCodeAt(i);
	};
	var i1 = 0;
	while(i1 < len) {
		luxe_utils_unifill__$Utf16_Utf16Impl.decode_code_point(len,accessor,i1);
		var c = this1.charCodeAt(i1);
		if(!(55296 <= c && c <= 56319)) i1 += 1; else i1 += 2;
	}
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.toString = function(this1) {
	return this1;
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.toArray = function(this1) {
	var i = 0;
	var len = this1.length;
	var _g = [];
	while(i < len) _g.push(StringTools.fastCodeAt(this1,i++));
	return _g;
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$._new = function(s) {
	return s;
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.get_length = function(this1) {
	return this1.length;
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.forward_offset_by_code_points = function(this1,index,codePointOffset) {
	var len = this1.length;
	var i = 0;
	while(i < codePointOffset && index < len) {
		var c = this1.charCodeAt(index);
		if(!(55296 <= c && c <= 56319)) index += 1; else index += 2;
		++i;
	}
	return index;
};
luxe_utils_unifill__$Utf16_Utf16_$Impl_$.backward_offset_by_code_points = function(this1,index,codePointOffset) {
	var count = 0;
	while(count < codePointOffset && 0 < index) {
		var this2 = [this1];
		index -= luxe_utils_unifill__$Utf16_Utf16Impl.find_prev_code_point((function(this2) {
			return function(i) {
				return this2[0].charCodeAt(i);
			};
		})(this2),index);
		++count;
	}
	return index;
};
var luxe_utils_unifill__$Utf16_Utf16Impl = function() { };
$hxClasses["luxe.utils.unifill._Utf16.Utf16Impl"] = luxe_utils_unifill__$Utf16_Utf16Impl;
luxe_utils_unifill__$Utf16_Utf16Impl.__name__ = ["luxe","utils","unifill","_Utf16","Utf16Impl"];
luxe_utils_unifill__$Utf16_Utf16Impl.code_point_width = function(c) {
	if(!(55296 <= c && c <= 56319)) return 1; else return 2;
};
luxe_utils_unifill__$Utf16_Utf16Impl.find_prev_code_point = function(accessor,index) {
	var c = accessor(index - 1);
	if(!(56320 <= c && c <= 57343)) return 1; else return 2;
};
luxe_utils_unifill__$Utf16_Utf16Impl.encode_code_point = function(addUnit,codePoint) {
	if(codePoint <= 65535) addUnit(codePoint); else {
		addUnit((codePoint >> 10) + 55232);
		addUnit(codePoint & 1023 | 56320);
	}
};
luxe_utils_unifill__$Utf16_Utf16Impl.decode_code_point = function(len,accessor,index) {
	if(index < 0 || len <= index) throw new js__$Boot_HaxeError(luxe_utils_unifill_Exception.InvalidCodeUnitSequence(index));
	var hi = accessor(index);
	if(55296 <= hi && hi <= 56319) {
		if(index + 1 < 0 || len <= index + 1) throw new js__$Boot_HaxeError(luxe_utils_unifill_Exception.InvalidCodeUnitSequence(index));
		var lo = accessor(index + 1);
		if(56320 <= lo && lo <= 57343) return hi - 55232 << 10 | lo & 1023; else throw new js__$Boot_HaxeError(luxe_utils_unifill_Exception.InvalidCodeUnitSequence(index));
	} else if(56320 <= hi && hi <= 57343) throw new js__$Boot_HaxeError(luxe_utils_unifill_Exception.InvalidCodeUnitSequence(index)); else return hi;
};
var luxe_utils_unifill__$Utf16_StringU16Buffer_$Impl_$ = {};
$hxClasses["luxe.utils.unifill._Utf16.StringU16Buffer_Impl_"] = luxe_utils_unifill__$Utf16_StringU16Buffer_$Impl_$;
luxe_utils_unifill__$Utf16_StringU16Buffer_$Impl_$.__name__ = ["luxe","utils","unifill","_Utf16","StringU16Buffer_Impl_"];
luxe_utils_unifill__$Utf16_StringU16Buffer_$Impl_$._new = function() {
	return new StringBuf();
};
luxe_utils_unifill__$Utf16_StringU16Buffer_$Impl_$.addUnit = function(this1,unit) {
	this1.b += String.fromCharCode(unit);
};
luxe_utils_unifill__$Utf16_StringU16Buffer_$Impl_$.getStringU16 = function(this1) {
	return this1.b;
};
var luxe_utils_unifill__$Utf16_StringU16_$Impl_$ = {};
$hxClasses["luxe.utils.unifill._Utf16.StringU16_Impl_"] = luxe_utils_unifill__$Utf16_StringU16_$Impl_$;
luxe_utils_unifill__$Utf16_StringU16_$Impl_$.__name__ = ["luxe","utils","unifill","_Utf16","StringU16_Impl_"];
luxe_utils_unifill__$Utf16_StringU16_$Impl_$.__properties__ = {get_length:"get_length"}
luxe_utils_unifill__$Utf16_StringU16_$Impl_$.fromString = function(s) {
	return s;
};
luxe_utils_unifill__$Utf16_StringU16_$Impl_$.fromCodeUnit = function(u) {
	var s = String.fromCharCode(u);
	return s;
};
luxe_utils_unifill__$Utf16_StringU16_$Impl_$.fromTwoCodeUnits = function(u0,u1) {
	var s = String.fromCharCode(u0) + String.fromCharCode(u1);
	return s;
};
luxe_utils_unifill__$Utf16_StringU16_$Impl_$.ofArray = function(a) {
	var buf_b = "";
	var _g = 0;
	while(_g < a.length) {
		var x = a[_g];
		++_g;
		buf_b += String.fromCharCode(x);
	}
	return buf_b;
};
luxe_utils_unifill__$Utf16_StringU16_$Impl_$.fromArray = function(a) {
	var buf_b = "";
	var _g = 0;
	while(_g < a.length) {
		var x = a[_g];
		++_g;
		buf_b += String.fromCharCode(x);
	}
	return buf_b;
};
luxe_utils_unifill__$Utf16_StringU16_$Impl_$.codeUnitAt = function(this1,index) {
	return this1.charCodeAt(index);
};
luxe_utils_unifill__$Utf16_StringU16_$Impl_$.substr = function(this1,index,len) {
	var s = HxOverrides.substr(this1,index,len);
	return s;
};
luxe_utils_unifill__$Utf16_StringU16_$Impl_$.toString = function(this1) {
	return this1;
};
luxe_utils_unifill__$Utf16_StringU16_$Impl_$.toArray = function(this1) {
	var i = 0;
	var len = this1.length;
	var _g = [];
	while(i < len) _g.push(StringTools.fastCodeAt(this1,i++));
	return _g;
};
luxe_utils_unifill__$Utf16_StringU16_$Impl_$._new = function(s) {
	return s;
};
luxe_utils_unifill__$Utf16_StringU16_$Impl_$.get_length = function(this1) {
	return this1.length;
};
var phoenix_BatchState = function(_r) {
	this.log = false;
	this.batcher = _r;
	this.geom_state = new phoenix_geometry_GeometryState();
	this.last_geom_state = new phoenix_geometry_GeometryState();
};
$hxClasses["phoenix.BatchState"] = phoenix_BatchState;
phoenix_BatchState.__name__ = ["phoenix","BatchState"];
phoenix_BatchState.prototype = {
	active_shader: function() {
		if(this.geom_state.shader != null) return this.geom_state.shader; else if(this.geom_state.texture != null) return this.batcher.renderer.shaders.textured.shader; else return this.batcher.renderer.shaders.plain.shader;
	}
	,activate: function(batcher) {
		if(this.geom_state.dirty) {
			if(this.geom_state.texture != null) {
				if(this.last_texture_id != this.geom_state.texture.id) {
					this.last_texture_id = this.geom_state.texture.id;
					if(this.geom_state.texture.texture != null) this.geom_state.texture.bind();
				}
			} else {
				Luxe.renderer.state.bindTexture2D(null);
				this.last_texture_id = null;
			}
			var _shader;
			if(batcher.shader == null) _shader = this.geom_state.shader; else _shader = batcher.shader;
			if(_shader == null) {
				if(this.geom_state.texture != null) _shader = batcher.renderer.shaders.textured.shader; else _shader = batcher.renderer.shaders.plain.shader;
			}
			if(this.last_shader_id != _shader.program) {
				if(!_shader.no_default_uniforms) {
					_shader.uniforms.set_matrix4_arr("projectionMatrix",batcher.view.proj_arr,snow_modules_opengl_web_GL.gl.getUniformLocation(_shader.program,"projectionMatrix"));
					_shader.uniforms.set_matrix4_arr("modelViewMatrix",batcher.view.view_inverse_arr,snow_modules_opengl_web_GL.gl.getUniformLocation(_shader.program,"modelViewMatrix"));
				}
				_shader["use"]();
				_shader.uniforms.apply();
				Luxe.renderer.state.activeTexture(33984);
				this.last_shader_id = _shader.program;
			}
			var blend_dirty = this.last_blend_src_rgb != this.geom_state.blend_src_rgb;
			blend_dirty = blend_dirty || this.last_blend_src_alpha != this.geom_state.blend_src_alpha;
			blend_dirty = blend_dirty || this.last_blend_dest_rgb != this.geom_state.blend_dest_rgb;
			blend_dirty = blend_dirty || this.last_blend_dest_alpha != this.geom_state.blend_dest_alpha;
			if(blend_dirty && !this.geom_state.ignore_blend) {
				this.last_blend_src_rgb = this.geom_state.blend_src_rgb;
				this.last_blend_src_alpha = this.geom_state.blend_src_alpha;
				this.last_blend_dest_rgb = this.geom_state.blend_dest_rgb;
				this.last_blend_dest_alpha = this.geom_state.blend_dest_alpha;
				snow_modules_opengl_web_GL.gl.blendFuncSeparate(this.last_blend_src_rgb,this.last_blend_dest_rgb,this.last_blend_src_alpha,this.last_blend_dest_alpha);
			}
		}
		if(this.geom_state.clip) {
			if(!this.is_clipping) {
				snow_modules_opengl_web_GL.gl.enable(3089);
				this.is_clipping = true;
			}
			if(this.clip_rect != null) {
				if(!this.clip_rect.equal(this.last_clip_rect)) batcher.renderer.state.scissor(this.clip_rect.x,this.clip_rect.y,this.clip_rect.w,this.clip_rect.h);
			}
		} else if(this.is_clipping) {
			snow_modules_opengl_web_GL.gl.disable(3089);
			this.is_clipping = false;
		}
		this.geom_state.dirty = false;
	}
	,deactivate: function(batcher) {
		if(this.last_texture_id != null) Luxe.renderer.state.bindTexture2D(null);
		Luxe.renderer.state.useProgram(null);
		if(this.is_clipping) snow_modules_opengl_web_GL.gl.disable(3089);
		snow_modules_opengl_web_GL.gl.blendFunc(770,771);
		snow_modules_opengl_web_GL.gl.blendEquation(32774);
	}
	,update: function(geom) {
		this.geom_state.clone_onto(this.last_geom_state);
		var _this = this.geom_state;
		var other = geom.state;
		if(_this.depth != other.depth) _this.depth = other.depth;
		if(_this.texture != other.texture) {
			_this.dirty = true;
			_this.texture = other.texture;
		}
		if(_this.shader != other.shader) {
			_this.dirty = true;
			_this.shader = other.shader;
		}
		if(_this.primitive_type != other.primitive_type) {
			_this.dirty = true;
			_this.primitive_type = other.primitive_type;
		}
		if(_this.clip != other.clip) {
			_this.dirty = true;
			_this.clip = other.clip;
		}
		if(_this.clip_x != other.clip_x) {
			_this.dirty = true;
			_this.clip_x = other.clip_x;
		}
		if(_this.clip_y != other.clip_y) {
			_this.dirty = true;
			_this.clip_y = other.clip_y;
		}
		if(_this.clip_w != other.clip_w) {
			_this.dirty = true;
			_this.clip_w = other.clip_w;
		}
		if(_this.clip_h != other.clip_h) {
			_this.dirty = true;
			_this.clip_h = other.clip_h;
		}
		if(_this.blend_src_alpha != other.blend_src_alpha) {
			_this.dirty = true;
			_this.blend_src_alpha = other.blend_src_alpha;
		}
		if(_this.blend_src_rgb != other.blend_src_rgb) {
			_this.dirty = true;
			_this.blend_src_rgb = other.blend_src_rgb;
		}
		if(_this.blend_dest_alpha != other.blend_dest_alpha) {
			_this.dirty = true;
			_this.blend_dest_alpha = other.blend_dest_alpha;
		}
		if(_this.blend_dest_rgb != other.blend_dest_rgb) {
			_this.dirty = true;
			_this.blend_dest_rgb = other.blend_dest_rgb;
		}
		if(_this.ignore_blend != other.ignore_blend) _this.ignore_blend = other.ignore_blend;
		if(this.geom_state.clip) {
			this.last_clip_rect = this.clip_rect;
			this.clip_rect = geom.clip_rect;
		}
		return this.geom_state.dirty || this.last_clip_rect != this.clip_rect;
	}
	,str: function() {
		if(!this.log) return;
		haxe_Log.trace("\t+ BATCHSTATE LAST ",{ fileName : "BatchState.hx", lineNumber : 185, className : "phoenix.BatchState", methodName : "str"});
		haxe_Log.trace("\t\tdepth - " + this.last_geom_state.depth,{ fileName : "BatchState.hx", lineNumber : 186, className : "phoenix.BatchState", methodName : "str"});
		haxe_Log.trace("\t\ttexture - " + (this.last_geom_state.texture == null?"null":this.last_geom_state.texture.id),{ fileName : "BatchState.hx", lineNumber : 187, className : "phoenix.BatchState", methodName : "str"});
		if(this.last_geom_state.texture != null) haxe_Log.trace("\t\t\t " + Std.string(this.last_geom_state.texture.texture),{ fileName : "BatchState.hx", lineNumber : 189, className : "phoenix.BatchState", methodName : "str"});
		haxe_Log.trace("\t\tshader - " + (this.last_geom_state.shader == null?"null":this.last_geom_state.shader.id),{ fileName : "BatchState.hx", lineNumber : 191, className : "phoenix.BatchState", methodName : "str"});
		haxe_Log.trace("\t\tprimitive_type - " + this.last_geom_state.primitive_type,{ fileName : "BatchState.hx", lineNumber : 192, className : "phoenix.BatchState", methodName : "str"});
		haxe_Log.trace("\t\tclip - " + Std.string(this.last_geom_state.clip),{ fileName : "BatchState.hx", lineNumber : 193, className : "phoenix.BatchState", methodName : "str"});
		haxe_Log.trace("\t- BATCHSTATE LAST",{ fileName : "BatchState.hx", lineNumber : 194, className : "phoenix.BatchState", methodName : "str"});
		haxe_Log.trace("\t+ BATCHSTATE STATE",{ fileName : "BatchState.hx", lineNumber : 196, className : "phoenix.BatchState", methodName : "str"});
		haxe_Log.trace("\t\tdepth - " + this.geom_state.depth,{ fileName : "BatchState.hx", lineNumber : 197, className : "phoenix.BatchState", methodName : "str"});
		haxe_Log.trace("\t\ttexture - " + (this.geom_state.texture == null?"null":this.geom_state.texture.id),{ fileName : "BatchState.hx", lineNumber : 198, className : "phoenix.BatchState", methodName : "str"});
		if(this.geom_state.texture != null) haxe_Log.trace("\t\t\t " + Std.string(this.geom_state.texture.texture),{ fileName : "BatchState.hx", lineNumber : 200, className : "phoenix.BatchState", methodName : "str"});
		haxe_Log.trace("\t\tshader - " + (this.geom_state.shader == null?"null":this.geom_state.shader.id),{ fileName : "BatchState.hx", lineNumber : 202, className : "phoenix.BatchState", methodName : "str"});
		haxe_Log.trace("\t\tprimitive_type - " + this.geom_state.primitive_type,{ fileName : "BatchState.hx", lineNumber : 203, className : "phoenix.BatchState", methodName : "str"});
		haxe_Log.trace("\t\tclip - " + Std.string(this.geom_state.clip),{ fileName : "BatchState.hx", lineNumber : 204, className : "phoenix.BatchState", methodName : "str"});
		haxe_Log.trace("\t- BATCHSTATE STATE",{ fileName : "BatchState.hx", lineNumber : 205, className : "phoenix.BatchState", methodName : "str"});
	}
	,__class__: phoenix_BatchState
};
var phoenix_Batcher = function(_r,_name,_max_verts) {
	if(_max_verts == null) _max_verts = 16384;
	if(_name == null) _name = "";
	this.normal_floats = 0;
	this.color_floats = 0;
	this.tcoord_floats = 0;
	this.pos_floats = 0;
	this.sequence = -1;
	this.show_stats = 1;
	this.name = "";
	this.log = false;
	this.visible_count = 0;
	this.static_batched_count = 0;
	this.dynamic_batched_count = 0;
	this.draw_calls = 0;
	this.vert_count = 0;
	this.max_floats = 0;
	this.max_verts = 0;
	this.tree_changed = false;
	this.layer = 0;
	this.enabled = true;
	this.id = Luxe.utils.uniqueid();
	this.renderer = _r;
	this.sequence = ++phoenix_Batcher._sequence_key;
	this.geometry = new luxe_structural_BalancedBST_$phoenix_$geometry_$GeometryKey_$phoenix_$geometry_$Geometry($bind(this,this.geometry_compare));
	this.emitter = new luxe_Emitter();
	this.max_verts = _max_verts;
	this.max_floats = this.max_verts * 4;
	this.pos_list = new Float32Array(this.max_floats);
	this.tcoord_list = new Float32Array(this.max_floats);
	this.color_list = new Float32Array(this.max_floats);
	this.view = this.renderer.camera;
	snow_modules_opengl_web_GL.gl.enableVertexAttribArray(0);
	snow_modules_opengl_web_GL.gl.enableVertexAttribArray(1);
	snow_modules_opengl_web_GL.gl.enableVertexAttribArray(2);
	if(_name.length == 0) this.name = Luxe.utils.uniqueid(); else this.name = _name;
	this._dropped = [];
	this.renderer.stats.batchers++;
	phoenix_Batcher.all.push(this);
};
$hxClasses["phoenix.Batcher"] = phoenix_Batcher;
phoenix_Batcher.__name__ = ["phoenix","Batcher"];
phoenix_Batcher.prototype = {
	on: function(event,handler) {
		this.emitter.on(event,handler);
	}
	,off: function(event,handler) {
		return this.emitter.off(event,handler);
	}
	,add: function(_geom,_force_add) {
		if(_force_add == null) _force_add = false;
		if(this.geometry.find(_geom.key) == null || _force_add) {
			if(!Lambda.has(_geom.batchers,this)) _geom.batchers.push(this);
			this.geometry.insert(_geom.key,_geom);
			_geom.added = true;
			this.tree_changed = true;
		} else {
		}
	}
	,empty: function(_drop) {
		if(_drop == null) _drop = true;
		if(_drop) {
			var _g = this.geometry.iterator();
			while(_g.current == null || _g.rightest == null?false:_g.tree.compare(_g.current.key,_g.rightest.key) <= 0) {
				var geom = _g.next();
				geom.drop(true);
				geom = null;
			}
		} else {
			var _g1 = this.geometry.iterator();
			while(_g1.current == null || _g1.rightest == null?false:_g1.tree.compare(_g1.current.key,_g1.rightest.key) <= 0) {
				var geom1 = _g1.next();
				this.geometry.remove(geom1.key);
			}
		}
	}
	,destroy: function(_drop) {
		if(_drop == null) _drop = true;
		this.empty(_drop);
		this.renderer.remove_batch(this);
		this.renderer.stats.batchers--;
		this.emitter = null;
		this.geometry = null;
		this.pos_list = null;
		this.tcoord_list = null;
		this.color_list = null;
		this.normal_list = null;
		this.max_verts = 0;
		this.max_floats = 0;
		this.vert_count = 0;
		this.renderer = null;
		this.view = null;
		HxOverrides.remove(phoenix_Batcher.all,this);
	}
	,remove: function(_geom,_remove_batcher_from_geometry) {
		if(_remove_batcher_from_geometry == null) _remove_batcher_from_geometry = true;
		if(_remove_batcher_from_geometry) {
			HxOverrides.remove(_geom.batchers,this);
			if(_geom.batchers.length == 0) _geom.added = false;
		}
		var countbefore = this.geometry.size();
		this.geometry.remove(_geom.key);
		var countafter = this.geometry.size();
		if(countbefore == countafter) {
		}
		this.tree_changed = true;
	}
	,batch: function(persist_immediate) {
		if(persist_immediate == null) persist_immediate = false;
		this.dynamic_batched_count = 0;
		this.static_batched_count = 0;
		this.visible_count = 0;
		this.pos_floats = 0;
		this.tcoord_floats = 0;
		this.color_floats = 0;
		this.normal_floats = 0;
		this.state = new phoenix_BatchState(this);
		var geom = null;
		var _g = this.geometry.iterator();
		while(_g.current == null || _g.rightest == null?false:_g.tree.compare(_g.current.key,_g.rightest.key) <= 0) {
			var _geom = _g.next();
			geom = _geom;
			if(geom != null && !geom.dropped) {
				if(this.state.update(geom)) this.submit_current_vertex_list(this.state.last_geom_state.primitive_type);
				this.state.activate(this);
				if(geom.visible) {
					this.visible_count++;
					if(geom.buffer_based) {
						this.visible_count--;
						continue;
					}
					if(geom.locked) {
						this.submit_current_vertex_list(this.state.last_geom_state.primitive_type);
						this.submit_static_geometry(geom);
						this.vert_count += geom.vertices.length;
					} else if(geom.state.primitive_type == 3 || geom.state.primitive_type == 2 || geom.state.primitive_type == 5 || geom.state.primitive_type == 6) {
						this.geometry_batch(geom);
						this.submit_current_vertex_list(geom.state.primitive_type);
						this.vert_count += geom.vertices.length;
					} else {
						this.geometry_batch(geom);
						this.dynamic_batched_count++;
						this.vert_count += geom.vertices.length;
					}
					if(!persist_immediate && geom.immediate) {
						geom.dropped = true;
						this._dropped.push(geom);
					}
				}
			}
		}
		if(this.pos_floats > 0 && geom != null) {
			this.state.update(geom);
			this.state.activate(this);
			this.submit_current_vertex_list(this.state.last_geom_state.primitive_type);
		}
		this.state.deactivate(this);
		this.state = null;
		this.prune();
	}
	,prune: function() {
		if(this._dropped.length > 0) {
			var _g = 0;
			var _g1 = this._dropped;
			while(_g < _g1.length) {
				var geom = _g1[_g];
				++_g;
				geom.drop();
				geom = null;
			}
			this._dropped = null;
			this._dropped = [];
		}
	}
	,draw: function(persist_immediate) {
		if(persist_immediate == null) persist_immediate = false;
		if(this.name != "") Luxe.debug.start(this.name);
		this.draw_calls = 0;
		this.vert_count = 0;
		this.emitter.emit(1,this);
		this.view.process();
		this.renderer.state.viewport(this.view.viewport.x,this.view.viewport.y,this.view.viewport.w,this.view.viewport.h);
		this.batch(persist_immediate);
		this.emitter.emit(2,this);
		var _stats = this.renderer.stats;
		_stats.geometry_count += this.geometry.size() * this.show_stats;
		_stats.dynamic_batched_count += this.dynamic_batched_count * this.show_stats;
		_stats.static_batched_count += this.static_batched_count * this.show_stats;
		_stats.visible_count += this.visible_count * this.show_stats;
		_stats.draw_calls += this.draw_calls * this.show_stats;
		_stats.vert_count += this.vert_count * this.show_stats;
		if(this.name != "") Luxe.debug.end(this.name);
	}
	,update_view: function() {
		this.view.process();
		this.renderer.state.viewport(this.view.viewport.x,this.view.viewport.y,this.view.viewport.w,this.view.viewport.h);
	}
	,apply_default_uniforms: function(_shader) {
		if(!_shader.no_default_uniforms) {
			_shader.uniforms.set_matrix4_arr("projectionMatrix",this.view.proj_arr,snow_modules_opengl_web_GL.gl.getUniformLocation(_shader.program,"projectionMatrix"));
			_shader.uniforms.set_matrix4_arr("modelViewMatrix",this.view.view_inverse_arr,snow_modules_opengl_web_GL.gl.getUniformLocation(_shader.program,"modelViewMatrix"));
		}
	}
	,submit_geometry: function(_geom,_shader) {
		if(!_geom.buffer_based) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("_geom.buffer_based" + (" ( " + "Only buffer based geometry can be submitted directly" + " )")));
		if(!_geom.visible) return;
		if(_shader == null) _shader = _geom.state.shader;
		if(this.shader != null) _shader = this.shader;
		_shader["use"]();
		_shader.uniforms.apply();
		Luxe.renderer.state.activeTexture(33984);
		if(!_shader.no_default_uniforms) {
			_shader.uniforms.set_matrix4_arr("projectionMatrix",this.view.proj_arr,snow_modules_opengl_web_GL.gl.getUniformLocation(_shader.program,"projectionMatrix"));
			_shader.uniforms.set_matrix4_arr("modelViewMatrix",this.view.view_inverse_arr,snow_modules_opengl_web_GL.gl.getUniformLocation(_shader.program,"modelViewMatrix"));
		}
		_geom.uniforms.apply();
		var _length = _geom.vertices.length;
		var _length4 = _length * 4;
		var _updated = _geom.update_buffers();
		if(_updated) {
			snow_modules_opengl_web_GL.gl.bindBuffer(34962,_geom.vb_pos);
			snow_modules_opengl_web_GL.gl.vertexAttribPointer(0,4,5126,false,0,0);
			snow_modules_opengl_web_GL.gl.bufferData(34962,_geom.buffer_pos,_geom.buffer_type);
			snow_modules_opengl_web_GL.gl.bindBuffer(34962,_geom.vb_tcoords);
			snow_modules_opengl_web_GL.gl.vertexAttribPointer(1,4,5126,false,0,0);
			snow_modules_opengl_web_GL.gl.bufferData(34962,_geom.buffer_tcoords,_geom.buffer_type);
			snow_modules_opengl_web_GL.gl.bindBuffer(34962,_geom.vb_colors);
			snow_modules_opengl_web_GL.gl.vertexAttribPointer(2,4,5126,false,0,0);
			snow_modules_opengl_web_GL.gl.bufferData(34962,_geom.buffer_colors,_geom.buffer_type);
		} else {
			snow_modules_opengl_web_GL.gl.bindBuffer(34962,_geom.vb_pos);
			snow_modules_opengl_web_GL.gl.vertexAttribPointer(0,4,5126,false,0,0);
			snow_modules_opengl_web_GL.gl.bindBuffer(34962,_geom.vb_tcoords);
			snow_modules_opengl_web_GL.gl.vertexAttribPointer(1,4,5126,false,0,0);
			snow_modules_opengl_web_GL.gl.bindBuffer(34962,_geom.vb_colors);
			snow_modules_opengl_web_GL.gl.vertexAttribPointer(2,4,5126,false,0,0);
		}
		snow_modules_opengl_web_GL.gl.drawArrays(_geom.state.primitive_type,0,_geom.buffer_pos.length / 4 | 0);
		var _stats = this.renderer.stats;
		_stats.geometry_count++;
		_stats.visible_count++;
		_stats.draw_calls++;
		_stats.vert_count += _length;
	}
	,submit_buffers: function(type,_pos,_tcoords,_colors,_normals) {
		var pb = snow_modules_opengl_web_GL.gl.createBuffer();
		var cb = snow_modules_opengl_web_GL.gl.createBuffer();
		var tb = snow_modules_opengl_web_GL.gl.createBuffer();
		snow_modules_opengl_web_GL.gl.bindBuffer(34962,pb);
		snow_modules_opengl_web_GL.gl.vertexAttribPointer(0,4,5126,false,0,0);
		snow_modules_opengl_web_GL.gl.bufferData(34962,_pos,35040);
		snow_modules_opengl_web_GL.gl.bindBuffer(34962,tb);
		snow_modules_opengl_web_GL.gl.vertexAttribPointer(1,4,5126,false,0,0);
		snow_modules_opengl_web_GL.gl.bufferData(34962,_tcoords,35040);
		snow_modules_opengl_web_GL.gl.bindBuffer(34962,cb);
		snow_modules_opengl_web_GL.gl.vertexAttribPointer(2,4,5126,false,0,0);
		snow_modules_opengl_web_GL.gl.bufferData(34962,_colors,35040);
		snow_modules_opengl_web_GL.gl.drawArrays(type,0,_pos.length / 4 | 0);
		snow_modules_opengl_web_GL.gl.deleteBuffer(pb);
		snow_modules_opengl_web_GL.gl.deleteBuffer(cb);
		snow_modules_opengl_web_GL.gl.deleteBuffer(tb);
		this.draw_calls++;
	}
	,submit_static_geometry: function(geom) {
		var _length = geom.vertices.length;
		if(_length == 0) return false;
		var _updated = geom.update_buffers();
		if(_updated) {
			snow_modules_opengl_web_GL.gl.bindBuffer(34962,geom.vb_pos);
			snow_modules_opengl_web_GL.gl.vertexAttribPointer(0,4,5126,false,0,0);
			snow_modules_opengl_web_GL.gl.bufferData(34962,geom.buffer_pos,geom.buffer_type);
			snow_modules_opengl_web_GL.gl.bindBuffer(34962,geom.vb_tcoords);
			snow_modules_opengl_web_GL.gl.vertexAttribPointer(1,4,5126,false,0,0);
			snow_modules_opengl_web_GL.gl.bufferData(34962,geom.buffer_tcoords,geom.buffer_type);
			snow_modules_opengl_web_GL.gl.bindBuffer(34962,geom.vb_colors);
			snow_modules_opengl_web_GL.gl.vertexAttribPointer(2,4,5126,false,0,0);
			snow_modules_opengl_web_GL.gl.bufferData(34962,geom.buffer_colors,geom.buffer_type);
		} else {
			snow_modules_opengl_web_GL.gl.bindBuffer(34962,geom.vb_pos);
			snow_modules_opengl_web_GL.gl.vertexAttribPointer(0,4,5126,false,0,0);
			snow_modules_opengl_web_GL.gl.bindBuffer(34962,geom.vb_tcoords);
			snow_modules_opengl_web_GL.gl.vertexAttribPointer(1,4,5126,false,0,0);
			snow_modules_opengl_web_GL.gl.bindBuffer(34962,geom.vb_colors);
			snow_modules_opengl_web_GL.gl.vertexAttribPointer(2,4,5126,false,0,0);
		}
		snow_modules_opengl_web_GL.gl.drawArrays(geom.state.primitive_type,0,geom.buffer_pos.length / 4 | 0);
		this.static_batched_count++;
		this.draw_calls++;
		geom.set_dirty(false);
		return true;
	}
	,submit_current_vertex_list: function(type) {
		if(this.pos_floats == 0) return false;
		if(this.pos_floats > this.max_floats) throw new js__$Boot_HaxeError("uh oh, somehow too many floats are being submitted (max:$max_floats, attempt:$pos_floats).");
		var _pos = new Float32Array(this.pos_list.buffer,0,this.pos_floats * 4 / 4 | 0);
		var _tcoords = new Float32Array(this.tcoord_list.buffer,0,this.tcoord_floats * 4 / 4 | 0);
		var _colors = new Float32Array(this.color_list.buffer,0,this.color_floats * 4 / 4 | 0);
		var _normals = null;
		this.submit_buffers(type,_pos,_tcoords,_colors,_normals);
		_pos = null;
		_tcoords = null;
		_colors = null;
		_normals = null;
		this.pos_floats = 0;
		this.tcoord_floats = 0;
		this.color_floats = 0;
		this.normal_floats = 0;
		return true;
	}
	,geometry_batch: function(geom) {
		if(geom.vertices.length > this.max_verts) {
			geom.set_locked(true);
			geom.dirty_based = false;
			haxe_Log.trace("  i / batcher / " + ("WARNING batcher `" + this.name + "` trying to batch a geometry `" + geom.id + "` that has more verts than the batcher has preallocated, (" + geom.vertices.length + " vs max of " + this.max_verts + ")"),{ fileName : "Batcher.hx", lineNumber : 573, className : "phoenix.Batcher", methodName : "geometry_batch"});
			haxe_Log.trace("  i / batcher / " + "WARNING geometry has been marked as direct submit, and will be submitted independently!",{ fileName : "Batcher.hx", lineNumber : 574, className : "phoenix.Batcher", methodName : "geometry_batch"});
			return;
		}
		var _count_after = geom.vertices.length + this.pos_floats / 4;
		if(_count_after > this.max_verts) this.submit_current_vertex_list(geom.state.primitive_type);
		var vert_index = this.pos_floats;
		var tcoord_index = this.tcoord_floats;
		var color_index = this.color_floats;
		var normal_index = this.normal_floats;
		var vertlist = this.pos_list;
		var tcoordlist = this.tcoord_list;
		var colorlist = this.color_list;
		var _mat = geom.transform.get_world().get_matrix();
		var _el = _mat.elements;
		var _count = geom.vertices.length;
		var _idx = 0;
		while(_idx < _count) {
			var v = geom.vertices[_idx];
			var _vx = v.pos.x;
			var _vy = v.pos.y;
			var _vz = v.pos.z;
			var _tvx = _el[0] * _vx + _el[4] * _vy + _el[8] * _vz + _el[12];
			var _tvy = _el[1] * _vx + _el[5] * _vy + _el[9] * _vz + _el[13];
			var _tvz = _el[2] * _vx + _el[6] * _vy + _el[10] * _vz + _el[14];
			vertlist[vert_index] = _tvx;
			vertlist[vert_index + 1] = _tvy;
			vertlist[vert_index + 2] = _tvz;
			vertlist[vert_index + 3] = v.pos.w;
			vert_index += 4;
			var _vuv = v.uv.uv0;
			tcoordlist[tcoord_index] = _vuv.u;
			tcoordlist[tcoord_index + 1] = _vuv.v;
			tcoordlist[tcoord_index + 2] = _vuv.w;
			tcoordlist[tcoord_index + 3] = _vuv.t;
			tcoord_index += 4;
			colorlist[color_index] = v.color.r;
			colorlist[color_index + 1] = v.color.g;
			colorlist[color_index + 2] = v.color.b;
			colorlist[color_index + 3] = v.color.a;
			color_index += 4;
			normal_index += 4;
			_idx++;
		}
		var _length = geom.vertices.length * 4;
		this.pos_floats += _length;
		this.tcoord_floats += _length;
		this.color_floats += _length;
		this.normal_floats += _length;
	}
	,set_layer: function(_layer) {
		this.layer = _layer;
		this.renderer.batchers.sort(($_=this.renderer,$bind($_,$_.sort_batchers)));
		return this.layer;
	}
	,toString: function() {
		return "Batcher(" + this.name + ")";
	}
	,compare: function(other) {
		if(this.layer == other.layer) return 0;
		if(this.layer < other.layer) return -1;
		return 1;
	}
	,compare_rule_to_string: function(r) {
		switch(r) {
		case 0:
			return "same";
		case 1:
			return "depth <";
		case 2:
			return "depth >";
		case 3:
			return "shader <";
		case 4:
			return "shader >";
		case 5:
			return "shader s._ >";
		case 6:
			return "shader _.s <";
		case 7:
			return "texture <";
		case 8:
			return "texture >";
		case 9:
			return "texture t._ >";
		case 10:
			return "texture _.t <";
		case 11:
			return "primitive <";
		case 12:
			return "primitive >";
		case 13:
			return "unclipped";
		case 14:
			return "clipped";
		case 15:
			return "timestamp <";
		case 16:
			return "timestamp >";
		case 17:
			return "timestamp ==";
		case 18:
			return "sequence <";
		case 19:
			return "sequence >";
		case 20:
			return "fallback";
		default:
			return "unknown";
		}
	}
	,compare_rule: function(a,b) {
		if(a.uuid == b.uuid) return 0;
		if(a.depth < b.depth) return 1;
		if(a.depth > b.depth) return 2;
		if(a.shader != null && b.shader != null) {
			if(a.shader.id < b.shader.id) return 3;
			if(a.shader.id > b.shader.id) return 4;
		} else if(a.shader != null && b.shader == null) return 5; else if(a.shader == null && b.shader != null) return 6;
		if(a.texture != null && b.texture != null) {
			if(a.texture.id < b.texture.id) return 7;
			if(a.texture.id > b.texture.id) return 8;
		} else if(a.texture != null && b.texture == null) return 9; else if(a.texture == null && b.texture != null) return 10;
		var a_primitive_index = a.primitive_type;
		var b_primitive_index = b.primitive_type;
		if(a_primitive_index < b_primitive_index) return 11;
		if(a_primitive_index > b_primitive_index) return 12;
		if(a.clip != b.clip) {
			if(a.clip == false && b.clip == true) return 13; else if(a.clip == true && b.clip == false) return 14;
		}
		if(a.timestamp < b.timestamp) return 15;
		if(a.timestamp > b.timestamp) return 16;
		if(a.timestamp == b.timestamp) return 17;
		if(a.sequence < b.sequence) return 18;
		if(a.sequence > b.sequence) return 19;
		return 20;
	}
	,geometry_compare: function(a,b) {
		if(a.uuid == b.uuid) return 0;
		if(a.depth < b.depth) return -1;
		if(a.depth > b.depth) return 1;
		if(a.shader != null && b.shader != null) {
			if(a.shader.id < b.shader.id) return -1;
			if(a.shader.id > b.shader.id) return 1;
		} else if(a.shader != null && b.shader == null) return 1; else if(a.shader == null && b.shader != null) return -1;
		if(a.texture != null && b.texture != null) {
			if(a.texture.id < b.texture.id) return -1;
			if(a.texture.id > b.texture.id) return 1;
		} else if(a.texture != null && b.texture == null) return 1; else if(a.texture == null && b.texture != null) return -1;
		var a_primitive_index = a.primitive_type;
		var b_primitive_index = b.primitive_type;
		if(a_primitive_index < b_primitive_index) return -1;
		if(a_primitive_index > b_primitive_index) return 1;
		if(a.clip != b.clip) {
			if(a.clip == false && b.clip == true) return 1; else if(a.clip == true && b.clip == false) return -1;
		}
		if(a.timestamp < b.timestamp) return -1;
		if(a.timestamp > b.timestamp) return 1;
		if(a.sequence < b.sequence) return -1;
		if(a.sequence > b.sequence) return 1;
		return 1;
	}
	,list_geometry: function() {
		var _g = this.geometry.iterator();
		while(_g.current == null || _g.rightest == null?false:_g.tree.compare(_g.current.key,_g.rightest.key) <= 0) {
			var geom = _g.next();
			null;
		}
	}
	,set_show_stats: function(_value) {
		if(_value == 0) this.renderer.stats.batchers--; else this.renderer.stats.batchers++;
		return this.show_stats = _value;
	}
	,__class__: phoenix_Batcher
	,__properties__: {set_show_stats:"set_show_stats",set_layer:"set_layer"}
};
var phoenix_BitmapFont = function(_options) {
	if(_options == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options was null" + ""));
	_options.resource_type = 6;
	luxe_resource_Resource.call(this,_options);
	if(_options.texture_path != null) this.texture_path = _options.texture_path; else this.texture_path = haxe_io_Path.directory(this.id);
	this.pages = new haxe_ds_IntMap();
	if(_options.pages != null) {
		if(_options.font_data == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options.font_data was null" + (" ( " + "BitmapFont create from pages + font_data requires both of those options" + " )")));
	}
	if(_options.font_data != null) {
		if(_options.pages == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options.pages was null" + (" ( " + "BitmapFont create from pages + font_data requires both of those options" + " )")));
		this.set_info(luxe_importers_bitmapfont_BitmapFontParser.parse(_options.font_data));
		this.apply_pages(_options.pages);
	}
};
$hxClasses["phoenix.BitmapFont"] = phoenix_BitmapFont;
phoenix_BitmapFont.__name__ = ["phoenix","BitmapFont"];
phoenix_BitmapFont.__super__ = luxe_resource_Resource;
phoenix_BitmapFont.prototype = $extend(luxe_resource_Resource.prototype,{
	kerning: function(_first,_second) {
		var _map = this.info.kernings.h[_first];
		if(_map != null && _map.h.hasOwnProperty(_second)) return _map.h[_second];
		return 0;
	}
	,wrap_string_to_bounds: function(_string,_bounds,_point_size,_letter_spc) {
		if(_letter_spc == null) _letter_spc = 0.0;
		if(_point_size == null) _point_size = 1.0;
		var _g = this;
		if(_bounds == null) return _string;
		var _cur_x = 0.0;
		var _idx = 0;
		var _final_str = "";
		var _spacew = _g.width_of(" ",_point_size,_letter_spc,null);
		var _strings = _string.split(" ");
		var _count = _strings.length;
		var _g1 = 0;
		while(_g1 < _strings.length) {
			var _str = _strings[_g1];
			++_g1;
			if(luxe_utils_unifill_Unifill.uIndexOf(_str,"\n",null) == -1) {
				if(_str == "") _str = " ";
				var _w = _g.width_of(_str,_point_size,_letter_spc,null);
				if(_cur_x + _w > _bounds.w) {
					_cur_x = 0;
					_final_str += "\n";
				}
				_cur_x += _w;
				_final_str += _str;
			} else {
				var _widx = 0;
				var _words = _str.split("\n");
				var _g11 = 0;
				while(_g11 < _words.length) {
					var _word = _words[_g11];
					++_g11;
					if(_word != "") {
						var _w1 = _g.width_of(_word,_point_size,_letter_spc,null);
						if(_cur_x + _w1 > _bounds.w) {
							_cur_x = 0;
							_final_str += "\n";
						}
						_cur_x += _w1;
						_final_str += _word;
					} else _cur_x = 0;
					if(_widx < _words.length - 1) {
						_final_str += "\n";
						_cur_x = 0;
					}
					_widx++;
				}
			}
			if(_idx < _count - 1) {
				_final_str += " ";
				_cur_x += _spacew + _letter_spc;
			}
			_idx++;
		}
		return _final_str;
	}
	,width_of_line: function(_string,_point_size,_letter_spc) {
		if(_letter_spc == null) _letter_spc = 0.0;
		if(_point_size == null) _point_size = 1.0;
		var _cur_x = 0.0;
		var _cur_w = 0.0;
		var _ratio = _point_size / this.info.point_size;
		var i = 0;
		var _len = luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointCount(_string,0,_string.length);
		var _g_i = 0;
		var _g_string = _string;
		var _g_index = 0;
		var _g_endIndex = _string.length;
		while(_g_index < _g_endIndex) {
			var _uglyph;
			_g_i = _g_index;
			_g_index += luxe_utils_unifill_InternalEncoding.codePointWidthAt(_g_string,_g_index);
			_uglyph = luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointAt(_g_string,_g_i);
			var _index = _uglyph;
			var _char = this.info.chars.h[_index];
			if(_char == null) _char = this.space_char;
			var _cw = (_char.xoffset + Math.max(_char.width,_char.xadvance)) * _ratio;
			var _cx = _cur_x + _char.xoffset * _ratio;
			var _spacing = _char.xadvance;
			if(i < _len - 1) {
				var _next_index = luxe_utils_unifill_Unifill.uCharCodeAt(_string,i + 1);
				_spacing += this.kerning(_index,_next_index);
				if(_next_index >= 32) _spacing += _letter_spc;
			}
			_cur_x += _spacing * _ratio;
			_cur_w = Math.max(_cur_w,_cx + _cw);
			++i;
		}
		return _cur_w;
	}
	,width_of: function(_string,_point_size,_letter_spc,_line_widths) {
		if(_letter_spc == null) _letter_spc = 0.0;
		if(_point_size == null) _point_size = 1.0;
		var _max_w = 0.0;
		var _push_widths = _line_widths != null;
		var _lines = luxe_utils_unifill_Unifill.uSplit(_string,"\n");
		var _g = 0;
		while(_g < _lines.length) {
			var _line = _lines[_g];
			++_g;
			var _cur_w = this.width_of_line(_line,_point_size,_letter_spc);
			_max_w = Math.max(_max_w,_cur_w);
			if(_push_widths) _line_widths.push(_cur_w);
		}
		return _max_w;
	}
	,height_of: function(_string,_point_size,_line_spc) {
		if(_line_spc == null) _line_spc = 0.0;
		return this.height_of_lines(_string.split("\n"),_point_size,_line_spc);
	}
	,dimensions_of: function(_string,_point_size,_into,_letter_spc,_line_spc) {
		if(_line_spc == null) _line_spc = 0.0;
		if(_letter_spc == null) _letter_spc = 0.0;
		var _width = this.width_of(_string,_point_size,_letter_spc,null);
		var _height = this.height_of_lines(_string.split("\n"),_point_size,_line_spc);
		var prev = _into.ignore_listeners;
		_into.ignore_listeners = true;
		_into.x = _width;
		if(_into._construct) _into.x; else {
			if(_into.listen_x != null && !_into.ignore_listeners) _into.listen_x(_width);
			_into.x;
		}
		_into.y = _height;
		if(_into._construct) _into.y; else {
			if(_into.listen_y != null && !_into.ignore_listeners) _into.listen_y(_height);
			_into.y;
		}
		_into.ignore_listeners = prev;
		if(_into.listen_x != null && !_into.ignore_listeners) _into.listen_x(_into.x);
		if(_into.listen_y != null && !_into.ignore_listeners) _into.listen_y(_into.y);
		return _into;
	}
	,height_of_lines: function(_lines,_point_size,_line_spc) {
		if(_line_spc == null) _line_spc = 0.0;
		var _ratio = _point_size / this.info.point_size;
		return _lines.length * ((this.info.line_height + _line_spc) * _ratio);
	}
	,line_height_to_point_size: function(_pixel_height,_line_spc) {
		if(_line_spc == null) _line_spc = 0.0;
		return _pixel_height * (this.info.point_size / (this.info.line_height + _line_spc));
	}
	,clear: function() {
		this.set_info(null);
		var _i = 0;
		var $it0 = this.pages.keys();
		while( $it0.hasNext() ) {
			var _pageid = $it0.next();
			var _page = this.pages.h[_pageid];
			_page.destroy();
			this.pages.remove(_pageid);
			_page = null;
		}
	}
	,reload: function() {
		var _g = this;
		if(!(this.state != 6)) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("state != ResourceState.destroyed" + ""));
		this.clear();
		return new snow_api_Promise(function(resolve,reject) {
			_g.set_state(2);
			var _font_get = snow_systems_assets_AssetText.load(Luxe.core.app.assets,_g.id);
			_font_get.then(function(_asset) {
				_g.set_info(luxe_importers_bitmapfont_BitmapFontParser.parse(_asset.text));
				_asset.destroy();
				_asset = null;
				if(_g.info == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("info was null" + ""));
				var _tex_get = [];
				var _g1 = 0;
				var _g2 = _g.info.pages;
				while(_g1 < _g2.length) {
					var _page = _g2[_g1];
					++_g1;
					var _path = haxe_io_Path.join([_g.texture_path,_page.file]);
					var _prior = _g.system.cache.get(_path);
					if(_prior != null) _tex_get.push(_prior.reload()); else _tex_get.push(_g.system.load_texture(_path));
				}
				snow_api_Promise.all(_tex_get).then(function(_pages) {
					_g.apply_pages(_pages);
					_g.set_state(3);
					resolve(_g);
				}).error(function(_error) {
					_g.set_state(4);
					reject(_error);
				});
			}).error(function(_error1) {
				_g.set_state(4);
				reject(_error1);
			});
		});
	}
	,apply_pages: function(_pages) {
		var _pageid = 0;
		var _g = 0;
		while(_g < _pages.length) {
			var _page = _pages[_g];
			++_g;
			_page.slot = _pageid;
			this.pages.h[_pageid] = _page;
			++_pageid;
		}
	}
	,set_info: function(_info) {
		this.info = _info;
		if(this.info != null) this.space_char = this.info.chars.h[32];
		return this.info;
	}
	,toString: function() {
		return "BitmapFont(" + this.id + ")";
	}
	,__class__: phoenix_BitmapFont
	,__properties__: $extend(luxe_resource_Resource.prototype.__properties__,{set_info:"set_info"})
});
var phoenix_ProjectionType = $hxClasses["phoenix.ProjectionType"] = { __ename__ : ["phoenix","ProjectionType"], __constructs__ : ["ortho","perspective","custom"] };
phoenix_ProjectionType.ortho = ["ortho",0];
phoenix_ProjectionType.ortho.toString = $estr;
phoenix_ProjectionType.ortho.__enum__ = phoenix_ProjectionType;
phoenix_ProjectionType.perspective = ["perspective",1];
phoenix_ProjectionType.perspective.toString = $estr;
phoenix_ProjectionType.perspective.__enum__ = phoenix_ProjectionType;
phoenix_ProjectionType.custom = ["custom",2];
phoenix_ProjectionType.custom.toString = $estr;
phoenix_ProjectionType.custom.__enum__ = phoenix_ProjectionType;
var phoenix_Camera = function(_options) {
	this.refresh_pos_ = false;
	this.up_ = new phoenix_Vector(0,1,0);
	this.setup_ = true;
	this.look_at_dirty = true;
	this.projection_dirty = true;
	this.transform_dirty = true;
	this.minimum_zoom = 0.01;
	this.depth_test = false;
	this.cull_backfaces = false;
	this.aspect = 1.5;
	this.fov_type = phoenix_FOVType.horizontal;
	this.fov = 60;
	this.far = -1000;
	this.near = 1000;
	this.zoom = 1.0;
	this.name = "camera";
	this.transform = new phoenix_Transform();
	this.projection_matrix = new phoenix_Matrix();
	this.view_matrix = new phoenix_Matrix();
	this.view_matrix_inverse = new phoenix_Matrix();
	this.look_at_matrix = new phoenix_Matrix();
	if(_options == null) _options = { projection : phoenix_ProjectionType.ortho, depth_test : false, cull_backfaces : false, near : 1000, far : -1000};
	_options;
	if(_options.projection == null) _options.projection = phoenix_ProjectionType.ortho;
	this.projection = _options.projection;
	this.set_center(new phoenix_Vector(Luxe.core.screen.get_w() / 2,Luxe.core.screen.get_h() / 2));
	this.set_pos(new phoenix_Vector());
	this.set_viewport((function($this) {
		var $r;
		if(_options.viewport == null) _options.viewport = new phoenix_Rectangle(0,0,Luxe.core.screen.get_w(),Luxe.core.screen.get_h());
		$r = _options.viewport;
		return $r;
	}(this)));
	if(_options.camera_name != null) this.name = _options.camera_name;
	this.transform.listen($bind(this,this.on_transform_cleaned));
	var _g = this.projection;
	switch(_g[1]) {
	case 0:
		this.set_ortho(_options);
		break;
	case 1:
		this.set_perspective(_options);
		break;
	case 2:
		break;
	}
	this.process();
	this.setup_ = false;
};
$hxClasses["phoenix.Camera"] = phoenix_Camera;
phoenix_Camera.__name__ = ["phoenix","Camera"];
phoenix_Camera.prototype = {
	set_ortho: function(_options) {
		this.projection = phoenix_ProjectionType.ortho;
		this.apply_default_camera_options();
		if(_options.aspect != null) {
			this.projection_dirty = true;
			this.aspect = _options.aspect;
			this.set_fov(this.fov);
			this.aspect;
		}
		if(_options.far != null) {
			this.projection_dirty = true;
			this.far = _options.far;
		}
		if(_options.fov != null) this.set_fov(_options.fov);
		if(_options.near != null) {
			this.projection_dirty = true;
			this.near = _options.near;
		}
		if(_options.viewport != null) this.set_viewport(_options.viewport);
		if(_options.cull_backfaces != null) this.cull_backfaces = _options.cull_backfaces;
		if(_options.depth_test != null) this.depth_test = _options.depth_test;
		if(_options.fov_type != null) {
			this.fov_type = _options.fov_type;
			this.set_fov(this.fov);
			this.fov_type;
		} else {
			this.fov_type = phoenix_FOVType.horizontal;
			this.set_fov(this.fov);
			this.fov_type;
		}
	}
	,set_perspective: function(_options) {
		this.projection = phoenix_ProjectionType.perspective;
		this.apply_default_camera_options();
		if(_options.aspect != null) {
			this.projection_dirty = true;
			this.aspect = _options.aspect;
			this.set_fov(this.fov);
			this.aspect;
		}
		if(_options.far != null) {
			this.projection_dirty = true;
			this.far = _options.far;
		}
		if(_options.fov != null) this.set_fov(_options.fov);
		if(_options.near != null) {
			this.projection_dirty = true;
			this.near = _options.near;
		}
		if(_options.viewport != null) this.set_viewport(_options.viewport);
		if(_options.cull_backfaces != null) this.cull_backfaces = _options.cull_backfaces;
		if(_options.depth_test != null) this.depth_test = _options.depth_test;
		if(_options.fov_type != null) {
			this.fov_type = _options.fov_type;
			this.set_fov(this.fov);
			this.fov_type;
		} else {
			this.fov_type = phoenix_FOVType.horizontal;
			this.set_fov(this.fov);
			this.fov_type;
		}
		var _this = this.transform.origin;
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = 0;
		if(_this._construct) _this.x; else {
			if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(0);
			_this.x;
		}
		_this.y = 0;
		if(_this._construct) _this.y; else {
			if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(0);
			_this.y;
		}
		_this.z = 0;
		if(_this._construct) _this.z; else {
			if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(0);
			_this.z;
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_this.x);
		if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_this.y);
		if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_this.z);
		_this;
	}
	,project: function(_vector) {
		if(this.target != null) this.update_look_at();
		this.update_projection_matrix();
		this.update_view_matrix();
		var _transform = new phoenix_Matrix().multiplyMatrices(this.projection_matrix,this.view_matrix_inverse);
		var _this = new phoenix_Vector(_vector.x,_vector.y,_vector.z,_vector.w);
		var e = _transform.elements;
		var x = _this.x;
		var y = _this.y;
		var z = _this.z;
		var d = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);
		var _x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * d;
		var _y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * d;
		var _z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * d;
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = _x;
		if(_this._construct) _this.x; else {
			if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_x);
			_this.x;
		}
		_this.y = _y;
		if(_this._construct) _this.y; else {
			if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_y);
			_this.y;
		}
		_this.z = _z;
		if(_this._construct) _this.z; else {
			if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_z);
			_this.z;
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_this.x);
		if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_this.y);
		if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_this.z);
		_this;
		return _this;
	}
	,unproject: function(_vector) {
		if(this.target != null) this.update_look_at();
		this.update_projection_matrix();
		this.update_view_matrix();
		var _inverted = new phoenix_Matrix().multiplyMatrices(this.projection_matrix,this.view_matrix_inverse);
		var _this = new phoenix_Vector(_vector.x,_vector.y,_vector.z,_vector.w);
		var m = _inverted.getInverse(_inverted);
		var e = m.elements;
		var x = _this.x;
		var y = _this.y;
		var z = _this.z;
		var d = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);
		var _x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * d;
		var _y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * d;
		var _z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * d;
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = _x;
		if(_this._construct) _this.x; else {
			if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_x);
			_this.x;
		}
		_this.y = _y;
		if(_this._construct) _this.y; else {
			if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_y);
			_this.y;
		}
		_this.z = _z;
		if(_this._construct) _this.z; else {
			if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_z);
			_this.z;
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_this.x);
		if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_this.y);
		if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_this.z);
		_this;
		return _this;
	}
	,screen_point_to_ray: function(_vector) {
		return new phoenix_Ray(_vector,this);
	}
	,screen_point_to_world: function(_vector) {
		if(this.projection == phoenix_ProjectionType.ortho) return this.ortho_screen_to_world(_vector); else if(this.projection == phoenix_ProjectionType.perspective) return this.screen_point_to_ray(_vector).end;
		return this.ortho_screen_to_world(_vector);
	}
	,world_point_to_screen: function(_vector,_viewport) {
		if(this.projection == phoenix_ProjectionType.ortho) return this.ortho_world_to_screen(_vector); else if(this.projection == phoenix_ProjectionType.perspective) return this.persepective_world_to_screen(_vector,_viewport);
		return this.ortho_world_to_screen(_vector);
	}
	,process: function() {
		if(this.target != null) this.update_look_at();
		this.update_projection_matrix();
		this.update_view_matrix();
		if(this.cull_backfaces) Luxe.renderer.state.enable(2884); else Luxe.renderer.state.disable(2884);
		if(this.depth_test) Luxe.renderer.state.enable(2929); else Luxe.renderer.state.disable(2929);
	}
	,update_matrices: function() {
		if(this.target != null) this.update_look_at();
		this.update_projection_matrix();
		this.update_view_matrix();
	}
	,on_transform_cleaned: function(t) {
		this.transform_dirty = true;
	}
	,update_look_at: function() {
		if(this.look_at_dirty && this.target != null) {
			this.look_at_matrix.lookAt(this.target,this.pos,this.up_);
			this.transform.local.rotation.setFromRotationMatrix(this.look_at_matrix);
		}
	}
	,update_view_matrix: function() {
		this.view_matrix = this.transform.get_world().get_matrix();
		if(!this.transform_dirty) return;
		this.view_matrix_inverse = this.view_matrix.inverse();
		this.view_inverse_arr = this.view_matrix_inverse.float32array();
		this.transform_dirty = false;
	}
	,update_projection_matrix: function() {
		if(!this.projection_dirty) return;
		var _g = this.projection;
		switch(_g[1]) {
		case 2:
			break;
		case 1:
			this.projection_matrix.makePerspective(this.fov_y,this.aspect,this.near,this.far);
			break;
		case 0:
			var _l = 0.0;
			var _t = 0.0;
			var _r = this.viewport.w;
			var _b = this.viewport.h;
			if(this.ortho_left != null) _l = this.ortho_left;
			if(this.ortho_right != null) _r = this.ortho_right;
			if(this.ortho_top != null) _t = this.ortho_top;
			if(this.ortho_bottom != null) _b = this.ortho_bottom;
			this.projection_matrix.makeOrthographic(_l,_r,_t,_b,this.near,this.far);
			break;
		}
		this.proj_arr = this.projection_matrix.float32array();
		this.projection_dirty = false;
	}
	,apply_state: function(state,value) {
		if(value) Luxe.renderer.state.enable(state); else Luxe.renderer.state.disable(state);
	}
	,apply_default_camera_options: function() {
		var _g = this.projection;
		switch(_g[1]) {
		case 0:
			this.cull_backfaces = false;
			this.depth_test = false;
			break;
		case 1:
			this.cull_backfaces = true;
			this.depth_test = true;
			break;
		case 2:
			break;
		}
	}
	,default_camera_options: function() {
		return { projection : phoenix_ProjectionType.ortho, depth_test : false, cull_backfaces : false, near : 1000, far : -1000};
	}
	,ortho_screen_to_world: function(_vector) {
		if(this.target != null) this.update_look_at();
		this.update_projection_matrix();
		this.update_view_matrix();
		var _this = new phoenix_Vector(_vector.x,_vector.y,_vector.z,_vector.w);
		var _x = _this.x;
		var _y = _this.y;
		var _z = _this.z;
		var e = this.view_matrix.elements;
		var _x1 = e[0] * _x + e[4] * _y + e[8] * _z + e[12];
		var _y1 = e[1] * _x + e[5] * _y + e[9] * _z + e[13];
		var _z1 = e[2] * _x + e[6] * _y + e[10] * _z + e[14];
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = _x1;
		if(_this._construct) _this.x; else {
			if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_x1);
			_this.x;
		}
		_this.y = _y1;
		if(_this._construct) _this.y; else {
			if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_y1);
			_this.y;
		}
		_this.z = _z1;
		if(_this._construct) _this.z; else {
			if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_z1);
			_this.z;
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_this.x);
		if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_this.y);
		if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_this.z);
		_this;
		return _this;
	}
	,ortho_world_to_screen: function(_vector) {
		if(this.target != null) this.update_look_at();
		this.update_projection_matrix();
		this.update_view_matrix();
		var _this = new phoenix_Vector(_vector.x,_vector.y,_vector.z,_vector.w);
		var _x = _this.x;
		var _y = _this.y;
		var _z = _this.z;
		var e = this.view_matrix_inverse.elements;
		var _x1 = e[0] * _x + e[4] * _y + e[8] * _z + e[12];
		var _y1 = e[1] * _x + e[5] * _y + e[9] * _z + e[13];
		var _z1 = e[2] * _x + e[6] * _y + e[10] * _z + e[14];
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = _x1;
		if(_this._construct) _this.x; else {
			if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_x1);
			_this.x;
		}
		_this.y = _y1;
		if(_this._construct) _this.y; else {
			if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_y1);
			_this.y;
		}
		_this.z = _z1;
		if(_this._construct) _this.z; else {
			if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_z1);
			_this.z;
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_this.x);
		if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_this.y);
		if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_this.z);
		_this;
		return _this;
	}
	,persepective_world_to_screen: function(_vector,_viewport) {
		if(_viewport == null) _viewport = this.viewport;
		_viewport;
		var _projected = this.project(_vector);
		var width_half = _viewport.w / 2;
		var height_half = _viewport.h / 2;
		return new phoenix_Vector(_projected.x * width_half + width_half,-(_projected.y * height_half) + height_half);
	}
	,set_target: function(_target) {
		if(_target != null) this.look_at_dirty = true;
		return this.target = _target;
	}
	,set_fov: function(_fov) {
		this.projection_dirty = true;
		if(this.fov_type == phoenix_FOVType.horizontal) this.fov_y = 180 / Math.PI * (2 * Math.atan(Math.tan(_fov * (Math.PI / 180) / 2) * (1 / this.aspect))); else this.fov_y = _fov;
		return this.fov = _fov;
	}
	,set_fov_type: function(_fov_type) {
		this.fov_type = _fov_type;
		this.set_fov(this.fov);
		return this.fov_type;
	}
	,set_aspect: function(_aspect) {
		this.projection_dirty = true;
		this.aspect = _aspect;
		this.set_fov(this.fov);
		return this.aspect;
	}
	,set_near: function(_near) {
		this.projection_dirty = true;
		return this.near = _near;
	}
	,set_far: function(_far) {
		this.projection_dirty = true;
		return this.far = _far;
	}
	,set_ortho_left: function(_val) {
		this.projection_dirty = true;
		return this.ortho_left = _val;
	}
	,set_ortho_right: function(_val) {
		this.projection_dirty = true;
		return this.ortho_right = _val;
	}
	,set_ortho_top: function(_val) {
		this.projection_dirty = true;
		return this.ortho_top = _val;
	}
	,set_ortho_bottom: function(_val) {
		this.projection_dirty = true;
		return this.ortho_bottom = _val;
	}
	,set_zoom: function(_z) {
		var _new_zoom = _z;
		if(_new_zoom < this.minimum_zoom) _new_zoom = this.minimum_zoom;
		var _g = this.projection;
		switch(_g[1]) {
		case 0:
			this.transform.local.scale.set_x(1 / _new_zoom);
			this.transform.local.scale.set_y(1 / _new_zoom);
			this.transform.local.scale.set_z(1 / _new_zoom);
			break;
		case 1:
			break;
		case 2:
			break;
		}
		return this.zoom = _new_zoom;
	}
	,set_center: function(_p) {
		this.center = _p;
		var _g = this.projection;
		switch(_g[1]) {
		case 0:
			if(!this.refresh_pos_ && !this.setup_) {
				this.pos.ignore_listeners = true;
				this.pos.set_x(_p.x - this.viewport.w / 2);
				this.pos.set_y(_p.y - this.viewport.h / 2);
				this.pos.ignore_listeners = false;
				var _this = this.transform.local.pos;
				var _x = _p.x;
				var _y = _p.y;
				var _z = _p.z;
				var prev = _this.ignore_listeners;
				_this.ignore_listeners = true;
				_this.x = _x;
				if(_this._construct) _this.x; else {
					if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_x);
					_this.x;
				}
				_this.y = _y;
				if(_this._construct) _this.y; else {
					if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_y);
					_this.y;
				}
				_this.z = _z;
				if(_this._construct) _this.z; else {
					if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_z);
					_this.z;
				}
				_this.w = _p.w;
				_this.ignore_listeners = prev;
				if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_this.x);
				if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_this.y);
				if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_this.z);
				_this;
				_this;
			}
			break;
		case 1:
			break;
		case 2:
			break;
		}
		var _v = this.center;
		var listener = $bind(this,this._center_changed);
		_v.listen_x = listener;
		_v.listen_y = listener;
		_v.listen_z = listener;
		return this.center;
	}
	,get_center: function() {
		return this.center;
	}
	,get_pos: function() {
		return this.pos;
	}
	,get_rotation: function() {
		return this.transform.local.rotation;
	}
	,get_scale: function() {
		return this.transform.local.scale;
	}
	,get_viewport: function() {
		return this.viewport;
	}
	,set_viewport: function(_r) {
		this.projection_dirty = true;
		this.viewport = _r;
		var _g = this.projection;
		switch(_g[1]) {
		case 0:
			this.transform.set_origin(new phoenix_Vector(_r.w / 2,_r.h / 2));
			this.set_pos(this.pos);
			break;
		case 1:
			break;
		case 2:
			break;
		}
		return this.viewport;
	}
	,set_rotation: function(_q) {
		return this.transform.local.set_rotation(_q);
	}
	,set_scale: function(_s) {
		return this.transform.local.set_scale(_s);
	}
	,set_pos: function(_p) {
		this.pos = _p;
		var _g = this.projection;
		switch(_g[1]) {
		case 0:
			var _cx = this.center.x;
			var _cy = this.center.y;
			if(this.viewport != null) {
				_cx = _p.x + this.viewport.w / 2;
				_cy = _p.y + this.viewport.h / 2;
			}
			this.refresh_pos_ = true;
			this.center.ignore_listeners = true;
			this.center.set_x(_cx);
			this.center.set_y(_cy);
			this.center.ignore_listeners = false;
			this.refresh_pos_ = false;
			this.transform.local.pos.set_x(_cx);
			this.transform.local.pos.set_y(_cy);
			break;
		case 1:
			this.transform.local.set_pos(this.pos);
			break;
		case 2:
			break;
		}
		var _v = this.pos;
		var listener = $bind(this,this._pos_changed);
		_v.listen_x = listener;
		_v.listen_y = listener;
		_v.listen_z = listener;
		return this.pos;
	}
	,_merge_options: function(_o) {
		this.apply_default_camera_options();
		if(_o.aspect != null) {
			this.projection_dirty = true;
			this.aspect = _o.aspect;
			this.set_fov(this.fov);
			this.aspect;
		}
		if(_o.far != null) {
			this.projection_dirty = true;
			this.far = _o.far;
		}
		if(_o.fov != null) this.set_fov(_o.fov);
		if(_o.near != null) {
			this.projection_dirty = true;
			this.near = _o.near;
		}
		if(_o.viewport != null) this.set_viewport(_o.viewport);
		if(_o.cull_backfaces != null) this.cull_backfaces = _o.cull_backfaces;
		if(_o.depth_test != null) this.depth_test = _o.depth_test;
		if(_o.fov_type != null) {
			this.fov_type = _o.fov_type;
			this.set_fov(this.fov);
			this.fov_type;
		} else {
			this.fov_type = phoenix_FOVType.horizontal;
			this.set_fov(this.fov);
			this.fov_type;
		}
	}
	,_pos_changed: function(v) {
		this.set_pos(this.pos);
	}
	,_center_changed: function(v) {
		this.set_center(this.center);
	}
	,__class__: phoenix_Camera
	,__properties__: {set_ortho_bottom:"set_ortho_bottom",set_ortho_top:"set_ortho_top",set_ortho_right:"set_ortho_right",set_ortho_left:"set_ortho_left",set_rotation:"set_rotation",get_rotation:"get_rotation",set_scale:"set_scale",get_scale:"get_scale",set_pos:"set_pos",get_pos:"get_pos",set_target:"set_target",set_aspect:"set_aspect",set_fov_type:"set_fov_type",set_fov:"set_fov",set_far:"set_far",set_near:"set_near",set_zoom:"set_zoom",set_center:"set_center",get_center:"get_center",set_viewport:"set_viewport",get_viewport:"get_viewport"}
};
var phoenix_FOVType = $hxClasses["phoenix.FOVType"] = { __ename__ : ["phoenix","FOVType"], __constructs__ : ["vertical","horizontal"] };
phoenix_FOVType.vertical = ["vertical",0];
phoenix_FOVType.vertical.toString = $estr;
phoenix_FOVType.vertical.__enum__ = phoenix_FOVType;
phoenix_FOVType.horizontal = ["horizontal",1];
phoenix_FOVType.horizontal.toString = $estr;
phoenix_FOVType.horizontal.__enum__ = phoenix_FOVType;
var phoenix_ColorHSL = function(_h,_s,_l,_a) {
	if(_a == null) _a = 1.0;
	if(_l == null) _l = 1.0;
	if(_s == null) _s = 1.0;
	if(_h == null) _h = 0.0;
	this.l = 1.0;
	this.s = 1.0;
	this.h = 0.0;
	phoenix_Color.call(this);
	this.is_hsl = true;
	this.set_h(_h);
	this.set_s(_s);
	this.set_l(_l);
	this.a = _a;
	this._refresh();
};
$hxClasses["phoenix.ColorHSL"] = phoenix_ColorHSL;
phoenix_ColorHSL.__name__ = ["phoenix","ColorHSL"];
phoenix_ColorHSL.__super__ = phoenix_Color;
phoenix_ColorHSL.prototype = $extend(phoenix_Color.prototype,{
	set_h: function(_h) {
		this.h = _h;
		this._refresh();
		return _h;
	}
	,set_s: function(_s) {
		this.s = _s;
		this._refresh();
		return _s;
	}
	,set_l: function(_l) {
		this.l = _l;
		this._refresh();
		return _l;
	}
	,set: function(_h,_s,_l,_a) {
		var _seth = this.h;
		var _sets = this.s;
		var _setl = this.l;
		var _seta = this.a;
		if(_h != null) _seth = _h;
		if(_s != null) _sets = _s;
		if(_l != null) _setl = _l;
		if(_a != null) _seta = _a;
		this.set_h(_seth);
		this.set_s(_sets);
		this.set_l(_setl);
		this.a = _seta;
		this._refresh();
		return this;
	}
	,tween: function(_time_in_seconds,_dest,_override) {
		if(_override == null) _override = true;
		if(_time_in_seconds == null) _time_in_seconds = 0.5;
		phoenix_Color.prototype.tween.call(this,_time_in_seconds,_dest,_override);
		if(_dest != null) {
			var _dest_h = this.h;
			var _dest_s = this.s;
			var _dest_l = this.l;
			var _dest_a = this.a;
			var _change_h = false;
			var _change_s = false;
			var _change_l = false;
			var _change_a = false;
			if(js_Boot.__instanceof(_dest,phoenix_ColorHSL)) {
				_dest_h = _dest.h;
				_dest_s = _dest.s;
				_dest_l = _dest.l;
				_dest_a = _dest.a;
				_change_h = true;
				_change_s = true;
				_change_l = true;
				_change_a = true;
			} else {
				if(_dest.h != null) {
					_dest_h = _dest.h;
					_change_h = true;
				}
				if(_dest.s != null) {
					_dest_s = _dest.s;
					_change_s = true;
				}
				if(_dest.l != null) {
					_dest_l = _dest.l;
					_change_l = true;
				}
				if(_dest.a != null) {
					_dest_a = _dest.a;
					_change_a = true;
				}
			}
			var _properties = { };
			if(_change_h) _properties.h = _dest_h;
			if(_change_s) _properties.s = _dest_s;
			if(_change_l) _properties.l = _dest_l;
			if(_change_a) _properties.a = _dest_a;
			return luxe_tween_Actuate.tween(this,_time_in_seconds,_properties,_override);
		} else throw new js__$Boot_HaxeError(" Warning: Color.tween passed a null destination ");
	}
	,_refresh: function() {
		this.refreshing = true;
		phoenix_Color.prototype.fromColorHSL.call(this,this);
		this.refreshing = false;
		return this;
	}
	,clone: function() {
		return new phoenix_ColorHSL(this.h,this.s,this.l,this.a);
	}
	,toColor: function() {
		return this._refresh();
	}
	,fromColor: function(_color) {
		var max = _color.maxRGB();
		var min = _color.minRGB();
		var add = max + min;
		var sub = max - min;
		var _h = 0;
		if(max == min) _h = 0; else if(max == _color.r) _h = (60 * (_color.g - _color.b) / sub + 360) % 360; else if(max == _color.g) _h = 60 * (_color.b - _color.r) / sub + 120; else if(max == _color.b) _h = 60 * (_color.r - _color.g) / sub + 240;
		var _l = add / 2;
		var _s;
		if(max == min) _s = 0; else if(this.l <= 0.5) _s = sub / add; else _s = sub / (2 - add);
		this.set_h(_h);
		this.set_s(_s);
		this.set_l(_l);
		this.a = _color.a;
		return this;
	}
	,toString: function() {
		return "{ h:" + this.h + " , s:" + this.s + " , l:" + this.l + " , a:" + this.a + " }";
	}
	,__class__: phoenix_ColorHSL
	,__properties__: $extend(phoenix_Color.prototype.__properties__,{set_l:"set_l",set_s:"set_s",set_h:"set_h"})
});
var phoenix_ColorHSV = function(_h,_s,_v,_a) {
	if(_a == null) _a = 1.0;
	if(_v == null) _v = 1.0;
	if(_s == null) _s = 0.0;
	if(_h == null) _h = 0.0;
	this.v = 1.0;
	this.s = 0.0;
	this.h = 0.0;
	phoenix_Color.call(this);
	this.is_hsv = true;
	this.set_h(_h);
	this.set_s(_s);
	this.set_v(_v);
	this.a = _a;
	this._refresh();
};
$hxClasses["phoenix.ColorHSV"] = phoenix_ColorHSV;
phoenix_ColorHSV.__name__ = ["phoenix","ColorHSV"];
phoenix_ColorHSV.__super__ = phoenix_Color;
phoenix_ColorHSV.prototype = $extend(phoenix_Color.prototype,{
	set_h: function(_h) {
		this.h = _h;
		this._refresh();
		return _h;
	}
	,set_s: function(_s) {
		this.s = _s;
		this._refresh();
		return this.s;
	}
	,set_v: function(_v) {
		this.v = _v;
		this._refresh();
		return this.v;
	}
	,set: function(_h,_s,_v,_a) {
		var _seth = this.h;
		var _sets = this.s;
		var _setv = this.v;
		var _seta = this.a;
		if(_h != null) _seth = _h;
		if(_s != null) _sets = _s;
		if(_v != null) _setv = _v;
		if(_a != null) _seta = _a;
		this.set_h(_seth);
		this.set_s(_sets);
		this.set_v(_setv);
		this.a = _seta;
		this._refresh();
		return this;
	}
	,tween: function(_time_in_seconds,_dest,_override) {
		if(_override == null) _override = true;
		if(_time_in_seconds == null) _time_in_seconds = 0.5;
		phoenix_Color.prototype.tween.call(this,_time_in_seconds,_dest,_override);
		if(_dest != null) {
			var _dest_h = this.h;
			var _dest_s = this.s;
			var _dest_v = this.v;
			var _dest_a = this.a;
			var _change_h = false;
			var _change_s = false;
			var _change_v = false;
			var _change_a = false;
			if(js_Boot.__instanceof(_dest,phoenix_ColorHSV)) {
				_dest_h = _dest.h;
				_dest_s = _dest.s;
				_dest_v = _dest.v;
				_dest_a = _dest.a;
				_change_h = true;
				_change_s = true;
				_change_v = true;
				_change_a = true;
			} else {
				if(_dest.h != null) {
					_dest_h = _dest.h;
					_change_h = true;
				}
				if(_dest.s != null) {
					_dest_s = _dest.s;
					_change_s = true;
				}
				if(_dest.v != null) {
					_dest_v = _dest.v;
					_change_v = true;
				}
				if(_dest.a != null) {
					_dest_a = _dest.a;
					_change_a = true;
				}
			}
			var _properties = { };
			if(_change_h) _properties.h = _dest_h;
			if(_change_s) _properties.s = _dest_s;
			if(_change_v) _properties.v = _dest_v;
			if(_change_a) _properties.a = _dest_a;
			return luxe_tween_Actuate.tween(this,_time_in_seconds,_properties,_override);
		} else throw new js__$Boot_HaxeError(" Warning: Color.tween passed a null destination ");
	}
	,_refresh: function() {
		this.refreshing = true;
		phoenix_Color.prototype.fromColorHSV.call(this,this);
		this.refreshing = false;
		return this;
	}
	,clone: function() {
		return new phoenix_ColorHSV(this.h,this.s,this.v,this.a);
	}
	,toColor: function() {
		return this._refresh();
	}
	,toColorHSL: function() {
		this._refresh();
		return phoenix_Color.prototype.toColorHSL.call(this);
	}
	,fromColorHSL: function(_color_hsl) {
		_color_hsl._refresh();
		return this.fromColor(_color_hsl);
	}
	,fromColor: function(_color) {
		var max = _color.maxRGB();
		var min = _color.minRGB();
		var add = max + min;
		var sub = max - min;
		var _h = 0;
		if(max == min) _h = 0; else if(max == _color.r) _h = (60 * (_color.g - _color.b) / sub + 360) % 360; else if(max == _color.g) _h = 60 * (_color.b - _color.r) / sub + 120; else if(max == _color.b) _h = 60 * (_color.r - _color.g) / sub + 240;
		var _s;
		if(max == 0) _s = 0; else _s = 1 - min / max;
		this.set_h(_h);
		this.set_s(_s);
		this.set_v(max);
		this.a = _color.a;
		return this;
	}
	,toString: function() {
		return "{ h:" + this.h + " , s:" + this.s + " , v:" + this.v + " , a:" + this.a + " }";
	}
	,__class__: phoenix_ColorHSV
	,__properties__: $extend(phoenix_Color.prototype.__properties__,{set_v:"set_v",set_s:"set_s",set_h:"set_h"})
});
var phoenix_MatrixTransform = function(p,r,s) {
	this.pos = p;
	this.rotation = r;
	this.scale = s;
};
$hxClasses["phoenix.MatrixTransform"] = phoenix_MatrixTransform;
phoenix_MatrixTransform.__name__ = ["phoenix","MatrixTransform"];
phoenix_MatrixTransform.prototype = {
	destroy: function() {
		this.pos = null;
		this.rotation = null;
		this.scale = null;
	}
	,__class__: phoenix_MatrixTransform
};
var phoenix_Matrix = function(n11,n12,n13,n14,n21,n22,n23,n24,n31,n32,n33,n34,n41,n42,n43,n44) {
	if(n44 == null) n44 = 1;
	if(n43 == null) n43 = 0;
	if(n42 == null) n42 = 0;
	if(n41 == null) n41 = 0;
	if(n34 == null) n34 = 0;
	if(n33 == null) n33 = 1;
	if(n32 == null) n32 = 0;
	if(n31 == null) n31 = 0;
	if(n24 == null) n24 = 0;
	if(n23 == null) n23 = 0;
	if(n22 == null) n22 = 1;
	if(n21 == null) n21 = 0;
	if(n14 == null) n14 = 0;
	if(n13 == null) n13 = 0;
	if(n12 == null) n12 = 0;
	if(n11 == null) n11 = 1;
	this.elements = [];
	var i = 0;
	while(i++ < 16) this.elements.push(0.0);
	this.set(n11,n12,n13,n14,n21,n22,n23,n24,n31,n32,n33,n34,n41,n42,n43,n44);
	this._float32array = new Float32Array(this.elements);
};
$hxClasses["phoenix.Matrix"] = phoenix_Matrix;
phoenix_Matrix.__name__ = ["phoenix","Matrix"];
phoenix_Matrix.prototype = {
	set: function(n11,n12,n13,n14,n21,n22,n23,n24,n31,n32,n33,n34,n41,n42,n43,n44) {
		var e = this.elements;
		e[0] = n11;
		e[4] = n12;
		e[8] = n13;
		e[12] = n14;
		e[1] = n21;
		e[5] = n22;
		e[9] = n23;
		e[13] = n24;
		e[2] = n31;
		e[6] = n32;
		e[10] = n33;
		e[14] = n34;
		e[3] = n41;
		e[7] = n42;
		e[11] = n43;
		e[15] = n44;
		return this;
	}
	,toString: function() {
		var e = this.elements;
		var str = "{ 11:" + luxe_utils_Maths.fixed(e[0],3) + ", 12:" + luxe_utils_Maths.fixed(e[4],3) + ", 13:" + luxe_utils_Maths.fixed(e[8],3) + ", 14:" + luxe_utils_Maths.fixed(e[12],3) + " }, " + "{ 21:" + luxe_utils_Maths.fixed(e[1],3) + ", 22:" + luxe_utils_Maths.fixed(e[5],3) + ", 23:" + luxe_utils_Maths.fixed(e[9],3) + ", 24:" + luxe_utils_Maths.fixed(e[13],3) + " }, " + "{ 31:" + luxe_utils_Maths.fixed(e[2],3) + ", 32:" + luxe_utils_Maths.fixed(e[6],3) + ", 33:" + luxe_utils_Maths.fixed(e[10],3) + ", 34:" + luxe_utils_Maths.fixed(e[14],3) + " }, " + "{ 41:" + luxe_utils_Maths.fixed(e[3],3) + ", 42:" + luxe_utils_Maths.fixed(e[7],3) + ", 43:" + luxe_utils_Maths.fixed(e[11],3) + ", 44:" + luxe_utils_Maths.fixed(e[15],3) + " }";
		return str;
	}
	,get_M11: function() {
		return this.elements[0];
	}
	,get_M21: function() {
		return this.elements[1];
	}
	,get_M31: function() {
		return this.elements[2];
	}
	,get_M41: function() {
		return this.elements[3];
	}
	,get_M12: function() {
		return this.elements[4];
	}
	,get_M22: function() {
		return this.elements[5];
	}
	,get_M32: function() {
		return this.elements[6];
	}
	,get_M42: function() {
		return this.elements[7];
	}
	,get_M13: function() {
		return this.elements[8];
	}
	,get_M23: function() {
		return this.elements[9];
	}
	,get_M33: function() {
		return this.elements[10];
	}
	,get_M43: function() {
		return this.elements[11];
	}
	,get_M14: function() {
		return this.elements[12];
	}
	,get_M24: function() {
		return this.elements[13];
	}
	,get_M34: function() {
		return this.elements[14];
	}
	,get_M44: function() {
		return this.elements[15];
	}
	,set_M11: function(_v) {
		this.elements[0] = _v;
		return _v;
	}
	,set_M21: function(_v) {
		this.elements[1] = _v;
		return _v;
	}
	,set_M31: function(_v) {
		this.elements[2] = _v;
		return _v;
	}
	,set_M41: function(_v) {
		this.elements[3] = _v;
		return _v;
	}
	,set_M12: function(_v) {
		this.elements[4] = _v;
		return _v;
	}
	,set_M22: function(_v) {
		this.elements[5] = _v;
		return _v;
	}
	,set_M32: function(_v) {
		this.elements[6] = _v;
		return _v;
	}
	,set_M42: function(_v) {
		this.elements[7] = _v;
		return _v;
	}
	,set_M13: function(_v) {
		this.elements[8] = _v;
		return _v;
	}
	,set_M23: function(_v) {
		this.elements[9] = _v;
		return _v;
	}
	,set_M33: function(_v) {
		this.elements[10] = _v;
		return _v;
	}
	,set_M43: function(_v) {
		this.elements[11] = _v;
		return _v;
	}
	,set_M14: function(_v) {
		this.elements[12] = _v;
		return _v;
	}
	,set_M24: function(_v) {
		this.elements[13] = _v;
		return _v;
	}
	,set_M34: function(_v) {
		this.elements[14] = _v;
		return _v;
	}
	,set_M44: function(_v) {
		this.elements[15] = _v;
		return _v;
	}
	,float32array: function() {
		var i = 0;
		while(i < 16) {
			this._float32array[i] = this.elements[i];
			++i;
		}
		return this._float32array;
	}
	,identity: function() {
		this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);
		return this;
	}
	,copy: function(m) {
		var me = m.elements;
		this.set(me[0],me[4],me[8],me[12],me[1],me[5],me[9],me[13],me[2],me[6],me[10],me[14],me[3],me[7],me[11],me[15]);
		return this;
	}
	,make2D: function(_x,_y,_scale,_rotation) {
		if(_rotation == null) _rotation = 0;
		if(_scale == null) _scale = 1;
		var theta = _rotation * 0.017453292519943278;
		var c = Math.cos(theta);
		var s = Math.sin(theta);
		this.set(c * _scale,s * _scale,0,_x,-s * _scale,c * _scale,0,_y,0,0,1,0,0,0,0,1);
		return this;
	}
	,copyPosition: function(m) {
		this.elements[12] = m.elements[12];
		this.elements[13] = m.elements[13];
		this.elements[14] = m.elements[14];
		return this;
	}
	,getPosition: function() {
		return new phoenix_Vector(this.elements[12],this.elements[13],this.elements[14],1);
	}
	,extractRotation: function(m) {
		var _temp = new phoenix_Vector();
		var me = m.elements;
		var _scale_x;
		_scale_x = 1 / (function($this) {
			var $r;
			var _this;
			{
				var _x = me[0];
				var _y = me[1];
				var _z = me[2];
				var prev = _temp.ignore_listeners;
				_temp.ignore_listeners = true;
				_temp.x = _x;
				if(_temp._construct) _temp.x; else {
					if(_temp.listen_x != null && !_temp.ignore_listeners) _temp.listen_x(_x);
					_temp.x;
				}
				_temp.y = _y;
				if(_temp._construct) _temp.y; else {
					if(_temp.listen_y != null && !_temp.ignore_listeners) _temp.listen_y(_y);
					_temp.y;
				}
				_temp.z = _z;
				if(_temp._construct) _temp.z; else {
					if(_temp.listen_z != null && !_temp.ignore_listeners) _temp.listen_z(_z);
					_temp.z;
				}
				_temp.ignore_listeners = prev;
				if(_temp.listen_x != null && !_temp.ignore_listeners) _temp.listen_x(_temp.x);
				if(_temp.listen_y != null && !_temp.ignore_listeners) _temp.listen_y(_temp.y);
				if(_temp.listen_z != null && !_temp.ignore_listeners) _temp.listen_z(_temp.z);
				_this = _temp;
			}
			$r = Math.sqrt(_this.x * _this.x + _this.y * _this.y + _this.z * _this.z);
			return $r;
		}(this));
		var _scale_y;
		_scale_y = 1 / (function($this) {
			var $r;
			var _this1;
			{
				var _x1 = me[4];
				var _y1 = me[5];
				var _z1 = me[6];
				var prev1 = _temp.ignore_listeners;
				_temp.ignore_listeners = true;
				_temp.x = _x1;
				if(_temp._construct) _temp.x; else {
					if(_temp.listen_x != null && !_temp.ignore_listeners) _temp.listen_x(_x1);
					_temp.x;
				}
				_temp.y = _y1;
				if(_temp._construct) _temp.y; else {
					if(_temp.listen_y != null && !_temp.ignore_listeners) _temp.listen_y(_y1);
					_temp.y;
				}
				_temp.z = _z1;
				if(_temp._construct) _temp.z; else {
					if(_temp.listen_z != null && !_temp.ignore_listeners) _temp.listen_z(_z1);
					_temp.z;
				}
				_temp.ignore_listeners = prev1;
				if(_temp.listen_x != null && !_temp.ignore_listeners) _temp.listen_x(_temp.x);
				if(_temp.listen_y != null && !_temp.ignore_listeners) _temp.listen_y(_temp.y);
				if(_temp.listen_z != null && !_temp.ignore_listeners) _temp.listen_z(_temp.z);
				_this1 = _temp;
			}
			$r = Math.sqrt(_this1.x * _this1.x + _this1.y * _this1.y + _this1.z * _this1.z);
			return $r;
		}(this));
		var _scale_z;
		_scale_z = 1 / (function($this) {
			var $r;
			var _this2;
			{
				var _x2 = me[8];
				var _y2 = me[9];
				var _z2 = me[10];
				var prev2 = _temp.ignore_listeners;
				_temp.ignore_listeners = true;
				_temp.x = _x2;
				if(_temp._construct) _temp.x; else {
					if(_temp.listen_x != null && !_temp.ignore_listeners) _temp.listen_x(_x2);
					_temp.x;
				}
				_temp.y = _y2;
				if(_temp._construct) _temp.y; else {
					if(_temp.listen_y != null && !_temp.ignore_listeners) _temp.listen_y(_y2);
					_temp.y;
				}
				_temp.z = _z2;
				if(_temp._construct) _temp.z; else {
					if(_temp.listen_z != null && !_temp.ignore_listeners) _temp.listen_z(_z2);
					_temp.z;
				}
				_temp.ignore_listeners = prev2;
				if(_temp.listen_x != null && !_temp.ignore_listeners) _temp.listen_x(_temp.x);
				if(_temp.listen_y != null && !_temp.ignore_listeners) _temp.listen_y(_temp.y);
				if(_temp.listen_z != null && !_temp.ignore_listeners) _temp.listen_z(_temp.z);
				_this2 = _temp;
			}
			$r = Math.sqrt(_this2.x * _this2.x + _this2.y * _this2.y + _this2.z * _this2.z);
			return $r;
		}(this));
		this.elements[0] = me[0] * _scale_x;
		this.elements[1] = me[1] * _scale_x;
		this.elements[2] = me[2] * _scale_x;
		this.elements[4] = me[4] * _scale_y;
		this.elements[5] = me[5] * _scale_y;
		this.elements[6] = me[6] * _scale_y;
		this.elements[8] = me[8] * _scale_z;
		this.elements[9] = me[9] * _scale_z;
		this.elements[10] = me[10] * _scale_z;
		return this;
	}
	,makeRotationFromEuler: function(_v,_order) {
		if(_order == null) _order = 0;
		var te = this.elements;
		var x = _v.x;
		var y = _v.y;
		var z = _v.z;
		var a = Math.cos(x);
		var b = Math.sin(x);
		var c = Math.cos(y);
		var d = Math.sin(y);
		var e = Math.cos(z);
		var f = Math.sin(z);
		if(_order == 0) {
			var ae = a * e;
			var af = a * f;
			var be = b * e;
			var bf = b * f;
			te[0] = c * e;
			te[4] = -c * f;
			te[8] = d;
			te[1] = af + be * d;
			te[5] = ae - bf * d;
			te[9] = -b * c;
			te[2] = bf - ae * d;
			te[6] = be + af * d;
			te[10] = a * c;
		} else if(_order == 1) {
			var ce = c * e;
			var cf = c * f;
			var de = d * e;
			var df = d * f;
			te[0] = ce + df * b;
			te[4] = de * b - cf;
			te[8] = a * d;
			te[1] = a * f;
			te[5] = a * e;
			te[9] = -b;
			te[2] = cf * b - de;
			te[6] = df + ce * b;
			te[10] = a * c;
		} else if(_order == 2) {
			var ce1 = c * e;
			var cf1 = c * f;
			var de1 = d * e;
			var df1 = d * f;
			te[0] = ce1 - df1 * b;
			te[4] = -a * f;
			te[8] = de1 + cf1 * b;
			te[1] = cf1 + de1 * b;
			te[5] = a * e;
			te[9] = df1 - ce1 * b;
			te[2] = -a * d;
			te[6] = b;
			te[10] = a * c;
		} else if(_order == 3) {
			var ae1 = a * e;
			var af1 = a * f;
			var be1 = b * e;
			var bf1 = b * f;
			te[0] = c * e;
			te[4] = be1 * d - af1;
			te[8] = ae1 * d + bf1;
			te[1] = c * f;
			te[5] = bf1 * d + ae1;
			te[9] = af1 * d - be1;
			te[2] = -d;
			te[6] = b * c;
			te[10] = a * c;
		} else if(_order == 4) {
			var ac = a * c;
			var ad = a * d;
			var bc = b * c;
			var bd = b * d;
			te[0] = c * e;
			te[4] = bd - ac * f;
			te[8] = bc * f + ad;
			te[1] = f;
			te[5] = a * e;
			te[9] = -b * e;
			te[2] = -d * e;
			te[6] = ad * f + bc;
			te[10] = ac - bd * f;
		} else if(_order == 5) {
			var ac1 = a * c;
			var ad1 = a * d;
			var bc1 = b * c;
			var bd1 = b * d;
			te[0] = c * e;
			te[4] = -f;
			te[8] = d * e;
			te[1] = ac1 * f + bd1;
			te[5] = a * e;
			te[9] = ad1 * f - bc1;
			te[2] = bc1 * f - ad1;
			te[6] = b * e;
			te[10] = bd1 * f + ac1;
		}
		te[3] = 0;
		te[7] = 0;
		te[11] = 0;
		te[12] = 0;
		te[13] = 0;
		te[14] = 0;
		te[15] = 1;
		return this;
	}
	,makeRotationFromQuaternion: function(q) {
		var te = this.elements;
		var x2 = q.x + q.x;
		var y2 = q.y + q.y;
		var z2 = q.z + q.z;
		var xx = q.x * x2;
		var xy = q.x * y2;
		var xz = q.x * z2;
		var yy = q.y * y2;
		var yz = q.y * z2;
		var zz = q.z * z2;
		var wx = q.w * x2;
		var wy = q.w * y2;
		var wz = q.w * z2;
		te[0] = 1 - (yy + zz);
		te[4] = xy - wz;
		te[8] = xz + wy;
		te[1] = xy + wz;
		te[5] = 1 - (xx + zz);
		te[9] = yz - wx;
		te[2] = xz - wy;
		te[6] = yz + wx;
		te[10] = 1 - (xx + yy);
		te[3] = 0;
		te[7] = 0;
		te[11] = 0;
		te[12] = 0;
		te[13] = 0;
		te[14] = 0;
		te[15] = 1;
		return this;
	}
	,lookAt: function(_eye,_target,_up) {
		var _x = new phoenix_Vector();
		var _y = new phoenix_Vector();
		var _z = new phoenix_Vector();
		var te = this.elements;
		var _this = new phoenix_Vector(_target.x - _eye.x,_target.y - _eye.y,_target.z - _eye.z);
		var b = Math.sqrt(_this.x * _this.x + _this.y * _this.y + _this.z * _this.z);
		_z = new phoenix_Vector(_this.x / b,_this.y / b,_this.z / b);
		if(Math.sqrt(_z.x * _z.x + _z.y * _z.y + _z.z * _z.z) == 0) {
			_z.z = 1;
			if(_z._construct) _z.z; else {
				if(_z.listen_z != null && !_z.ignore_listeners) _z.listen_z(1);
				_z.z;
			}
		}
		var _this1 = new phoenix_Vector(_up.y * _z.z - _up.z * _z.y,_up.z * _z.x - _up.x * _z.z,_up.x * _z.y - _up.y * _z.x);
		var b1 = Math.sqrt(_this1.x * _this1.x + _this1.y * _this1.y + _this1.z * _this1.z);
		_x = new phoenix_Vector(_this1.x / b1,_this1.y / b1,_this1.z / b1);
		if(Math.sqrt(_x.x * _x.x + _x.y * _x.y + _x.z * _x.z) == 0) {
			var _g = _z;
			_g.set_x(_g.x + 0.0001);
			var _this2 = new phoenix_Vector(_up.y * _z.z - _up.z * _z.y,_up.z * _z.x - _up.x * _z.z,_up.x * _z.y - _up.y * _z.x);
			var b2 = Math.sqrt(_this2.x * _this2.x + _this2.y * _this2.y + _this2.z * _this2.z);
			_x = new phoenix_Vector(_this2.x / b2,_this2.y / b2,_this2.z / b2);
		}
		_y = new phoenix_Vector(_z.y * _x.z - _z.z * _x.y,_z.z * _x.x - _z.x * _x.z,_z.x * _x.y - _z.y * _x.x);
		te[0] = _x.x;
		te[4] = _y.x;
		te[8] = _z.x;
		te[1] = _x.y;
		te[5] = _y.y;
		te[9] = _z.y;
		te[2] = _x.z;
		te[6] = _y.z;
		te[10] = _z.z;
		return this;
	}
	,multiply: function(_m) {
		return this.multiplyMatrices(this,_m);
	}
	,multiplyMatrices: function(_a,_b) {
		var ae = _a.elements;
		var be = _b.elements;
		var te = this.elements;
		var a11 = ae[0];
		var a12 = ae[4];
		var a13 = ae[8];
		var a14 = ae[12];
		var a21 = ae[1];
		var a22 = ae[5];
		var a23 = ae[9];
		var a24 = ae[13];
		var a31 = ae[2];
		var a32 = ae[6];
		var a33 = ae[10];
		var a34 = ae[14];
		var a41 = ae[3];
		var a42 = ae[7];
		var a43 = ae[11];
		var a44 = ae[15];
		var b11 = be[0];
		var b12 = be[4];
		var b13 = be[8];
		var b14 = be[12];
		var b21 = be[1];
		var b22 = be[5];
		var b23 = be[9];
		var b24 = be[13];
		var b31 = be[2];
		var b32 = be[6];
		var b33 = be[10];
		var b34 = be[14];
		var b41 = be[3];
		var b42 = be[7];
		var b43 = be[11];
		var b44 = be[15];
		te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;
		te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;
		te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;
		te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;
		te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;
		te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;
		te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;
		te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;
		te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;
		te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;
		te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;
		te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;
		te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;
		te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;
		te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;
		te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;
		return this;
	}
	,multiplyToArray: function(_a,_b,_r) {
		var te = this.elements;
		this.multiplyMatrices(_a,_b);
		_r[0] = te[0];
		_r[1] = te[1];
		_r[2] = te[2];
		_r[3] = te[3];
		_r[4] = te[4];
		_r[5] = te[5];
		_r[6] = te[6];
		_r[7] = te[7];
		_r[8] = te[8];
		_r[9] = te[9];
		_r[10] = te[10];
		_r[11] = te[11];
		_r[12] = te[12];
		_r[13] = te[13];
		_r[14] = te[14];
		_r[15] = te[15];
		return this;
	}
	,multiplyScalar: function(_s) {
		var te = this.elements;
		te[0] *= _s;
		te[4] *= _s;
		te[8] *= _s;
		te[12] *= _s;
		te[1] *= _s;
		te[5] *= _s;
		te[9] *= _s;
		te[13] *= _s;
		te[2] *= _s;
		te[6] *= _s;
		te[10] *= _s;
		te[14] *= _s;
		te[3] *= _s;
		te[7] *= _s;
		te[11] *= _s;
		te[15] *= _s;
		return this;
	}
	,multiplyVector3Array: function(_a) {
		var v1 = new phoenix_Vector();
		var i = 0;
		var il = _a.length;
		while(i < il) {
			v1.set_x(_a[i]);
			v1.set_y(_a[i + 1]);
			v1.set_z(_a[i + 2]);
			var e = this.elements;
			var x = v1.x;
			var y = v1.y;
			var z = v1.z;
			var d = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);
			var _x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * d;
			var _y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * d;
			var _z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * d;
			var prev = v1.ignore_listeners;
			v1.ignore_listeners = true;
			v1.x = _x;
			if(v1._construct) v1.x; else {
				if(v1.listen_x != null && !v1.ignore_listeners) v1.listen_x(_x);
				v1.x;
			}
			v1.y = _y;
			if(v1._construct) v1.y; else {
				if(v1.listen_y != null && !v1.ignore_listeners) v1.listen_y(_y);
				v1.y;
			}
			v1.z = _z;
			if(v1._construct) v1.z; else {
				if(v1.listen_z != null && !v1.ignore_listeners) v1.listen_z(_z);
				v1.z;
			}
			v1.ignore_listeners = prev;
			if(v1.listen_x != null && !v1.ignore_listeners) v1.listen_x(v1.x);
			if(v1.listen_y != null && !v1.ignore_listeners) v1.listen_y(v1.y);
			if(v1.listen_z != null && !v1.ignore_listeners) v1.listen_z(v1.z);
			v1;
			v1;
			_a[i] = v1.x;
			_a[i + 1] = v1.y;
			_a[i + 2] = v1.z;
			i += 3;
		}
		return _a;
	}
	,determinant: function() {
		var te = this.elements;
		var n11 = te[0];
		var n12 = te[4];
		var n13 = te[8];
		var n14 = te[12];
		var n21 = te[1];
		var n22 = te[5];
		var n23 = te[9];
		var n24 = te[13];
		var n31 = te[2];
		var n32 = te[6];
		var n33 = te[10];
		var n34 = te[14];
		var n41 = te[3];
		var n42 = te[7];
		var n43 = te[11];
		var n44 = te[15];
		return n41 * (n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34) + n42 * (n11 * n23 * n34 - n11 * n24 * n33 + n14 * n21 * n33 - n13 * n21 * n34 + n13 * n24 * n31 - n14 * n23 * n31) + n43 * (n11 * n24 * n32 - n11 * n22 * n34 - n14 * n21 * n32 + n12 * n21 * n34 + n14 * n22 * n31 - n12 * n24 * n31) + n44 * (-n13 * n22 * n31 - n11 * n23 * n32 + n11 * n22 * n33 + n13 * n21 * n32 - n12 * n21 * n33 + n12 * n23 * n31);
	}
	,transpose: function() {
		var te = this.elements;
		var tmp;
		tmp = te[1];
		te[1] = te[4];
		te[4] = tmp;
		tmp = te[2];
		te[2] = te[8];
		te[8] = tmp;
		tmp = te[6];
		te[6] = te[9];
		te[9] = tmp;
		tmp = te[3];
		te[3] = te[12];
		te[12] = tmp;
		tmp = te[7];
		te[7] = te[13];
		te[13] = tmp;
		tmp = te[11];
		te[11] = te[14];
		te[14] = tmp;
		return this;
	}
	,flattenToArray: function(_flat) {
		if(_flat == null) {
			_flat = [];
			var _g = 0;
			while(_g < 16) {
				var i = _g++;
				_flat.push(0.0);
			}
		}
		var te = this.elements;
		_flat[0] = te[0];
		_flat[1] = te[1];
		_flat[2] = te[2];
		_flat[3] = te[3];
		_flat[4] = te[4];
		_flat[5] = te[5];
		_flat[6] = te[6];
		_flat[7] = te[7];
		_flat[8] = te[8];
		_flat[9] = te[9];
		_flat[10] = te[10];
		_flat[11] = te[11];
		_flat[12] = te[12];
		_flat[13] = te[13];
		_flat[14] = te[14];
		_flat[15] = te[15];
		return _flat;
	}
	,flattenToArrayOffset: function(_flat,_offset) {
		var te = this.elements;
		_flat[_offset] = te[0];
		_flat[_offset + 1] = te[1];
		_flat[_offset + 2] = te[2];
		_flat[_offset + 3] = te[3];
		_flat[_offset + 4] = te[4];
		_flat[_offset + 5] = te[5];
		_flat[_offset + 6] = te[6];
		_flat[_offset + 7] = te[7];
		_flat[_offset + 8] = te[8];
		_flat[_offset + 9] = te[9];
		_flat[_offset + 10] = te[10];
		_flat[_offset + 11] = te[11];
		_flat[_offset + 12] = te[12];
		_flat[_offset + 13] = te[13];
		_flat[_offset + 14] = te[14];
		_flat[_offset + 15] = te[15];
		return _flat;
	}
	,setPosition: function(_v) {
		var te = this.elements;
		te[12] = _v.x;
		te[13] = _v.y;
		te[14] = _v.z;
		return this;
	}
	,inverse: function() {
		return this.clone().getInverse(this);
	}
	,getInverse: function(_m) {
		var te = this.elements;
		var me = _m.elements;
		var n11 = me[0];
		var n12 = me[4];
		var n13 = me[8];
		var n14 = me[12];
		var n21 = me[1];
		var n22 = me[5];
		var n23 = me[9];
		var n24 = me[13];
		var n31 = me[2];
		var n32 = me[6];
		var n33 = me[10];
		var n34 = me[14];
		var n41 = me[3];
		var n42 = me[7];
		var n43 = me[11];
		var n44 = me[15];
		te[0] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;
		te[4] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;
		te[8] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;
		te[12] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;
		te[1] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;
		te[5] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;
		te[9] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;
		te[13] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;
		te[2] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;
		te[6] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;
		te[10] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;
		te[14] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;
		te[3] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;
		te[7] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;
		te[11] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;
		te[15] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;
		var det = me[0] * te[0] + me[1] * te[4] + me[2] * te[8] + me[3] * te[12];
		if(det == 0) {
			haxe_Log.trace("Matrix.getInverse: cant invert matrix, determinant is 0",{ fileName : "Matrix.hx", lineNumber : 697, className : "phoenix.Matrix", methodName : "getInverse"});
			this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);
			this;
			return this;
		}
		this.multiplyScalar(1 / det);
		return this;
	}
	,scale: function(_v) {
		var te = this.elements;
		var _x = _v.x;
		var _y = _v.y;
		var _z = _v.z;
		te[0] *= _x;
		te[4] *= _y;
		te[8] *= _z;
		te[1] *= _x;
		te[5] *= _y;
		te[9] *= _z;
		te[2] *= _x;
		te[6] *= _y;
		te[10] *= _z;
		te[3] *= _x;
		te[7] *= _y;
		te[11] *= _z;
		return this;
	}
	,getMaxScaleOnAxis: function() {
		var te = this.elements;
		var _scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];
		var _scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];
		var _scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];
		return Math.sqrt(Math.max(_scaleXSq,Math.max(_scaleYSq,_scaleZSq)));
	}
	,makeTranslation: function(_x,_y,_z) {
		this.set(1,0,0,_x,0,1,0,_y,0,0,1,_z,0,0,0,1);
		return this;
	}
	,makeRotationX: function(_theta) {
		var _c = Math.cos(_theta);
		var _s = Math.sin(_theta);
		this.set(1,0,0,0,0,_c,-_s,0,0,_s,_c,0,0,0,0,1);
		return this;
	}
	,makeRotationY: function(_theta) {
		var _c = Math.cos(_theta);
		var _s = Math.sin(_theta);
		this.set(_c,0,_s,0,0,1,0,0,-_s,0,_c,0,0,0,0,1);
		return this;
	}
	,makeRotationZ: function(_theta) {
		var _c = Math.cos(_theta);
		var _s = Math.sin(_theta);
		this.set(_c,-_s,0,0,_s,_c,0,0,0,0,1,0,0,0,0,1);
		return this;
	}
	,makeRotationAxis: function(_axis,_angle) {
		var _c = Math.cos(_angle);
		var _s = Math.sin(_angle);
		var _t = 1 - _c;
		var _ax = _axis.x;
		var _ay = _axis.y;
		var _az = _axis.z;
		var _tx = _t * _ax;
		var _ty = _t * _ay;
		this.set(_tx * _ax + _c,_tx * _ay - _s * _az,_tx * _az + _s * _ay,0,_tx * _ay + _s * _az,_ty * _ay + _c,_ty * _az - _s * _ax,0,_tx * _az - _s * _ay,_ty * _az + _s * _ax,_t * _az * _az + _c,0,0,0,0,1);
		return this;
	}
	,makeScale: function(_x,_y,_z) {
		this.set(_x,0,0,0,0,_y,0,0,0,0,_z,0,0,0,0,1);
		return this;
	}
	,compose_with_origin: function(_position,_origin,_quaternion,_scale) {
		this.set(1,0,0,_origin.x,0,1,0,_origin.y,0,0,1,_origin.z,0,0,0,1);
		this;
		this.scale(_scale);
		this.multiply(new phoenix_Matrix().makeRotationFromQuaternion(_quaternion));
		this.multiply(new phoenix_Matrix().makeTranslation(-_origin.x,-_origin.y,-_origin.z));
		this.multiply(new phoenix_Matrix().makeTranslation(_position.x,_position.y,_position.z));
		return this;
	}
	,compose: function(_position,_quaternion,_scale) {
		this.makeRotationFromQuaternion(_quaternion);
		this.scale(_scale);
		this.setPosition(_position);
		return this;
	}
	,decompose: function(_position,_quaternion,_scale) {
		var te = this.elements;
		var matrix = new phoenix_Matrix();
		var _ax_x = te[0];
		var _ax_y = te[1];
		var _ax_z = te[2];
		var _ay_x = te[4];
		var _ay_y = te[5];
		var _ay_z = te[6];
		var _az_x = te[8];
		var _az_y = te[9];
		var _az_z = te[10];
		var _ax_length = Math.sqrt(_ax_x * _ax_x + _ax_y * _ax_y + _ax_z * _ax_z);
		var _ay_length = Math.sqrt(_ay_x * _ay_x + _ay_y * _ay_y + _ay_z * _ay_z);
		var _az_length = Math.sqrt(_az_x * _az_x + _az_y * _az_y + _az_z * _az_z);
		if(_quaternion == null) _quaternion = new phoenix_Quaternion();
		if(_position == null) _position = new phoenix_Vector(te[12],te[13],te[14]); else {
			_position.set_x(te[12]);
			_position.set_y(te[13]);
			_position.set_z(te[14]);
		}
		if(_scale == null) _scale = new phoenix_Vector(_ax_length,_ay_length,_az_length); else {
			_scale.x = _ax_length;
			if(_scale._construct) _scale.x; else {
				if(_scale.listen_x != null && !_scale.ignore_listeners) _scale.listen_x(_ax_length);
				_scale.x;
			}
			_scale.y = _ay_length;
			if(_scale._construct) _scale.y; else {
				if(_scale.listen_y != null && !_scale.ignore_listeners) _scale.listen_y(_ay_length);
				_scale.y;
			}
			_scale.z = _az_length;
			if(_scale._construct) _scale.z; else {
				if(_scale.listen_z != null && !_scale.ignore_listeners) _scale.listen_z(_az_length);
				_scale.z;
			}
		}
		matrix.elements = this.elements.concat([]);
		var me = matrix.elements;
		me[0] /= _ax_length;
		me[1] /= _ax_length;
		me[2] /= _ax_length;
		me[4] /= _ay_length;
		me[5] /= _ay_length;
		me[6] /= _ay_length;
		me[8] /= _az_length;
		me[9] /= _az_length;
		me[10] /= _az_length;
		_quaternion.setFromRotationMatrix(matrix);
		if(this._transform == null) this._transform = new phoenix_MatrixTransform(_position,_quaternion,_scale); else {
			this._transform.pos = _position;
			this._transform.rotation = _quaternion;
			this._transform.scale = _scale;
		}
		return this._transform;
	}
	,makeFrustum: function(_left,_right,_bottom,_top,_near,_far) {
		var te = this.elements;
		var tx = 2 * _near / (_right - _left);
		var ty = 2 * _near / (_top - _bottom);
		var a = (_right + _left) / (_right - _left);
		var b = (_top + _bottom) / (_top - _bottom);
		var c = -(_far + _near) / (_far - _near);
		var d = -2 * _far * _near / (_far - _near);
		te[0] = tx;
		te[4] = 0;
		te[8] = a;
		te[12] = 0;
		te[1] = 0;
		te[5] = ty;
		te[9] = b;
		te[13] = 0;
		te[2] = 0;
		te[6] = 0;
		te[10] = c;
		te[14] = d;
		te[3] = 0;
		te[7] = 0;
		te[11] = -1;
		te[15] = 0;
		return this;
	}
	,makePerspective: function(_fov,_aspect,_near,_far) {
		var ymax = _near * Math.tan(_fov * 0.5 * 0.017453292519943278);
		var ymin = -ymax;
		var xmin = ymin * _aspect;
		var xmax = ymax * _aspect;
		return this.makeFrustum(xmin,xmax,ymin,ymax,_near,_far);
	}
	,makeOrthographic: function(_left,_right,_top,_bottom,_near,_far) {
		var te = this.elements;
		var w = _right - _left;
		var h = _top - _bottom;
		var p = _far - _near;
		var tx = (_right + _left) / w;
		var ty = (_top + _bottom) / h;
		var tz = (_far + _near) / p;
		te[0] = 2 / w;
		te[4] = 0;
		te[8] = 0;
		te[12] = -tx;
		te[1] = 0;
		te[5] = 2 / h;
		te[9] = 0;
		te[13] = -ty;
		te[2] = 0;
		te[6] = 0;
		te[10] = -2 / p;
		te[14] = -tz;
		te[3] = 0;
		te[7] = 0;
		te[11] = 0;
		te[15] = 1;
		return this;
	}
	,fromArray: function(_from) {
		this.elements = _from.concat([]);
	}
	,toArray: function() {
		var te = this.elements;
		return [te[0],te[1],te[2],te[3],te[4],te[5],te[6],te[7],te[8],te[9],te[10],te[11],te[12],te[13],te[14],te[15]];
	}
	,clone: function() {
		var te = this.elements;
		return new phoenix_Matrix(te[0],te[4],te[8],te[12],te[1],te[5],te[9],te[13],te[2],te[6],te[10],te[14],te[3],te[7],te[11],te[15]);
	}
	,up: function() {
		return new phoenix_Vector(this.elements[4],this.elements[5],this.elements[6]);
	}
	,down: function() {
		var _this = new phoenix_Vector(this.elements[4],this.elements[5],this.elements[6]);
		return new phoenix_Vector(-_this.x,-_this.y,-_this.z);
	}
	,left: function() {
		var _this = new phoenix_Vector(this.elements[0],this.elements[1],this.elements[2]);
		return new phoenix_Vector(-_this.x,-_this.y,-_this.z);
	}
	,right: function() {
		return new phoenix_Vector(this.elements[0],this.elements[1],this.elements[2]);
	}
	,backward: function() {
		return new phoenix_Vector(this.elements[8],this.elements[9],this.elements[10]);
	}
	,forward: function() {
		var _this = new phoenix_Vector(this.elements[8],this.elements[9],this.elements[10]);
		return new phoenix_Vector(-_this.x,-_this.y,-_this.z);
	}
	,__class__: phoenix_Matrix
	,__properties__: {set_M44:"set_M44",get_M44:"get_M44",set_M34:"set_M34",get_M34:"get_M34",set_M24:"set_M24",get_M24:"get_M24",set_M14:"set_M14",get_M14:"get_M14",set_M43:"set_M43",get_M43:"get_M43",set_M33:"set_M33",get_M33:"get_M33",set_M23:"set_M23",get_M23:"get_M23",set_M13:"set_M13",get_M13:"get_M13",set_M42:"set_M42",get_M42:"get_M42",set_M32:"set_M32",get_M32:"get_M32",set_M22:"set_M22",get_M22:"get_M22",set_M12:"set_M12",get_M12:"get_M12",set_M41:"set_M41",get_M41:"get_M41",set_M31:"set_M31",get_M31:"get_M31",set_M21:"set_M21",get_M21:"get_M21",set_M11:"set_M11",get_M11:"get_M11"}
};
var phoenix_Quaternion = function(_x,_y,_z,_w) {
	if(_w == null) _w = 1;
	if(_z == null) _z = 0;
	if(_y == null) _y = 0;
	if(_x == null) _x = 0;
	this.ignore_euler = false;
	this._construct = false;
	this.ignore_listeners = false;
	this.w = 0.0;
	this.z = 0.0;
	this.y = 0.0;
	this.x = 0.0;
	this._construct = true;
	this.x = _x;
	if(this._construct) this.x; else {
		this.update_euler();
		if(this.listen_x != null && !this.ignore_listeners) this.listen_x(this.x);
		this.x;
	}
	this.y = _y;
	if(this._construct) this.y; else {
		this.update_euler();
		if(this.listen_y != null && !this.ignore_listeners) this.listen_y(this.y);
		this.y;
	}
	this.z = _z;
	if(this._construct) this.z; else {
		this.update_euler();
		if(this.listen_z != null && !this.ignore_listeners) this.listen_z(this.z);
		this.z;
	}
	this.w = _w;
	if(this._construct) this.w; else {
		this.update_euler();
		if(this.listen_w != null && !this.ignore_listeners) this.listen_w(this.w);
		this.w;
	}
	this.euler = new phoenix_Vector();
	this._construct = false;
};
$hxClasses["phoenix.Quaternion"] = phoenix_Quaternion;
phoenix_Quaternion.__name__ = ["phoenix","Quaternion"];
phoenix_Quaternion.Add = function(_a,_b) {
	return _a.clone().add(_b);
};
phoenix_Quaternion.Multiply = function(_a,_b) {
	return _a.clone().multiply(_b);
};
phoenix_Quaternion.MultiplyScalar = function(_quaternion,_scalar) {
	return _quaternion.clone().multiplyScalar(_scalar);
};
phoenix_Quaternion.Slerp = function(_qa,_qb,_qm,_t) {
	return _qm.copy(_qa).slerp(_qb,_t);
};
phoenix_Quaternion.Dot = function(_a,_b) {
	return new phoenix_Quaternion(_a.x,_a.y,_a.z,_a.w).dot(_b);
};
phoenix_Quaternion.Listen = function(_q,listener) {
	_q.listen_x = listener;
	_q.listen_y = listener;
	_q.listen_z = listener;
	_q.listen_w = listener;
};
phoenix_Quaternion.prototype = {
	toString: function() {
		return "{ x:" + this.x + ", y:" + this.y + ", z:" + this.z + ", w:" + this.w + " }";
	}
	,set: function(_x,_y,_z,_w) {
		this.ignore_euler = true;
		this.x = _x;
		if(this._construct) this.x; else {
			this.update_euler();
			if(this.listen_x != null && !this.ignore_listeners) this.listen_x(this.x);
			this.x;
		}
		this.y = _y;
		if(this._construct) this.y; else {
			this.update_euler();
			if(this.listen_y != null && !this.ignore_listeners) this.listen_y(this.y);
			this.y;
		}
		this.z = _z;
		if(this._construct) this.z; else {
			this.update_euler();
			if(this.listen_z != null && !this.ignore_listeners) this.listen_z(this.z);
			this.z;
		}
		this.w = _w;
		if(this._construct) this.w; else {
			this.update_euler();
			if(this.listen_w != null && !this.ignore_listeners) this.listen_w(this.w);
			this.w;
		}
		this.ignore_euler = false;
		this.update_euler();
		if(this.listen_x != null && !this.ignore_listeners) this.listen_x(this.x);
		if(this.listen_y != null && !this.ignore_listeners) this.listen_y(this.y);
		if(this.listen_z != null && !this.ignore_listeners) this.listen_z(this.z);
		if(this.listen_w != null && !this.ignore_listeners) this.listen_w(this.w);
		return this;
	}
	,copy: function(_quaternion) {
		this.ignore_euler = true;
		this.x = _quaternion.x;
		if(this._construct) this.x; else {
			this.update_euler();
			if(this.listen_x != null && !this.ignore_listeners) this.listen_x(this.x);
			this.x;
		}
		this.y = _quaternion.y;
		if(this._construct) this.y; else {
			this.update_euler();
			if(this.listen_y != null && !this.ignore_listeners) this.listen_y(this.y);
			this.y;
		}
		this.z = _quaternion.z;
		if(this._construct) this.z; else {
			this.update_euler();
			if(this.listen_z != null && !this.ignore_listeners) this.listen_z(this.z);
			this.z;
		}
		this.w = _quaternion.w;
		if(this._construct) this.w; else {
			this.update_euler();
			if(this.listen_w != null && !this.ignore_listeners) this.listen_w(this.w);
			this.w;
		}
		this.ignore_euler = false;
		this.update_euler();
		if(this.listen_x != null && !this.ignore_listeners) this.listen_x(this.x);
		if(this.listen_y != null && !this.ignore_listeners) this.listen_y(this.y);
		if(this.listen_z != null && !this.ignore_listeners) this.listen_z(this.z);
		if(this.listen_w != null && !this.ignore_listeners) this.listen_w(this.w);
		return this;
	}
	,dot: function(_other) {
		return this.x * _other.x + this.y * _other.y + this.z * _other.z + this.w * _other.w;
	}
	,setFromEuler: function(_euler,_order) {
		if(_order == null) _order = 0;
		var _x = this.x;
		var _y = this.y;
		var _z = this.z;
		var _w = this.w;
		var c1 = Math.cos(_euler.x / 2);
		var c2 = Math.cos(_euler.y / 2);
		var c3 = Math.cos(_euler.z / 2);
		var s1 = Math.sin(_euler.x / 2);
		var s2 = Math.sin(_euler.y / 2);
		var s3 = Math.sin(_euler.z / 2);
		if(_order == 0) {
			_x = s1 * c2 * c3 + c1 * s2 * s3;
			_y = c1 * s2 * c3 - s1 * c2 * s3;
			_z = c1 * c2 * s3 + s1 * s2 * c3;
			_w = c1 * c2 * c3 - s1 * s2 * s3;
		} else if(_order == 1) {
			_x = s1 * c2 * c3 + c1 * s2 * s3;
			_y = c1 * s2 * c3 - s1 * c2 * s3;
			_z = c1 * c2 * s3 - s1 * s2 * c3;
			_w = c1 * c2 * c3 + s1 * s2 * s3;
		} else if(_order == 2) {
			_x = s1 * c2 * c3 - c1 * s2 * s3;
			_y = c1 * s2 * c3 + s1 * c2 * s3;
			_z = c1 * c2 * s3 + s1 * s2 * c3;
			_w = c1 * c2 * c3 - s1 * s2 * s3;
		} else if(_order == 3) {
			_x = s1 * c2 * c3 - c1 * s2 * s3;
			_y = c1 * s2 * c3 + s1 * c2 * s3;
			_z = c1 * c2 * s3 - s1 * s2 * c3;
			_w = c1 * c2 * c3 + s1 * s2 * s3;
		} else if(_order == 4) {
			_x = s1 * c2 * c3 + c1 * s2 * s3;
			_y = c1 * s2 * c3 + s1 * c2 * s3;
			_z = c1 * c2 * s3 - s1 * s2 * c3;
			_w = c1 * c2 * c3 - s1 * s2 * s3;
		} else if(_order == 5) {
			_x = s1 * c2 * c3 - c1 * s2 * s3;
			_y = c1 * s2 * c3 - s1 * c2 * s3;
			_z = c1 * c2 * s3 + s1 * s2 * c3;
			_w = c1 * c2 * c3 + s1 * s2 * s3;
		}
		this.ignore_euler = true;
		this.x = _x;
		if(this._construct) this.x; else {
			this.update_euler();
			if(this.listen_x != null && !this.ignore_listeners) this.listen_x(this.x);
			this.x;
		}
		this.y = _y;
		if(this._construct) this.y; else {
			this.update_euler();
			if(this.listen_y != null && !this.ignore_listeners) this.listen_y(this.y);
			this.y;
		}
		this.z = _z;
		if(this._construct) this.z; else {
			this.update_euler();
			if(this.listen_z != null && !this.ignore_listeners) this.listen_z(this.z);
			this.z;
		}
		this.w = _w;
		if(this._construct) this.w; else {
			this.update_euler();
			if(this.listen_w != null && !this.ignore_listeners) this.listen_w(this.w);
			this.w;
		}
		this.ignore_euler = false;
		this.update_euler();
		if(this.listen_x != null && !this.ignore_listeners) this.listen_x(this.x);
		if(this.listen_y != null && !this.ignore_listeners) this.listen_y(this.y);
		if(this.listen_z != null && !this.ignore_listeners) this.listen_z(this.z);
		if(this.listen_w != null && !this.ignore_listeners) this.listen_w(this.w);
		return this;
	}
	,setFromAxisAngle: function(_axis,_angle) {
		var _halfAngle = _angle / 2;
		var _s = Math.sin(_halfAngle);
		this.set_xyzw(_axis.x * _s,_axis.y * _s,_axis.z * _s,Math.cos(_halfAngle));
		return this;
	}
	,setFromRotationMatrix: function(_m) {
		var te = _m.elements;
		var m11 = te[0];
		var m12 = te[4];
		var m13 = te[8];
		var m21 = te[1];
		var m22 = te[5];
		var m23 = te[9];
		var m31 = te[2];
		var m32 = te[6];
		var m33 = te[10];
		var _x = this.x;
		var _y = this.y;
		var _z = this.z;
		var _w = this.w;
		var tr = m11 + m22 + m33;
		var s;
		if(tr > 0) {
			s = 0.5 / Math.sqrt(tr + 1.0);
			_w = 0.25 / s;
			_x = (m32 - m23) * s;
			_y = (m13 - m31) * s;
			_z = (m21 - m12) * s;
		} else if(m11 > m22 && m11 > m33) {
			s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);
			_w = (m32 - m23) / s;
			_x = 0.25 * s;
			_y = (m12 + m21) / s;
			_z = (m13 + m31) / s;
		} else if(m22 > m33) {
			s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);
			_w = (m13 - m31) / s;
			_x = (m12 + m21) / s;
			_y = 0.25 * s;
			_z = (m23 + m32) / s;
		} else {
			s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);
			_w = (m21 - m12) / s;
			_x = (m13 + m31) / s;
			_y = (m23 + m32) / s;
			_z = 0.25 * s;
		}
		this.ignore_euler = true;
		this.x = _x;
		if(this._construct) this.x; else {
			this.update_euler();
			if(this.listen_x != null && !this.ignore_listeners) this.listen_x(this.x);
			this.x;
		}
		this.y = _y;
		if(this._construct) this.y; else {
			this.update_euler();
			if(this.listen_y != null && !this.ignore_listeners) this.listen_y(this.y);
			this.y;
		}
		this.z = _z;
		if(this._construct) this.z; else {
			this.update_euler();
			if(this.listen_z != null && !this.ignore_listeners) this.listen_z(this.z);
			this.z;
		}
		this.w = _w;
		if(this._construct) this.w; else {
			this.update_euler();
			if(this.listen_w != null && !this.ignore_listeners) this.listen_w(this.w);
			this.w;
		}
		this.ignore_euler = false;
		this.update_euler();
		if(this.listen_x != null && !this.ignore_listeners) this.listen_x(this.x);
		if(this.listen_y != null && !this.ignore_listeners) this.listen_y(this.y);
		if(this.listen_z != null && !this.ignore_listeners) this.listen_z(this.z);
		if(this.listen_w != null && !this.ignore_listeners) this.listen_w(this.w);
		return this;
	}
	,inverse: function() {
		return this.conjugate().normalize();
	}
	,conjugate: function() {
		this.ignore_euler = true;
		this.x = this.x * -1;
		if(this._construct) this.x; else {
			this.update_euler();
			if(this.listen_x != null && !this.ignore_listeners) this.listen_x(this.x);
			this.x;
		}
		this.y = this.y * -1;
		if(this._construct) this.y; else {
			this.update_euler();
			if(this.listen_y != null && !this.ignore_listeners) this.listen_y(this.y);
			this.y;
		}
		this.z = this.z * -1;
		if(this._construct) this.z; else {
			this.update_euler();
			if(this.listen_z != null && !this.ignore_listeners) this.listen_z(this.z);
			this.z;
		}
		this.ignore_euler = false;
		this.update_euler();
		if(this.listen_x != null && !this.ignore_listeners) this.listen_x(this.x);
		if(this.listen_y != null && !this.ignore_listeners) this.listen_y(this.y);
		if(this.listen_z != null && !this.ignore_listeners) this.listen_z(this.z);
		return this;
	}
	,lengthSq: function() {
		return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;
	}
	,length: function() {
		return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);
	}
	,normalize: function() {
		var l = this.length();
		if(l == 0) {
			this.ignore_euler = true;
			this.x = 0;
			if(this._construct) this.x; else {
				this.update_euler();
				if(this.listen_x != null && !this.ignore_listeners) this.listen_x(this.x);
				this.x;
			}
			this.y = 0;
			if(this._construct) this.y; else {
				this.update_euler();
				if(this.listen_y != null && !this.ignore_listeners) this.listen_y(this.y);
				this.y;
			}
			this.z = 0;
			if(this._construct) this.z; else {
				this.update_euler();
				if(this.listen_z != null && !this.ignore_listeners) this.listen_z(this.z);
				this.z;
			}
			this.w = 1;
			if(this._construct) this.w; else {
				this.update_euler();
				if(this.listen_w != null && !this.ignore_listeners) this.listen_w(this.w);
				this.w;
			}
			this.ignore_euler = false;
			this.update_euler();
			if(this.listen_x != null && !this.ignore_listeners) this.listen_x(this.x);
			if(this.listen_y != null && !this.ignore_listeners) this.listen_y(this.y);
			if(this.listen_z != null && !this.ignore_listeners) this.listen_z(this.z);
			if(this.listen_w != null && !this.ignore_listeners) this.listen_w(this.w);
		} else {
			l = 1 / l;
			this.ignore_euler = true;
			this.x = this.x * l;
			if(this._construct) this.x; else {
				this.update_euler();
				if(this.listen_x != null && !this.ignore_listeners) this.listen_x(this.x);
				this.x;
			}
			this.y = this.y * l;
			if(this._construct) this.y; else {
				this.update_euler();
				if(this.listen_y != null && !this.ignore_listeners) this.listen_y(this.y);
				this.y;
			}
			this.z = this.z * l;
			if(this._construct) this.z; else {
				this.update_euler();
				if(this.listen_z != null && !this.ignore_listeners) this.listen_z(this.z);
				this.z;
			}
			this.w = this.w * l;
			if(this._construct) this.w; else {
				this.update_euler();
				if(this.listen_w != null && !this.ignore_listeners) this.listen_w(this.w);
				this.w;
			}
			this.ignore_euler = false;
			this.update_euler();
			if(this.listen_x != null && !this.ignore_listeners) this.listen_x(this.x);
			if(this.listen_y != null && !this.ignore_listeners) this.listen_y(this.y);
			if(this.listen_z != null && !this.ignore_listeners) this.listen_z(this.z);
			if(this.listen_w != null && !this.ignore_listeners) this.listen_w(this.w);
		}
		return this;
	}
	,multiply: function(_quaternion) {
		return this.multiplyQuaternions(this,_quaternion);
	}
	,add: function(_quaternion) {
		return this.addQuaternions(this,_quaternion);
	}
	,addQuaternions: function(_a,_b) {
		this.x = _a.x + _b.x;
		if(this._construct) this.x; else {
			this.update_euler();
			if(this.listen_x != null && !this.ignore_listeners) this.listen_x(this.x);
			this.x;
		}
		this.y = _a.y + _b.y;
		if(this._construct) this.y; else {
			this.update_euler();
			if(this.listen_y != null && !this.ignore_listeners) this.listen_y(this.y);
			this.y;
		}
		this.z = _a.z + _b.z;
		if(this._construct) this.z; else {
			this.update_euler();
			if(this.listen_z != null && !this.ignore_listeners) this.listen_z(this.z);
			this.z;
		}
		this.w = _a.w + _b.w;
		if(this._construct) this.w; else {
			this.update_euler();
			if(this.listen_w != null && !this.ignore_listeners) this.listen_w(this.w);
			this.w;
		}
		return this;
	}
	,multiplyScalar: function(_scalar) {
		var _g = this;
		_g.x = _g.x * _scalar;
		if(_g._construct) _g.x; else {
			_g.update_euler();
			if(_g.listen_x != null && !_g.ignore_listeners) _g.listen_x(_g.x);
			_g.x;
		}
		var _g1 = this;
		_g1.y = _g1.y * _scalar;
		if(_g1._construct) _g1.y; else {
			_g1.update_euler();
			if(_g1.listen_y != null && !_g1.ignore_listeners) _g1.listen_y(_g1.y);
			_g1.y;
		}
		var _g2 = this;
		_g2.z = _g2.z * _scalar;
		if(_g2._construct) _g2.z; else {
			_g2.update_euler();
			if(_g2.listen_z != null && !_g2.ignore_listeners) _g2.listen_z(_g2.z);
			_g2.z;
		}
		var _g3 = this;
		_g3.w = _g3.w * _scalar;
		if(_g3._construct) _g3.w; else {
			_g3.update_euler();
			if(_g3.listen_w != null && !_g3.ignore_listeners) _g3.listen_w(_g3.w);
			_g3.w;
		}
		return this;
	}
	,multiplyQuaternions: function(_a,_b) {
		var qax = _a.x;
		var qay = _a.y;
		var qaz = _a.z;
		var qaw = _a.w;
		var qbx = _b.x;
		var qby = _b.y;
		var qbz = _b.z;
		var qbw = _b.w;
		this.ignore_euler = true;
		this.x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;
		if(this._construct) this.x; else {
			this.update_euler();
			if(this.listen_x != null && !this.ignore_listeners) this.listen_x(this.x);
			this.x;
		}
		this.y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;
		if(this._construct) this.y; else {
			this.update_euler();
			if(this.listen_y != null && !this.ignore_listeners) this.listen_y(this.y);
			this.y;
		}
		this.z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;
		if(this._construct) this.z; else {
			this.update_euler();
			if(this.listen_z != null && !this.ignore_listeners) this.listen_z(this.z);
			this.z;
		}
		this.w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;
		if(this._construct) this.w; else {
			this.update_euler();
			if(this.listen_w != null && !this.ignore_listeners) this.listen_w(this.w);
			this.w;
		}
		this.ignore_euler = false;
		this.update_euler();
		if(this.listen_x != null && !this.ignore_listeners) this.listen_x(this.x);
		if(this.listen_y != null && !this.ignore_listeners) this.listen_y(this.y);
		if(this.listen_z != null && !this.ignore_listeners) this.listen_z(this.z);
		if(this.listen_w != null && !this.ignore_listeners) this.listen_w(this.w);
		return this;
	}
	,slerp: function(_qb,_t) {
		var _x = this.x;
		var _y = this.y;
		var _z = this.z;
		var _w = this.w;
		var cosHalfTheta = _w * _qb.w + _x * _qb.x + _y * _qb.y + _z * _qb.z;
		if(cosHalfTheta < 0) {
			this.x = -_qb.x;
			if(this._construct) this.x; else {
				this.update_euler();
				if(this.listen_x != null && !this.ignore_listeners) this.listen_x(this.x);
				this.x;
			}
			this.y = -_qb.y;
			if(this._construct) this.y; else {
				this.update_euler();
				if(this.listen_y != null && !this.ignore_listeners) this.listen_y(this.y);
				this.y;
			}
			this.z = -_qb.z;
			if(this._construct) this.z; else {
				this.update_euler();
				if(this.listen_z != null && !this.ignore_listeners) this.listen_z(this.z);
				this.z;
			}
			this.w = -_qb.w;
			if(this._construct) this.w; else {
				this.update_euler();
				if(this.listen_w != null && !this.ignore_listeners) this.listen_w(this.w);
				this.w;
			}
			cosHalfTheta = -cosHalfTheta;
		} else this.copy(_qb);
		if(cosHalfTheta >= 1.0) {
			this.ignore_euler = true;
			this.x = _x;
			if(this._construct) this.x; else {
				this.update_euler();
				if(this.listen_x != null && !this.ignore_listeners) this.listen_x(this.x);
				this.x;
			}
			this.y = _y;
			if(this._construct) this.y; else {
				this.update_euler();
				if(this.listen_y != null && !this.ignore_listeners) this.listen_y(this.y);
				this.y;
			}
			this.z = _z;
			if(this._construct) this.z; else {
				this.update_euler();
				if(this.listen_z != null && !this.ignore_listeners) this.listen_z(this.z);
				this.z;
			}
			this.w = _w;
			if(this._construct) this.w; else {
				this.update_euler();
				if(this.listen_w != null && !this.ignore_listeners) this.listen_w(this.w);
				this.w;
			}
			this.ignore_euler = false;
			this.update_euler();
			if(this.listen_x != null && !this.ignore_listeners) this.listen_x(this.x);
			if(this.listen_y != null && !this.ignore_listeners) this.listen_y(this.y);
			if(this.listen_z != null && !this.ignore_listeners) this.listen_z(this.z);
			if(this.listen_w != null && !this.ignore_listeners) this.listen_w(this.w);
			return this;
		}
		var halfTheta = Math.acos(cosHalfTheta);
		var sinHalfTheta = Math.sqrt(1.0 - cosHalfTheta * cosHalfTheta);
		if(Math.abs(sinHalfTheta) < 0.001) {
			this.ignore_euler = true;
			this.x = 0.5 * (_x + this.x);
			if(this._construct) this.x; else {
				this.update_euler();
				if(this.listen_x != null && !this.ignore_listeners) this.listen_x(this.x);
				this.x;
			}
			this.y = 0.5 * (_y + this.y);
			if(this._construct) this.y; else {
				this.update_euler();
				if(this.listen_y != null && !this.ignore_listeners) this.listen_y(this.y);
				this.y;
			}
			this.z = 0.5 * (_z + this.z);
			if(this._construct) this.z; else {
				this.update_euler();
				if(this.listen_z != null && !this.ignore_listeners) this.listen_z(this.z);
				this.z;
			}
			this.w = 0.5 * (_w + this.w);
			if(this._construct) this.w; else {
				this.update_euler();
				if(this.listen_w != null && !this.ignore_listeners) this.listen_w(this.w);
				this.w;
			}
			this.ignore_euler = false;
			this.update_euler();
			if(this.listen_x != null && !this.ignore_listeners) this.listen_x(this.x);
			if(this.listen_y != null && !this.ignore_listeners) this.listen_y(this.y);
			if(this.listen_z != null && !this.ignore_listeners) this.listen_z(this.z);
			if(this.listen_w != null && !this.ignore_listeners) this.listen_w(this.w);
			return this;
		}
		var ratioA = Math.sin((1 - _t) * halfTheta) / sinHalfTheta;
		var ratioB = Math.sin(_t * halfTheta) / sinHalfTheta;
		this.ignore_euler = true;
		this.x = _x * ratioA + this.x * ratioB;
		if(this._construct) this.x; else {
			this.update_euler();
			if(this.listen_x != null && !this.ignore_listeners) this.listen_x(this.x);
			this.x;
		}
		this.y = _y * ratioA + this.y * ratioB;
		if(this._construct) this.y; else {
			this.update_euler();
			if(this.listen_y != null && !this.ignore_listeners) this.listen_y(this.y);
			this.y;
		}
		this.z = _z * ratioA + this.z * ratioB;
		if(this._construct) this.z; else {
			this.update_euler();
			if(this.listen_z != null && !this.ignore_listeners) this.listen_z(this.z);
			this.z;
		}
		this.w = _w * ratioA + this.w * ratioB;
		if(this._construct) this.w; else {
			this.update_euler();
			if(this.listen_w != null && !this.ignore_listeners) this.listen_w(this.w);
			this.w;
		}
		this.ignore_euler = false;
		this.update_euler();
		if(this.listen_x != null && !this.ignore_listeners) this.listen_x(this.x);
		if(this.listen_y != null && !this.ignore_listeners) this.listen_y(this.y);
		if(this.listen_z != null && !this.ignore_listeners) this.listen_z(this.z);
		if(this.listen_w != null && !this.ignore_listeners) this.listen_w(this.w);
		return this;
	}
	,equals: function(_q) {
		return _q.x == this.x && _q.y == this.y && _q.z == this.z && _q.w == this.w;
	}
	,fromArray: function(_a) {
		this.ignore_euler = true;
		this.x = _a[0];
		if(this._construct) this.x; else {
			this.update_euler();
			if(this.listen_x != null && !this.ignore_listeners) this.listen_x(this.x);
			this.x;
		}
		this.y = _a[1];
		if(this._construct) this.y; else {
			this.update_euler();
			if(this.listen_y != null && !this.ignore_listeners) this.listen_y(this.y);
			this.y;
		}
		this.z = _a[2];
		if(this._construct) this.z; else {
			this.update_euler();
			if(this.listen_z != null && !this.ignore_listeners) this.listen_z(this.z);
			this.z;
		}
		this.w = _a[3];
		if(this._construct) this.w; else {
			this.update_euler();
			if(this.listen_w != null && !this.ignore_listeners) this.listen_w(this.w);
			this.w;
		}
		this.ignore_euler = false;
		this.update_euler();
		if(this.listen_x != null && !this.ignore_listeners) this.listen_x(this.x);
		if(this.listen_y != null && !this.ignore_listeners) this.listen_y(this.y);
		if(this.listen_z != null && !this.ignore_listeners) this.listen_z(this.z);
		if(this.listen_w != null && !this.ignore_listeners) this.listen_w(this.w);
		return this;
	}
	,toArray: function() {
		return [this.x,this.y,this.z,this.w];
	}
	,clone: function() {
		return new phoenix_Quaternion(this.x,this.y,this.z,this.w);
	}
	,toeuler: function() {
		var _this;
		var _this1 = new phoenix_Vector();
		var sqx = this.x * this.x;
		var sqy = this.y * this.y;
		var sqz = this.z * this.z;
		var sqw = this.w * this.w;
		var _x = _this1.x;
		var _y = _this1.y;
		var _z = _this1.z;
		if(0 == 0) {
			_x = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw - sqx - sqy + sqz);
			_y = Math.asin(luxe_utils_Maths.clamp(2 * (this.x * this.z + this.y * this.w),-1,1));
			_z = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw + sqx - sqy - sqz);
		} else if(0 == 1) {
			_x = Math.asin(luxe_utils_Maths.clamp(2 * (this.x * this.w - this.y * this.z),-1,1));
			_y = Math.atan2(2 * (this.x * this.z + this.y * this.w),sqw - sqx - sqy + sqz);
			_z = Math.atan2(2 * (this.x * this.y + this.z * this.w),sqw - sqx + sqy - sqz);
		} else if(0 == 2) {
			_x = Math.asin(luxe_utils_Maths.clamp(2 * (this.x * this.w + this.y * this.z),-1,1));
			_y = Math.atan2(2 * (this.y * this.w - this.z * this.x),sqw - sqx - sqy + sqz);
			_z = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw - sqx + sqy - sqz);
		} else if(0 == 3) {
			_x = Math.atan2(2 * (this.x * this.w + this.z * this.y),sqw - sqx - sqy + sqz);
			_y = Math.asin(luxe_utils_Maths.clamp(2 * (this.y * this.w - this.x * this.z),-1,1));
			_z = Math.atan2(2 * (this.x * this.y + this.z * this.w),sqw + sqx - sqy - sqz);
		} else if(0 == 4) {
			_x = Math.atan2(2 * (this.x * this.w - this.z * this.y),sqw - sqx + sqy - sqz);
			_y = Math.atan2(2 * (this.y * this.w - this.x * this.z),sqw + sqx - sqy - sqz);
			_z = Math.asin(luxe_utils_Maths.clamp(2 * (this.x * this.y + this.z * this.w),-1,1));
		} else if(0 == 5) {
			_x = Math.atan2(2 * (this.x * this.w + this.y * this.z),sqw - sqx + sqy - sqz);
			_y = Math.atan2(2 * (this.x * this.z + this.y * this.w),sqw + sqx - sqy - sqz);
			_z = Math.asin(luxe_utils_Maths.clamp(2 * (this.z * this.w - this.x * this.y),-1,1));
		}
		var prev = _this1.ignore_listeners;
		_this1.ignore_listeners = true;
		_this1.x = _x;
		if(_this1._construct) _this1.x; else {
			if(_this1.listen_x != null && !_this1.ignore_listeners) _this1.listen_x(_x);
			_this1.x;
		}
		_this1.y = _y;
		if(_this1._construct) _this1.y; else {
			if(_this1.listen_y != null && !_this1.ignore_listeners) _this1.listen_y(_y);
			_this1.y;
		}
		_this1.z = _z;
		if(_this1._construct) _this1.z; else {
			if(_this1.listen_z != null && !_this1.ignore_listeners) _this1.listen_z(_z);
			_this1.z;
		}
		_this1.ignore_listeners = prev;
		if(_this1.listen_x != null && !_this1.ignore_listeners) _this1.listen_x(_this1.x);
		if(_this1.listen_y != null && !_this1.ignore_listeners) _this1.listen_y(_this1.y);
		if(_this1.listen_z != null && !_this1.ignore_listeners) _this1.listen_z(_this1.z);
		_this1;
		_this = _this1;
		var _x1 = _this.x * 57.29577951308238;
		var _y1 = _this.y * 57.29577951308238;
		var _z1 = _this.z * 57.29577951308238;
		var prev1 = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = _x1;
		if(_this._construct) _this.x; else {
			if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_x1);
			_this.x;
		}
		_this.y = _y1;
		if(_this._construct) _this.y; else {
			if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_y1);
			_this.y;
		}
		_this.z = _z1;
		if(_this._construct) _this.z; else {
			if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_z1);
			_this.z;
		}
		_this.ignore_listeners = prev1;
		if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_this.x);
		if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_this.y);
		if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_this.z);
		_this;
		return _this;
	}
	,update_euler: function() {
		if(this.euler == null || this.ignore_euler || this._construct) return;
		var _this = this.euler;
		var sqx = this.x * this.x;
		var sqy = this.y * this.y;
		var sqz = this.z * this.z;
		var sqw = this.w * this.w;
		var _x = _this.x;
		var _y = _this.y;
		var _z = _this.z;
		if(0 == 0) {
			_x = Math.atan2(2 * (this.x * this.w - this.y * this.z),sqw - sqx - sqy + sqz);
			_y = Math.asin(luxe_utils_Maths.clamp(2 * (this.x * this.z + this.y * this.w),-1,1));
			_z = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw + sqx - sqy - sqz);
		} else if(0 == 1) {
			_x = Math.asin(luxe_utils_Maths.clamp(2 * (this.x * this.w - this.y * this.z),-1,1));
			_y = Math.atan2(2 * (this.x * this.z + this.y * this.w),sqw - sqx - sqy + sqz);
			_z = Math.atan2(2 * (this.x * this.y + this.z * this.w),sqw - sqx + sqy - sqz);
		} else if(0 == 2) {
			_x = Math.asin(luxe_utils_Maths.clamp(2 * (this.x * this.w + this.y * this.z),-1,1));
			_y = Math.atan2(2 * (this.y * this.w - this.z * this.x),sqw - sqx - sqy + sqz);
			_z = Math.atan2(2 * (this.z * this.w - this.x * this.y),sqw - sqx + sqy - sqz);
		} else if(0 == 3) {
			_x = Math.atan2(2 * (this.x * this.w + this.z * this.y),sqw - sqx - sqy + sqz);
			_y = Math.asin(luxe_utils_Maths.clamp(2 * (this.y * this.w - this.x * this.z),-1,1));
			_z = Math.atan2(2 * (this.x * this.y + this.z * this.w),sqw + sqx - sqy - sqz);
		} else if(0 == 4) {
			_x = Math.atan2(2 * (this.x * this.w - this.z * this.y),sqw - sqx + sqy - sqz);
			_y = Math.atan2(2 * (this.y * this.w - this.x * this.z),sqw + sqx - sqy - sqz);
			_z = Math.asin(luxe_utils_Maths.clamp(2 * (this.x * this.y + this.z * this.w),-1,1));
		} else if(0 == 5) {
			_x = Math.atan2(2 * (this.x * this.w + this.y * this.z),sqw - sqx + sqy - sqz);
			_y = Math.atan2(2 * (this.x * this.z + this.y * this.w),sqw + sqx - sqy - sqz);
			_z = Math.asin(luxe_utils_Maths.clamp(2 * (this.z * this.w - this.x * this.y),-1,1));
		}
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = _x;
		if(_this._construct) _this.x; else {
			if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_x);
			_this.x;
		}
		_this.y = _y;
		if(_this._construct) _this.y; else {
			if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_y);
			_this.y;
		}
		_this.z = _z;
		if(_this._construct) _this.z; else {
			if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_z);
			_this.z;
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_this.x);
		if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_this.y);
		if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_this.z);
		_this;
		_this;
	}
	,set_xyzw: function(_x,_y,_z,_w) {
		this.ignore_euler = true;
		this.x = _x;
		if(this._construct) this.x; else {
			this.update_euler();
			if(this.listen_x != null && !this.ignore_listeners) this.listen_x(this.x);
			this.x;
		}
		this.y = _y;
		if(this._construct) this.y; else {
			this.update_euler();
			if(this.listen_y != null && !this.ignore_listeners) this.listen_y(this.y);
			this.y;
		}
		this.z = _z;
		if(this._construct) this.z; else {
			this.update_euler();
			if(this.listen_z != null && !this.ignore_listeners) this.listen_z(this.z);
			this.z;
		}
		this.w = _w;
		if(this._construct) this.w; else {
			this.update_euler();
			if(this.listen_w != null && !this.ignore_listeners) this.listen_w(this.w);
			this.w;
		}
		this.ignore_euler = false;
		this.update_euler();
		if(this.listen_x != null && !this.ignore_listeners) this.listen_x(this.x);
		if(this.listen_y != null && !this.ignore_listeners) this.listen_y(this.y);
		if(this.listen_z != null && !this.ignore_listeners) this.listen_z(this.z);
		if(this.listen_w != null && !this.ignore_listeners) this.listen_w(this.w);
	}
	,set_xyz: function(_x,_y,_z) {
		this.ignore_euler = true;
		this.x = _x;
		if(this._construct) this.x; else {
			this.update_euler();
			if(this.listen_x != null && !this.ignore_listeners) this.listen_x(this.x);
			this.x;
		}
		this.y = _y;
		if(this._construct) this.y; else {
			this.update_euler();
			if(this.listen_y != null && !this.ignore_listeners) this.listen_y(this.y);
			this.y;
		}
		this.z = _z;
		if(this._construct) this.z; else {
			this.update_euler();
			if(this.listen_z != null && !this.ignore_listeners) this.listen_z(this.z);
			this.z;
		}
		this.ignore_euler = false;
		this.update_euler();
		if(this.listen_x != null && !this.ignore_listeners) this.listen_x(this.x);
		if(this.listen_y != null && !this.ignore_listeners) this.listen_y(this.y);
		if(this.listen_z != null && !this.ignore_listeners) this.listen_z(this.z);
	}
	,set_x: function(_v) {
		this.x = _v;
		if(this._construct) return this.x;
		this.update_euler();
		if(this.listen_x != null && !this.ignore_listeners) this.listen_x(this.x);
		return this.x;
	}
	,set_y: function(_v) {
		this.y = _v;
		if(this._construct) return this.y;
		this.update_euler();
		if(this.listen_y != null && !this.ignore_listeners) this.listen_y(this.y);
		return this.y;
	}
	,set_z: function(_v) {
		this.z = _v;
		if(this._construct) return this.z;
		this.update_euler();
		if(this.listen_z != null && !this.ignore_listeners) this.listen_z(this.z);
		return this.z;
	}
	,set_w: function(_v) {
		this.w = _v;
		if(this._construct) return this.w;
		this.update_euler();
		if(this.listen_w != null && !this.ignore_listeners) this.listen_w(this.w);
		return this.w;
	}
	,__class__: phoenix_Quaternion
	,__properties__: {set_w:"set_w",set_z:"set_z",set_y:"set_y",set_x:"set_x"}
};
var phoenix_Ray = function(_screen_pos,_camera,_viewport) {
	if(_viewport == null) _viewport = new phoenix_Rectangle(0,0,Luxe.core.screen.get_w(),Luxe.core.screen.get_h());
	if(_camera == null) throw new js__$Boot_HaxeError("Camera required for a ray!");
	this.camera = _camera;
	this.viewport = _viewport;
	this.refresh(_screen_pos);
};
$hxClasses["phoenix.Ray"] = phoenix_Ray;
phoenix_Ray.__name__ = ["phoenix","Ray"];
phoenix_Ray.prototype = {
	refresh: function(_screen_pos) {
		var ndc_x = (_screen_pos.x / this.viewport.w - 0.5) * 2.0;
		var ndc_y = ((this.viewport.h - _screen_pos.y) / this.viewport.h - 0.5) * 2.0;
		var start_ndc = new phoenix_Vector(ndc_x,ndc_y,0.0,1.0);
		var end_ndc = new phoenix_Vector(ndc_x,ndc_y,1.0,1.0);
		this.origin = this.camera.unproject(start_ndc);
		this.end = this.camera.unproject(end_ndc);
		var a = this.end;
		var b = this.origin;
		this.dir = new phoenix_Vector(a.x - b.x,a.y - b.y,a.z - b.z);
	}
	,__class__: phoenix_Ray
};
var phoenix_Rectangle = function(_x,_y,_w,_h) {
	if(_h == null) _h = 0;
	if(_w == null) _w = 0;
	if(_y == null) _y = 0;
	if(_x == null) _x = 0;
	this.ignore_listeners = false;
	this.h = 0;
	this.w = 0;
	this.y = 0;
	this.x = 0;
	this.set_x(_x);
	this.set_y(_y);
	this.set_w(_w);
	this.set_h(_h);
};
$hxClasses["phoenix.Rectangle"] = phoenix_Rectangle;
phoenix_Rectangle.__name__ = ["phoenix","Rectangle"];
phoenix_Rectangle.listen = function(_r,listener) {
	_r.listen_x = listener;
	_r.listen_y = listener;
	_r.listen_w = listener;
	_r.listen_h = listener;
};
phoenix_Rectangle.prototype = {
	toString: function() {
		return "{ x:" + this.x + ", y:" + this.y + ", w:" + this.w + ", h:" + this.h + " }";
	}
	,point_inside: function(_p) {
		if(_p.x < this.x) return false;
		if(_p.y < this.y) return false;
		if(_p.x > this.x + this.w) return false;
		if(_p.y > this.y + this.h) return false;
		return true;
	}
	,overlaps: function(_other) {
		if(_other == null) return false;
		if(this.x < _other.x + _other.w && this.y < _other.y + _other.h && this.x + this.w > _other.x && this.y + this.h > _other.y) return true;
		return false;
	}
	,clone: function() {
		return new phoenix_Rectangle(this.x,this.y,this.w,this.h);
	}
	,equal: function(_other) {
		if(_other == null) return false;
		return this.x == _other.x && this.y == _other.y && this.w == _other.w && this.h == _other.h;
	}
	,copy_from: function(_rect) {
		this.set_x(_rect.x);
		this.set_y(_rect.y);
		this.set_w(_rect.w);
		this.set_h(_rect.h);
	}
	,set: function(_x,_y,_w,_h) {
		var _setx = this.x;
		var _sety = this.y;
		var _setw = this.w;
		var _seth = this.h;
		if(_x != null) _setx = _x;
		if(_y != null) _sety = _y;
		if(_w != null) _setw = _w;
		if(_h != null) _seth = _h;
		this.set_x(_setx);
		this.set_y(_sety);
		this.set_w(_setw);
		this.set_h(_seth);
		return this;
	}
	,set_x: function(_x) {
		this.x = _x;
		if(this.listen_x != null && !this.ignore_listeners) this.listen_x(_x);
		return this.x;
	}
	,set_y: function(_y) {
		this.y = _y;
		if(this.listen_y != null && !this.ignore_listeners) this.listen_y(_y);
		return this.y;
	}
	,set_w: function(_w) {
		this.w = _w;
		if(this.listen_w != null && !this.ignore_listeners) this.listen_w(_w);
		return this.w;
	}
	,set_h: function(_h) {
		this.h = _h;
		if(this.listen_h != null && !this.ignore_listeners) this.listen_h(_h);
		return this.h;
	}
	,__class__: phoenix_Rectangle
	,__properties__: {set_h:"set_h",set_w:"set_w",set_y:"set_y",set_x:"set_x"}
};
var phoenix_RenderPath = function(_renderer) {
	this.renderer = _renderer;
};
$hxClasses["phoenix.RenderPath"] = phoenix_RenderPath;
phoenix_RenderPath.__name__ = ["phoenix","RenderPath"];
phoenix_RenderPath.prototype = {
	render: function(_batchers,_stats) {
		var c = _batchers.length;
		var i = 0;
		while(i < c) {
			var batch = _batchers[i];
			if(batch.enabled) batch.draw(null);
			batch = null;
			++i;
		}
	}
	,__class__: phoenix_RenderPath
};
var phoenix_RenderState = function(_renderer) {
	this._last_depth_mask = true;
	this._last_line_width = 1;
	this._active_texture = -1;
	this._used_program = null;
	this.current_renderbuffer = null;
	this.current_framebuffer = null;
	this.depth_func = -1;
	this._view_target_h = 0.0;
	this.depth_mask = true;
	this.depth_test = false;
	this.cull_face = false;
	this.renderer = _renderer;
	this._viewport = new phoenix_Rectangle(0,0,0,0);
};
$hxClasses["phoenix.RenderState"] = phoenix_RenderState;
phoenix_RenderState.__name__ = ["phoenix","RenderState"];
phoenix_RenderState.prototype = {
	enable: function(what) {
		switch(what) {
		case 2884:
			if(!this.cull_face) {
				this.cull_face = true;
				snow_modules_opengl_web_GL.gl.enable(2884);
			}
			break;
		case 2929:
			if(Luxe.core.app.config.render.depth > 0) {
				if(!this.depth_test) {
					this.depth_test = true;
					snow_modules_opengl_web_GL.gl.enable(2929);
				}
			}
			break;
		}
	}
	,disable: function(what) {
		switch(what) {
		case 2884:
			if(this.cull_face) {
				this.cull_face = false;
				snow_modules_opengl_web_GL.gl.disable(2884);
			}
			break;
		case 2929:
			if(Luxe.core.app.config.render.depth > 0) {
				if(this.depth_test) {
					this.depth_test = false;
					snow_modules_opengl_web_GL.gl.disable(2929);
				}
			}
			break;
		}
	}
	,depth_function: function(what) {
		if(this.depth_func != what) {
			snow_modules_opengl_web_GL.gl.depthFunc(what);
			this.depth_func = what;
		}
	}
	,scissor: function(x,y,w,h) {
		var _target_scale = this.renderer.get_target().viewport_scale;
		x *= _target_scale;
		y *= _target_scale;
		w *= _target_scale;
		h *= _target_scale;
		var _target_h = this.renderer.get_target().height;
		var _y = _target_h - (y + h);
		snow_modules_opengl_web_GL.gl.scissor(x | 0,_y | 0,w | 0,h | 0);
	}
	,viewport: function(x,y,w,h) {
		var _target_scale = this.renderer.get_target().viewport_scale;
		x *= _target_scale;
		y *= _target_scale;
		w *= _target_scale;
		h *= _target_scale;
		var _target_h = this.renderer.get_target().height;
		var _y = _target_h - (y + h);
		snow_modules_opengl_web_GL.gl.viewport(x | 0,_y | 0,w | 0,h | 0);
	}
	,bindFramebuffer: function(buffer) {
		if(this.current_framebuffer != buffer) {
			if(buffer == null) buffer = this.renderer.default_framebuffer;
			buffer;
			snow_modules_opengl_web_GL.gl.bindFramebuffer(36160,buffer);
			this.current_framebuffer = buffer;
		}
	}
	,bindRenderbuffer: function(buffer) {
		if(this.current_renderbuffer != buffer) {
			if(buffer == null) buffer = this.renderer.default_renderbuffer;
			buffer;
			snow_modules_opengl_web_GL.gl.bindRenderbuffer(36161,buffer);
			this.current_renderbuffer = buffer;
		}
	}
	,useProgram: function(program) {
		if(this._used_program != program) {
			this._used_program = program;
			snow_modules_opengl_web_GL.gl.useProgram(program);
		}
	}
	,activeTexture: function(val) {
		if(this._active_texture != val) {
			snow_modules_opengl_web_GL.gl.activeTexture(val);
			this._active_texture = val;
		}
	}
	,bindTexture: function(type,tex) {
		switch(type) {
		case 3553:
			this.bindTexture2D(tex);
			break;
		case 34067:
			this.bindTextureCube(tex);
			break;
		}
	}
	,bindTexture2D: function(tex) {
		if(phoenix_RenderState.bound_texture_2D != tex) {
			phoenix_RenderState.bound_texture_2D = tex;
			snow_modules_opengl_web_GL.gl.bindTexture(3553,tex);
		}
	}
	,bindTextureCube: function(tex) {
		if(phoenix_RenderState.bound_texture_cube != tex) {
			phoenix_RenderState.bound_texture_cube = tex;
			snow_modules_opengl_web_GL.gl.bindTexture(34067,tex);
		}
	}
	,lineWidth: function(_width) {
		if(this._last_line_width != _width) {
			this._last_line_width = _width;
			snow_modules_opengl_web_GL.gl.lineWidth(_width);
		}
	}
	,depthMask: function(_enable) {
		if(this._last_depth_mask != _enable) {
			this._last_depth_mask = _enable;
			snow_modules_opengl_web_GL.gl.depthMask(_enable);
		}
	}
	,__class__: phoenix_RenderState
};
var phoenix_Texture = function(_options) {
	this.load_premultiply_alpha = false;
	this.height = -1;
	this.width = -1;
	this.height_actual = -1;
	this.width_actual = -1;
	this.compressed = false;
	this.border = 0;
	this.slot = 0;
	if(_options == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options was null" + (" ( " + "Texture create requires non-null options" + " )")));
	if(_options.resource_type == null) _options.resource_type = 4;
	_options.resource_type;
	luxe_resource_Resource.call(this,_options);
	if(_options.texture == null) _options.texture = this.create_texture_id();
	_options.texture;
	this.texture = _options.texture;
	this.bind();
	this.apply_default_options(_options);
	if(_options.pixels != null) {
		if(_options.width == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options.width was null" + (" ( " + "Texture create with pixels requires both width and height" + " )")));
		if(_options.height == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options.height was null" + (" ( " + "Texture create with pixels requires both width and height" + " )")));
	}
	if(_options.width != null || _options.height != null) {
		if(_options.height == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options.height was null" + (" ( " + "Texture requires both width and height, only width was given in construct options" + " )")));
		if(_options.width == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options.width was null" + (" ( " + "Texture requires both width and height, only height was given in construct options" + " )")));
		this.width = this.width_actual = _options.width;
		this.height = this.height_actual = _options.height;
		if(_options.pixels != null) this.submit(_options.pixels);
	}
};
$hxClasses["phoenix.Texture"] = phoenix_Texture;
phoenix_Texture.__name__ = ["phoenix","Texture"];
phoenix_Texture.max_size = function() {
	return snow_modules_opengl_web_GL.gl.getParameter(3379);
};
phoenix_Texture.dump_asset_info = function(_asset) {
	null;
};
phoenix_Texture.type_name = function(_type) {
	switch(_type) {
	case 3553:
		return "tex_2D";
	case 34067:
		return "tex_cube";
	}
};
phoenix_Texture.filter_name = function(_filter) {
	switch(_filter) {
	case 9729:
		return "linear";
	case 9728:
		return "nearest";
	case 9987:
		return "mip_linear_linear";
	case 9985:
		return "mip_linear_nearest";
	case 9986:
		return "mip_nearest_linear";
	case 9984:
		return "mip_nearest_nearest";
	}
};
phoenix_Texture.clamp_name = function(_clamp) {
	switch(_clamp) {
	case 33071:
		return "edge";
	case 10497:
		return "repeat";
	case 33648:
		return "mirror";
	}
};
phoenix_Texture.__super__ = luxe_resource_Resource;
phoenix_Texture.prototype = $extend(luxe_resource_Resource.prototype,{
	memory_use: function() {
		return this.width_actual * this.height_actual * 4;
	}
	,fetch: function(_into,_x,_y,_w,_h) {
		if(_y == null) _y = 0;
		if(_x == null) _x = 0;
		if(_into == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_into was null" + (" ( " + "Texture fetch requires a valid buffer to store the pixels." + " )")));
		if(_x == null) _x = 0;
		_x;
		if(_y == null) _y = 0;
		_y;
		if(_w == null) _w = this.width;
		_w;
		if(_h == null) _h = this.height;
		_h;
		var _required = _w * _h * 4;
		if(!(_into.length >= _required)) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("_into.length >= _required" + (" ( " + ("Texture fetch requires at least " + _required + " (w * h * 4) bytes for the pixels, you have " + _into.length + "!") + " )")));
		var fb = snow_modules_opengl_web_GL.gl.createFramebuffer();
		snow_modules_opengl_web_GL.gl.bindFramebuffer(36160,fb);
		snow_modules_opengl_web_GL.gl.framebufferTexture2D(36160,36064,3553,this.texture,0);
		if(!(snow_modules_opengl_web_GL.gl.checkFramebufferStatus(36160) == 36053)) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("GL.checkFramebufferStatus(GL.FRAMEBUFFER) == GL.FRAMEBUFFER_COMPLETE" + ""));
		snow_modules_opengl_web_GL.gl.readPixels(_x,_y,_w,_h,6408,5121,_into);
		snow_modules_opengl_web_GL.gl.bindFramebuffer(36160,null);
		snow_modules_opengl_web_GL.gl.deleteFramebuffer(fb);
		fb = null;
		return _into;
	}
	,submit: function(_pixels,_target,_level) {
		if(_level == null) _level = 0;
		if(!(_level >= 0)) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("_level >= 0" + (" ( " + "Texture submit level cannot be negative" + " )")));
		var _max = phoenix_Texture.max_size();
		if(!(this.width_actual <= _max)) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("width_actual <= _max" + (" ( " + ("Texture actual width bigger than maximum hardware size (width:" + this.width_actual + ", max:" + _max + ")") + " )")));
		if(!(this.height_actual <= _max)) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("height_actual <= _max" + (" ( " + ("Texture actual height bigger than maximum hardware size (height:" + this.height_actual + ", max:" + _max + ")") + " )")));
		this.bind();
		if(_target == null) _target = 3553;
		_target;
		var _g = this.type;
		switch(_g) {
		case 3553:
			if(this.compressed) snow_modules_opengl_web_GL.gl.compressedTexImage2D(_target,_level,this.format,this.width_actual,this.height_actual,this.border,_pixels); else snow_modules_opengl_web_GL.gl.texImage2D(_target,_level,this.format,this.width_actual,this.height_actual,this.border,this.format,this.data_type,_pixels);
			break;
		default:
			null;
		}
	}
	,generate_mipmaps: function() {
		this.bind();
		snow_modules_opengl_web_GL.gl.generateMipmap(this.type);
	}
	,bind: function() {
		Luxe.renderer.state.activeTexture(33984 + this.slot);
		Luxe.renderer.state.bindTexture(this.type,this.texture);
	}
	,reload: function() {
		var _g = this;
		if(!(this.state != 6)) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("state != ResourceState.destroyed" + (" ( " + "Resource cannot reload when already destroyed" + " )")));
		this.clear();
		return new snow_api_Promise(function(resolve,reject) {
			_g.set_state(2);
			var get = snow_systems_assets_AssetImage.load(Luxe.core.app.assets,_g.id);
			get.then(function(_asset) {
				_g.texture = _g.create_texture_id();
				_g.from_asset(_asset);
				_g.set_state(3);
				resolve(_g);
			});
			get.error(function(_error) {
				_g.set_state(4);
				reject(_error);
			});
		});
	}
	,from_asset: function(_asset,_clear_asset) {
		if(_clear_asset == null) _clear_asset = true;
		this.width = _asset.image.width;
		this.height = _asset.image.height;
		this.width_actual = _asset.image.width_actual;
		this.height_actual = _asset.image.height_actual;
		if(this.load_premultiply_alpha) Luxe.utils.premultiply_alpha(_asset.image.pixels);
		this.submit(_asset.image.pixels);
		if(_clear_asset) {
			_asset.image.pixels = null;
			_asset = null;
		}
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,10241,this.filter_min);
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,10240,this.filter_mag);
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,10242,this.clamp_s);
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,10243,this.clamp_t);
	}
	,clear: function() {
		if(this.texture != null) snow_modules_opengl_web_GL.gl.deleteTexture(this.texture);
	}
	,create_texture_id: function() {
		return snow_modules_opengl_web_GL.gl.createTexture();
	}
	,apply_props: function() {
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,10241,this.filter_min);
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,10240,this.filter_mag);
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,10242,this.clamp_s);
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,10243,this.clamp_t);
	}
	,apply_default_options: function(_options) {
		if(_options.load_premultiply_alpha == null) _options.load_premultiply_alpha = false;
		this.load_premultiply_alpha = _options.load_premultiply_alpha;
		if(_options.compressed == null) _options.compressed = false;
		this.compressed = _options.compressed;
		if(_options.format == null) _options.format = 6408;
		this.format = _options.format;
		if(_options.type == null) _options.type = 3553;
		this.type = _options.type;
		if(_options.data_type == null) _options.data_type = 5121;
		this.data_type = _options.data_type;
		this.set_filter_min((function($this) {
			var $r;
			if(_options.filter_min == null) _options.filter_min = phoenix_Texture.default_filter;
			$r = _options.filter_min;
			return $r;
		}(this)));
		this.set_filter_mag((function($this) {
			var $r;
			if(_options.filter_mag == null) _options.filter_mag = phoenix_Texture.default_filter;
			$r = _options.filter_mag;
			return $r;
		}(this)));
		this.set_clamp_s((function($this) {
			var $r;
			if(_options.clamp_s == null) _options.clamp_s = phoenix_Texture.default_clamp;
			$r = _options.clamp_s;
			return $r;
		}(this)));
		this.set_clamp_t((function($this) {
			var $r;
			if(_options.clamp_t == null) _options.clamp_t = phoenix_Texture.default_clamp;
			$r = _options.clamp_t;
			return $r;
		}(this)));
	}
	,set_clamp_s: function(_clamp) {
		this.bind();
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,10242,_clamp);
		return this.clamp_s = _clamp;
	}
	,set_clamp_t: function(_clamp) {
		this.bind();
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,10243,_clamp);
		return this.clamp_t = _clamp;
	}
	,set_filter_min: function(_filter) {
		this.bind();
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,10241,_filter);
		return this.filter_min = _filter;
	}
	,set_filter_mag: function(_filter) {
		this.bind();
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,10240,_filter);
		return this.filter_mag = _filter;
	}
	,apply_clamp: function(_clamp,_type) {
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,_type,_clamp);
	}
	,apply_filter: function(_filter,_type) {
		snow_modules_opengl_web_GL.gl.texParameteri(this.type,_type,_filter);
	}
	,toString: function() {
		var _type = phoenix_Texture.type_name(this.type);
		var _filter_min = phoenix_Texture.filter_name(this.filter_min);
		var _filter_mag = phoenix_Texture.filter_name(this.filter_mag);
		var _clamp_s = phoenix_Texture.clamp_name(this.clamp_s);
		var _clamp_t = phoenix_Texture.clamp_name(this.clamp_t);
		var _filter = "filter(min: " + _filter_min + ", mag:" + _filter_mag + ")";
		var _clamp = "clamp(s: " + _clamp_t + ", t: " + _clamp_t + ")";
		var _width = "size(size: " + this.width + "x" + this.height + ", actual: " + this.width_actual + "x" + this.height_actual + ")";
		return "Texture(id: " + this.id + ", tex: " + Std.string(this.texture) + ", type:" + _type + ", " + _width + " " + _filter + " " + _clamp + " )";
	}
	,__class__: phoenix_Texture
	,__properties__: $extend(luxe_resource_Resource.prototype.__properties__,{set_clamp_t:"set_clamp_t",set_clamp_s:"set_clamp_s",set_filter_mag:"set_filter_mag",set_filter_min:"set_filter_min"})
});
var phoenix_RenderTarget = function() { };
$hxClasses["phoenix.RenderTarget"] = phoenix_RenderTarget;
phoenix_RenderTarget.__name__ = ["phoenix","RenderTarget"];
phoenix_RenderTarget.prototype = {
	__class__: phoenix_RenderTarget
};
var phoenix_RenderTexture = function(_options) {
	this.viewport_scale = 1;
	_options.resource_type = 5;
	phoenix_Texture.call(this,_options);
	if(_options.width == null) _options.width = Std["int"](Luxe.core.screen.get_w());
	_options.width;
	if(_options.height == null) _options.height = Std["int"](Luxe.core.screen.get_h());
	_options.height;
	this.width = this.width_actual = _options.width;
	this.height = this.height_actual = _options.height;
	if(_options.texture != null) this.submit(null);
	snow_modules_opengl_web_GL.gl.texParameteri(this.type,10241,this.filter_min);
	snow_modules_opengl_web_GL.gl.texParameteri(this.type,10240,this.filter_mag);
	snow_modules_opengl_web_GL.gl.texParameteri(this.type,10242,this.clamp_s);
	snow_modules_opengl_web_GL.gl.texParameteri(this.type,10243,this.clamp_t);
	this.framebuffer = snow_modules_opengl_web_GL.gl.createFramebuffer();
	this.bindBuffer();
	this.renderbuffer = snow_modules_opengl_web_GL.gl.createRenderbuffer();
	this.bindRenderBuffer();
	snow_modules_opengl_web_GL.gl.renderbufferStorage(36161,33189,this.width,this.height);
	snow_modules_opengl_web_GL.gl.framebufferTexture2D(36160,36064,3553,this.texture,0);
	snow_modules_opengl_web_GL.gl.framebufferRenderbuffer(36160,36096,36161,this.renderbuffer);
	var status = snow_modules_opengl_web_GL.gl.checkFramebufferStatus(36160);
	switch(status) {
	case 36053:
		break;
	case 36054:
		throw new js__$Boot_HaxeError("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_ATTACHMENT");
		break;
	case 36055:
		throw new js__$Boot_HaxeError("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT");
		break;
	case 36057:
		throw new js__$Boot_HaxeError("Incomplete framebuffer: FRAMEBUFFER_INCOMPLETE_DIMENSIONS");
		break;
	case 36061:
		throw new js__$Boot_HaxeError("Incomplete framebuffer: FRAMEBUFFER_UNSUPPORTED");
		break;
	default:
		throw new js__$Boot_HaxeError("Incomplete framebuffer: " + status);
	}
	this.unbindBuffer();
	this.unbindRenderBuffer();
	this.system.add(this);
};
$hxClasses["phoenix.RenderTexture"] = phoenix_RenderTexture;
phoenix_RenderTexture.__name__ = ["phoenix","RenderTexture"];
phoenix_RenderTexture.__interfaces__ = [phoenix_RenderTarget];
phoenix_RenderTexture.__super__ = phoenix_Texture;
phoenix_RenderTexture.prototype = $extend(phoenix_Texture.prototype,{
	clear: function() {
		phoenix_Texture.prototype.clear.call(this);
		if(this.framebuffer != null) snow_modules_opengl_web_GL.gl.deleteFramebuffer(this.framebuffer);
		if(this.renderbuffer != null) snow_modules_opengl_web_GL.gl.deleteRenderbuffer(this.renderbuffer);
	}
	,bindBuffer: function() {
		Luxe.renderer.state.bindFramebuffer(this.framebuffer);
	}
	,unbindBuffer: function(_other) {
		Luxe.renderer.state.bindFramebuffer(_other);
	}
	,bindRenderBuffer: function() {
		Luxe.renderer.state.bindRenderbuffer(this.renderbuffer);
	}
	,unbindRenderBuffer: function(_other) {
		Luxe.renderer.state.bindRenderbuffer(_other);
	}
	,__class__: phoenix_RenderTexture
});
var phoenix_Backbuffer = function(_render_w,_render_h,_render_scale,_fb,_rb) {
	this.width = _render_w;
	this.height = _render_h;
	this.viewport_scale = _render_scale;
	this.framebuffer = _fb;
	this.renderbuffer = _rb;
};
$hxClasses["phoenix.Backbuffer"] = phoenix_Backbuffer;
phoenix_Backbuffer.__name__ = ["phoenix","Backbuffer"];
phoenix_Backbuffer.__interfaces__ = [phoenix_RenderTarget];
phoenix_Backbuffer.prototype = {
	__class__: phoenix_Backbuffer
};
var phoenix_Renderer = function(_core,_asset) {
	this.stop_count = 0;
	this.stop = false;
	this.should_clear = true;
	this.core = _core;
	this.font_asset = _asset;
	this.default_framebuffer = snow_modules_opengl_web_GL.gl.getParameter(36006);
	this.default_renderbuffer = snow_modules_opengl_web_GL.gl.getParameter(36007);
	var render_scale_ratio;
	if(window.devicePixelRatio == null) render_scale_ratio = 1.0; else render_scale_ratio = window.devicePixelRatio;
	this.backbuffer = new phoenix_Backbuffer(this.core.app.runtime.window.width,this.core.app.runtime.window.height,render_scale_ratio,this.default_framebuffer,this.default_renderbuffer);
	null;
};
$hxClasses["phoenix.Renderer"] = phoenix_Renderer;
phoenix_Renderer.__name__ = ["phoenix","Renderer"];
phoenix_Renderer.prototype = {
	init: function() {
		haxe_Log.trace(" i / renderer / " + ("opengl " + snow_modules_opengl_web_GL.versionString()),{ fileName : "Renderer.hx", lineNumber : 137, className : "phoenix.Renderer", methodName : "init"});
		this.state = new phoenix_RenderState(this);
		this.clear_color = new phoenix_Color().rgb(1710618);
		this.stats = new phoenix_RendererStats();
		this.set_target(this.default_target = this.backbuffer);
		this.batchers = [];
		this.camera = new phoenix_Camera();
		this.default_render_path = new phoenix_RenderPath(this);
		this.render_path = this.default_render_path;
		this.create_default_shaders();
		this.batcher = new phoenix_Batcher(this,"default batcher");
		this.batcher.set_layer(1);
		this.add_batch(this.batcher);
		this.create_default_font();
		if(Luxe.core.app.config.render.depth > 0) {
			this.state.enable(2929);
			this.state.depth_function(515);
			snow_modules_opengl_web_GL.gl.clearDepth(1.0);
		}
		snow_modules_opengl_web_GL.gl.enable(3042);
		snow_modules_opengl_web_GL.gl.blendFunc(770,771);
		snow_modules_opengl_web_GL.gl.pixelStorei(37441,0);
	}
	,destroy: function() {
		this.clear(new phoenix_Color().rgb(16729099));
	}
	,sort_batchers: function(a,b) {
		if(a.layer < b.layer) return -1;
		if(a.layer > b.layer) return 1;
		if(a.sequence < b.sequence) return -1;
		if(a.sequence > b.sequence) return 1;
		return 1;
	}
	,add_batch: function(batch) {
		this.batchers.push(batch);
		this.batchers.sort($bind(this,this.sort_batchers));
	}
	,remove_batch: function(batch) {
		HxOverrides.remove(this.batchers,batch);
	}
	,create_batcher: function(options) {
		var _new_batcher_layer = 2;
		if(options != null) {
			if(options.name == null) options.name = "batcher";
			options.name;
			if(options.layer == null) options.layer = _new_batcher_layer;
			options.layer;
			if(options.camera == null) options.camera = new phoenix_Camera();
			options.camera;
			if(options.max_verts == null) options.max_verts = 16384;
			options.max_verts;
		} else options = { name : "batcher", camera : new phoenix_Camera(), layer : _new_batcher_layer, max_verts : 16384};
		var _batcher = new phoenix_Batcher(this,options.name,options.max_verts);
		_batcher.view = options.camera;
		_batcher.layer = options.layer;
		_batcher.renderer.batchers.sort(($_=_batcher.renderer,$bind($_,$_.sort_batchers)));
		_batcher.layer;
		if(options.no_add == null || options.no_add == false) this.add_batch(_batcher);
		return _batcher;
	}
	,clear: function(_color) {
		if(_color == null) _color = this.clear_color;
		_color;
		snow_modules_opengl_web_GL.gl.clearColor(_color.r,_color.g,_color.b,_color.a);
		if(Luxe.core.app.config.render.depth > 0) {
			snow_modules_opengl_web_GL.gl.clear(16640);
			snow_modules_opengl_web_GL.gl.clearDepth(1.0);
		} else snow_modules_opengl_web_GL.gl.clear(16384);
	}
	,blend_mode: function(_src_mode,_dst_mode) {
		if(_dst_mode == null) _dst_mode = 771;
		if(_src_mode == null) _src_mode = 770;
		snow_modules_opengl_web_GL.gl.blendFunc(_src_mode,_dst_mode);
	}
	,blend_equation: function(_equation) {
		if(_equation == null) _equation = 32774;
		snow_modules_opengl_web_GL.gl.blendEquation(_equation);
	}
	,internal_resized: function(_w,_h) {
		this.backbuffer.width = _w;
		this.backbuffer.height = _h;
		if(window.devicePixelRatio == null) this.backbuffer.viewport_scale = 1.0; else this.backbuffer.viewport_scale = window.devicePixelRatio;
	}
	,process: function() {
		if(this.should_clear) this.clear(this.clear_color);
		this.render_path.render(this.batchers,this.stats);
	}
	,prerender: function() {
		this.stats.reset();
	}
	,get_target: function() {
		return this.target;
	}
	,set_target: function(_target) {
		if(_target == null) _target = this.default_target;
		this.state.bindFramebuffer(_target.framebuffer);
		this.state.bindRenderbuffer(_target.renderbuffer);
		return this.target = _target;
	}
	,bind_target: function(_target) {
		this.state.bindFramebuffer(_target.framebuffer);
		this.state.bindRenderbuffer(_target.renderbuffer);
	}
	,create_default_shaders: function() {
		var vert = null;
		var frag = null;
		var frag_textured = null;
		var frag_bitmapfont = null;
		if(vert == null) {
			vert = haxe_Resource.getString("default.vert.glsl");
			frag = haxe_Resource.getString("default.frag.glsl");
			frag_textured = haxe_Resource.getString("default.frag.textured.glsl");
			frag_bitmapfont = haxe_Resource.getString("default.frag.bitmapfont.glsl");
		}
		var ext = snow_modules_opengl_web_GL.gl.getExtension("OES_standard_derivatives");
		frag = "precision mediump float;\n" + frag;
		frag_textured = "precision mediump float;\n" + frag_textured;
		frag_bitmapfont = "#extension GL_OES_standard_derivatives : enable\n#extension OES_standard_derivatives : enable\nprecision mediump float;\n" + frag_bitmapfont;
		var _plain = new phoenix_Shader({ id : "luxe.shader", frag_id : "default", vert_id : "default"});
		var _textured = new phoenix_Shader({ id : "luxe.shader_textured", frag_id : "textured", vert_id : "default"});
		var _font = new phoenix_Shader({ id : "luxe.shader_bitmapfont", frag_id : "bitmapfont", vert_id : "default"});
		var _ok = true;
		_ok = _ok && _plain.from_string(vert,frag);
		_ok = _ok && _textured.from_string(vert,frag_textured);
		_ok = _ok && _font.from_string(vert,frag_bitmapfont);
		if(!_ok) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("_ok" + (" ( " + "Default shaders failed to compile or link. See log for errors" + " )")));
		this.shaders = { plain : { shader : _plain, source : { vert : vert, frag : frag}}, textured : { shader : _textured, source : { vert : vert, frag : frag_textured}}, bitmapfont : { shader : _font, source : { vert : vert, frag : frag_bitmapfont}}};
		null;
	}
	,create_default_font: function() {
		if(this.font_asset == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("font_asset was null" + (" ( " + "Renderer / failed to create the default font" + " )")));
		var _font_texture = new phoenix_Texture({ id : "luxe.font.png", width : this.font_asset.image.width_actual, height : this.font_asset.image.height_actual, pixels : this.font_asset.image.pixels});
		if(_font_texture == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_font_texture was null" + (" ( " + "Renderer / failed to create the default font... font_texture was null." + " )")));
		var _font_data = haxe_Resource.getString("default.fnt");
		this.font = new phoenix_BitmapFont({ id : "luxe.font", font_data : _font_data, pages : [_font_texture]});
		null;
	}
	,__class__: phoenix_Renderer
	,__properties__: {set_target:"set_target",get_target:"get_target"}
};
var phoenix_RendererStats = function() {
	this.vert_count = 0;
	this.draw_calls = 0;
	this.visible_count = 0;
	this.static_batched_count = 0;
	this.dynamic_batched_count = 0;
	this.geometry_count = 0;
	this.batchers = 0;
};
$hxClasses["phoenix.RendererStats"] = phoenix_RendererStats;
phoenix_RendererStats.__name__ = ["phoenix","RendererStats"];
phoenix_RendererStats.prototype = {
	reset: function() {
		this.geometry_count = 0;
		this.dynamic_batched_count = 0;
		this.static_batched_count = 0;
		this.visible_count = 0;
		this.draw_calls = 0;
		this.vert_count = 0;
	}
	,toString: function() {
		return "Renderer Statistics\n" + "\tbatcher count : " + this.batchers + "\n" + "\ttotal geometry : " + this.geometry_count + "\n" + "\tvisible geometry : " + this.visible_count + "\n" + "\tdynamic batched geometry : " + this.dynamic_batched_count + "\n" + "\tstatic batched geometry : " + this.static_batched_count + "\n" + "\ttotal draw calls : " + this.draw_calls + "\n" + "\ttotal vertices : " + this.vert_count;
	}
	,__class__: phoenix_RendererStats
};
var phoenix_Uniforms = function() {
	this.clear();
};
$hxClasses["phoenix.Uniforms"] = phoenix_Uniforms;
phoenix_Uniforms.__name__ = ["phoenix","Uniforms"];
phoenix_Uniforms.prototype = {
	destroy: function() {
		this.ints = null;
		this.floats = null;
		this.vector2s = null;
		this.vector2arrs = null;
		this.vector3s = null;
		this.vector3arrs = null;
		this.vector4s = null;
		this.vector4arrs = null;
		this.matrix4s = null;
		this.matrix4arrs = null;
		this.colors = null;
		this.textures = null;
		this.dirty_ints = null;
		this.dirty_floats = null;
		this.dirty_vector2s = null;
		this.dirty_vector2arrs = null;
		this.dirty_vector3s = null;
		this.dirty_vector3arrs = null;
		this.dirty_vector4s = null;
		this.dirty_vector4arrs = null;
		this.dirty_matrix4s = null;
		this.dirty_matrix4arrs = null;
		this.dirty_colors = null;
		this.dirty_textures = null;
	}
	,clear: function() {
		this.destroy();
		this.ints = new haxe_ds_StringMap();
		this.floats = new haxe_ds_StringMap();
		this.vector2s = new haxe_ds_StringMap();
		this.vector2arrs = new haxe_ds_StringMap();
		this.vector3s = new haxe_ds_StringMap();
		this.vector3arrs = new haxe_ds_StringMap();
		this.vector4s = new haxe_ds_StringMap();
		this.vector4arrs = new haxe_ds_StringMap();
		this.matrix4s = new haxe_ds_StringMap();
		this.matrix4arrs = new haxe_ds_StringMap();
		this.colors = new haxe_ds_StringMap();
		this.textures = new haxe_ds_StringMap();
		this.dirty_ints = [];
		this.dirty_floats = [];
		this.dirty_vector2s = [];
		this.dirty_vector2arrs = [];
		this.dirty_vector3s = [];
		this.dirty_vector3arrs = [];
		this.dirty_vector4s = [];
		this.dirty_vector4arrs = [];
		this.dirty_matrix4s = [];
		this.dirty_matrix4arrs = [];
		this.dirty_colors = [];
		this.dirty_textures = [];
	}
	,set_int: function(_name,_value,_location) {
		var _int = this.ints.get(_name);
		if(_int != null) _int.value = _value; else {
			_int = new phoenix__$Shader_Uniform_$Int(_name,_value,_location);
			this.ints.set(_name,_int);
		}
		this.dirty_ints.push(_int);
	}
	,set_float: function(_name,_value,_location) {
		var _float = this.floats.get(_name);
		if(_float != null) _float.value = _value; else {
			_float = new phoenix__$Shader_Uniform_$Float(_name,_value,_location);
			this.floats.set(_name,_float);
		}
		this.dirty_floats.push(_float);
	}
	,set_vector2: function(_name,_value,_location) {
		var _vector2 = this.vector2s.get(_name);
		if(_vector2 != null) _vector2.value = _value; else {
			_vector2 = new phoenix__$Shader_Uniform_$phoenix_$Vector(_name,_value,_location);
			this.vector2s.set(_name,_vector2);
		}
		this.dirty_vector2s.push(_vector2);
	}
	,set_vector2_arr: function(_name,_value,_location) {
		var _vector2 = this.vector2arrs.get(_name);
		if(_vector2 != null) _vector2.value = _value; else {
			_vector2 = new phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array(_name,_value,_location);
			this.vector2arrs.set(_name,_vector2);
		}
		this.dirty_vector2arrs.push(_vector2);
	}
	,set_vector3: function(_name,_value,_location) {
		var _vector3 = this.vector3s.get(_name);
		if(_vector3 != null) _vector3.value = _value; else {
			_vector3 = new phoenix__$Shader_Uniform_$phoenix_$Vector(_name,_value,_location);
			this.vector3s.set(_name,_vector3);
		}
		this.dirty_vector3s.push(_vector3);
	}
	,set_vector3_arr: function(_name,_value,_location) {
		var _vector3 = this.vector3arrs.get(_name);
		if(_vector3 != null) _vector3.value = _value; else {
			_vector3 = new phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array(_name,_value,_location);
			this.vector3arrs.set(_name,_vector3);
		}
		this.dirty_vector3arrs.push(_vector3);
	}
	,set_vector4: function(_name,_value,_location) {
		var _vector4 = this.vector4s.get(_name);
		if(_vector4 != null) _vector4.value = _value; else {
			_vector4 = new phoenix__$Shader_Uniform_$phoenix_$Vector(_name,_value,_location);
			this.vector4s.set(_name,_vector4);
		}
		this.dirty_vector4s.push(_vector4);
	}
	,set_vector4_arr: function(_name,_value,_location) {
		var _vector4 = this.vector4arrs.get(_name);
		if(_vector4 != null) _vector4.value = _value; else {
			_vector4 = new phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array(_name,_value,_location);
			this.vector4arrs.set(_name,_vector4);
		}
		this.dirty_vector4arrs.push(_vector4);
	}
	,set_matrix4: function(_name,_value,_location) {
		var _matrix4 = this.matrix4s.get(_name);
		if(_matrix4 != null) _matrix4.value = _value; else {
			_matrix4 = new phoenix__$Shader_Uniform_$phoenix_$Matrix(_name,_value,_location);
			this.matrix4s.set(_name,_matrix4);
		}
		this.dirty_matrix4s.push(_matrix4);
	}
	,set_matrix4_arr: function(_name,_value,_location) {
		var _matrix4 = this.matrix4arrs.get(_name);
		if(_matrix4 != null) _matrix4.value = _value; else {
			_matrix4 = new phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array(_name,_value,_location);
			this.matrix4arrs.set(_name,_matrix4);
		}
		this.dirty_matrix4arrs.push(_matrix4);
	}
	,set_color: function(_name,_value,_location) {
		var _color = this.colors.get(_name);
		if(_color != null) _color.value = _value; else {
			_color = new phoenix__$Shader_Uniform_$phoenix_$Color(_name,_value,_location);
			this.colors.set(_name,_color);
		}
		this.dirty_colors.push(_color);
	}
	,set_texture: function(_name,_value,_location) {
		var _texture = this.textures.get(_name);
		if(_texture != null) _texture.value = _value; else {
			_texture = new phoenix__$Shader_Uniform_$phoenix_$Texture(_name,_value,_location);
			this.textures.set(_name,_texture);
		}
		this.dirty_textures.push(_texture);
	}
	,apply: function() {
		while(this.dirty_ints.length > 0) {
			var uf = this.dirty_ints.pop();
			snow_modules_opengl_web_GL.gl.uniform1i(uf.location,uf.value);
		}
		while(this.dirty_floats.length > 0) {
			var uf1 = this.dirty_floats.pop();
			snow_modules_opengl_web_GL.gl.uniform1f(uf1.location,uf1.value);
		}
		while(this.dirty_vector2s.length > 0) {
			var uf2 = this.dirty_vector2s.pop();
			snow_modules_opengl_web_GL.gl.uniform2f(uf2.location,uf2.value.x,uf2.value.y);
		}
		while(this.dirty_vector2arrs.length > 0) {
			var uf3 = this.dirty_vector2arrs.pop();
			snow_modules_opengl_web_GL.gl.uniform2fv(uf3.location,uf3.value);
		}
		while(this.dirty_vector3s.length > 0) {
			var uf4 = this.dirty_vector3s.pop();
			snow_modules_opengl_web_GL.gl.uniform3f(uf4.location,uf4.value.x,uf4.value.y,uf4.value.z);
		}
		while(this.dirty_vector3arrs.length > 0) {
			var uf5 = this.dirty_vector3arrs.pop();
			snow_modules_opengl_web_GL.gl.uniform3fv(uf5.location,uf5.value);
		}
		while(this.dirty_vector4s.length > 0) {
			var uf6 = this.dirty_vector4s.pop();
			snow_modules_opengl_web_GL.gl.uniform4f(uf6.location,uf6.value.x,uf6.value.y,uf6.value.z,uf6.value.w);
		}
		while(this.dirty_vector4arrs.length > 0) {
			var uf7 = this.dirty_vector4arrs.pop();
			snow_modules_opengl_web_GL.gl.uniform4fv(uf7.location,uf7.value);
		}
		while(this.dirty_colors.length > 0) {
			var uf8 = this.dirty_colors.pop();
			snow_modules_opengl_web_GL.gl.uniform4f(uf8.location,uf8.value.r,uf8.value.g,uf8.value.b,uf8.value.a);
		}
		while(this.dirty_textures.length > 0) {
			var uf9 = this.dirty_textures.pop();
			snow_modules_opengl_web_GL.gl.uniform1i(uf9.location,uf9.value.slot);
			uf9.value.bind();
		}
		while(this.dirty_matrix4s.length > 0) {
			var uf10 = this.dirty_matrix4s.pop();
			snow_modules_opengl_web_GL.uniformMatrix4fv(uf10.location,false,uf10.value.float32array());
		}
		while(this.dirty_matrix4arrs.length > 0) {
			var uf11 = this.dirty_matrix4arrs.pop();
			snow_modules_opengl_web_GL.gl.uniformMatrix4fv(uf11.location,false,uf11.value);
		}
	}
	,__class__: phoenix_Uniforms
};
var phoenix_Shader = function(_options) {
	this.no_default_uniforms = false;
	this.frag_id = "";
	this.vert_id = "";
	this.log = "";
	if(_options == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("_options was null" + ""));
	_options.resource_type = 7;
	luxe_resource_Resource.call(this,_options);
	this.frag_id = _options.frag_id;
	this.vert_id = _options.vert_id;
	if(_options.no_default_uniforms == null) _options.no_default_uniforms = false;
	this.no_default_uniforms = _options.no_default_uniforms;
	this.uniforms = new phoenix_Uniforms();
};
$hxClasses["phoenix.Shader"] = phoenix_Shader;
phoenix_Shader.__name__ = ["phoenix","Shader"];
phoenix_Shader.__super__ = luxe_resource_Resource;
phoenix_Shader.prototype = $extend(luxe_resource_Resource.prototype,{
	activate: function() {
		this["use"]();
		this.uniforms.apply();
		Luxe.renderer.state.activeTexture(33984);
	}
	,'use': function() {
		if(this.program != null) Luxe.renderer.state.useProgram(this.program);
	}
	,deactivate: function() {
		Luxe.renderer.state.useProgram(null);
	}
	,clone: function(_id) {
		var _clone = new phoenix_Shader({ id : _id, frag_id : this.frag_id, vert_id : this.vert_id});
		_clone.from_string(this.vert_source,this.frag_source);
		return _clone;
	}
	,set_int: function(_name,_value) {
		this.uniforms.set_int(_name,_value,snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,_name));
	}
	,set_float: function(_name,_value) {
		this.uniforms.set_float(_name,_value,snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,_name));
	}
	,set_vector2: function(_name,_value) {
		this.uniforms.set_vector2(_name,_value,snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,_name));
	}
	,set_vector2_arr: function(_name,_value) {
		this.uniforms.set_vector2_arr(_name,_value,snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,_name));
	}
	,set_vector3: function(_name,_value) {
		this.uniforms.set_vector3(_name,_value,snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,_name));
	}
	,set_vector3_arr: function(_name,_value) {
		this.uniforms.set_vector3_arr(_name,_value,snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,_name));
	}
	,set_vector4: function(_name,_value) {
		this.uniforms.set_vector4(_name,_value,snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,_name));
	}
	,set_vector4_arr: function(_name,_value) {
		this.uniforms.set_vector4_arr(_name,_value,snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,_name));
	}
	,set_matrix4: function(_name,_value) {
		this.uniforms.set_matrix4(_name,_value,snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,_name));
	}
	,set_matrix4_arr: function(_name,_value) {
		this.uniforms.set_matrix4_arr(_name,_value,snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,_name));
	}
	,set_color: function(_name,_value) {
		this.uniforms.set_color(_name,_value,snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,_name));
	}
	,set_texture: function(_name,_value) {
		this.uniforms.set_texture(_name,_value,snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,_name));
	}
	,compile: function(_type,_source) {
		var _shader = snow_modules_opengl_web_GL.gl.createShader(_type);
		snow_modules_opengl_web_GL.gl.shaderSource(_shader,_source);
		snow_modules_opengl_web_GL.gl.compileShader(_shader);
		var _compile_log = snow_modules_opengl_web_GL.gl.getShaderInfoLog(_shader);
		var _log = "";
		if(_compile_log.length > 0) {
			var _is_frag = _type == 35632;
			var _type_name;
			if(_is_frag) _type_name = "frag"; else _type_name = "vert";
			var _type_id;
			if(_is_frag) _type_id = this.frag_id; else _type_id = this.vert_id;
			_log += "\n\t// start -- (" + _type_name + " / " + _type_id + ") compile log --\n";
			_log += this.format_log(_compile_log);
			_log += "\n\t// end --\n";
		}
		if(snow_modules_opengl_web_GL.gl.getShaderParameter(_shader,35713) == 0) {
			this.log += "\tFailed to compile shader `" + this.id + "`:\n";
			this.add_log(_log.length == 0?this.format_log(snow_modules_opengl_web_GL.gl.getShaderInfoLog(_shader)):_log);
			snow_modules_opengl_web_GL.gl.deleteShader(_shader);
			_shader = null;
			return null;
		}
		return _shader;
	}
	,link: function() {
		this.program = snow_modules_opengl_web_GL.gl.createProgram();
		snow_modules_opengl_web_GL.gl.attachShader(this.program,this.vert_shader);
		snow_modules_opengl_web_GL.gl.attachShader(this.program,this.frag_shader);
		snow_modules_opengl_web_GL.gl.bindAttribLocation(this.program,0,"vertexPosition");
		snow_modules_opengl_web_GL.gl.bindAttribLocation(this.program,1,"vertexTCoord");
		snow_modules_opengl_web_GL.gl.bindAttribLocation(this.program,2,"vertexColor");
		snow_modules_opengl_web_GL.gl.bindAttribLocation(this.program,3,"vertexNormal");
		snow_modules_opengl_web_GL.gl.linkProgram(this.program);
		if(snow_modules_opengl_web_GL.gl.getProgramParameter(this.program,35714) == 0) {
			this.log += "\tFailed to link shader program:";
			this.add_log(this.format_log(snow_modules_opengl_web_GL.gl.getProgramInfoLog(this.program)));
			snow_modules_opengl_web_GL.gl.deleteProgram(this.program);
			this.program = null;
			return false;
		}
		this["use"]();
		if(!this.no_default_uniforms) {
			this.proj_attribute = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,"projectionMatrix");
			this.view_attribute = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,"modelViewMatrix");
			var _tex0_attribute = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,"tex0");
			var _tex1_attribute = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,"tex1");
			var _tex2_attribute = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,"tex2");
			var _tex3_attribute = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,"tex3");
			var _tex4_attribute = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,"tex4");
			var _tex5_attribute = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,"tex5");
			var _tex6_attribute = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,"tex6");
			var _tex7_attribute = snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,"tex7");
			if(_tex0_attribute != null) snow_modules_opengl_web_GL.gl.uniform1i(_tex0_attribute,0);
			if(_tex1_attribute != null) snow_modules_opengl_web_GL.gl.uniform1i(_tex1_attribute,1);
			if(_tex2_attribute != null) snow_modules_opengl_web_GL.gl.uniform1i(_tex2_attribute,2);
			if(_tex3_attribute != null) snow_modules_opengl_web_GL.gl.uniform1i(_tex3_attribute,3);
			if(_tex4_attribute != null) snow_modules_opengl_web_GL.gl.uniform1i(_tex4_attribute,4);
			if(_tex5_attribute != null) snow_modules_opengl_web_GL.gl.uniform1i(_tex5_attribute,5);
			if(_tex6_attribute != null) snow_modules_opengl_web_GL.gl.uniform1i(_tex6_attribute,6);
			if(_tex7_attribute != null) snow_modules_opengl_web_GL.gl.uniform1i(_tex7_attribute,7);
		}
		return true;
	}
	,location: function(_name) {
		return snow_modules_opengl_web_GL.gl.getUniformLocation(this.program,_name);
	}
	,clear: function() {
		if(this.vert_shader != null) snow_modules_opengl_web_GL.gl.deleteShader(this.vert_shader);
		if(this.frag_shader != null) snow_modules_opengl_web_GL.gl.deleteShader(this.frag_shader);
		if(this.program != null) snow_modules_opengl_web_GL.gl.deleteProgram(this.program);
		this.vert_source = null;
		this.frag_source = null;
		this.uniforms.clear();
	}
	,reload: function() {
		var _g = this;
		if(!(this.state != 6)) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("state != ResourceState.destroyed" + ""));
		this.clear();
		return new snow_api_Promise(function(resolve,reject) {
			_g.set_state(2);
			var _g1 = _g.frag_id;
			switch(_g1) {
			case "default":
				_g.frag_source = Luxe.renderer.shaders.plain.source.frag;
				break;
			case "textured":
				_g.frag_source = Luxe.renderer.shaders.textured.source.frag;
				break;
			}
			var _g11 = _g.vert_id;
			switch(_g11) {
			case "default":
				_g.vert_source = Luxe.renderer.shaders.plain.source.vert;
				break;
			}
			var _onfail = function(_err) {
				_g.set_state(4);
				reject(_err);
			};
			var _wait = [snow_api_Promise.resolve()];
			if(_g.frag_source == null) {
				var _frag = snow_systems_assets_AssetText.load(Luxe.core.app.assets,_g.frag_id);
				_frag.then(function(_asset) {
					_g.frag_source = _asset.text;
				});
				_wait.push(_frag);
			}
			if(_g.vert_source == null) {
				var _vert = snow_systems_assets_AssetText.load(Luxe.core.app.assets,_g.vert_id);
				_vert.then(function(_asset1) {
					_g.vert_source = _asset1.text;
				});
				_wait.push(_vert);
			}
			snow_api_Promise.all(_wait).then(function() {
				if(_g.from_string(_g.vert_source,_g.frag_source)) {
					_g.set_state(3);
					resolve(_g);
				} else _onfail(snow_types_Error.error("`" + _g.id + "` failed to create :\n\n" + _g.log));
			}).error(function(err) {
				_onfail(snow_types_Error.error("`" + _g.id + "` failed to create :\n\t\t" + err + "\n"));
			});
		});
	}
	,from_string: function(_vert_source,_fragment_source) {
		var _g = this;
		this.clear();
		this.frag_source = _fragment_source;
		this.vert_source = _vert_source;
		this.vert_shader = this.compile(35633,this.vert_source);
		this.frag_shader = this.compile(35632,this.frag_source);
		if(this.vert_shader == null || this.frag_shader == null) {
			if(_g.log.length > 0) haxe_Log.trace("   i / shader / " + _g.log,{ fileName : "Shader.hx", lineNumber : 680, className : "phoenix.Shader", methodName : "from_string"});
			return false;
		}
		if(!this.link()) {
			if(_g.log.length > 0) haxe_Log.trace("   i / shader / " + _g.log,{ fileName : "Shader.hx", lineNumber : 680, className : "phoenix.Shader", methodName : "from_string"});
			return false;
		}
		return true;
	}
	,add_log: function(_log) {
		this.log += _log;
	}
	,toString: function() {
		return "Shader(" + this.id + ") vert:" + this.vert_id + " / frag: " + this.frag_id;
	}
	,format_log: function(_log) {
		var _items = _log.split("\n");
		_items = _items.filter(function(s) {
			return StringTools.trim(s) != "";
		});
		_items = _items.map(function(s1) {
			return "\t\t" + StringTools.trim(s1);
		});
		return _items.join("\n");
	}
	,__class__: phoenix_Shader
});
var phoenix__$Shader_Uniform = function(_name,_value,_location) {
	this.name = _name;
	this.value = _value;
	this.location = _location;
};
$hxClasses["phoenix._Shader.Uniform"] = phoenix__$Shader_Uniform;
phoenix__$Shader_Uniform.__name__ = ["phoenix","_Shader","Uniform"];
phoenix__$Shader_Uniform.prototype = {
	__class__: phoenix__$Shader_Uniform
};
var phoenix_Transform = function() {
	this._destroying = false;
	this._cleaning = false;
	this._setup = true;
	this.manual_update = false;
	this.dirty = true;
	luxe_ID.call(this,"transform");
	this.set_local(new phoenix_Spatial());
	this.set_world(new phoenix_Spatial());
	this._origin_undo_matrix = new phoenix_Matrix();
	this._pos_matrix = new phoenix_Matrix();
	this._rotation_matrix = new phoenix_Matrix();
	this.set_origin(new phoenix_Vector());
	this.local.pos_changed = $bind(this,this.on_local_pos_change);
	this.local.rotation_changed = $bind(this,this.on_local_rotation_change);
	this.local.scale_changed = $bind(this,this.on_local_scale_change);
	this._setup = false;
};
$hxClasses["phoenix.Transform"] = phoenix_Transform;
phoenix_Transform.__name__ = ["phoenix","Transform"];
phoenix_Transform.__super__ = luxe_ID;
phoenix_Transform.prototype = $extend(luxe_ID.prototype,{
	destroy: function() {
		this._destroying = true;
		if(this.parent != null) this.parent.unlisten($bind(this,this.on_parent_cleaned));
		this._clean_handlers = null;
		this._dirty_handlers = null;
		this._pos_handlers = null;
		this._rotation_handlers = null;
		this._scale_handlers = null;
		this._origin_handlers = null;
		this._parent_handlers = null;
		this.local.destroy();
		((function($this) {
			var $r;
			if(!$this._destroying) {
				if($this.parent != null && $this.parent.dirty) $this.parent.clean_check();
				if($this.dirty && !$this._cleaning && !$this.manual_update) $this.clean();
			}
			$r = $this.world;
			return $r;
		}(this))).destroy();
		this.local = null;
		this.world = null;
		this.dirty = true;
		if(this.dirty && !this._setup && this._dirty_handlers != null && this._dirty_handlers.length > 0) this.propagate_dirty();
		this.dirty;
		this.origin = null;
		if(this._origin_handlers != null && this._origin_handlers.length > 0) this.propagate_origin(this.origin);
		this.origin;
		this._origin_undo_matrix = null;
		this._pos_matrix = null;
		this._rotation_matrix = null;
	}
	,set_dirty: function(_dirty) {
		this.dirty = _dirty;
		if(this.dirty && !this._setup && this._dirty_handlers != null && this._dirty_handlers.length > 0) this.propagate_dirty();
		return this.dirty;
	}
	,on_local_pos_change: function(v) {
		this.dirty = true;
		if(this.dirty && !this._setup && this._dirty_handlers != null && this._dirty_handlers.length > 0) this.propagate_dirty();
		this.dirty;
		if(this._pos_handlers != null && this._pos_handlers.length > 0) this.propagate_pos(v);
	}
	,on_local_rotation_change: function(r) {
		this.dirty = true;
		if(this.dirty && !this._setup && this._dirty_handlers != null && this._dirty_handlers.length > 0) this.propagate_dirty();
		this.dirty;
		if(this._rotation_handlers != null && this._rotation_handlers.length > 0) this.propagate_rotation(r);
	}
	,on_local_scale_change: function(s) {
		this.dirty = true;
		if(this.dirty && !this._setup && this._dirty_handlers != null && this._dirty_handlers.length > 0) this.propagate_dirty();
		this.dirty;
		if(this._scale_handlers != null && this._scale_handlers.length > 0) this.propagate_scale(s);
	}
	,on_parent_cleaned: function(p) {
		this.dirty = true;
		if(this.dirty && !this._setup && this._dirty_handlers != null && this._dirty_handlers.length > 0) this.propagate_dirty();
		this.dirty;
	}
	,get_local: function() {
		return this.local;
	}
	,set_local: function(l) {
		if(l != null) {
			this.dirty = true;
			if(this.dirty && !this._setup && this._dirty_handlers != null && this._dirty_handlers.length > 0) this.propagate_dirty();
			this.dirty;
			l.pos_changed = $bind(this,this.on_local_pos_change);
			l.rotation_changed = $bind(this,this.on_local_rotation_change);
			l.scale_changed = $bind(this,this.on_local_scale_change);
		}
		return this.local = l;
	}
	,get_world: function() {
		if(!this._destroying) {
			if(this.parent != null && this.parent.dirty) this.parent.clean_check();
			if(this.dirty && !this._cleaning && !this.manual_update) this.clean();
		}
		return this.world;
	}
	,clean_check: function() {
		if(this.parent != null && this.parent.dirty) this.parent.clean_check();
		if(this.dirty && !this._cleaning && !this.manual_update) this.clean();
	}
	,clean: function() {
		if(!this.dirty) return;
		this._cleaning = true;
		this._pos_matrix.makeTranslation(this.local.pos.x,this.local.pos.y,this.local.pos.z);
		this._rotation_matrix.makeRotationFromQuaternion(this.local.rotation);
		this._origin_undo_matrix.makeTranslation(-this.origin.x,-this.origin.y,-this.origin.z);
		this.local.matrix.makeTranslation(this.origin.x,this.origin.y,this.origin.z);
		this.local.matrix.multiply(this._rotation_matrix);
		this.local.matrix.scale(this.local.scale);
		this.local.matrix.setPosition(this.local.pos);
		this.local.matrix.multiply(this._origin_undo_matrix);
		if(this.parent != null) this.get_world().set_matrix(this.get_world().get_matrix().multiplyMatrices(this.parent.get_world().get_matrix(),this.local.matrix)); else this.get_world().get_matrix().copy(this.local.matrix);
		this.get_world().decompose(false);
		this.dirty = false;
		if(this.dirty && !this._setup && this._dirty_handlers != null && this._dirty_handlers.length > 0) this.propagate_dirty();
		this.dirty;
		this._cleaning = false;
		if(this._clean_handlers != null && this._clean_handlers.length > 0) this.propagate_clean();
	}
	,toString: function() {
		return "Transform (" + this.id + ")";
	}
	,get_origin: function() {
		return this.origin;
	}
	,set_origin: function(o) {
		this.dirty = true;
		if(this.dirty && !this._setup && this._dirty_handlers != null && this._dirty_handlers.length > 0) this.propagate_dirty();
		this.dirty;
		this.origin = o;
		if(this._origin_handlers != null && this._origin_handlers.length > 0) this.propagate_origin(this.origin);
		return this.origin;
	}
	,set_world: function(w) {
		if(w == null) return this.world = w;
		this.dirty = true;
		if(this.dirty && !this._setup && this._dirty_handlers != null && this._dirty_handlers.length > 0) this.propagate_dirty();
		this.dirty;
		return this.world = w;
	}
	,get_parent: function() {
		return this.parent;
	}
	,set_parent: function(_p) {
		this.dirty = true;
		if(this.dirty && !this._setup && this._dirty_handlers != null && this._dirty_handlers.length > 0) this.propagate_dirty();
		this.dirty;
		if(this.parent != null) this.parent.unlisten($bind(this,this.on_parent_cleaned));
		this.parent = _p;
		if(this._parent_handlers != null && this._parent_handlers.length > 0) this.propagate_parent(this.parent);
		if(this.parent != null) this.parent.listen($bind(this,this.on_parent_cleaned));
		return this.parent;
	}
	,get_pos: function() {
		return this.local.pos;
	}
	,get_rotation: function() {
		return this.local.rotation;
	}
	,get_scale: function() {
		return this.local.scale;
	}
	,set_pos: function(value) {
		return this.local.set_pos(value);
	}
	,set_rotation: function(value) {
		return this.local.set_rotation(value);
	}
	,set_scale: function(value) {
		return this.local.set_scale(value);
	}
	,propagate_clean: function() {
		var _g = 0;
		var _g1 = this._clean_handlers;
		while(_g < _g1.length) {
			var _handler = _g1[_g];
			++_g;
			if(_handler != null) _handler(this);
		}
	}
	,propagate_dirty: function() {
		var _g = 0;
		var _g1 = this._dirty_handlers;
		while(_g < _g1.length) {
			var _handler = _g1[_g];
			++_g;
			if(_handler != null) _handler(this);
		}
	}
	,propagate_pos: function(_pos) {
		var _g = 0;
		var _g1 = this._pos_handlers;
		while(_g < _g1.length) {
			var _handler = _g1[_g];
			++_g;
			if(_handler != null) _handler(_pos);
		}
	}
	,propagate_rotation: function(_rotation) {
		var _g = 0;
		var _g1 = this._rotation_handlers;
		while(_g < _g1.length) {
			var _handler = _g1[_g];
			++_g;
			if(_handler != null) _handler(_rotation);
		}
	}
	,propagate_scale: function(_scale) {
		var _g = 0;
		var _g1 = this._scale_handlers;
		while(_g < _g1.length) {
			var _handler = _g1[_g];
			++_g;
			if(_handler != null) _handler(_scale);
		}
	}
	,propagate_origin: function(_origin) {
		var _g = 0;
		var _g1 = this._origin_handlers;
		while(_g < _g1.length) {
			var _handler = _g1[_g];
			++_g;
			if(_handler != null) _handler(_origin);
		}
	}
	,propagate_parent: function(_parent) {
		var _g = 0;
		var _g1 = this._parent_handlers;
		while(_g < _g1.length) {
			var _handler = _g1[_g];
			++_g;
			if(_handler != null) _handler(_parent);
		}
	}
	,listen: function(_handler) {
		if(this._clean_handlers == null) this._clean_handlers = [];
		this._clean_handlers.push(_handler);
	}
	,unlisten: function(_handler) {
		if(this._clean_handlers == null) return false;
		return HxOverrides.remove(this._clean_handlers,_handler);
	}
	,listen_dirty: function(_handler) {
		if(this._dirty_handlers == null) this._dirty_handlers = [];
		this._dirty_handlers.push(_handler);
	}
	,unlisten_dirty: function(_handler) {
		if(this._dirty_handlers == null) return false;
		return HxOverrides.remove(this._dirty_handlers,_handler);
	}
	,listen_pos: function(_handler) {
		if(this._pos_handlers == null) this._pos_handlers = [];
		this._pos_handlers.push(_handler);
	}
	,unlisten_pos: function(_handler) {
		if(this._pos_handlers == null) return false;
		return HxOverrides.remove(this._pos_handlers,_handler);
	}
	,listen_scale: function(_handler) {
		if(this._scale_handlers == null) this._scale_handlers = [];
		this._scale_handlers.push(_handler);
	}
	,unlisten_scale: function(_handler) {
		if(this._scale_handlers == null) return false;
		return HxOverrides.remove(this._scale_handlers,_handler);
	}
	,listen_rotation: function(_handler) {
		if(this._rotation_handlers == null) this._rotation_handlers = [];
		this._rotation_handlers.push(_handler);
	}
	,unlisten_rotation: function(_handler) {
		if(this._rotation_handlers == null) return false;
		return HxOverrides.remove(this._rotation_handlers,_handler);
	}
	,listen_origin: function(_handler) {
		if(this._origin_handlers == null) this._origin_handlers = [];
		this._origin_handlers.push(_handler);
	}
	,unlisten_origin: function(_handler) {
		if(this._origin_handlers == null) return false;
		return HxOverrides.remove(this._origin_handlers,_handler);
	}
	,listen_parent: function(_handler) {
		if(this._parent_handlers == null) this._parent_handlers = [];
		this._parent_handlers.push(_handler);
	}
	,unlisten_parent: function(_handler) {
		if(this._parent_handlers == null) return false;
		return HxOverrides.remove(this._parent_handlers,_handler);
	}
	,__class__: phoenix_Transform
	,__properties__: {set_scale:"set_scale",get_scale:"get_scale",set_rotation:"set_rotation",get_rotation:"get_rotation",set_pos:"set_pos",get_pos:"get_pos",set_dirty:"set_dirty",set_origin:"set_origin",get_origin:"get_origin",set_world:"set_world",get_world:"get_world",set_local:"set_local",get_local:"get_local",set_parent:"set_parent",get_parent:"get_parent"}
});
var phoenix_Spatial = function() {
	this._setup = true;
	this.auto_decompose = false;
	this.ignore_listeners = false;
	this.set_matrix(new phoenix_Matrix());
	this.floats = this.matrix.float32array();
	this.set_pos(new phoenix_Vector());
	this.set_rotation(new phoenix_Quaternion());
	this.set_scale(new phoenix_Vector(1,1,1));
	this._setup = false;
};
$hxClasses["phoenix.Spatial"] = phoenix_Spatial;
phoenix_Spatial.__name__ = ["phoenix","Spatial"];
phoenix_Spatial.prototype = {
	destroy: function() {
		this.matrix = null;
		this.matrix;
		this.floats = null;
		this.set_pos(null);
		this.rotation = null;
		this.rotation;
		this.set_scale(null);
	}
	,decompose: function(_force) {
		if(_force == null) _force = true;
		if(this.auto_decompose || _force) {
			var _transform = this.matrix.decompose(null,null,null);
			this.set_pos(_transform.pos);
			this.set_rotation(_transform.rotation);
			this.set_scale(_transform.scale);
		}
		return this;
	}
	,get_matrix: function() {
		return this.matrix;
	}
	,set_matrix: function(_m) {
		this.matrix = _m;
		if(_m != null) this.floats = this.matrix.float32array();
		return this.matrix;
	}
	,propagate_pos: function(_p) {
		if(this.pos_changed != null && !this.ignore_listeners) this.pos_changed(_p);
	}
	,propagate_rotation: function(_r) {
		if(this.rotation_changed != null && !this.ignore_listeners) this.rotation_changed(_r);
	}
	,propagate_scale: function(_s) {
		if(this.scale_changed != null && !this.ignore_listeners) this.scale_changed(_s);
	}
	,set_pos: function(_p) {
		this.pos = _p;
		if(_p != null) {
			var _v = this.pos;
			var listener = $bind(this,this._pos_change);
			_v.listen_x = listener;
			_v.listen_y = listener;
			_v.listen_z = listener;
			if(this.pos_changed != null && !this.ignore_listeners) this.pos_changed(this.pos);
		}
		return this.pos;
	}
	,set_rotation: function(_r) {
		this.rotation = _r;
		if(_r != null) {
			phoenix_Quaternion.Listen(this.rotation,$bind(this,this._rotation_change));
			if(this.rotation_changed != null && !this.ignore_listeners) this.rotation_changed(this.rotation);
		}
		return this.rotation;
	}
	,set_scale: function(_s) {
		this.scale = _s;
		if(_s != null) {
			var _v = this.scale;
			var listener = $bind(this,this._scale_change);
			_v.listen_x = listener;
			_v.listen_y = listener;
			_v.listen_z = listener;
			if(this.scale_changed != null && !this.ignore_listeners) this.scale_changed(this.scale);
		}
		return this.scale;
	}
	,_pos_change: function(_v) {
		this.set_pos(this.pos);
	}
	,_scale_change: function(_v) {
		this.set_scale(this.scale);
	}
	,_rotation_change: function(_v) {
		this.set_rotation(this.rotation);
	}
	,__class__: phoenix_Spatial
	,__properties__: {set_matrix:"set_matrix",get_matrix:"get_matrix",set_scale:"set_scale",set_rotation:"set_rotation",set_pos:"set_pos"}
};
var phoenix__$Vector_Vec_$Impl_$ = {};
$hxClasses["phoenix._Vector.Vec_Impl_"] = phoenix__$Vector_Vec_$Impl_$;
phoenix__$Vector_Vec_$Impl_$.__name__ = ["phoenix","_Vector","Vec_Impl_"];
phoenix__$Vector_Vec_$Impl_$._new = function(_x,_y,_z,_w) {
	return new phoenix_Vector(_x,_y,_z,_w);
};
phoenix__$Vector_Vec_$Impl_$._multiply = function(lhs,rhs) {
	return new phoenix_Vector(lhs.x * rhs.x,lhs.y * rhs.y,lhs.z * rhs.z);
};
phoenix__$Vector_Vec_$Impl_$._multiply_scalar = function(lhs,rhs) {
	return new phoenix_Vector(lhs.x * rhs,lhs.y * rhs,lhs.z * rhs);
};
phoenix__$Vector_Vec_$Impl_$._multiply_scalar_int = function(lhs,rhs) {
	return new phoenix_Vector(lhs.x * rhs,lhs.y * rhs,lhs.z * rhs);
};
phoenix__$Vector_Vec_$Impl_$._divide = function(lhs,rhs) {
	return new phoenix_Vector(lhs.x / rhs.x,lhs.y / rhs.y,lhs.z / rhs.z);
};
phoenix__$Vector_Vec_$Impl_$._divide_scalar = function(lhs,rhs) {
	return new phoenix_Vector(lhs.x / rhs,lhs.y / rhs,lhs.z / rhs);
};
phoenix__$Vector_Vec_$Impl_$._divide_scalar_int = function(lhs,rhs) {
	return new phoenix_Vector(lhs.x / rhs,lhs.y / rhs,lhs.z / rhs);
};
phoenix__$Vector_Vec_$Impl_$._add = function(lhs,rhs) {
	return new phoenix_Vector(lhs.x + rhs.x,lhs.y + rhs.y,lhs.z + rhs.z);
};
phoenix__$Vector_Vec_$Impl_$._add_scalar = function(lhs,rhs) {
	return new phoenix_Vector(lhs.x + rhs,lhs.y + rhs,lhs.z + rhs);
};
phoenix__$Vector_Vec_$Impl_$._add_scalar_int = function(lhs,rhs) {
	return new phoenix_Vector(lhs.x + rhs,lhs.y + rhs,lhs.z + rhs);
};
phoenix__$Vector_Vec_$Impl_$._subtract = function(lhs,rhs) {
	return new phoenix_Vector(lhs.x - rhs.x,lhs.y - rhs.y,lhs.z - rhs.z);
};
phoenix__$Vector_Vec_$Impl_$._subtract_scalar = function(lhs,rhs) {
	return new phoenix_Vector(lhs.x - rhs,lhs.y - rhs,lhs.z - rhs);
};
phoenix__$Vector_Vec_$Impl_$._subtract_scalar_int = function(lhs,rhs) {
	return new phoenix_Vector(lhs.x - rhs,lhs.y - rhs,lhs.z - rhs);
};
var phoenix__$Shader_Uniform_$Float = function(_name,_value,_location) {
	this.name = _name;
	this.value = _value;
	this.location = _location;
};
$hxClasses["phoenix._Shader.Uniform_Float"] = phoenix__$Shader_Uniform_$Float;
phoenix__$Shader_Uniform_$Float.__name__ = ["phoenix","_Shader","Uniform_Float"];
phoenix__$Shader_Uniform_$Float.prototype = {
	__class__: phoenix__$Shader_Uniform_$Float
};
var phoenix__$Shader_Uniform_$Int = function(_name,_value,_location) {
	this.name = _name;
	this.value = _value;
	this.location = _location;
};
$hxClasses["phoenix._Shader.Uniform_Int"] = phoenix__$Shader_Uniform_$Int;
phoenix__$Shader_Uniform_$Int.__name__ = ["phoenix","_Shader","Uniform_Int"];
phoenix__$Shader_Uniform_$Int.prototype = {
	__class__: phoenix__$Shader_Uniform_$Int
};
var phoenix__$Shader_Uniform_$phoenix_$Color = function(_name,_value,_location) {
	this.name = _name;
	this.value = _value;
	this.location = _location;
};
$hxClasses["phoenix._Shader.Uniform_phoenix_Color"] = phoenix__$Shader_Uniform_$phoenix_$Color;
phoenix__$Shader_Uniform_$phoenix_$Color.__name__ = ["phoenix","_Shader","Uniform_phoenix_Color"];
phoenix__$Shader_Uniform_$phoenix_$Color.prototype = {
	__class__: phoenix__$Shader_Uniform_$phoenix_$Color
};
var phoenix__$Shader_Uniform_$phoenix_$Matrix = function(_name,_value,_location) {
	this.name = _name;
	this.value = _value;
	this.location = _location;
};
$hxClasses["phoenix._Shader.Uniform_phoenix_Matrix"] = phoenix__$Shader_Uniform_$phoenix_$Matrix;
phoenix__$Shader_Uniform_$phoenix_$Matrix.__name__ = ["phoenix","_Shader","Uniform_phoenix_Matrix"];
phoenix__$Shader_Uniform_$phoenix_$Matrix.prototype = {
	__class__: phoenix__$Shader_Uniform_$phoenix_$Matrix
};
var phoenix__$Shader_Uniform_$phoenix_$Texture = function(_name,_value,_location) {
	this.name = _name;
	this.value = _value;
	this.location = _location;
};
$hxClasses["phoenix._Shader.Uniform_phoenix_Texture"] = phoenix__$Shader_Uniform_$phoenix_$Texture;
phoenix__$Shader_Uniform_$phoenix_$Texture.__name__ = ["phoenix","_Shader","Uniform_phoenix_Texture"];
phoenix__$Shader_Uniform_$phoenix_$Texture.prototype = {
	__class__: phoenix__$Shader_Uniform_$phoenix_$Texture
};
var phoenix__$Shader_Uniform_$phoenix_$Vector = function(_name,_value,_location) {
	this.name = _name;
	this.value = _value;
	this.location = _location;
};
$hxClasses["phoenix._Shader.Uniform_phoenix_Vector"] = phoenix__$Shader_Uniform_$phoenix_$Vector;
phoenix__$Shader_Uniform_$phoenix_$Vector.__name__ = ["phoenix","_Shader","Uniform_phoenix_Vector"];
phoenix__$Shader_Uniform_$phoenix_$Vector.prototype = {
	__class__: phoenix__$Shader_Uniform_$phoenix_$Vector
};
var phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array = function(_name,_value,_location) {
	this.name = _name;
	this.value = _value;
	this.location = _location;
};
$hxClasses["phoenix._Shader.Uniform_snow_api_buffers_Float32Array"] = phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array;
phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array.__name__ = ["phoenix","_Shader","Uniform_snow_api_buffers_Float32Array"];
phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array.prototype = {
	__class__: phoenix__$Shader_Uniform_$snow_$api_$buffers_$Float32Array
};
var phoenix_geometry_Geometry = function(_options) {
	this._prev_count = 0;
	this.dirty_based = true;
	this.dirty = false;
	this.locked = false;
	this.immediate = false;
	this.visible = true;
	this.dirty_blend = false;
	this.dirty_clip = false;
	this.dirty_depth = false;
	this.dirty_shader = false;
	this.dirty_texture = false;
	this.dirty_primitive_type = false;
	this.shadow_blend_dest_rgb = 771;
	this.shadow_blend_dest_alpha = 771;
	this.shadow_blend_src_rgb = 770;
	this.shadow_blend_src_alpha = 770;
	this.shadow_clip = false;
	this.shadow_depth = 0.0;
	this.blend_dest_rgb = 771;
	this.blend_dest_alpha = 771;
	this.blend_src_rgb = 770;
	this.blend_src_alpha = 770;
	this.id = "";
	this.uuid = "";
	this.dropped = false;
	this.added = false;
	this.buffer_type = 35048;
	this.buffer_based = false;
	this.object_space = false;
	this.uuid = Luxe.utils.uniqueid();
	this.id = this.uuid;
	this.state = new phoenix_geometry_GeometryState();
	this.vertices = [];
	this.batchers = [];
	this.transform = new phoenix_Transform();
	this._final_vert_position = new phoenix_Vector();
	this.set_clip_rect(null);
	this.set_clip(false);
	var _do_add = true;
	if(_options.id == null) _options.id = this.uuid;
	this.id = _options.id;
	this.set_color((function($this) {
		var $r;
		if(_options.color == null) _options.color = new phoenix_Color();
		$r = _options.color;
		return $r;
	}(this)));
	this.set_visible((function($this) {
		var $r;
		if(_options.visible == null) _options.visible = true;
		$r = _options.visible;
		return $r;
	}(this)));
	if(_options.immediate == null) _options.immediate = false;
	this.immediate = _options.immediate;
	if(_options.buffer_based == null) _options.buffer_based = false;
	this.buffer_based = _options.buffer_based;
	if(_options.object_space == null) _options.object_space = false;
	this.object_space = _options.object_space;
	this.state.set_depth((function($this) {
		var $r;
		if(_options.depth == null) _options.depth = $this.state.depth;
		$r = _options.depth;
		return $r;
	}(this)));
	this.state.set_texture((function($this) {
		var $r;
		if(_options.texture == null) _options.texture = $this.state.texture;
		$r = _options.texture;
		return $r;
	}(this)));
	this.state.set_primitive_type((function($this) {
		var $r;
		if(_options.primitive_type == null) _options.primitive_type = $this.state.primitive_type;
		$r = _options.primitive_type;
		return $r;
	}(this)));
	this.state.set_shader((function($this) {
		var $r;
		if(_options.shader == null) _options.shader = $this.state.shader;
		$r = _options.shader;
		return $r;
	}(this)));
	if(_options.clip_rect != null) {
		var _r = _options.clip_rect;
		this.state.set_clip_x(_r.x);
		this.state.set_clip_y(_r.y);
		this.state.set_clip_w(_r.w);
		this.state.set_clip_h(_r.h);
	}
	this.transform.set_pos((function($this) {
		var $r;
		if(_options.pos == null) _options.pos = $this.transform.local.pos;
		$r = _options.pos;
		return $r;
	}(this)));
	this.transform.set_rotation((function($this) {
		var $r;
		if(_options.rotation == null) _options.rotation = $this.transform.local.rotation;
		$r = _options.rotation;
		return $r;
	}(this)));
	this.transform.set_scale((function($this) {
		var $r;
		if(_options.scale == null) _options.scale = $this.transform.local.scale;
		$r = _options.scale;
		return $r;
	}(this)));
	this.transform.set_origin((function($this) {
		var $r;
		if(_options.origin == null) _options.origin = $this.transform.origin;
		$r = _options.origin;
		return $r;
	}(this)));
	if(_options.no_batcher_add != null && _options.no_batcher_add == true) _do_add = false;
	phoenix_geometry_Geometry._sequence_key++;
	this.key = new phoenix_geometry_GeometryKey();
	this.key.uuid = this.uuid;
	this.key.timestamp = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
	this.key.sequence = phoenix_geometry_Geometry._sequence_key;
	this.key.primitive_type = this.state.primitive_type;
	this.key.texture = this.state.texture;
	this.key.shader = this.state.shader;
	this.key.depth = this.state.depth;
	this.key.clip = this.state.clip;
	this.key.blend_src_alpha = this.state.blend_src_alpha;
	this.key.blend_src_rgb = this.state.blend_src_rgb;
	this.key.blend_dest_alpha = this.state.blend_dest_alpha;
	this.key.blend_dest_rgb = this.state.blend_dest_rgb;
	this.transform.id = this.uuid;
	this.transform.name = this.id;
	if(_options.batcher != null && _do_add) _options.batcher.add(this);
	if(this.buffer_based) {
		if(this.vb_pos != null) null; else {
			this.vb_pos = snow_modules_opengl_web_GL.gl.createBuffer();
			this.vb_tcoords = snow_modules_opengl_web_GL.gl.createBuffer();
			this.vb_colors = snow_modules_opengl_web_GL.gl.createBuffer();
			this.set_dirty(true);
		}
	}
	this.uniforms = new phoenix_Uniforms();
};
$hxClasses["phoenix.geometry.Geometry"] = phoenix_geometry_Geometry;
phoenix_geometry_Geometry.__name__ = ["phoenix","geometry","Geometry"];
phoenix_geometry_Geometry.prototype = {
	key_string: function() {
		return "ts: " + this.key.timestamp + "\n" + "sequence: " + this.key.sequence + "\n" + "primitive_type: " + this.key.primitive_type + "\n" + "texture: " + (this.key.texture == null?"null":this.key.texture.id) + "\n" + "shader: " + (this.key.shader == null?"null":this.key.shader.id) + "\n" + "depth: " + this.key.depth + "\n" + "clip: " + Std.string(this.key.clip);
	}
	,refresh_key: function() {
		this.key.uuid = this.uuid;
		this.key.timestamp = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
		this.key.primitive_type = this.state.primitive_type;
		this.key.texture = this.state.texture;
		this.key.shader = this.state.shader;
		this.key.depth = this.state.depth;
		this.key.clip = this.state.clip;
		this.key.blend_src_alpha = this.state.blend_src_alpha;
		this.key.blend_src_rgb = this.state.blend_src_rgb;
		this.key.blend_dest_alpha = this.state.blend_dest_alpha;
		this.key.blend_dest_rgb = this.state.blend_dest_rgb;
	}
	,str: function() {
		if(!this.state.log) return;
		haxe_Log.trace("\t\tgeometry ; " + this.id,{ fileName : "Geometry.hx", lineNumber : 236, className : "phoenix.geometry.Geometry", methodName : "str"});
		this.state.log = true;
		this.state.str();
		this.state.log = false;
	}
	,drop: function(remove) {
		if(remove == null) remove = true;
		if(remove && this.added) {
			var _g = 0;
			var _g1 = this.batchers;
			while(_g < _g1.length) {
				var b = _g1[_g];
				++_g;
				b.remove(this,true);
			}
		}
		this.key = null;
		this.set_color(null);
		this.state = null;
		this._final_vert_position = null;
		this.batchers = null;
		this.uuid = null;
		this.id = null;
		this.shadow_texture = null;
		this.shadow_shader = null;
		this.vertices = null;
		if(this.transform != null) {
			this.transform.destroy();
			this.transform = null;
		}
		if(this.uniforms != null) {
			this.uniforms.destroy();
			this.uniforms = null;
		}
		this.destroy_vbos();
		if(this.buffer_pos != null) {
			this.buffer_pos = null;
			this.buffer_tcoords = null;
			this.buffer_colors = null;
			this.buffer_normals = null;
		}
		this.dropped = true;
	}
	,add: function(v) {
		this.vertices.push(v);
	}
	,remove: function(v) {
		HxOverrides.remove(this.vertices,v);
	}
	,batch_object_space: function(vert_index,tcoord_index,color_index,normal_index,vertlist,tcoordlist,colorlist,normallist) {
		var _g = 0;
		var _g1 = this.vertices;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			var _vpos = v.pos;
			var _vuv = v.uv.uv0;
			var _vcol = v.color;
			vertlist[vert_index] = _vpos.x;
			vertlist[vert_index + 1] = _vpos.y;
			vertlist[vert_index + 2] = _vpos.z;
			vertlist[vert_index + 3] = _vpos.w;
			vert_index += 4;
			tcoordlist[tcoord_index] = _vuv.u;
			tcoordlist[tcoord_index + 1] = _vuv.v;
			tcoordlist[tcoord_index + 2] = _vuv.w;
			tcoordlist[tcoord_index + 3] = _vuv.t;
			tcoord_index += 4;
			colorlist[color_index] = _vcol.r;
			colorlist[color_index + 1] = _vcol.g;
			colorlist[color_index + 2] = _vcol.b;
			colorlist[color_index + 3] = _vcol.a;
			color_index += 4;
			normal_index += 4;
		}
	}
	,batch_into_arrays: function(vertlist,tcoordlist,colorlist,normallist) {
		var _g = 0;
		var _g1 = this.vertices;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			var _this = this._final_vert_position;
			var _x = v.pos.x;
			var _y = v.pos.y;
			var _z = v.pos.z;
			var prev = _this.ignore_listeners;
			_this.ignore_listeners = true;
			_this.x = _x;
			if(_this._construct) _this.x; else {
				if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_x);
				_this.x;
			}
			_this.y = _y;
			if(_this._construct) _this.y; else {
				if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_y);
				_this.y;
			}
			_this.z = _z;
			if(_this._construct) _this.z; else {
				if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_z);
				_this.z;
			}
			_this.w = v.pos.w;
			_this.ignore_listeners = prev;
			if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_this.x);
			if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_this.y);
			if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_this.z);
			_this;
			var _this1 = this._final_vert_position;
			var _m = this.transform.get_world().get_matrix();
			var _x1 = _this1.x;
			var _y1 = _this1.y;
			var _z1 = _this1.z;
			var e = _m.elements;
			var _x2 = e[0] * _x1 + e[4] * _y1 + e[8] * _z1 + e[12];
			var _y2 = e[1] * _x1 + e[5] * _y1 + e[9] * _z1 + e[13];
			var _z2 = e[2] * _x1 + e[6] * _y1 + e[10] * _z1 + e[14];
			var prev1 = _this1.ignore_listeners;
			_this1.ignore_listeners = true;
			_this1.x = _x2;
			if(_this1._construct) _this1.x; else {
				if(_this1.listen_x != null && !_this1.ignore_listeners) _this1.listen_x(_x2);
				_this1.x;
			}
			_this1.y = _y2;
			if(_this1._construct) _this1.y; else {
				if(_this1.listen_y != null && !_this1.ignore_listeners) _this1.listen_y(_y2);
				_this1.y;
			}
			_this1.z = _z2;
			if(_this1._construct) _this1.z; else {
				if(_this1.listen_z != null && !_this1.ignore_listeners) _this1.listen_z(_z2);
				_this1.z;
			}
			_this1.ignore_listeners = prev1;
			if(_this1.listen_x != null && !_this1.ignore_listeners) _this1.listen_x(_this1.x);
			if(_this1.listen_y != null && !_this1.ignore_listeners) _this1.listen_y(_this1.y);
			if(_this1.listen_z != null && !_this1.ignore_listeners) _this1.listen_z(_this1.z);
			_this1;
			_this1;
			vertlist.push(this._final_vert_position.x);
			vertlist.push(this._final_vert_position.y);
			vertlist.push(this._final_vert_position.z);
			vertlist.push(this._final_vert_position.w);
			tcoordlist.push(v.uv.uv0.u);
			tcoordlist.push(v.uv.uv0.v);
			tcoordlist.push(v.uv.uv0.w);
			tcoordlist.push(v.uv.uv0.t);
			colorlist.push(v.color.r);
			colorlist.push(v.color.g);
			colorlist.push(v.color.b);
			colorlist.push(v.color.a);
		}
	}
	,destroy_vbos: function() {
		if(this.vb_pos == null) return;
		snow_modules_opengl_web_GL.gl.deleteBuffer(this.vb_pos);
		snow_modules_opengl_web_GL.gl.deleteBuffer(this.vb_tcoords);
		snow_modules_opengl_web_GL.gl.deleteBuffer(this.vb_colors);
	}
	,create_vbos: function() {
		if(this.vb_pos != null) return;
		this.vb_pos = snow_modules_opengl_web_GL.gl.createBuffer();
		this.vb_tcoords = snow_modules_opengl_web_GL.gl.createBuffer();
		this.vb_colors = snow_modules_opengl_web_GL.gl.createBuffer();
		this.set_dirty(true);
	}
	,bind: function() {
		snow_modules_opengl_web_GL.gl.bindBuffer(34962,this.vb_pos);
		snow_modules_opengl_web_GL.gl.vertexAttribPointer(0,4,5126,false,0,0);
		snow_modules_opengl_web_GL.gl.bindBuffer(34962,this.vb_tcoords);
		snow_modules_opengl_web_GL.gl.vertexAttribPointer(1,4,5126,false,0,0);
		snow_modules_opengl_web_GL.gl.bindBuffer(34962,this.vb_colors);
		snow_modules_opengl_web_GL.gl.vertexAttribPointer(2,4,5126,false,0,0);
	}
	,bind_pos: function() {
		snow_modules_opengl_web_GL.gl.bindBuffer(34962,this.vb_pos);
		snow_modules_opengl_web_GL.gl.vertexAttribPointer(0,4,5126,false,0,0);
	}
	,bind_tcoords: function() {
		snow_modules_opengl_web_GL.gl.bindBuffer(34962,this.vb_tcoords);
		snow_modules_opengl_web_GL.gl.vertexAttribPointer(1,4,5126,false,0,0);
	}
	,bind_colors: function() {
		snow_modules_opengl_web_GL.gl.bindBuffer(34962,this.vb_colors);
		snow_modules_opengl_web_GL.gl.vertexAttribPointer(2,4,5126,false,0,0);
	}
	,unbind: function() {
		snow_modules_opengl_web_GL.gl.bindBuffer(34962,null);
	}
	,bind_and_upload: function() {
		snow_modules_opengl_web_GL.gl.bindBuffer(34962,this.vb_pos);
		snow_modules_opengl_web_GL.gl.vertexAttribPointer(0,4,5126,false,0,0);
		snow_modules_opengl_web_GL.gl.bufferData(34962,this.buffer_pos,this.buffer_type);
		snow_modules_opengl_web_GL.gl.bindBuffer(34962,this.vb_tcoords);
		snow_modules_opengl_web_GL.gl.vertexAttribPointer(1,4,5126,false,0,0);
		snow_modules_opengl_web_GL.gl.bufferData(34962,this.buffer_tcoords,this.buffer_type);
		snow_modules_opengl_web_GL.gl.bindBuffer(34962,this.vb_colors);
		snow_modules_opengl_web_GL.gl.vertexAttribPointer(2,4,5126,false,0,0);
		snow_modules_opengl_web_GL.gl.bufferData(34962,this.buffer_colors,this.buffer_type);
	}
	,update_buffers: function() {
		if(!this.dirty && this.dirty_based) return false;
		var _verts = this.vertices.length;
		if(_verts != this._prev_count || this.buffer_pos == null) {
			var _length = this.vertices.length * 4;
			this.buffer_pos = null;
			this.buffer_normals = null;
			this.buffer_colors = null;
			this.buffer_tcoords = null;
			this.buffer_pos = new Float32Array(_length);
			this.buffer_tcoords = new Float32Array(_length);
			this.buffer_colors = new Float32Array(_length);
		}
		if(this.object_space) this.batch_object_space(0,0,0,0,this.buffer_pos,this.buffer_tcoords,this.buffer_colors,this.buffer_normals); else {
			var vert_index = 0;
			var tcoord_index = 0;
			var color_index = 0;
			var normal_index = 0;
			var vertlist = this.buffer_pos;
			var tcoordlist = this.buffer_tcoords;
			var colorlist = this.buffer_colors;
			var _mat = this.transform.get_world().get_matrix();
			var _el = _mat.elements;
			var _count = this.vertices.length;
			var _idx = 0;
			while(_idx < _count) {
				var v = this.vertices[_idx];
				var _vx = v.pos.x;
				var _vy = v.pos.y;
				var _vz = v.pos.z;
				var _tvx = _el[0] * _vx + _el[4] * _vy + _el[8] * _vz + _el[12];
				var _tvy = _el[1] * _vx + _el[5] * _vy + _el[9] * _vz + _el[13];
				var _tvz = _el[2] * _vx + _el[6] * _vy + _el[10] * _vz + _el[14];
				vertlist[vert_index] = _tvx;
				vertlist[vert_index + 1] = _tvy;
				vertlist[vert_index + 2] = _tvz;
				vertlist[vert_index + 3] = v.pos.w;
				vert_index += 4;
				var _vuv = v.uv.uv0;
				tcoordlist[tcoord_index] = _vuv.u;
				tcoordlist[tcoord_index + 1] = _vuv.v;
				tcoordlist[tcoord_index + 2] = _vuv.w;
				tcoordlist[tcoord_index + 3] = _vuv.t;
				tcoord_index += 4;
				colorlist[color_index] = v.color.r;
				colorlist[color_index + 1] = v.color.g;
				colorlist[color_index + 2] = v.color.b;
				colorlist[color_index + 3] = v.color.a;
				color_index += 4;
				normal_index += 4;
				_idx++;
			}
		}
		this.set_dirty(false);
		return true;
	}
	,draw: function() {
		snow_modules_opengl_web_GL.gl.drawArrays(this.state.primitive_type,0,this.buffer_pos.length / 4 | 0);
	}
	,translate: function(_offset) {
		var _this = this.transform.local.pos;
		var _x = this.transform.local.pos.x + _offset.x;
		var _y = this.transform.local.pos.y + _offset.y;
		var _z = this.transform.local.pos.x + _offset.z;
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = _x;
		if(_this._construct) _this.x; else {
			if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_x);
			_this.x;
		}
		_this.y = _y;
		if(_this._construct) _this.y; else {
			if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_y);
			_this.y;
		}
		_this.z = _z;
		if(_this._construct) _this.z; else {
			if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_z);
			_this.z;
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_this.x);
		if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_this.y);
		if(_this.listen_z != null && !_this.ignore_listeners) _this.listen_z(_this.z);
		_this;
	}
	,set_locked: function(_locked) {
		if(_locked) this.buffer_type = 35044; else this.buffer_type = 35048;
		if(_locked && this.vb_pos == null) {
			if(this.vb_pos != null) null; else {
				this.vb_pos = snow_modules_opengl_web_GL.gl.createBuffer();
				this.vb_tcoords = snow_modules_opengl_web_GL.gl.createBuffer();
				this.vb_colors = snow_modules_opengl_web_GL.gl.createBuffer();
				this.set_dirty(true);
			}
		}
		if(!_locked && this.vb_pos != null) this.destroy_vbos();
		return this.locked = _locked;
	}
	,get_locked: function() {
		return this.locked;
	}
	,set_dirty: function(_dirty) {
		return this.dirty = _dirty;
	}
	,get_dirty: function() {
		return this.dirty;
	}
	,refresh: function() {
		var _g = 0;
		var _g1 = this.batchers;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			b.remove(this,false);
		}
		if(this.dirty_primitive_type) {
			this.dirty_primitive_type = false;
			this.state.set_primitive_type(this.shadow_primitive_type);
		}
		if(this.dirty_texture) {
			this.dirty_texture = false;
			this.state.set_texture(this.shadow_texture);
		}
		if(this.dirty_shader) {
			this.dirty_shader = false;
			this.state.set_shader(this.shadow_shader);
		}
		if(this.dirty_depth) {
			this.dirty_depth = false;
			this.state.depth = this.shadow_depth;
		}
		if(this.dirty_clip) {
			this.dirty_clip = false;
			this.state.set_clip(this.shadow_clip);
		}
		if(this.dirty_blend) {
			this.dirty_blend = false;
			this.state.set_blend_src_alpha(this.shadow_blend_src_alpha);
			this.state.set_blend_src_rgb(this.shadow_blend_src_rgb);
			this.state.set_blend_dest_alpha(this.shadow_blend_dest_alpha);
			this.state.set_blend_dest_rgb(this.shadow_blend_dest_rgb);
		}
		this.refresh_key();
		var _g2 = 0;
		var _g11 = this.batchers;
		while(_g2 < _g11.length) {
			var b1 = _g11[_g2];
			++_g2;
			b1.add(this,false);
		}
	}
	,get_primitive_type: function() {
		return this.state.primitive_type;
	}
	,set_primitive_type: function(val) {
		if(this.state.primitive_type != val) {
			this.shadow_primitive_type = val;
			this.dirty_primitive_type = true;
			this.refresh();
		}
		return this.primitive_type = val;
	}
	,get_texture: function() {
		return this.state.texture;
	}
	,set_texture: function(val) {
		if(this.state.texture != val) {
			this.shadow_texture = val;
			this.dirty_texture = true;
			this.refresh();
		}
		return this.texture = val;
	}
	,set_visible: function(val) {
		return this.visible = val;
	}
	,set_color: function(val) {
		if(this.vertices != null && this.vertices.length > 0) {
			var _g = 0;
			var _g1 = this.vertices;
			while(_g < _g1.length) {
				var v = _g1[_g];
				++_g;
				v.color = val;
			}
		}
		return this.color = val;
	}
	,get_shader: function() {
		return this.state.shader;
	}
	,set_shader: function(val) {
		if(this.state.shader != val) {
			this.shadow_shader = val;
			this.dirty_shader = true;
			this.refresh();
		}
		return this.shader = val;
	}
	,get_depth: function() {
		return this.state.depth;
	}
	,set_depth: function(val) {
		if(this.state.depth != val) {
			this.shadow_depth = val;
			this.dirty_depth = true;
			this.refresh();
		}
		return this.depth = val;
	}
	,get_blend_src_alpha: function() {
		return this.state.blend_src_alpha;
	}
	,get_blend_src_rgb: function() {
		return this.state.blend_src_rgb;
	}
	,get_blend_dest_alpha: function() {
		return this.state.blend_dest_alpha;
	}
	,get_blend_dest_rgb: function() {
		return this.state.blend_dest_rgb;
	}
	,set_blend_src_alpha: function(val) {
		this.state.ignore_blend = false;
		if(this.state.blend_src_alpha != val) {
			this.shadow_blend_src_alpha = val;
			this.dirty_blend = true;
			this.refresh();
		}
		return this.blend_src_alpha = val;
	}
	,set_blend_src_rgb: function(val) {
		this.state.ignore_blend = false;
		if(this.state.blend_src_rgb != val) {
			this.shadow_blend_src_rgb = val;
			this.dirty_blend = true;
			this.refresh();
		}
		return this.blend_src_rgb = val;
	}
	,set_blend_dest_alpha: function(val) {
		this.state.ignore_blend = false;
		if(this.state.blend_dest_alpha != val) {
			this.shadow_blend_dest_alpha = val;
			this.dirty_blend = true;
			this.refresh();
		}
		return this.blend_dest_alpha = val;
	}
	,set_blend_dest_rgb: function(val) {
		this.state.ignore_blend = false;
		if(this.state.blend_dest_rgb != val) {
			this.shadow_blend_dest_rgb = val;
			this.dirty_blend = true;
			this.refresh();
		}
		return this.blend_dest_rgb = val;
	}
	,get_clip: function() {
		return this.state.clip;
	}
	,set_clip: function(val) {
		if(this.state.clip != val) {
			this.shadow_clip = val;
			this.dirty_clip = true;
			this.refresh();
		}
		return this.clip = val;
	}
	,get_clip_rect: function() {
		return this.clip_rect;
	}
	,set_clip_rect: function(val) {
		if(val == null) this.set_clip(false); else {
			this.set_clip(true);
			this.state.set_clip_x(val.x);
			this.state.set_clip_y(val.y);
			this.state.set_clip_w(val.w);
			this.state.set_clip_h(val.h);
		}
		return this.clip_rect = val;
	}
	,__class__: phoenix_geometry_Geometry
	,__properties__: {set_clip:"set_clip",get_clip:"get_clip",set_color:"set_color",set_dirty:"set_dirty",get_dirty:"get_dirty",set_locked:"set_locked",get_locked:"get_locked",set_visible:"set_visible",set_blend_dest_rgb:"set_blend_dest_rgb",get_blend_dest_rgb:"get_blend_dest_rgb",set_blend_dest_alpha:"set_blend_dest_alpha",get_blend_dest_alpha:"get_blend_dest_alpha",set_blend_src_rgb:"set_blend_src_rgb",get_blend_src_rgb:"get_blend_src_rgb",set_blend_src_alpha:"set_blend_src_alpha",get_blend_src_alpha:"get_blend_src_alpha",set_clip_rect:"set_clip_rect",get_clip_rect:"get_clip_rect",set_depth:"set_depth",get_depth:"get_depth",set_shader:"set_shader",get_shader:"get_shader",set_texture:"set_texture",get_texture:"get_texture",set_primitive_type:"set_primitive_type",get_primitive_type:"get_primitive_type"}
};
var phoenix_geometry_RingGeometry = function(_options) {
	_options.primitive_type = 1;
	phoenix_geometry_Geometry.call(this,_options);
	var _radius_x = 32.0;
	var _radius_y = 32.0;
	if(_options.end_angle == null) _options.end_angle = 360;
	_options.end_angle;
	if(_options.start_angle == null) _options.start_angle = 0;
	_options.start_angle;
	if(_options.r != null) {
		_radius_x = _options.r;
		_radius_y = _options.r;
	}
	if(_options.rx != null) _radius_x = _options.rx;
	if(_options.ry != null) _radius_y = _options.ry;
	if(_options.steps == null) {
		if(_options.smooth == null) {
			var _max = Math.max(_radius_x,_radius_y);
			_options.steps = Luxe.utils.geometry.segments_for_smooth_circle(_max);
		} else {
			var _smooth = _options.smooth;
			var _max1 = Math.max(_radius_x,_radius_y);
			_options.steps = Luxe.utils.geometry.segments_for_smooth_circle(_max1,_smooth);
		}
	}
	this.set(_options.x,_options.y,_radius_x,_radius_y,_options.steps,_options.start_angle,_options.end_angle);
};
$hxClasses["phoenix.geometry.RingGeometry"] = phoenix_geometry_RingGeometry;
phoenix_geometry_RingGeometry.__name__ = ["phoenix","geometry","RingGeometry"];
phoenix_geometry_RingGeometry.__super__ = phoenix_geometry_Geometry;
phoenix_geometry_RingGeometry.prototype = $extend(phoenix_geometry_Geometry.prototype,{
	set: function(_x,_y,_rx,_ry,_steps,_start_angle_degrees,_end_angle_degrees) {
		if(_end_angle_degrees == null) _end_angle_degrees = 360;
		if(_start_angle_degrees == null) _start_angle_degrees = 0;
		if(Math.abs(_start_angle_degrees) > 360) _start_angle_degrees %= 360;
		if(Math.abs(_end_angle_degrees) > 360) _end_angle_degrees %= 360;
		var _start_angle_rad = _start_angle_degrees * 0.017453292519943278;
		var _end_angle_rad = _end_angle_degrees * 0.017453292519943278;
		var _range = _end_angle_rad - _start_angle_rad;
		var theta = _range / _steps;
		var tangential_factor = Math.tan(theta);
		var radial_factor = Math.cos(theta);
		var x = _rx * Math.cos(_start_angle_rad);
		var y = _rx * Math.sin(_start_angle_rad);
		var radial_ratio = _rx / _ry;
		if(radial_ratio == 0) radial_ratio = 0.000000001;
		var _index = 0;
		var _segment_pos = [];
		var _g = 0;
		while(_g < _steps) {
			var i = _g++;
			var __x = x;
			var __y = y / radial_ratio;
			var _seg = new phoenix_Vector(__x,__y);
			_segment_pos.push(_seg);
			this.add(new phoenix_geometry_Vertex(_seg,this.color));
			if(_index > 0) {
				var prevvert = _segment_pos[_index];
				this.add(new phoenix_geometry_Vertex(new phoenix_Vector(prevvert.x,prevvert.y,prevvert.z,prevvert.w),this.color));
			}
			var tx = -y;
			var ty = x;
			x += tx * tangential_factor;
			y += ty * tangential_factor;
			x *= radial_factor;
			y *= radial_factor;
			_index++;
		}
		if(_segment_pos.length > 0) this.add(new phoenix_geometry_Vertex((function($this) {
			var $r;
			var _this = _segment_pos[0];
			$r = new phoenix_Vector(_this.x,_this.y,_this.z,_this.w);
			return $r;
		}(this)),this.color));
		this.transform.set_pos(new phoenix_Vector(_x,_y));
	}
	,__class__: phoenix_geometry_RingGeometry
});
var phoenix_geometry_ArcGeometry = function(_options) {
	phoenix_geometry_RingGeometry.call(this,_options);
	this.vertices.pop();
	this.vertices.pop();
};
$hxClasses["phoenix.geometry.ArcGeometry"] = phoenix_geometry_ArcGeometry;
phoenix_geometry_ArcGeometry.__name__ = ["phoenix","geometry","ArcGeometry"];
phoenix_geometry_ArcGeometry.__super__ = phoenix_geometry_RingGeometry;
phoenix_geometry_ArcGeometry.prototype = $extend(phoenix_geometry_RingGeometry.prototype,{
	__class__: phoenix_geometry_ArcGeometry
});
var phoenix_geometry_CircleGeometry = function(_options) {
	_options.primitive_type = 4;
	phoenix_geometry_Geometry.call(this,_options);
	var _radius_x = 32.0;
	var _radius_y = 32.0;
	if(_options.end_angle == null) _options.end_angle = 360;
	_options.end_angle;
	if(_options.start_angle == null) _options.start_angle = 0;
	_options.start_angle;
	if(_options.r != null) {
		_radius_x = _options.r;
		_radius_y = _options.r;
	}
	if(_options.rx != null) _radius_x = _options.rx;
	if(_options.ry != null) _radius_y = _options.ry;
	if(_options.steps == null) {
		if(_options.smooth == null) {
			var _max = Math.max(_radius_x,_radius_y);
			_options.steps = Luxe.utils.geometry.segments_for_smooth_circle(_max);
		} else {
			var _smooth = _options.smooth;
			var _max1 = Math.max(_radius_x,_radius_y);
			_options.steps = Luxe.utils.geometry.segments_for_smooth_circle(_max1,_smooth);
		}
	}
	this.set(_options.x,_options.y,_radius_x,_radius_y,_options.steps,_options.start_angle,_options.end_angle);
};
$hxClasses["phoenix.geometry.CircleGeometry"] = phoenix_geometry_CircleGeometry;
phoenix_geometry_CircleGeometry.__name__ = ["phoenix","geometry","CircleGeometry"];
phoenix_geometry_CircleGeometry.__super__ = phoenix_geometry_Geometry;
phoenix_geometry_CircleGeometry.prototype = $extend(phoenix_geometry_Geometry.prototype,{
	set: function(_x,_y,_rx,_ry,_steps,_start_angle,_end_angle) {
		if(_end_angle == null) _end_angle = 360;
		if(_start_angle == null) _start_angle = 0;
		var half_pi = Math.PI / 2;
		var _start_angle_rad = _start_angle * 0.017453292519943278 - half_pi;
		var _end_angle_rad = _end_angle * 0.017453292519943278 - half_pi;
		var _range = _end_angle_rad - _start_angle_rad;
		_steps = Math.ceil(Math.abs(_range) / (Math.PI * 2) * _steps);
		var theta = _range / _steps;
		var tangential_factor = Math.tan(theta);
		var radial_factor = Math.cos(theta);
		var x = _rx * Math.cos(_start_angle_rad);
		var y = _rx * Math.sin(_start_angle_rad);
		var radial_ratio = _rx / _ry;
		if(radial_ratio == 0) radial_ratio = 0.000000001;
		var _index = 0;
		var _segment_pos = [];
		var _g1 = 0;
		var _g = _steps + 1;
		while(_g1 < _g) {
			var i = _g1++;
			var __x = x;
			var __y = y / radial_ratio;
			var _seg = new phoenix_Vector(__x,__y);
			_segment_pos.push(_seg);
			if(_index > 0) this.add(new phoenix_geometry_Vertex(_seg,this.color));
			this.add(new phoenix_geometry_Vertex(new phoenix_Vector(0,0),this.color));
			this.add(new phoenix_geometry_Vertex(_seg,this.color));
			var tx = -y;
			var ty = x;
			x += tx * tangential_factor;
			y += ty * tangential_factor;
			x *= radial_factor;
			y *= radial_factor;
			_index++;
		}
		this.add(new phoenix_geometry_Vertex(_segment_pos[_steps],this.color));
		this.transform.set_pos(new phoenix_Vector(_x,_y));
	}
	,__class__: phoenix_geometry_CircleGeometry
});
var phoenix_geometry_GeometryKey = function() {
	this.blend_dest_rgb = 0;
	this.blend_dest_alpha = 0;
	this.blend_src_rgb = 0;
	this.blend_src_alpha = 0;
	this.clip = false;
	this.depth = 0;
	this.uuid = "";
	this.sequence = 0;
	this.timestamp = 0;
};
$hxClasses["phoenix.geometry.GeometryKey"] = phoenix_geometry_GeometryKey;
phoenix_geometry_GeometryKey.__name__ = ["phoenix","geometry","GeometryKey"];
phoenix_geometry_GeometryKey.prototype = {
	__class__: phoenix_geometry_GeometryKey
};
var phoenix_geometry_GeometryState = function() {
	this.blend_dest_rgb = 771;
	this.blend_dest_alpha = 771;
	this.blend_src_rgb = 770;
	this.blend_src_alpha = 770;
	this.clip_h = 0;
	this.clip_w = 0;
	this.clip_y = 0;
	this.clip_x = 0;
	this.clip = false;
	this.depth = 0.0;
	this.ignore_blend = true;
	this.log = false;
	this.dirty = false;
	this.dirty = true;
	this.texture = null;
	this.dirty = true;
	this.shader = null;
	this.dirty = true;
	this.primitive_type = 0;
};
$hxClasses["phoenix.geometry.GeometryState"] = phoenix_geometry_GeometryState;
phoenix_geometry_GeometryState.__name__ = ["phoenix","geometry","GeometryState"];
phoenix_geometry_GeometryState.prototype = {
	clone_onto: function(_other) {
		_other.dirty = this.dirty;
		_other.dirty = true;
		_other.texture = this.texture;
		_other.dirty = true;
		_other.shader = this.shader;
		_other.depth = this.depth;
		_other.dirty = true;
		_other.primitive_type = this.primitive_type;
		_other.dirty = true;
		_other.clip = this.clip;
		_other.dirty = true;
		_other.clip_x = this.clip_x;
		_other.dirty = true;
		_other.clip_y = this.clip_y;
		_other.dirty = true;
		_other.clip_w = this.clip_w;
		_other.dirty = true;
		_other.clip_h = this.clip_h;
		_other.dirty = true;
		_other.blend_src_alpha = this.blend_src_alpha;
		_other.dirty = true;
		_other.blend_src_rgb = this.blend_src_rgb;
		_other.dirty = true;
		_other.blend_dest_alpha = this.blend_dest_alpha;
		_other.dirty = true;
		_other.blend_dest_rgb = this.blend_dest_rgb;
		_other.ignore_blend = this.ignore_blend;
	}
	,str: function() {
		if(!this.log) return;
		haxe_Log.trace("\t+ GEOMETRYSTATE " + Std.string(this.dirty),{ fileName : "GeometryState.hx", lineNumber : 65, className : "phoenix.geometry.GeometryState", methodName : "str"});
		haxe_Log.trace("\t\tdepth - " + this.depth,{ fileName : "GeometryState.hx", lineNumber : 66, className : "phoenix.geometry.GeometryState", methodName : "str"});
		haxe_Log.trace("\t\ttexture - " + (this.texture == null?"null":this.texture.id),{ fileName : "GeometryState.hx", lineNumber : 67, className : "phoenix.geometry.GeometryState", methodName : "str"});
		if(this.texture != null) haxe_Log.trace("\t\t\t " + Std.string(this.texture.texture),{ fileName : "GeometryState.hx", lineNumber : 69, className : "phoenix.geometry.GeometryState", methodName : "str"});
		haxe_Log.trace("\t\tshader - " + (this.shader == null?"null":this.shader.id),{ fileName : "GeometryState.hx", lineNumber : 71, className : "phoenix.geometry.GeometryState", methodName : "str"});
		haxe_Log.trace("\t\tprimitive_type - " + this.primitive_type,{ fileName : "GeometryState.hx", lineNumber : 72, className : "phoenix.geometry.GeometryState", methodName : "str"});
		haxe_Log.trace("\t\tclip - " + Std.string(this.clip),{ fileName : "GeometryState.hx", lineNumber : 73, className : "phoenix.geometry.GeometryState", methodName : "str"});
		haxe_Log.trace("\t\tclip rect - " + this.clip_x + "," + this.clip_y + "," + this.clip_w + "," + this.clip_h,{ fileName : "GeometryState.hx", lineNumber : 74, className : "phoenix.geometry.GeometryState", methodName : "str"});
		haxe_Log.trace("\t\tblend - src_alpha(" + this.blend_src_alpha + ") src_rgb(" + this.blend_src_rgb + ") dest_alpha(" + this.blend_dest_alpha + ") dest_rgb(" + this.blend_dest_rgb + ")",{ fileName : "GeometryState.hx", lineNumber : 75, className : "phoenix.geometry.GeometryState", methodName : "str"});
		haxe_Log.trace("\t- GEOMETRYSTATE",{ fileName : "GeometryState.hx", lineNumber : 76, className : "phoenix.geometry.GeometryState", methodName : "str"});
	}
	,clean: function() {
		this.dirty = false;
	}
	,set_primitive_type: function(val) {
		this.dirty = true;
		return this.primitive_type = val;
	}
	,set_texture: function(val) {
		this.dirty = true;
		return this.texture = val;
	}
	,set_shader: function(val) {
		this.dirty = true;
		return this.shader = val;
	}
	,set_depth: function(val) {
		return this.depth = val;
	}
	,set_clip: function(val) {
		this.dirty = true;
		return this.clip = val;
	}
	,set_clip_x: function(val) {
		this.dirty = true;
		return this.clip_x = val;
	}
	,set_clip_y: function(val) {
		this.dirty = true;
		return this.clip_y = val;
	}
	,set_clip_w: function(val) {
		this.dirty = true;
		return this.clip_w = val;
	}
	,set_clip_h: function(val) {
		this.dirty = true;
		return this.clip_h = val;
	}
	,set_blend_src_alpha: function(val) {
		this.dirty = true;
		return this.blend_src_alpha = val;
	}
	,set_blend_src_rgb: function(val) {
		this.dirty = true;
		return this.blend_src_rgb = val;
	}
	,set_blend_dest_alpha: function(val) {
		this.dirty = true;
		return this.blend_dest_alpha = val;
	}
	,set_blend_dest_rgb: function(val) {
		this.dirty = true;
		return this.blend_dest_rgb = val;
	}
	,__class__: phoenix_geometry_GeometryState
	,__properties__: {set_blend_dest_rgb:"set_blend_dest_rgb",set_blend_dest_alpha:"set_blend_dest_alpha",set_blend_src_rgb:"set_blend_src_rgb",set_blend_src_alpha:"set_blend_src_alpha",set_clip_h:"set_clip_h",set_clip_w:"set_clip_w",set_clip_y:"set_clip_y",set_clip_x:"set_clip_x",set_clip:"set_clip",set_depth:"set_depth",set_texture:"set_texture",set_shader:"set_shader",set_primitive_type:"set_primitive_type"}
};
var phoenix_geometry_LineGeometry = function(_options) {
	_options.primitive_type = 1;
	phoenix_geometry_Geometry.call(this,_options);
	if(_options.color == null) _options.color = new phoenix_Color();
	_options.color;
	if(_options.color0 == null) _options.color0 = _options.color;
	_options.color0;
	if(_options.color1 == null) _options.color1 = _options.color;
	_options.color1;
	this.set_p0((function($this) {
		var $r;
		if(_options.p0 == null) _options.p0 = new phoenix_Vector();
		$r = _options.p0;
		return $r;
	}(this)));
	this.set_p1((function($this) {
		var $r;
		if(_options.p1 == null) _options.p1 = new phoenix_Vector(64,64);
		$r = _options.p1;
		return $r;
	}(this)));
	this.add(new phoenix_geometry_Vertex(this.p0,_options.color0));
	this.add(new phoenix_geometry_Vertex(this.p1,_options.color1));
};
$hxClasses["phoenix.geometry.LineGeometry"] = phoenix_geometry_LineGeometry;
phoenix_geometry_LineGeometry.__name__ = ["phoenix","geometry","LineGeometry"];
phoenix_geometry_LineGeometry.__super__ = phoenix_geometry_Geometry;
phoenix_geometry_LineGeometry.prototype = $extend(phoenix_geometry_Geometry.prototype,{
	set_p0: function(_p) {
		this.p0 = _p;
		if(this.vertices.length == 0) return this.p0;
		this.vertices[0].pos = this.p0;
		return this.p0 = _p;
	}
	,set_p1: function(_p) {
		this.p1 = _p;
		if(this.vertices.length == 0) return this.p1;
		this.vertices[1].pos = this.p1;
		return this.p1 = _p;
	}
	,set_color0: function(_c) {
		this.color0 = _c;
		if(this.vertices.length == 0) return this.color0;
		this.vertices[0].color = this.color0;
		return this.color0;
	}
	,set_color1: function(_c) {
		this.color1 = _c;
		if(this.vertices.length == 0) return this.color1;
		this.vertices[1].color = this.color1;
		return this.color1;
	}
	,__class__: phoenix_geometry_LineGeometry
	,__properties__: $extend(phoenix_geometry_Geometry.prototype.__properties__,{set_color1:"set_color1",set_color0:"set_color0",set_p1:"set_p1",set_p0:"set_p0"})
});
var phoenix_geometry_QuadGeometry = function(_options) {
	this._uv_h = 1;
	this._uv_w = 1;
	this._uv_y = 0;
	this._uv_x = 0;
	this.uv_angle = 0;
	this.flipy = false;
	this.flipx = false;
	_options.primitive_type = 4;
	phoenix_geometry_Geometry.call(this,_options);
	if(_options.flipx != null) this.set_flipx(_options.flipx);
	if(_options.flipy != null) this.set_flipy(_options.flipy);
	var _x = _options.x;
	var _y = _options.y;
	var _w = _options.w;
	var _h = _options.h;
	if(_options.rect != null) {
		_x = _options.rect.x;
		_y = _options.rect.y;
		_w = _options.rect.w;
		_h = _options.rect.h;
	}
	this.add(new phoenix_geometry_Vertex(new phoenix_Vector(0,0),this.color));
	this.add(new phoenix_geometry_Vertex(new phoenix_Vector(_w,0),this.color));
	this.add(new phoenix_geometry_Vertex(new phoenix_Vector(_w,_h),this.color));
	this.add(new phoenix_geometry_Vertex(new phoenix_Vector(0,_h),this.color));
	this.add(new phoenix_geometry_Vertex(new phoenix_Vector(0,0),this.color));
	this.add(new phoenix_geometry_Vertex(new phoenix_Vector(_w,_h),this.color));
	this.transform.set_pos((function($this) {
		var $r;
		var _this = $this.transform.local.pos;
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		{
			_this.x = _x;
			if(_this._construct) _this.x; else {
				if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_x);
				_this.x;
			}
		}
		{
			_this.y = _y;
			if(_this._construct) _this.y; else {
				if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_y);
				_this.y;
			}
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_this.x);
		if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_this.y);
		$r = _this;
		return $r;
	}(this)));
	if(_options.uv != null) this.uv(_options.uv); else this.uv_space(0,0,1,1);
};
$hxClasses["phoenix.geometry.QuadGeometry"] = phoenix_geometry_QuadGeometry;
phoenix_geometry_QuadGeometry.__name__ = ["phoenix","geometry","QuadGeometry"];
phoenix_geometry_QuadGeometry.__super__ = phoenix_geometry_Geometry;
phoenix_geometry_QuadGeometry.prototype = $extend(phoenix_geometry_Geometry.prototype,{
	uv: function(_rect) {
		if(this.state.texture == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("texture was null" + (" ( " + "QuadGeometry; Calling UV on a geometry with null texture." + " )")));
		var tlx = _rect.x / this.state.texture.width_actual;
		var tly = _rect.y / this.state.texture.height_actual;
		var szx = _rect.w / this.state.texture.width_actual;
		var szy = _rect.h / this.state.texture.height_actual;
		this.uv_space(tlx,tly,szx,szy);
	}
	,uv_space: function(_rect_x,_rect_y,_rect_w,_rect_h) {
		if(this.vertices.length == 0) return;
		var sz_x = _rect_w;
		var sz_y = _rect_h;
		var tl_x = _rect_x;
		var tl_y = _rect_y;
		this._uv_x = tl_x;
		this._uv_y = tl_y;
		this._uv_w = sz_x;
		this._uv_h = sz_y;
		var tr_x = tl_x + sz_x;
		var tr_y = tl_y;
		var br_x = tl_x + sz_x;
		var br_y = tl_y + sz_y;
		var bl_x = tl_x;
		var bl_y = tl_y + sz_y;
		var tmp_x = 0.0;
		var tmp_y = 0.0;
		var rotations = this.uv_angle / 90 | 0;
		rotations = rotations - 4 * Math.floor(rotations / 4);
		var _g = 0;
		while(_g < rotations) {
			var r = _g++;
			tmp_x = tl_x;
			tl_x = bl_x;
			bl_x = br_x;
			br_x = tr_x;
			tr_x = tmp_x;
			tmp_y = tl_y;
			tl_y = bl_y;
			bl_y = br_y;
			br_y = tr_y;
			tr_y = tmp_y;
		}
		if(this.flipy) {
			tmp_y = bl_y;
			bl_y = tl_y;
			tl_y = tmp_y;
			tmp_x = bl_x;
			bl_x = tl_x;
			tl_x = tmp_x;
			tmp_y = br_y;
			br_y = tr_y;
			tr_y = tmp_y;
			tmp_x = br_x;
			br_x = tr_x;
			tr_x = tmp_x;
		}
		if(this.flipx) {
			tmp_x = tr_x;
			tr_x = tl_x;
			tl_x = tmp_x;
			tmp_y = tr_y;
			tr_y = tl_y;
			tl_y = tmp_y;
			tmp_x = br_x;
			br_x = bl_x;
			bl_x = tmp_x;
			tmp_y = br_y;
			br_y = bl_y;
			bl_y = tmp_y;
		}
		this.vertices[0].uv.uv0.set_uv(tl_x,tl_y);
		this.vertices[1].uv.uv0.set_uv(tr_x,tr_y);
		this.vertices[2].uv.uv0.set_uv(br_x,br_y);
		this.vertices[3].uv.uv0.set_uv(bl_x,bl_y);
		this.vertices[4].uv.uv0.set_uv(tl_x,tl_y);
		this.vertices[5].uv.uv0.set_uv(br_x,br_y);
		this.set_dirty(true);
	}
	,resize_xy: function(_x,_y) {
		if(this.vertices.length == 0) return;
		var _this = this.vertices[0].pos;
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = 0;
		if(_this._construct) _this.x; else {
			if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(0);
			_this.x;
		}
		_this.y = 0;
		if(_this._construct) _this.y; else {
			if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(0);
			_this.y;
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_this.x);
		if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_this.y);
		_this;
		var _this1 = this.vertices[1].pos;
		var prev1 = _this1.ignore_listeners;
		_this1.ignore_listeners = true;
		_this1.x = _x;
		if(_this1._construct) _this1.x; else {
			if(_this1.listen_x != null && !_this1.ignore_listeners) _this1.listen_x(_x);
			_this1.x;
		}
		_this1.y = 0;
		if(_this1._construct) _this1.y; else {
			if(_this1.listen_y != null && !_this1.ignore_listeners) _this1.listen_y(0);
			_this1.y;
		}
		_this1.ignore_listeners = prev1;
		if(_this1.listen_x != null && !_this1.ignore_listeners) _this1.listen_x(_this1.x);
		if(_this1.listen_y != null && !_this1.ignore_listeners) _this1.listen_y(_this1.y);
		_this1;
		var _this2 = this.vertices[2].pos;
		var prev2 = _this2.ignore_listeners;
		_this2.ignore_listeners = true;
		_this2.x = _x;
		if(_this2._construct) _this2.x; else {
			if(_this2.listen_x != null && !_this2.ignore_listeners) _this2.listen_x(_x);
			_this2.x;
		}
		_this2.y = _y;
		if(_this2._construct) _this2.y; else {
			if(_this2.listen_y != null && !_this2.ignore_listeners) _this2.listen_y(_y);
			_this2.y;
		}
		_this2.ignore_listeners = prev2;
		if(_this2.listen_x != null && !_this2.ignore_listeners) _this2.listen_x(_this2.x);
		if(_this2.listen_y != null && !_this2.ignore_listeners) _this2.listen_y(_this2.y);
		_this2;
		var _this3 = this.vertices[3].pos;
		var prev3 = _this3.ignore_listeners;
		_this3.ignore_listeners = true;
		_this3.x = 0;
		if(_this3._construct) _this3.x; else {
			if(_this3.listen_x != null && !_this3.ignore_listeners) _this3.listen_x(0);
			_this3.x;
		}
		_this3.y = _y;
		if(_this3._construct) _this3.y; else {
			if(_this3.listen_y != null && !_this3.ignore_listeners) _this3.listen_y(_y);
			_this3.y;
		}
		_this3.ignore_listeners = prev3;
		if(_this3.listen_x != null && !_this3.ignore_listeners) _this3.listen_x(_this3.x);
		if(_this3.listen_y != null && !_this3.ignore_listeners) _this3.listen_y(_this3.y);
		_this3;
		var _this4 = this.vertices[4].pos;
		var prev4 = _this4.ignore_listeners;
		_this4.ignore_listeners = true;
		_this4.x = 0;
		if(_this4._construct) _this4.x; else {
			if(_this4.listen_x != null && !_this4.ignore_listeners) _this4.listen_x(0);
			_this4.x;
		}
		_this4.y = 0;
		if(_this4._construct) _this4.y; else {
			if(_this4.listen_y != null && !_this4.ignore_listeners) _this4.listen_y(0);
			_this4.y;
		}
		_this4.ignore_listeners = prev4;
		if(_this4.listen_x != null && !_this4.ignore_listeners) _this4.listen_x(_this4.x);
		if(_this4.listen_y != null && !_this4.ignore_listeners) _this4.listen_y(_this4.y);
		_this4;
		var _this5 = this.vertices[5].pos;
		var prev5 = _this5.ignore_listeners;
		_this5.ignore_listeners = true;
		_this5.x = _x;
		if(_this5._construct) _this5.x; else {
			if(_this5.listen_x != null && !_this5.ignore_listeners) _this5.listen_x(_x);
			_this5.x;
		}
		_this5.y = _y;
		if(_this5._construct) _this5.y; else {
			if(_this5.listen_y != null && !_this5.ignore_listeners) _this5.listen_y(_y);
			_this5.y;
		}
		_this5.ignore_listeners = prev5;
		if(_this5.listen_x != null && !_this5.ignore_listeners) _this5.listen_x(_this5.x);
		if(_this5.listen_y != null && !_this5.ignore_listeners) _this5.listen_y(_this5.y);
		_this5;
	}
	,resize: function(quad) {
		this.resize_xy(quad.x,quad.y);
	}
	,set: function(quad) {
		this.set_xywh(quad.x,quad.y,quad.w,quad.h);
	}
	,set_xywh: function(_x,_y,_w,_h) {
		if(this.vertices.length == 0) return;
		var _this = this.vertices[0].pos;
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = 0;
		if(_this._construct) _this.x; else {
			if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(0);
			_this.x;
		}
		_this.y = 0;
		if(_this._construct) _this.y; else {
			if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(0);
			_this.y;
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_this.x);
		if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_this.y);
		_this;
		var _this1 = this.vertices[1].pos;
		var prev1 = _this1.ignore_listeners;
		_this1.ignore_listeners = true;
		_this1.x = _w;
		if(_this1._construct) _this1.x; else {
			if(_this1.listen_x != null && !_this1.ignore_listeners) _this1.listen_x(_w);
			_this1.x;
		}
		_this1.y = 0;
		if(_this1._construct) _this1.y; else {
			if(_this1.listen_y != null && !_this1.ignore_listeners) _this1.listen_y(0);
			_this1.y;
		}
		_this1.ignore_listeners = prev1;
		if(_this1.listen_x != null && !_this1.ignore_listeners) _this1.listen_x(_this1.x);
		if(_this1.listen_y != null && !_this1.ignore_listeners) _this1.listen_y(_this1.y);
		_this1;
		var _this2 = this.vertices[2].pos;
		var prev2 = _this2.ignore_listeners;
		_this2.ignore_listeners = true;
		_this2.x = _w;
		if(_this2._construct) _this2.x; else {
			if(_this2.listen_x != null && !_this2.ignore_listeners) _this2.listen_x(_w);
			_this2.x;
		}
		_this2.y = _h;
		if(_this2._construct) _this2.y; else {
			if(_this2.listen_y != null && !_this2.ignore_listeners) _this2.listen_y(_h);
			_this2.y;
		}
		_this2.ignore_listeners = prev2;
		if(_this2.listen_x != null && !_this2.ignore_listeners) _this2.listen_x(_this2.x);
		if(_this2.listen_y != null && !_this2.ignore_listeners) _this2.listen_y(_this2.y);
		_this2;
		var _this3 = this.vertices[3].pos;
		var prev3 = _this3.ignore_listeners;
		_this3.ignore_listeners = true;
		_this3.x = 0;
		if(_this3._construct) _this3.x; else {
			if(_this3.listen_x != null && !_this3.ignore_listeners) _this3.listen_x(0);
			_this3.x;
		}
		_this3.y = _h;
		if(_this3._construct) _this3.y; else {
			if(_this3.listen_y != null && !_this3.ignore_listeners) _this3.listen_y(_h);
			_this3.y;
		}
		_this3.ignore_listeners = prev3;
		if(_this3.listen_x != null && !_this3.ignore_listeners) _this3.listen_x(_this3.x);
		if(_this3.listen_y != null && !_this3.ignore_listeners) _this3.listen_y(_this3.y);
		_this3;
		var _this4 = this.vertices[4].pos;
		var prev4 = _this4.ignore_listeners;
		_this4.ignore_listeners = true;
		_this4.x = 0;
		if(_this4._construct) _this4.x; else {
			if(_this4.listen_x != null && !_this4.ignore_listeners) _this4.listen_x(0);
			_this4.x;
		}
		_this4.y = 0;
		if(_this4._construct) _this4.y; else {
			if(_this4.listen_y != null && !_this4.ignore_listeners) _this4.listen_y(0);
			_this4.y;
		}
		_this4.ignore_listeners = prev4;
		if(_this4.listen_x != null && !_this4.ignore_listeners) _this4.listen_x(_this4.x);
		if(_this4.listen_y != null && !_this4.ignore_listeners) _this4.listen_y(_this4.y);
		_this4;
		var _this5 = this.vertices[5].pos;
		var prev5 = _this5.ignore_listeners;
		_this5.ignore_listeners = true;
		_this5.x = _w;
		if(_this5._construct) _this5.x; else {
			if(_this5.listen_x != null && !_this5.ignore_listeners) _this5.listen_x(_w);
			_this5.x;
		}
		_this5.y = _h;
		if(_this5._construct) _this5.y; else {
			if(_this5.listen_y != null && !_this5.ignore_listeners) _this5.listen_y(_h);
			_this5.y;
		}
		_this5.ignore_listeners = prev5;
		if(_this5.listen_x != null && !_this5.ignore_listeners) _this5.listen_x(_this5.x);
		if(_this5.listen_y != null && !_this5.ignore_listeners) _this5.listen_y(_this5.y);
		_this5;
		this.transform.set_pos((function($this) {
			var $r;
			var _this6 = $this.transform.local.pos;
			var prev6 = _this6.ignore_listeners;
			_this6.ignore_listeners = true;
			{
				_this6.x = _x;
				if(_this6._construct) _this6.x; else {
					if(_this6.listen_x != null && !_this6.ignore_listeners) _this6.listen_x(_x);
					_this6.x;
				}
			}
			{
				_this6.y = _y;
				if(_this6._construct) _this6.y; else {
					if(_this6.listen_y != null && !_this6.ignore_listeners) _this6.listen_y(_y);
					_this6.y;
				}
			}
			_this6.ignore_listeners = prev6;
			if(_this6.listen_x != null && !_this6.ignore_listeners) _this6.listen_x(_this6.x);
			if(_this6.listen_y != null && !_this6.ignore_listeners) _this6.listen_y(_this6.y);
			$r = _this6;
			return $r;
		}(this)));
	}
	,set_flipx: function(_val) {
		this.flipx = _val;
		this.uv_space(this._uv_x,this._uv_y,this._uv_w,this._uv_h);
		return this.flipx;
	}
	,set_flipy: function(_val) {
		this.flipy = _val;
		this.uv_space(this._uv_x,this._uv_y,this._uv_w,this._uv_h);
		return this.flipy;
	}
	,set_uv_angle: function(_val) {
		if(!(_val % 90 == 0)) throw new js__$Boot_HaxeError(luxe_DebugError.assertion("_val % 90 == 0" + (" ( " + "uv_angle has to be a multiple of 90" + " )")));
		this.uv_angle = _val;
		this.uv_space(this._uv_x,this._uv_y,this._uv_w,this._uv_h);
		return this.uv_angle;
	}
	,__class__: phoenix_geometry_QuadGeometry
	,__properties__: $extend(phoenix_geometry_Geometry.prototype.__properties__,{set_uv_angle:"set_uv_angle",set_flipy:"set_flipy",set_flipx:"set_flipx"})
});
var phoenix_geometry_QuadPackGeometry = function(_options) {
	_options.primitive_type = 4;
	phoenix_geometry_Geometry.call(this,_options);
	this.quads = new haxe_ds_IntMap();
};
$hxClasses["phoenix.geometry.QuadPackGeometry"] = phoenix_geometry_QuadPackGeometry;
phoenix_geometry_QuadPackGeometry.__name__ = ["phoenix","geometry","QuadPackGeometry"];
phoenix_geometry_QuadPackGeometry.__super__ = phoenix_geometry_Geometry;
phoenix_geometry_QuadPackGeometry.prototype = $extend(phoenix_geometry_Geometry.prototype,{
	clear: function() {
		var $it0 = this.quads.keys();
		while( $it0.hasNext() ) {
			var q = $it0.next();
			this.quad_remove(q);
		}
	}
	,quad_add: function(_options) {
		if(_options.visible == null) _options.visible = true;
		_options.visible;
		if(_options.flipx == null) _options.flipx = false;
		_options.flipx;
		if(_options.flipy == null) _options.flipy = false;
		_options.flipy;
		var _uid = Luxe.utils.uniquehash();
		var vert0 = new phoenix_geometry_Vertex(new phoenix_Vector(_options.x,_options.y),_options.color);
		var vert1 = new phoenix_geometry_Vertex(new phoenix_Vector(_options.x + _options.w,_options.y),_options.color);
		var vert2 = new phoenix_geometry_Vertex(new phoenix_Vector(_options.x + _options.w,_options.y + _options.h),_options.color);
		var vert3 = new phoenix_geometry_Vertex(new phoenix_Vector(_options.x,_options.y + _options.h),_options.color);
		var vert4 = new phoenix_geometry_Vertex(new phoenix_Vector(_options.x,_options.y),_options.color);
		var vert5 = new phoenix_geometry_Vertex(new phoenix_Vector(_options.x + _options.w,_options.y + _options.h),_options.color);
		this.add(vert0);
		this.add(vert1);
		this.add(vert2);
		this.add(vert3);
		this.add(vert4);
		this.add(vert5);
		var _quad = { uid : _uid, verts : [], flipx : _options.flipx, flipy : _options.flipx, visible : _options.visible, _uv_cache : new phoenix_Rectangle(0,0,1,1)};
		_quad.verts.push(vert0);
		_quad.verts.push(vert1);
		_quad.verts.push(vert2);
		_quad.verts.push(vert3);
		_quad.verts.push(vert4);
		_quad.verts.push(vert5);
		this.quads.h[_uid] = _quad;
		if(_options.uv != null) this.quad_uv(_uid,_options.uv);
		this.set_dirty(true);
		return _uid;
	}
	,quad_remove: function(_quad_id) {
		var _quad = this.quads.h[_quad_id];
		if(_quad != null) {
			this.remove(_quad.verts[0]);
			this.remove(_quad.verts[1]);
			this.remove(_quad.verts[2]);
			this.remove(_quad.verts[3]);
			this.remove(_quad.verts[4]);
			this.remove(_quad.verts[5]);
			this.quads.remove(_quad_id);
			this.set_dirty(true);
		}
	}
	,quad_visible: function(_quad_id,visible) {
		var _quad = this.quads.h[_quad_id];
		if(_quad != null) {
			if(visible && !_quad.visible) {
				_quad.visible = false;
				this.add(_quad.verts[0]);
				this.add(_quad.verts[1]);
				this.add(_quad.verts[2]);
				this.add(_quad.verts[3]);
				this.add(_quad.verts[4]);
				this.add(_quad.verts[5]);
			} else if(!visible && _quad.visible) {
				_quad.visible = false;
				this.remove(_quad.verts[0]);
				this.remove(_quad.verts[1]);
				this.remove(_quad.verts[2]);
				this.remove(_quad.verts[3]);
				this.remove(_quad.verts[4]);
				this.remove(_quad.verts[5]);
			}
			this.set_dirty(true);
		}
	}
	,quad_resize: function(_quad_id,_size) {
		var _quad = this.quads.h[_quad_id];
		if(_quad != null) {
			_quad.verts[0].pos = new phoenix_Vector(_size.x,_size.y);
			_quad.verts[1].pos = new phoenix_Vector(_size.x + _size.w,_size.y);
			_quad.verts[2].pos = new phoenix_Vector(_size.x + _size.w,_size.y + _size.h);
			_quad.verts[3].pos = new phoenix_Vector(_size.x,_size.y + _size.h);
			_quad.verts[4].pos = new phoenix_Vector(_size.x,_size.y);
			_quad.verts[5].pos = new phoenix_Vector(_size.x + _size.w,_size.y + _size.h);
			this.set_dirty(true);
		}
	}
	,quad_pos: function(_quad_id,_p) {
		var _quad = this.quads.h[_quad_id];
		if(_quad != null) {
			var _diffx = _p.x - _quad.verts[0].pos.x;
			var _diffy = _p.y - _quad.verts[0].pos.y;
			var _g = _quad.verts[0].pos;
			_g.set_x(_g.x + _diffx);
			var _g1 = _quad.verts[0].pos;
			_g1.set_y(_g1.y + _diffy);
			var _g2 = _quad.verts[1].pos;
			_g2.set_x(_g2.x + _diffx);
			var _g3 = _quad.verts[1].pos;
			_g3.set_y(_g3.y + _diffy);
			var _g4 = _quad.verts[2].pos;
			_g4.set_x(_g4.x + _diffx);
			var _g5 = _quad.verts[2].pos;
			_g5.set_y(_g5.y + _diffy);
			var _g6 = _quad.verts[3].pos;
			_g6.set_x(_g6.x + _diffx);
			var _g7 = _quad.verts[3].pos;
			_g7.set_y(_g7.y + _diffy);
			var _g8 = _quad.verts[4].pos;
			_g8.set_x(_g8.x + _diffx);
			var _g9 = _quad.verts[4].pos;
			_g9.set_y(_g9.y + _diffy);
			var _g10 = _quad.verts[5].pos;
			_g10.set_x(_g10.x + _diffx);
			var _g11 = _quad.verts[5].pos;
			_g11.set_y(_g11.y + _diffy);
			this.set_dirty(true);
		}
	}
	,quad_color: function(_quad_id,_c) {
		var _quad = this.quads.h[_quad_id];
		if(_quad != null) {
			_quad.verts[0].color = _c;
			_quad.verts[1].color = _c;
			_quad.verts[2].color = _c;
			_quad.verts[3].color = _c;
			_quad.verts[4].color = _c;
			_quad.verts[5].color = _c;
		}
	}
	,quad_alpha: function(_quad_id,_a) {
		var _quad = this.quads.h[_quad_id];
		if(_quad != null) {
			_quad.verts[0].color.a = _a;
			_quad.verts[1].color.a = _a;
			_quad.verts[2].color.a = _a;
			_quad.verts[3].color.a = _a;
			_quad.verts[4].color.a = _a;
			_quad.verts[5].color.a = _a;
		}
	}
	,quad_uv_space: function(_quad_id,_uv) {
		var _quad = this.quads.h[_quad_id];
		if(_quad != null) {
			var flipx = _quad.flipx;
			var flipy = _quad.flipy;
			var sz_x = _uv.w;
			var sz_y = _uv.h;
			var tl_x = _uv.x;
			var tl_y = _uv.y;
			_quad._uv_cache.set(tl_x,tl_y,sz_x,sz_y);
			var tr_x = tl_x + sz_x;
			var tr_y = tl_y;
			var br_x = tl_x + sz_x;
			var br_y = tl_y + sz_y;
			var bl_x = tl_x;
			var bl_y = tl_y + sz_y;
			var tmp_x = 0.0;
			var tmp_y = 0.0;
			if(flipy) {
				tmp_y = bl_y;
				bl_y = tl_y;
				tl_y = tmp_y;
				tmp_y = br_y;
				br_y = tr_y;
				tr_y = tmp_y;
			}
			if(flipx) {
				tmp_x = tr_x;
				tr_x = tl_x;
				tl_x = tmp_x;
				tmp_x = br_x;
				br_x = bl_x;
				bl_x = tmp_x;
			}
			_quad.verts[0].uv.uv0.set_uv(tl_x,tl_y);
			_quad.verts[1].uv.uv0.set_uv(tr_x,tr_y);
			_quad.verts[2].uv.uv0.set_uv(br_x,br_y);
			_quad.verts[3].uv.uv0.set_uv(bl_x,bl_y);
			_quad.verts[4].uv.uv0.set_uv(tl_x,tl_y);
			_quad.verts[5].uv.uv0.set_uv(br_x,br_y);
			this.set_dirty(true);
		}
	}
	,quad_uv: function(_quad_id,_uv) {
		if(this.state.texture == null) {
			haxe_Log.trace("Warning : calling UV on a PackedQuad Geometry with null texture.",{ fileName : "QuadPackGeometry.hx", lineNumber : 352, className : "phoenix.geometry.QuadPackGeometry", methodName : "quad_uv"});
			return;
		}
		var tlx = _uv.x / this.state.texture.width_actual;
		var tly = _uv.y / this.state.texture.height_actual;
		var szx = _uv.w / this.state.texture.width_actual;
		var szy = _uv.h / this.state.texture.height_actual;
		this.quad_uv_space(_quad_id,new phoenix_Rectangle(tlx,tly,szx,szy));
	}
	,quad_flipx: function(_quad_id,_flip) {
		var _quad = this.quads.h[_quad_id];
		if(_quad != null) {
			_quad.flipx = _flip;
			this.quad_uv_space(_quad_id,_quad._uv_cache);
		}
	}
	,quad_flipy: function(_quad_id,_flip) {
		var _quad = this.quads.h[_quad_id];
		if(_quad != null) {
			_quad.flipy = _flip;
			this.quad_uv_space(_quad_id,_quad._uv_cache);
		}
	}
	,__class__: phoenix_geometry_QuadPackGeometry
});
var phoenix_geometry_RectangleGeometry = function(_options) {
	_options.primitive_type = 1;
	phoenix_geometry_Geometry.call(this,_options);
	var _x = _options.x;
	var _y = _options.y;
	var _w = _options.w;
	var _h = _options.h;
	if(_options.rect != null) {
		_x = _options.rect.x;
		_y = _options.rect.y;
		_w = _options.rect.w;
		_h = _options.rect.h;
	}
	this.add(new phoenix_geometry_Vertex(new phoenix_Vector(0,0),this.color));
	this.add(new phoenix_geometry_Vertex(new phoenix_Vector(_w,0),this.color));
	this.add(new phoenix_geometry_Vertex(new phoenix_Vector(_w,0),this.color));
	this.add(new phoenix_geometry_Vertex(new phoenix_Vector(_w,_h),this.color));
	this.add(new phoenix_geometry_Vertex(new phoenix_Vector(_w,_h),this.color));
	this.add(new phoenix_geometry_Vertex(new phoenix_Vector(0,_h),this.color));
	this.add(new phoenix_geometry_Vertex(new phoenix_Vector(0,_h),this.color));
	this.add(new phoenix_geometry_Vertex(new phoenix_Vector(0,0),this.color));
	this.transform.set_pos((function($this) {
		var $r;
		var _this = $this.transform.local.pos;
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		{
			_this.x = _x;
			if(_this._construct) _this.x; else {
				if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_x);
				_this.x;
			}
		}
		{
			_this.y = _y;
			if(_this._construct) _this.y; else {
				if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_y);
				_this.y;
			}
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_this.x);
		if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_this.y);
		$r = _this;
		return $r;
	}(this)));
};
$hxClasses["phoenix.geometry.RectangleGeometry"] = phoenix_geometry_RectangleGeometry;
phoenix_geometry_RectangleGeometry.__name__ = ["phoenix","geometry","RectangleGeometry"];
phoenix_geometry_RectangleGeometry.__super__ = phoenix_geometry_Geometry;
phoenix_geometry_RectangleGeometry.prototype = $extend(phoenix_geometry_Geometry.prototype,{
	set_xywh: function(_x,_y,_w,_h) {
		if(this.vertices.length == 0) return;
		var _this = this.vertices[0].pos;
		var prev = _this.ignore_listeners;
		_this.ignore_listeners = true;
		_this.x = 0;
		if(_this._construct) _this.x; else {
			if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(0);
			_this.x;
		}
		_this.y = 0;
		if(_this._construct) _this.y; else {
			if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(0);
			_this.y;
		}
		_this.ignore_listeners = prev;
		if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_this.x);
		if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_this.y);
		_this;
		var _this1 = this.vertices[1].pos;
		var prev1 = _this1.ignore_listeners;
		_this1.ignore_listeners = true;
		_this1.x = _w;
		if(_this1._construct) _this1.x; else {
			if(_this1.listen_x != null && !_this1.ignore_listeners) _this1.listen_x(_w);
			_this1.x;
		}
		_this1.y = 0;
		if(_this1._construct) _this1.y; else {
			if(_this1.listen_y != null && !_this1.ignore_listeners) _this1.listen_y(0);
			_this1.y;
		}
		_this1.ignore_listeners = prev1;
		if(_this1.listen_x != null && !_this1.ignore_listeners) _this1.listen_x(_this1.x);
		if(_this1.listen_y != null && !_this1.ignore_listeners) _this1.listen_y(_this1.y);
		_this1;
		var _this2 = this.vertices[2].pos;
		var prev2 = _this2.ignore_listeners;
		_this2.ignore_listeners = true;
		_this2.x = _w;
		if(_this2._construct) _this2.x; else {
			if(_this2.listen_x != null && !_this2.ignore_listeners) _this2.listen_x(_w);
			_this2.x;
		}
		_this2.y = 0;
		if(_this2._construct) _this2.y; else {
			if(_this2.listen_y != null && !_this2.ignore_listeners) _this2.listen_y(0);
			_this2.y;
		}
		_this2.ignore_listeners = prev2;
		if(_this2.listen_x != null && !_this2.ignore_listeners) _this2.listen_x(_this2.x);
		if(_this2.listen_y != null && !_this2.ignore_listeners) _this2.listen_y(_this2.y);
		_this2;
		var _this3 = this.vertices[3].pos;
		var prev3 = _this3.ignore_listeners;
		_this3.ignore_listeners = true;
		_this3.x = _w;
		if(_this3._construct) _this3.x; else {
			if(_this3.listen_x != null && !_this3.ignore_listeners) _this3.listen_x(_w);
			_this3.x;
		}
		_this3.y = _h;
		if(_this3._construct) _this3.y; else {
			if(_this3.listen_y != null && !_this3.ignore_listeners) _this3.listen_y(_h);
			_this3.y;
		}
		_this3.ignore_listeners = prev3;
		if(_this3.listen_x != null && !_this3.ignore_listeners) _this3.listen_x(_this3.x);
		if(_this3.listen_y != null && !_this3.ignore_listeners) _this3.listen_y(_this3.y);
		_this3;
		var _this4 = this.vertices[4].pos;
		var prev4 = _this4.ignore_listeners;
		_this4.ignore_listeners = true;
		_this4.x = _w;
		if(_this4._construct) _this4.x; else {
			if(_this4.listen_x != null && !_this4.ignore_listeners) _this4.listen_x(_w);
			_this4.x;
		}
		_this4.y = _h;
		if(_this4._construct) _this4.y; else {
			if(_this4.listen_y != null && !_this4.ignore_listeners) _this4.listen_y(_h);
			_this4.y;
		}
		_this4.ignore_listeners = prev4;
		if(_this4.listen_x != null && !_this4.ignore_listeners) _this4.listen_x(_this4.x);
		if(_this4.listen_y != null && !_this4.ignore_listeners) _this4.listen_y(_this4.y);
		_this4;
		var _this5 = this.vertices[5].pos;
		var prev5 = _this5.ignore_listeners;
		_this5.ignore_listeners = true;
		_this5.x = 0;
		if(_this5._construct) _this5.x; else {
			if(_this5.listen_x != null && !_this5.ignore_listeners) _this5.listen_x(0);
			_this5.x;
		}
		_this5.y = _h;
		if(_this5._construct) _this5.y; else {
			if(_this5.listen_y != null && !_this5.ignore_listeners) _this5.listen_y(_h);
			_this5.y;
		}
		_this5.ignore_listeners = prev5;
		if(_this5.listen_x != null && !_this5.ignore_listeners) _this5.listen_x(_this5.x);
		if(_this5.listen_y != null && !_this5.ignore_listeners) _this5.listen_y(_this5.y);
		_this5;
		var _this6 = this.vertices[6].pos;
		var prev6 = _this6.ignore_listeners;
		_this6.ignore_listeners = true;
		_this6.x = 0;
		if(_this6._construct) _this6.x; else {
			if(_this6.listen_x != null && !_this6.ignore_listeners) _this6.listen_x(0);
			_this6.x;
		}
		_this6.y = _h;
		if(_this6._construct) _this6.y; else {
			if(_this6.listen_y != null && !_this6.ignore_listeners) _this6.listen_y(_h);
			_this6.y;
		}
		_this6.ignore_listeners = prev6;
		if(_this6.listen_x != null && !_this6.ignore_listeners) _this6.listen_x(_this6.x);
		if(_this6.listen_y != null && !_this6.ignore_listeners) _this6.listen_y(_this6.y);
		_this6;
		var _this7 = this.vertices[7].pos;
		var prev7 = _this7.ignore_listeners;
		_this7.ignore_listeners = true;
		_this7.x = 0;
		if(_this7._construct) _this7.x; else {
			if(_this7.listen_x != null && !_this7.ignore_listeners) _this7.listen_x(0);
			_this7.x;
		}
		_this7.y = 0;
		if(_this7._construct) _this7.y; else {
			if(_this7.listen_y != null && !_this7.ignore_listeners) _this7.listen_y(0);
			_this7.y;
		}
		_this7.ignore_listeners = prev7;
		if(_this7.listen_x != null && !_this7.ignore_listeners) _this7.listen_x(_this7.x);
		if(_this7.listen_y != null && !_this7.ignore_listeners) _this7.listen_y(_this7.y);
		_this7;
		this.transform.set_pos((function($this) {
			var $r;
			var _this8 = $this.transform.local.pos;
			var prev8 = _this8.ignore_listeners;
			_this8.ignore_listeners = true;
			{
				_this8.x = _x;
				if(_this8._construct) _this8.x; else {
					if(_this8.listen_x != null && !_this8.ignore_listeners) _this8.listen_x(_x);
					_this8.x;
				}
			}
			{
				_this8.y = _y;
				if(_this8._construct) _this8.y; else {
					if(_this8.listen_y != null && !_this8.ignore_listeners) _this8.listen_y(_y);
					_this8.y;
				}
			}
			_this8.ignore_listeners = prev8;
			if(_this8.listen_x != null && !_this8.ignore_listeners) _this8.listen_x(_this8.x);
			if(_this8.listen_y != null && !_this8.ignore_listeners) _this8.listen_y(_this8.y);
			$r = _this8;
			return $r;
		}(this)));
	}
	,set: function(_rect) {
		this.set_xywh(_rect.x,_rect.y,_rect.w,_rect.h);
	}
	,__class__: phoenix_geometry_RectangleGeometry
});
var phoenix_geometry_TextGeometry = function(_options) {
	this.setup_ = true;
	this.dirty_align = true;
	this.dirty_sizing = true;
	this.point_ratio = 1;
	this.text_h_h = 0;
	this.text_h_w = 0;
	this.text_height = 0;
	this.text_width = 0;
	this.glow_amount = 0;
	this.glow_threshold = 0;
	this.outline = 0;
	this.thickness = 0.5;
	this.smoothness = 0.75;
	this.unique = false;
	this.sdf = false;
	this.bounds_wrap = false;
	this.letter_snapping = false;
	this.letter_spacing = 0.0;
	this.line_spacing = 0.0;
	this.point_size = 32.0;
	this.text = "";
	this.options = _options;
	this.emitter = new luxe_Emitter();
	if(this.options == null) throw new js__$Boot_HaxeError(luxe_DebugError.null_assertion("options was null" + (" ( " + "TextGeometry requires non-null options" + " )")));
	if(this.options.sdf != null) this.sdf = this.options.sdf;
	this.set_font((function($this) {
		var $r;
		if($this.options.font == null) $this.options.font = Luxe.renderer.font;
		$r = $this.options.font;
		return $r;
	}(this)));
	if(this.font == Luxe.renderer.font) this.sdf = true;
	if(this.options.shader == null) {
		if(this.sdf) this.options.shader = Luxe.renderer.shaders.bitmapfont.shader; else this.options.shader = Luxe.renderer.shaders.textured.shader;
	} else if(this.options.shader != Luxe.renderer.shaders.bitmapfont.shader) this.unique = true;
	this.options.primitive_type = 4;
	phoenix_geometry_Geometry.call(this,this.options);
	this.cache = [];
	this.line_widths = [];
	this.line_offsets = [[],[]];
	this.lines = [];
	this.set_outline_color(new phoenix_Color());
	this.set_glow_color(new phoenix_Color());
	this.default_options();
	this.setup_ = false;
};
$hxClasses["phoenix.geometry.TextGeometry"] = phoenix_geometry_TextGeometry;
phoenix_geometry_TextGeometry.__name__ = ["phoenix","geometry","TextGeometry"];
phoenix_geometry_TextGeometry.__super__ = phoenix_geometry_Geometry;
phoenix_geometry_TextGeometry.prototype = $extend(phoenix_geometry_Geometry.prototype,{
	tidy: function() {
		var _vertidx = Math.floor(this.vertices.length / 6);
		var _diff = this.cache.length - _vertidx;
		if(_diff > 0) {
			var extra = this.cache.splice(_vertidx,_diff);
			var c = extra.length;
			while(c > 0) {
				c--;
				var vert = extra.pop();
				vert = null;
			}
		}
	}
	,drop: function(remove) {
		if(remove == null) remove = true;
		this.set_text(null);
		this.set_font(null);
		this.set_bounds(null);
		this.set_outline_color(null);
		this.set_glow_color(null);
		if(this.line_widths != null) {
			this.line_widths.splice(0,this.line_widths.length);
			this.line_widths = null;
		}
		if(this.line_offsets != null) {
			this.line_offsets.splice(0,this.line_offsets.length);
			this.line_offsets = null;
		}
		if(this.lines != null) {
			this.lines.splice(0,this.lines.length);
			this.lines = null;
		}
		this.emitter = null;
		this.options = null;
		if(this.cache != null) {
			while(this.cache.length > 0) {
				var c = this.cache.pop();
				while(c.length > 0) {
					var v = c.pop();
					v.pos = null;
					v.color = null;
					v.normal = null;
					v.uv.destroy();
					v.uv = null;
					v = null;
				}
				c = null;
			}
			this.cache = null;
		}
		phoenix_geometry_Geometry.prototype.drop.call(this,remove);
	}
	,default_options: function() {
		this.set_texture(this.font.pages.h[0]);
		if(this.options.letter_snapping != null) this.set_letter_snapping(this.options.letter_snapping);
		if(this.options.letter_spacing != null) this.set_letter_spacing(this.options.letter_spacing);
		if(this.options.line_spacing != null) this.set_line_spacing(this.options.line_spacing);
		if(this.options.point_size != null) this.set_point_size(this.options.point_size);
		if(this.options.bounds != null) this.set_bounds(this.options.bounds);
		if(this.options.bounds_wrap != null) this.set_bounds_wrap(this.options.bounds_wrap);
		if(this.options.align == null) this.options.align = 0;
		this.options.align;
		if(this.options.align_vertical == null) this.options.align_vertical = 3;
		this.options.align_vertical;
		this.set_align(this.options.align);
		this.set_align_vertical(this.options.align_vertical);
		if(this.options.thickness != null) this.set_thickness(this.options.thickness);
		if(this.options.smoothness != null) this.set_smoothness(this.options.smoothness);
		if(this.options.outline != null) this.set_outline(this.options.outline);
		if(this.options.outline_color != null) this.set_outline_color(this.options.outline_color);
		if(this.options.glow_threshold != null) this.set_glow_threshold(this.options.glow_threshold);
		if(this.options.glow_amount != null) this.set_glow_amount(this.options.glow_amount);
		if(this.options.glow_color != null) this.set_glow_color(this.options.glow_color);
		if(this.sdf) this.flush_uniforms();
		if(this.options.text != null) this.set_text(this.options.text);
	}
	,set_text: function(_text) {
		if(_text == null) _text = "";
		if(this.text != _text) {
			this.text = _text;
			if(this.text != "") {
				this.set_dirty_sizing(true);
				this.update_text();
			} else this.vertices.splice(0,this.vertices.length);
		}
		return this.text;
	}
	,stats: function() {
		return "letters:" + this.vertices.length / 6 + " / cache:" + this.cache.length;
	}
	,update_sizes: function() {
		if(!this.dirty_sizing) return false;
		var drawn_text = phoenix_geometry_TextGeometry.tab_regex.replace(this.text,"    ");
		if(this.bounds_wrap && this.bounds != null) drawn_text = this.font.wrap_string_to_bounds(drawn_text,this.bounds,this.point_size,this.letter_spacing);
		this.lines.splice(0,this.lines.length);
		this.lines = drawn_text.split("\n");
		this.line_widths.splice(0,this.line_widths.length);
		this.text_width = this.font.width_of(drawn_text,this.point_size,this.letter_spacing,this.line_widths);
		this.text_height = this.font.height_of_lines(this.lines,this.point_size,this.line_spacing);
		this.text_h_w = this.text_width / 2;
		this.text_h_h = this.text_height / 2;
		this.point_ratio = this.point_size / this.font.info.point_size;
		this.set_dirty_sizing(false);
		return true;
	}
	,update_text: function() {
		var _g = this;
		var _pos_x = 0.0;
		var _pos_y = 0.0;
		var _bounds_based = this.bounds != null;
		if(_bounds_based) {
			this.transform.local.pos.set_x(_pos_x = this.bounds.x);
			this.transform.local.pos.set_y(_pos_y = this.bounds.y);
		}
		var _cur_x = 0.0;
		var _cur_y = 0.0;
		var _line_idx = 0;
		var _total_idx = 0;
		var _is_char = true;
		var _was_dirty = this.update_sizes();
		var _g1 = 0;
		var _g11 = this.lines;
		while(_g1 < _g11.length) {
			var _line = _g11[_g1];
			++_g1;
			var _line_x_offset = 0.0;
			var _line_y_offset = 0.0;
			if(this.dirty_align) {
				if(!_bounds_based) {
					var _g2 = this.align;
					switch(_g2) {
					case 2:
						_line_x_offset = -(this.line_widths[_line_idx] / 2.0);
						break;
					case 1:
						_line_x_offset = -this.line_widths[_line_idx];
						break;
					default:
						_line_x_offset = 0.0;
					}
					var _g21 = this.align_vertical;
					switch(_g21) {
					case 2:
						_line_y_offset = -this.text_h_h;
						break;
					case 4:
						_line_y_offset = -this.text_height;
						break;
					default:
						_line_y_offset = 0.0;
					}
				} else {
					var _g22 = this.align;
					switch(_g22) {
					case 2:
						_line_x_offset = -(this.line_widths[_line_idx] / 2.0) + this.bounds.w / 2;
						break;
					case 1:
						_line_x_offset = -this.line_widths[_line_idx] + this.bounds.w;
						break;
					default:
						_line_x_offset = 0.0;
					}
					var _g23 = this.align_vertical;
					switch(_g23) {
					case 2:
						_line_y_offset = this.bounds.h / 2 - this.text_h_h;
						break;
					case 4:
						_line_y_offset = this.bounds.h - this.text_height;
						break;
					default:
						_line_y_offset = 0.0;
					}
				}
				this.line_offsets[0][_line_idx] = _line_x_offset;
				this.line_offsets[1][_line_idx] = _line_y_offset;
			} else {
				_line_x_offset = this.line_offsets[0][_line_idx];
				_line_y_offset = this.line_offsets[1][_line_idx];
			}
			if(_line_idx != 0) {
				_cur_y += (_g.font.info.line_height + _g.line_spacing) * _g.point_ratio;
				_cur_x = 0;
			}
			var _idx = 0;
			var _g2_i = 0;
			var _g2_string = _line;
			var _g2_index = 0;
			var _g2_endIndex = _line.length;
			while(_g2_index < _g2_endIndex) {
				var _uglyph;
				_g2_i = _g2_index;
				_g2_index += luxe_utils_unifill_InternalEncoding.codePointWidthAt(_g2_string,_g2_index);
				_uglyph = luxe_utils_unifill__$Utf16_Utf16_$Impl_$.codePointAt(_g2_string,_g2_i);
				var _index = _uglyph;
				var _char = this.font.info.chars.h[_index];
				_is_char = _char != null && _index > 32;
				if(!_is_char) _char = this.font.space_char;
				if(_is_char) {
					var _quad_x = _line_x_offset + _cur_x + _char.xoffset * this.point_ratio;
					var _quad_y = _line_y_offset + _cur_y + _char.yoffset * this.point_ratio;
					if(this.letter_snapping) {
						_quad_x = Math.floor(_quad_x);
						_quad_y = Math.floor(_quad_y);
					}
					var _page = this.font.pages.h[_char.page];
					var _u1 = _char.x / _page.width_actual;
					var _v1 = _char.y / _page.height_actual;
					var _u2 = (_char.x + _char.width) / _page.width_actual;
					var _v2 = (_char.y + _char.height) / _page.height_actual;
					this.update_char(_total_idx,_quad_x,_quad_y,_char.width * this.point_ratio,_char.height * this.point_ratio,_u1,_v1,_u2,_v2,this.color);
					_total_idx++;
				}
				var _x_inc = _char.xadvance;
				if(_idx < _line.length - 1) {
					_x_inc += this.font.kerning(_index,luxe_utils_unifill_Unifill.uCharCodeAt(_line,_idx + 1));
					if(_index >= 32) _x_inc += this.letter_spacing;
				}
				_x_inc *= this.point_ratio;
				_cur_x += _x_inc;
				_idx++;
			}
			_line_idx++;
		}
		var _vertidx = this.vertices.length / 6 | 0;
		var _diff = _vertidx - _total_idx;
		if(_diff > 0) this.vertices.splice(_total_idx * 6,_diff * 6);
		this.dirty_align = false;
		this.emitter.emit(1);
	}
	,update_char: function(_letteridx,_x,_y,_w,_h,_u,_v,_u2,_v2,_color) {
		var vert0;
		var vert1;
		var vert2;
		var vert3;
		var vert4;
		var vert5;
		var quad = this.cache[_letteridx];
		if(quad == null) {
			vert0 = new phoenix_geometry_Vertex(new phoenix_Vector(_x,_y),_color);
			vert1 = new phoenix_geometry_Vertex(new phoenix_Vector(_x + _w,_y),_color);
			vert2 = new phoenix_geometry_Vertex(new phoenix_Vector(_x + _w,_y + _h),_color);
			vert3 = new phoenix_geometry_Vertex(new phoenix_Vector(_x,_y + _h),_color);
			vert4 = new phoenix_geometry_Vertex(new phoenix_Vector(_x,_y),_color);
			vert5 = new phoenix_geometry_Vertex(new phoenix_Vector(_x + _w,_y + _h),_color);
			quad = [vert0,vert1,vert2,vert3,vert4,vert5];
			this.cache[_letteridx] = quad;
		} else {
			vert0 = quad[0];
			vert1 = quad[1];
			vert2 = quad[2];
			vert3 = quad[3];
			vert4 = quad[4];
			vert5 = quad[5];
			var _this = vert0.pos;
			var prev = _this.ignore_listeners;
			_this.ignore_listeners = true;
			_this.x = _x;
			if(_this._construct) _this.x; else {
				if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_x);
				_this.x;
			}
			_this.y = _y;
			if(_this._construct) _this.y; else {
				if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_y);
				_this.y;
			}
			_this.ignore_listeners = prev;
			if(_this.listen_x != null && !_this.ignore_listeners) _this.listen_x(_this.x);
			if(_this.listen_y != null && !_this.ignore_listeners) _this.listen_y(_this.y);
			_this;
			var _this1 = vert1.pos;
			var _x1 = _x + _w;
			var prev1 = _this1.ignore_listeners;
			_this1.ignore_listeners = true;
			_this1.x = _x1;
			if(_this1._construct) _this1.x; else {
				if(_this1.listen_x != null && !_this1.ignore_listeners) _this1.listen_x(_x1);
				_this1.x;
			}
			_this1.y = _y;
			if(_this1._construct) _this1.y; else {
				if(_this1.listen_y != null && !_this1.ignore_listeners) _this1.listen_y(_y);
				_this1.y;
			}
			_this1.ignore_listeners = prev1;
			if(_this1.listen_x != null && !_this1.ignore_listeners) _this1.listen_x(_this1.x);
			if(_this1.listen_y != null && !_this1.ignore_listeners) _this1.listen_y(_this1.y);
			_this1;
			var _this2 = vert2.pos;
			var _x2 = _x + _w;
			var _y1 = _y + _h;
			var prev2 = _this2.ignore_listeners;
			_this2.ignore_listeners = true;
			_this2.x = _x2;
			if(_this2._construct) _this2.x; else {
				if(_this2.listen_x != null && !_this2.ignore_listeners) _this2.listen_x(_x2);
				_this2.x;
			}
			_this2.y = _y1;
			if(_this2._construct) _this2.y; else {
				if(_this2.listen_y != null && !_this2.ignore_listeners) _this2.listen_y(_y1);
				_this2.y;
			}
			_this2.ignore_listeners = prev2;
			if(_this2.listen_x != null && !_this2.ignore_listeners) _this2.listen_x(_this2.x);
			if(_this2.listen_y != null && !_this2.ignore_listeners) _this2.listen_y(_this2.y);
			_this2;
			var _this3 = vert3.pos;
			var _y2 = _y + _h;
			var prev3 = _this3.ignore_listeners;
			_this3.ignore_listeners = true;
			_this3.x = _x;
			if(_this3._construct) _this3.x; else {
				if(_this3.listen_x != null && !_this3.ignore_listeners) _this3.listen_x(_x);
				_this3.x;
			}
			_this3.y = _y2;
			if(_this3._construct) _this3.y; else {
				if(_this3.listen_y != null && !_this3.ignore_listeners) _this3.listen_y(_y2);
				_this3.y;
			}
			_this3.ignore_listeners = prev3;
			if(_this3.listen_x != null && !_this3.ignore_listeners) _this3.listen_x(_this3.x);
			if(_this3.listen_y != null && !_this3.ignore_listeners) _this3.listen_y(_this3.y);
			_this3;
			var _this4 = vert4.pos;
			var prev4 = _this4.ignore_listeners;
			_this4.ignore_listeners = true;
			_this4.x = _x;
			if(_this4._construct) _this4.x; else {
				if(_this4.listen_x != null && !_this4.ignore_listeners) _this4.listen_x(_x);
				_this4.x;
			}
			_this4.y = _y;
			if(_this4._construct) _this4.y; else {
				if(_this4.listen_y != null && !_this4.ignore_listeners) _this4.listen_y(_y);
				_this4.y;
			}
			_this4.ignore_listeners = prev4;
			if(_this4.listen_x != null && !_this4.ignore_listeners) _this4.listen_x(_this4.x);
			if(_this4.listen_y != null && !_this4.ignore_listeners) _this4.listen_y(_this4.y);
			_this4;
			var _this5 = vert5.pos;
			var _x3 = _x + _w;
			var _y3 = _y + _h;
			var prev5 = _this5.ignore_listeners;
			_this5.ignore_listeners = true;
			_this5.x = _x3;
			if(_this5._construct) _this5.x; else {
				if(_this5.listen_x != null && !_this5.ignore_listeners) _this5.listen_x(_x3);
				_this5.x;
			}
			_this5.y = _y3;
			if(_this5._construct) _this5.y; else {
				if(_this5.listen_y != null && !_this5.ignore_listeners) _this5.listen_y(_y3);
				_this5.y;
			}
			_this5.ignore_listeners = prev5;
			if(_this5.listen_x != null && !_this5.ignore_listeners) _this5.listen_x(_this5.x);
			if(_this5.listen_y != null && !_this5.ignore_listeners) _this5.listen_y(_this5.y);
			_this5;
		}
		vert0.uv.uv0.set_uv(_u,_v);
		vert1.uv.uv0.set_uv(_u2,_v);
		vert2.uv.uv0.set_uv(_u2,_v2);
		vert3.uv.uv0.set_uv(_u,_v2);
		vert4.uv.uv0.set_uv(_u,_v);
		vert5.uv.uv0.set_uv(_u2,_v2);
		var _vertidx = Math.floor(this.vertices.length / 6);
		if(_vertidx <= _letteridx) {
			this.add(vert0);
			this.add(vert1);
			this.add(vert2);
			this.add(vert3);
			this.add(vert4);
			this.add(vert5);
		}
	}
	,set_dirty_sizing: function(_b) {
		this.dirty_align = true;
		return this.dirty_sizing = _b;
	}
	,set_bounds: function(_bounds) {
		this.bounds = _bounds;
		if(this.bounds == null) return this.bounds;
		this.set_dirty_sizing(true);
		this.update_text();
		return this.bounds;
	}
	,set_bounds_wrap: function(_wrap) {
		this.bounds_wrap = _wrap;
		this.set_dirty_sizing(true);
		this.update_text();
		return this.bounds_wrap;
	}
	,set_letter_snapping: function(_snap) {
		this.letter_snapping = _snap;
		this.set_dirty_sizing(true);
		this.update_text();
		return this.letter_snapping;
	}
	,set_line_spacing: function(_line_spacing) {
		this.line_spacing = _line_spacing;
		this.set_dirty_sizing(true);
		this.update_text();
		return this.line_spacing;
	}
	,set_letter_spacing: function(_letter_spacing) {
		this.letter_spacing = _letter_spacing;
		this.set_dirty_sizing(true);
		this.update_text();
		return this.letter_spacing;
	}
	,set_align: function(_align) {
		this.align = _align;
		this.dirty_align = true;
		this.update_text();
		return this.align;
	}
	,set_align_vertical: function(_align_vertical) {
		this.align_vertical = _align_vertical;
		this.dirty_align = true;
		this.update_text();
		return this.align_vertical;
	}
	,set_point_size: function(s) {
		if(s < 0) s = 0;
		this.point_size = s;
		this.set_dirty_sizing(true);
		this.update_text();
		return this.point_size;
	}
	,set_font: function(_font) {
		this.font = _font;
		if(!this.setup_ && _font != null) {
			this.set_texture(this.font.pages.h[0]);
			this.set_dirty_sizing(true);
			this.dirty_align = true;
			this.update_text();
		}
		return this.font;
	}
	,set_smoothness: function(s) {
		if(s < 0) s = 0;
		if(this.state.shader != null && this.sdf && this.unique) this.state.shader.set_float("smoothness",s);
		return this.smoothness = s;
	}
	,set_thickness: function(s) {
		if(s < 0) s = 0;
		if(this.state.shader != null && this.sdf && this.unique) this.state.shader.set_float("thickness",s);
		return this.thickness = s;
	}
	,set_outline: function(s) {
		if(s < 0.0) s = 0.0; else if(s > 1.0) s = 1.0; else s = s;
		if(this.state.shader != null && this.sdf && this.unique) this.state.shader.set_float("outline",s);
		return this.outline = s;
	}
	,set_glow_threshold: function(s) {
		if(s < 0) s = 0;
		if(this.state.shader != null && this.sdf && this.unique) this.state.shader.set_float("glow_threshold",s);
		return this.glow_threshold = s;
	}
	,set_glow_amount: function(s) {
		if(s < 0) s = 0;
		if(this.state.shader != null && this.sdf && this.unique) this.state.shader.set_float("glow_amount",s);
		return this.glow_amount = s;
	}
	,set_outline_color: function(c) {
		if(c == null) return this.outline_color = c;
		if(this.state.shader != null && this.sdf && this.unique) this.state.shader.set_color("outline_color",c);
		return this.outline_color = c;
	}
	,set_glow_color: function(c) {
		if(c == null) return this.glow_color = c;
		if(this.state.shader != null && this.sdf && this.unique) this.state.shader.set_color("glow_color",c);
		return this.glow_color = c;
	}
	,flush_uniforms: function() {
		if(this.state.shader != null && this.sdf) {
			this.state.shader.set_float("smoothness",this.smoothness);
			this.state.shader.set_float("thickness",this.thickness);
			this.state.shader.set_float("outline",this.outline);
			this.state.shader.set_float("glow_threshold",this.glow_threshold);
			this.state.shader.set_float("glow_amount",this.glow_amount);
			this.state.shader.set_color("outline_color",this.outline_color);
			this.state.shader.set_color("glow_color",this.glow_color);
		}
	}
	,__class__: phoenix_geometry_TextGeometry
	,__properties__: $extend(phoenix_geometry_Geometry.prototype.__properties__,{set_dirty_sizing:"set_dirty_sizing",set_glow_color:"set_glow_color",set_glow_amount:"set_glow_amount",set_glow_threshold:"set_glow_threshold",set_outline_color:"set_outline_color",set_outline:"set_outline",set_thickness:"set_thickness",set_smoothness:"set_smoothness",set_align_vertical:"set_align_vertical",set_align:"set_align",set_bounds_wrap:"set_bounds_wrap",set_bounds:"set_bounds",set_letter_snapping:"set_letter_snapping",set_letter_spacing:"set_letter_spacing",set_line_spacing:"set_line_spacing",set_point_size:"set_point_size",set_font:"set_font",set_text:"set_text"})
});
var phoenix_geometry_TextureCoordSet = function() {
	this.uv0 = new phoenix_geometry_TextureCoord();
	this.uv1 = new phoenix_geometry_TextureCoord();
	this.uv2 = new phoenix_geometry_TextureCoord();
	this.uv3 = new phoenix_geometry_TextureCoord();
	this.uv4 = new phoenix_geometry_TextureCoord();
	this.uv5 = new phoenix_geometry_TextureCoord();
	this.uv6 = new phoenix_geometry_TextureCoord();
	this.uv7 = new phoenix_geometry_TextureCoord();
};
$hxClasses["phoenix.geometry.TextureCoordSet"] = phoenix_geometry_TextureCoordSet;
phoenix_geometry_TextureCoordSet.__name__ = ["phoenix","geometry","TextureCoordSet"];
phoenix_geometry_TextureCoordSet.prototype = {
	clone: function() {
		var _set = new phoenix_geometry_TextureCoordSet();
		_set.uv0.set(this.uv0.u,this.uv0.v,this.uv0.w,this.uv0.t);
		_set.uv1.set(this.uv1.u,this.uv1.v,this.uv1.w,this.uv1.t);
		_set.uv2.set(this.uv2.u,this.uv2.v,this.uv2.w,this.uv2.t);
		_set.uv3.set(this.uv3.u,this.uv3.v,this.uv3.w,this.uv3.t);
		_set.uv4.set(this.uv4.u,this.uv4.v,this.uv4.w,this.uv4.t);
		_set.uv5.set(this.uv5.u,this.uv5.v,this.uv5.w,this.uv5.t);
		_set.uv6.set(this.uv6.u,this.uv6.v,this.uv6.w,this.uv6.t);
		_set.uv7.set(this.uv7.u,this.uv7.v,this.uv7.w,this.uv7.t);
		return _set;
	}
	,destroy: function() {
		this.uv0 = null;
		this.uv1 = null;
		this.uv2 = null;
		this.uv3 = null;
		this.uv4 = null;
		this.uv5 = null;
		this.uv6 = null;
		this.uv7 = null;
	}
	,__class__: phoenix_geometry_TextureCoordSet
};
var phoenix_geometry_TextureCoord = function(_u,_v,_w,_t) {
	if(_t == null) _t = 0.0;
	if(_w == null) _w = 0.0;
	if(_v == null) _v = 0.0;
	if(_u == null) _u = 0.0;
	this.t = 0.0;
	this.w = 0.0;
	this.v = 0.0;
	this.u = 0.0;
	this.u = _u;
	this.v = _v;
	this.w = _w;
	this.t = _t;
};
$hxClasses["phoenix.geometry.TextureCoord"] = phoenix_geometry_TextureCoord;
phoenix_geometry_TextureCoord.__name__ = ["phoenix","geometry","TextureCoord"];
phoenix_geometry_TextureCoord.prototype = {
	clone: function() {
		return new phoenix_geometry_TextureCoord(this.u,this.v,this.w,this.t);
	}
	,set: function(_u,_v,_w,_t) {
		this.u = _u;
		this.v = _v;
		this.w = _w;
		this.t = _t;
		return this;
	}
	,set_uv: function(_u,_v) {
		this.u = _u;
		this.v = _v;
		return this;
	}
	,toString: function() {
		return "{ u:" + this.v + ", v:" + this.v + " }";
	}
	,__class__: phoenix_geometry_TextureCoord
};
var phoenix_geometry_Vertex = function(_pos,_color,_normal) {
	this.uv = new phoenix_geometry_TextureCoordSet();
	this.pos = _pos;
	if(_color == null) this.color = new phoenix_Color(); else this.color = _color;
	if(_normal == null) this.normal = new phoenix_Vector(); else this.normal = _normal;
};
$hxClasses["phoenix.geometry.Vertex"] = phoenix_geometry_Vertex;
phoenix_geometry_Vertex.__name__ = ["phoenix","geometry","Vertex"];
phoenix_geometry_Vertex.prototype = {
	clone: function() {
		var _new = new phoenix_geometry_Vertex((function($this) {
			var $r;
			var _this = $this.pos;
			$r = new phoenix_Vector(_this.x,_this.y,_this.z,_this.w);
			return $r;
		}(this)),this.color.clone(),(function($this) {
			var $r;
			var _this1 = $this.normal;
			$r = new phoenix_Vector(_this1.x,_this1.y,_this1.z,_this1.w);
			return $r;
		}(this)));
		_new.uv = this.uv.clone();
		return _new;
	}
	,destroy: function() {
		this.pos = null;
		this.color = null;
		this.normal = null;
		this.uv.destroy();
		this.uv = null;
	}
	,__class__: phoenix_geometry_Vertex
};
var phoenix_utils_Rendering = function() { };
$hxClasses["phoenix.utils.Rendering"] = phoenix_utils_Rendering;
phoenix_utils_Rendering.__name__ = ["phoenix","utils","Rendering"];
phoenix_utils_Rendering.gl_blend_mode_from_BlendMode = function(_b) {
	switch(_b) {
	case 0:
		return 0;
	case 1:
		return 1;
	case 768:
		return 768;
	case 769:
		return 769;
	case 770:
		return 770;
	case 771:
		return 771;
	case 772:
		return 772;
	case 773:
		return 773;
	case 774:
		return 774;
	case 775:
		return 775;
	case 776:
		return 776;
	}
};
phoenix_utils_Rendering.fovx_to_y = function(fovx,aspect) {
	return 180 / Math.PI * (2 * Math.atan(Math.tan(fovx * (Math.PI / 180) / 2) * (1 / aspect)));
};
var snow_Snow = function(_host) {
	this.had_ready_event = false;
	this.i = 0;
	this.window_in_background = false;
	this.immediate_shutdown = false;
	this.has_shutdown = false;
	this.shutting_down = false;
	this.debug = false;
	this.platform = "unknown";
	this.ready = false;
	this.freeze = false;
	if(_host == null) throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_host was null" + (" ( " + "snow App instance was null!" + " )")));
	this.host = _host;
	this.host.app = this;
	this.config = this.default_config();
	this.sys_event = new snow_types_SystemEvent();
	this.win_event = new snow_types_WindowEvent();
	this.io = new snow_systems_io_IO(this);
	this.input = new snow_systems_input_Input(this);
	this.audio = new snow_systems_audio_Audio(this);
	this.assets = new snow_systems_assets_Assets(this);
	this.extensions = [];
	var _g = 0;
	var _g1 = snow_types_Config.extensions;
	while(_g < _g1.length) {
		var _ext_type = _g1[_g];
		++_g;
		var _class = Type.resolveClass(_ext_type);
		if(_class == null) throw new js__$Boot_HaxeError(snow_types_Error.error("Extension `" + _ext_type + "`: Type not found via Type.resolveClass!"));
		var _instance = Type.createInstance(_class,null);
		if(_instance == null) throw new js__$Boot_HaxeError(snow_types_Error.error("Extension `" + _ext_type + "`: Instance was null on calling new()!"));
		this.extensions.push(_instance);
	}
	this.runtime = new snow_core_web_Runtime(this);
	if(this.os == null) throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("os was null" + (" ( " + "init - Runtime didn't set the app.os value!" + " )")));
	if(this.platform == null) throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("platform was null" + (" ( " + "init - Runtime didn't set the app.platform value!" + " )")));
	this.dispatch_event(1);
	this.host.internal_init();
	snow_api_Promises.step();
	while(snow_Snow.next_queue.length > 0) this.cycle_next_queue();
	while(snow_Snow.defer_queue.length > 0) this.cycle_defer_queue();
	this.dispatch_event(2);
	snow_api_Promises.step();
	while(snow_Snow.next_queue.length > 0) this.cycle_next_queue();
	while(snow_Snow.defer_queue.length > 0) this.cycle_defer_queue();
	var _should_exit = this.runtime.run();
	if(_should_exit && !(this.has_shutdown || this.shutting_down)) this.shutdown();
};
$hxClasses["snow.Snow"] = snow_Snow;
snow_Snow.__name__ = ["snow","Snow"];
snow_Snow.__properties__ = {get_timestamp:"get_timestamp"}
snow_Snow.next = function(func) {
	if(func != null) snow_Snow.next_queue.push(func);
};
snow_Snow.defer = function(func) {
	if(func != null) snow_Snow.defer_queue.push(func);
};
snow_Snow.get_timestamp = function() {
	return window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
};
snow_Snow.prototype = {
	shutdown: function() {
		if(this.shutting_down) {
			haxe_Log.trace("     i / snow / " + "shutdown / called again, already shutting down - ignoring",{ fileName : "Snow.hx", lineNumber : 158, className : "snow.Snow", methodName : "shutdown"});
			return;
		}
		if(!(this.has_shutdown == false)) throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("has_shutdown == false" + (" ( " + "snow - calling shutdown more than once is disallowed" + " )")));
		this.shutting_down = true;
		this.host.ondestroy();
		this.dispatch_event(7);
		this.io.shutdown();
		this.audio.shutdown();
		this.assets.shutdown();
		this.input.shutdown();
		this.runtime.shutdown(this.immediate_shutdown);
		this.has_shutdown = true;
	}
	,dispatch_event: function(_type) {
		this.sys_event.set(_type,null,null);
		this.onevent(this.sys_event);
	}
	,dispatch_window_event: function(_type,_timestamp,_window_id,_x,_y) {
		this.win_event.set(_type,_timestamp,_window_id,_x,_y);
		this.sys_event.set(8,this.win_event,null);
		this.onevent(this.sys_event);
	}
	,dispatch_input_event: function(_event) {
		this.sys_event.set(9,null,_event);
		this.onevent(this.sys_event);
	}
	,onevent: function(_event) {
		this.io.module.onevent(_event);
		this.audio.onevent(_event);
		this.input.onevent(_event);
		this.host.onevent(_event);
		this.i = 0;
		while(this.i < this.extensions.length) {
			this.extensions[this.i].onevent(_event);
			++this.i;
		}
		var _g = _event.type;
		switch(_g) {
		case 2:
			this.on_ready_event();
			break;
		case 3:
			if(this.freeze) null; else {
				snow_api_Timer.update();
				snow_api_Promises.step();
				this.cycle_next_queue();
				if(!this.shutting_down && this.ready) this.host.internal_tick();
				this.cycle_defer_queue();
			}
			break;
		case 10:
			this.shutdown();
			break;
		case 7:
			haxe_Log.trace("     i / snow / " + "goodbye.",{ fileName : "Snow.hx", lineNumber : 248, className : "snow.Snow", methodName : "onevent"});
			break;
		case 11:
			this.immediate_shutdown = true;
			this.shutdown();
			break;
		default:
		}
	}
	,get_time: function() {
		return window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
	}
	,get_uniqueid: function() {
		return this.make_uniqueid();
	}
	,on_ready_event: function() {
		var _g = this;
		if(!(this.had_ready_event == false)) throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("had_ready_event == false" + (" ( " + "snow; the ready event should not be fired repeatedly" + " )")));
		this.had_ready_event = true;
		this.setup_configs().then(function(_) {
			_g.runtime.ready();
			_g.host.ready();
			_g.ready = true;
		}).error(function(e) {
			throw new js__$Boot_HaxeError(snow_types_Error.init("snow / cannot recover from error: " + e));
		});
		snow_api_Promises.step();
		while(snow_Snow.next_queue.length > 0) this.cycle_next_queue();
		while(snow_Snow.defer_queue.length > 0) this.cycle_defer_queue();
	}
	,on_tick_event: function() {
		if(this.freeze) return;
		snow_api_Timer.update();
		snow_api_Promises.step();
		this.cycle_next_queue();
		if(!this.shutting_down && this.ready) this.host.internal_tick();
		this.cycle_defer_queue();
	}
	,setup_configs: function() {
		var _g = this;
		if(snow_types_Config.app_config == null || snow_types_Config.app_config == "") {
			this.config = this.host.config(this.config);
			return snow_api_Promise.resolve();
		}
		return new snow_api_Promise(function(resolve,reject) {
			_g.default_user_config().then(function(_user_conf) {
				_g.config.user = _user_conf;
			}).error(function(error) {
				throw new js__$Boot_HaxeError(snow_types_Error.init("config / failed / default user config JSON failed to parse. Cannot recover. " + error));
			}).then(function() {
				_g.config = _g.host.config(_g.config);
				resolve();
			});
		});
	}
	,setup_host_config: function() {
		this.config = this.host.config(this.config);
	}
	,default_user_config: function() {
		var _g = this;
		return new snow_api_Promise(function(resolve,reject) {
			var load = _g.io.data_flow(haxe_io_Path.join([_g.assets.root,snow_types_Config.app_config]),snow_systems_assets_AssetJSON.processor);
			load.then(resolve).error(function(error) {
				switch(error[1]) {
				case 2:
					var val = error[2];
					reject(error);
					break;
				default:
					haxe_Log.trace("     i / snow / " + ("config / user config will be null! / " + Std.string(error)),{ fileName : "Snow.hx", lineNumber : 395, className : "snow.Snow", methodName : "default_user_config"});
					resolve(null);
				}
			});
		});
	}
	,default_config: function() {
		return { user : null, window : this.default_window_config(), render : this.default_render_config(), runtime : null};
	}
	,default_render_config: function() {
		return { depth : 0, stencil : 0, antialiasing : 0, red_bits : 8, green_bits : 8, blue_bits : 8, alpha_bits : 8, default_clear : { r : 0, g : 0, b : 0, a : 1}, opengl : { major : 0, minor : 0, profile : 0}, webgl : { version : 1}};
	}
	,default_window_config: function() {
		var conf = { true_fullscreen : false, fullscreen : false, borderless : false, resizable : true, x : 536805376, y : 536805376, width : 960, height : 640, title : "snow app", no_input : false, background_sleep : 0.066666666666666666};
		return conf;
	}
	,set_freeze: function(_freeze) {
		this.freeze = _freeze;
		this.dispatch_event(_freeze?4:5);
		return this.freeze;
	}
	,step: function() {
		snow_api_Promises.step();
		while(snow_Snow.next_queue.length > 0) this.cycle_next_queue();
		while(snow_Snow.defer_queue.length > 0) this.cycle_defer_queue();
	}
	,cycle_next_queue: function() {
		var count = snow_Snow.next_queue.length;
		var i = 0;
		while(i < count) {
			(snow_Snow.next_queue.shift())();
			++i;
		}
	}
	,cycle_defer_queue: function() {
		var count = snow_Snow.defer_queue.length;
		var i = 0;
		while(i < count) {
			(snow_Snow.defer_queue.shift())();
			++i;
		}
	}
	,copy_window_config: function(_config) {
		return { borderless : _config.borderless, fullscreen : _config.fullscreen, true_fullscreen : _config.true_fullscreen, height : _config.height, no_input : _config.no_input, background_sleep : _config.background_sleep, resizable : _config.resizable, title : "" + _config.title, width : _config.width, x : _config.x, y : _config.y};
	}
	,copy_render_config: function(_config) {
		return { antialiasing : _config.antialiasing, depth : _config.depth, stencil : _config.stencil, red_bits : _config.red_bits, green_bits : _config.green_bits, blue_bits : _config.blue_bits, alpha_bits : _config.alpha_bits, default_clear : { r : _config.default_clear.r, g : _config.default_clear.g, b : _config.default_clear.b, a : _config.default_clear.a}, opengl : { major : _config.opengl.major, minor : _config.opengl.minor, profile : _config.opengl.profile}};
	}
	,make_uniqueid: function(val) {
		if(val == null) val = Std.random(2147483647);
		var r = val % 62 | 0;
		var q = val / 62 | 0;
		if(q > 0) return this.make_uniqueid(q) + (r > 9?(function($this) {
			var $r;
			var ascii = 65 + (r - 10);
			if(ascii > 90) ascii += 6;
			$r = String.fromCharCode(ascii);
			return $r;
		}(this)):(r == null?"null":"" + r).charAt(0));
		return Std.string(r > 9?(function($this) {
			var $r;
			var ascii1 = 65 + (r - 10);
			if(ascii1 > 90) ascii1 += 6;
			$r = String.fromCharCode(ascii1);
			return $r;
		}(this)):(r == null?"null":"" + r).charAt(0));
	}
	,__class__: snow_Snow
	,__properties__: {get_uniqueid:"get_uniqueid",get_time:"get_time",set_freeze:"set_freeze"}
};
var snow_api__$Debug_LogError = $hxClasses["snow.api._Debug.LogError"] = { __ename__ : ["snow","api","_Debug","LogError"], __constructs__ : ["RequireString"] };
snow_api__$Debug_LogError.RequireString = function(detail) { var $x = ["RequireString",0,detail]; $x.__enum__ = snow_api__$Debug_LogError; $x.toString = $estr; return $x; };
var snow_api_Debug = function() { };
$hxClasses["snow.api.Debug"] = snow_api_Debug;
snow_api_Debug.__name__ = ["snow","api","Debug"];
snow_api_Debug._get_spacing = function(_file) {
	var _spaces = "";
	var _trace_length = _file.length + 4;
	var _diff = snow_api_Debug._log_width - _trace_length;
	if(_diff > 0) {
		var _g = 0;
		while(_g < _diff) {
			var i = _g++;
			_spaces += " ";
		}
	}
	return _spaces;
};
var snow_api_DebugError = $hxClasses["snow.api.DebugError"] = { __ename__ : ["snow","api","DebugError"], __constructs__ : ["assertion","null_assertion"] };
snow_api_DebugError.assertion = function(expr) { var $x = ["assertion",0,expr]; $x.__enum__ = snow_api_DebugError; $x.toString = $estr; return $x; };
snow_api_DebugError.null_assertion = function(expr) { var $x = ["null_assertion",1,expr]; $x.__enum__ = snow_api_DebugError; $x.toString = $estr; return $x; };
var snow_api_Emitter = function() {
	this._checking = false;
	this._to_remove = new List();
	this.connected = new List();
	this.bindings = new haxe_ds_IntMap();
};
$hxClasses["snow.api.Emitter"] = snow_api_Emitter;
snow_api_Emitter.__name__ = ["snow","api","Emitter"];
snow_api_Emitter.prototype = {
	emit: function(event,data) {
		this._check();
		var list = this.bindings.h[event];
		if(list != null && list.length > 0) {
			var _g = 0;
			while(_g < list.length) {
				var handler = list[_g];
				++_g;
				handler(data);
			}
		}
		this._check();
	}
	,on: function(event,handler) {
		this._check();
		if(!this.bindings.h.hasOwnProperty(event)) {
			this.bindings.h[event] = [handler];
			this.connected.push({ handler : handler, event : event});
		} else {
			var list = this.bindings.h[event];
			if(HxOverrides.indexOf(list,handler,0) == -1) {
				list.push(handler);
				this.connected.push({ handler : handler, event : event});
			}
		}
	}
	,off: function(event,handler) {
		this._check();
		var success = false;
		if(this.bindings.h.hasOwnProperty(event)) {
			this._to_remove.push({ event : event, handler : handler});
			var _g_head = this.connected.h;
			var _g_val = null;
			while(_g_head != null) {
				var _info;
				_info = (function($this) {
					var $r;
					_g_val = _g_head[0];
					_g_head = _g_head[1];
					$r = _g_val;
					return $r;
				}(this));
				if(_info.event == event && _info.handler == handler) this.connected.remove(_info);
			}
			success = true;
		}
		return success;
	}
	,_check: function() {
		if(this._checking) return;
		this._checking = true;
		if(this._to_remove.length > 0) {
			var _g_head = this._to_remove.h;
			var _g_val = null;
			while(_g_head != null) {
				var _node;
				_node = (function($this) {
					var $r;
					_g_val = _g_head[0];
					_g_head = _g_head[1];
					$r = _g_val;
					return $r;
				}(this));
				var list = this.bindings.h[_node.event];
				HxOverrides.remove(list,_node.handler);
				if(list.length == 0) this.bindings.remove(_node.event);
			}
			this._to_remove = null;
			this._to_remove = new List();
		}
		this._checking = false;
	}
	,__class__: snow_api_Emitter
};
var snow_api_Promise = function(func) {
	this.was_caught = false;
	var _g = this;
	this.state = 0;
	this.reject_reactions = [];
	this.fulfill_reactions = [];
	this.settle_reactions = [];
	snow_api_Promises.queue(function() {
		func($bind(_g,_g.onfulfill),$bind(_g,_g.onreject));
		snow_api_Promises.defer(snow_api_Promises.next);
	});
};
$hxClasses["snow.api.Promise"] = snow_api_Promise;
snow_api_Promise.__name__ = ["snow","api","Promise"];
snow_api_Promise.all = function(list) {
	return new snow_api_Promise(function(ok,no) {
		var current = 0;
		var total = list.length;
		var fulfill_result = [];
		var reject_result = null;
		var all_state = 0;
		var single_ok = function(index,val) {
			if(all_state != 0) return;
			current++;
			fulfill_result[index] = val;
			if(total == current) {
				all_state = 1;
				ok(fulfill_result);
			}
		};
		var single_err = function(val1) {
			if(all_state != 0) return;
			all_state = 2;
			reject_result = val1;
			no(reject_result);
		};
		var index1 = 0;
		var _g = 0;
		while(_g < list.length) {
			var promise = list[_g];
			++_g;
			promise.then((function(f,a1) {
				return function(a2) {
					f(a1,a2);
				};
			})(single_ok,index1)).error(single_err);
			index1++;
		}
	});
};
snow_api_Promise.race = function(list) {
	return new snow_api_Promise(function(ok,no) {
		var settled = false;
		var single_ok = function(val) {
			if(settled) return;
			settled = true;
			ok(val);
		};
		var single_err = function(val1) {
			if(settled) return;
			settled = true;
			no(val1);
		};
		var _g = 0;
		while(_g < list.length) {
			var promise = list[_g];
			++_g;
			promise.then(single_ok).error(single_err);
		}
	});
};
snow_api_Promise.reject = function(reason) {
	return new snow_api_Promise(function(ok,no) {
		no(reason);
	});
};
snow_api_Promise.resolve = function(val) {
	return new snow_api_Promise(function(ok,no) {
		ok(val);
	});
};
snow_api_Promise.prototype = {
	then: function(on_fulfilled,on_rejected) {
		var _g = this.state;
		switch(_g) {
		case 0:
			this.add_fulfill(on_fulfilled);
			this.add_reject(on_rejected);
			return this.new_linked_promise();
		case 1:
			snow_api_Promises.defer(on_fulfilled,this.result);
			return snow_api_Promise.resolve(this.result);
		case 2:
			snow_api_Promises.defer(on_rejected,this.result);
			return snow_api_Promise.reject(this.result);
		}
	}
	,error: function(on_rejected) {
		var _g = this.state;
		switch(_g) {
		case 0:
			this.add_reject(on_rejected);
			return this.new_linked_resolve_empty();
		case 1:
			return snow_api_Promise.resolve(this.result);
		case 2:
			snow_api_Promises.defer(on_rejected,this.result);
			return snow_api_Promise.reject(this.result);
		}
	}
	,toString: function() {
		return "Promise { state:" + this.state_string() + ", result:" + Std.string(this.result) + " }";
	}
	,add_settle: function(f) {
		if(this.state == 0) this.settle_reactions.push(f); else snow_api_Promises.defer(f,this.result);
	}
	,new_linked_promise: function() {
		var _g = this;
		return new snow_api_Promise(function(f,r) {
			_g.add_settle(function(_) {
				if(_g.state == 1) f(_g.result); else r(_g.result);
			});
		});
	}
	,new_linked_resolve: function() {
		var _g = this;
		return new snow_api_Promise(function(f,r) {
			_g.add_settle(function(val) {
				f(val);
			});
		});
	}
	,new_linked_reject: function() {
		var _g = this;
		return new snow_api_Promise(function(f,r) {
			_g.add_settle(function(val) {
				r(val);
			});
		});
	}
	,new_linked_resolve_empty: function() {
		var _g = this;
		return new snow_api_Promise(function(f,r) {
			_g.add_settle(function(_) {
				f();
			});
		});
	}
	,new_linked_reject_empty: function() {
		var _g = this;
		return new snow_api_Promise(function(f,r) {
			_g.add_settle(function(_) {
				r();
			});
		});
	}
	,add_fulfill: function(f) {
		if(f != null) this.fulfill_reactions.push(f);
	}
	,add_reject: function(f) {
		if(f != null) {
			this.was_caught = true;
			this.reject_reactions.push(f);
		}
	}
	,onfulfill: function(val) {
		this.state = 1;
		this.result = val;
		while(this.fulfill_reactions.length > 0) {
			var fn = this.fulfill_reactions.shift();
			fn(this.result);
		}
		this.onsettle();
	}
	,onreject: function(reason) {
		this.state = 2;
		this.result = reason;
		while(this.reject_reactions.length > 0) {
			var fn = this.reject_reactions.shift();
			fn(this.result);
		}
		this.onsettle();
	}
	,onsettle: function() {
		while(this.settle_reactions.length > 0) {
			var fn = this.settle_reactions.shift();
			fn(this.result);
		}
	}
	,onexception: function(err) {
		var _g = this;
		this.add_settle(function(_) {
			if(!_g.was_caught) {
				if(_g.state == 2) {
					throw new js__$Boot_HaxeError(snow_api_PromiseError.UnhandledPromiseRejection(_g.toString()));
					return;
				}
			}
		});
		if(this.state == 0) this.onreject(err);
	}
	,state_string: function() {
		var _g = this.state;
		switch(_g) {
		case 0:
			return "pending";
		case 1:
			return "fulfilled";
		case 2:
			return "rejected";
		}
	}
	,__class__: snow_api_Promise
};
var snow_api_Promises = function() { };
$hxClasses["snow.api.Promises"] = snow_api_Promises;
snow_api_Promises.__name__ = ["snow","api","Promises"];
snow_api_Promises.step = function() {
	snow_api_Promises.next();
	while(snow_api_Promises.defers.length > 0) {
		var defer = snow_api_Promises.defers.shift();
		defer.f(defer.a);
	}
};
snow_api_Promises.next = function() {
	if(snow_api_Promises.calls.length > 0) (snow_api_Promises.calls.shift())();
};
snow_api_Promises.defer = function(f,a) {
	if(f == null) return;
	snow_api_Promises.defers.push({ f : f, a : a});
};
snow_api_Promises.queue = function(f) {
	if(f == null) return;
	snow_api_Promises.calls.push(f);
};
var snow_api_PromiseError = $hxClasses["snow.api.PromiseError"] = { __ename__ : ["snow","api","PromiseError"], __constructs__ : ["UnhandledPromiseRejection"] };
snow_api_PromiseError.UnhandledPromiseRejection = function(err) { var $x = ["UnhandledPromiseRejection",0,err]; $x.__enum__ = snow_api_PromiseError; $x.toString = $estr; return $x; };
var snow_api_Timer = function(_time) {
	this.time = _time;
	snow_api_Timer.running_timers.push(this);
	this.fire_at = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start + this.time;
	this.running = true;
};
$hxClasses["snow.api.Timer"] = snow_api_Timer;
snow_api_Timer.__name__ = ["snow","api","Timer"];
snow_api_Timer.measure = function(f,pos) {
	var t0 = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
	var r = f();
	haxe_Log.trace(window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start - t0 + "s",pos);
	return r;
};
snow_api_Timer.update = function() {
	var now = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
	var _g = 0;
	var _g1 = snow_api_Timer.running_timers;
	while(_g < _g1.length) {
		var timer = _g1[_g];
		++_g;
		if(timer.running) {
			if(timer.fire_at < now) {
				timer.fire_at += timer.time;
				timer.run();
			}
		}
	}
};
snow_api_Timer.delay = function(_time,_f) {
	var t = new snow_api_Timer(_time);
	t.run = function() {
		t.stop();
		_f();
	};
	return t;
};
snow_api_Timer.prototype = {
	run: function() {
	}
	,stop: function() {
		if(this.running) {
			this.running = false;
			HxOverrides.remove(snow_api_Timer.running_timers,this);
		}
	}
	,__class__: snow_api_Timer
};
var snow_api_buffers__$Float32Array_Float32Array_$Impl_$ = {};
$hxClasses["snow.api.buffers._Float32Array.Float32Array_Impl_"] = snow_api_buffers__$Float32Array_Float32Array_$Impl_$;
snow_api_buffers__$Float32Array_Float32Array_$Impl_$.__name__ = ["snow","api","buffers","_Float32Array","Float32Array_Impl_"];
snow_api_buffers__$Float32Array_Float32Array_$Impl_$._new = function(_elements) {
	return new Float32Array(_elements);
};
snow_api_buffers__$Float32Array_Float32Array_$Impl_$.fromArray = function(_array) {
	return new Float32Array(_array);
};
snow_api_buffers__$Float32Array_Float32Array_$Impl_$.fromView = function(_view) {
	return new Float32Array(_view);
};
snow_api_buffers__$Float32Array_Float32Array_$Impl_$.fromBuffer = function(_buffer,_byteOffset,_byteLength) {
	return new Float32Array(_buffer,_byteOffset,_byteLength / 4 | 0);
};
snow_api_buffers__$Float32Array_Float32Array_$Impl_$.fromBytes = function(bytes,byteOffset,len) {
	if(byteOffset == null) byteOffset = 0;
	if(byteOffset == null) return new Float32Array(bytes.b.bufferValue);
	if(len == null) return new Float32Array(bytes.b.bufferValue,byteOffset);
	return new Float32Array(bytes.b.bufferValue,byteOffset,len);
};
snow_api_buffers__$Float32Array_Float32Array_$Impl_$.toBytes = function(this1) {
	return new haxe_io_Bytes(new Uint8Array(this1.buffer));
};
snow_api_buffers__$Float32Array_Float32Array_$Impl_$.toString = function(this1) {
	return "Float32Array [byteLength:" + this1.byteLength + ", length:" + this1.length + "]";
};
var snow_api_buffers__$Int32Array_Int32Array_$Impl_$ = {};
$hxClasses["snow.api.buffers._Int32Array.Int32Array_Impl_"] = snow_api_buffers__$Int32Array_Int32Array_$Impl_$;
snow_api_buffers__$Int32Array_Int32Array_$Impl_$.__name__ = ["snow","api","buffers","_Int32Array","Int32Array_Impl_"];
snow_api_buffers__$Int32Array_Int32Array_$Impl_$._new = function(_elements) {
	return new Int32Array(_elements);
};
snow_api_buffers__$Int32Array_Int32Array_$Impl_$.fromArray = function(_array) {
	return new Int32Array(_array);
};
snow_api_buffers__$Int32Array_Int32Array_$Impl_$.fromView = function(_view) {
	return new Int32Array(_view);
};
snow_api_buffers__$Int32Array_Int32Array_$Impl_$.fromBuffer = function(_buffer,_byteOffset,_byteLength) {
	return new Int32Array(_buffer,_byteOffset,_byteLength / 4 | 0);
};
snow_api_buffers__$Int32Array_Int32Array_$Impl_$.fromBytes = function(bytes,byteOffset,len) {
	if(byteOffset == null) byteOffset = 0;
	if(byteOffset == null) return new Int32Array(bytes.b.bufferValue);
	if(len == null) return new Int32Array(bytes.b.bufferValue,byteOffset);
	return new Int32Array(bytes.b.bufferValue,byteOffset,len);
};
snow_api_buffers__$Int32Array_Int32Array_$Impl_$.toBytes = function(this1) {
	return new haxe_io_Bytes(new Uint8Array(this1.buffer));
};
snow_api_buffers__$Int32Array_Int32Array_$Impl_$.toString = function(this1) {
	return "Int32Array [byteLength:" + this1.byteLength + ", length:" + this1.length + "]";
};
var snow_api_buffers__$Uint8Array_Uint8Array_$Impl_$ = {};
$hxClasses["snow.api.buffers._Uint8Array.Uint8Array_Impl_"] = snow_api_buffers__$Uint8Array_Uint8Array_$Impl_$;
snow_api_buffers__$Uint8Array_Uint8Array_$Impl_$.__name__ = ["snow","api","buffers","_Uint8Array","Uint8Array_Impl_"];
snow_api_buffers__$Uint8Array_Uint8Array_$Impl_$._new = function(_elements) {
	return new Uint8Array(_elements);
};
snow_api_buffers__$Uint8Array_Uint8Array_$Impl_$.fromArray = function(_array) {
	return new Uint8Array(_array);
};
snow_api_buffers__$Uint8Array_Uint8Array_$Impl_$.fromView = function(_view) {
	return new Uint8Array(_view);
};
snow_api_buffers__$Uint8Array_Uint8Array_$Impl_$.fromBuffer = function(_buffer,_byteOffset,_byteLength) {
	return new Uint8Array(_buffer,_byteOffset,_byteLength);
};
snow_api_buffers__$Uint8Array_Uint8Array_$Impl_$.fromBytes = function(bytes,byteOffset,len) {
	if(byteOffset == null) return new Uint8Array(bytes.b.bufferValue);
	if(len == null) return new Uint8Array(bytes.b.bufferValue,byteOffset);
	return new Uint8Array(bytes.b.bufferValue,byteOffset,len);
};
snow_api_buffers__$Uint8Array_Uint8Array_$Impl_$.toBytes = function(this1) {
	return new haxe_io_Bytes(new Uint8Array(this1.buffer));
};
snow_api_buffers__$Uint8Array_Uint8Array_$Impl_$.toString = function(this1) {
	return "Uint8Array [byteLength:" + this1.byteLength + ", length:" + this1.length + "]";
};
var snow_modules_interfaces_Audio = function() { };
$hxClasses["snow.modules.interfaces.Audio"] = snow_modules_interfaces_Audio;
snow_modules_interfaces_Audio.__name__ = ["snow","modules","interfaces","Audio"];
snow_modules_interfaces_Audio.prototype = {
	__class__: snow_modules_interfaces_Audio
};
var snow_core_Audio = function(_app) {
	this.active = false;
	this.app = _app;
};
$hxClasses["snow.core.Audio"] = snow_core_Audio;
snow_core_Audio.__name__ = ["snow","core","Audio"];
snow_core_Audio.__interfaces__ = [snow_modules_interfaces_Audio];
snow_core_Audio.audio_format_from_path = function(_path) {
	var _ext = haxe_io_Path.extension(_path);
	switch(_ext) {
	case "wav":
		return 3;
	case "ogg":
		return 2;
	case "pcm":
		return 4;
	default:
		return 0;
	}
};
snow_core_Audio.prototype = {
	onevent: function(event) {
	}
	,shutdown: function() {
	}
	,suspend: function() {
	}
	,resume: function() {
	}
	,data_from_load: function(_path,_is_stream,_format) {
		if(_is_stream == null) _is_stream = false;
		return null;
	}
	,data_from_bytes: function(_id,_bytes,_format) {
		return null;
	}
	,play: function(_source,_volume,_paused) {
		return null;
	}
	,loop: function(_source,_volume,_paused) {
		return null;
	}
	,pause: function(_handle) {
	}
	,unpause: function(_handle) {
	}
	,stop: function(_handle) {
	}
	,volume: function(_handle,_volume) {
	}
	,pan: function(_handle,_pan) {
	}
	,pitch: function(_handle,_pitch) {
	}
	,position: function(_handle,_time) {
	}
	,volume_of: function(_handle) {
		return 0.0;
	}
	,pan_of: function(_handle) {
		return 0.0;
	}
	,pitch_of: function(_handle) {
		return 0.0;
	}
	,position_of: function(_handle) {
		return 0.0;
	}
	,state_of: function(_handle) {
		return -1;
	}
	,loop_of: function(_handle) {
		return false;
	}
	,instance_of: function(_handle) {
		return null;
	}
	,__class__: snow_core_Audio
};
var snow_core_Extension = function() { };
$hxClasses["snow.core.Extension"] = snow_core_Extension;
snow_core_Extension.__name__ = ["snow","core","Extension"];
snow_core_Extension.prototype = {
	__class__: snow_core_Extension
};
var snow_core_Runtime = function() { };
$hxClasses["snow.core.Runtime"] = snow_core_Runtime;
snow_core_Runtime.__name__ = ["snow","core","Runtime"];
snow_core_Runtime.prototype = {
	__class__: snow_core_Runtime
};
var snow_core_web_Runtime = function(_app) {
	this.p_body_margin = "0";
	this.p_body_overflow = "0";
	this.p_height = 0;
	this.p_width = 0;
	this.p_s_height = "";
	this.p_s_width = "";
	this.p_margin = "0";
	this.p_padding = "0";
	this.gamepads_supported = false;
	this.window_dpr = 1.0;
	this.window_h = 0;
	this.window_w = 0;
	this.window_y = 0;
	this.window_x = 0;
	this.name = "web";
	this.app = _app;
	this.app.platform = "web";
	this.app.os = this.guess_os();
	snow_core_web_Runtime.timestamp_start = window.performance.now() / 1000.0;
	this.app.config.runtime = { window_id : "app", window_parent : window.document.body, prevent_default_context_menu : true, prevent_default_mouse_wheel : true, prevent_default_touches : true, prevent_default_keys : [1073741904,1073741903,1073741906,1073741905,8,9,127,32]};
	this.gamepads_init();
	haxe_Log.trace("  i / runtime / " + "web / init ok",{ fileName : "Runtime.hx", lineNumber : 67, className : "snow.core.web.Runtime", methodName : "new"});
};
$hxClasses["snow.core.web.Runtime"] = snow_core_web_Runtime;
snow_core_web_Runtime.__name__ = ["snow","core","web","Runtime"];
snow_core_web_Runtime.__interfaces__ = [snow_core_Runtime];
snow_core_web_Runtime.timestamp = function() {
	return window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start;
};
snow_core_web_Runtime.prototype = {
	window_device_pixel_ratio: function() {
		if(window.devicePixelRatio == null) return 1.0; else return window.devicePixelRatio;
	}
	,window_width: function() {
		return this.window.width;
	}
	,window_height: function() {
		return this.window.height;
	}
	,window_grab: function(enable) {
		if(enable) {
			if(($_=this.window,$bind($_,$_.requestPointerLock)) != null) this.window.requestPointerLock(); else if(this.window.webkitRequestPointerLock != null) this.window.webkitRequestPointerLock(); else if(this.window.mozRequestPointerLock != null) this.window.mozRequestPointerLock(); else return false;
		} else if(($_=window.document,$bind($_,$_.exitPointerLock)) != null) window.document.exitPointerLock(); else if(window.document.webkitExitPointerLock != null) window.document.webkitExitPointerLock(); else if(window.document.mozExitPointerLock != null) window.document.mozExitPointerLock(); else return false;
		return true;
	}
	,onresize_handler: function(_) {
		this.window.style.width = "" + window.innerWidth + "px";
		this.window.style.height = "" + window.innerHeight + "px";
	}
	,window_fullscreen: function(enable,true_fullscreen) {
		if(true_fullscreen == null) true_fullscreen = false;
		var _result = true;
		if(enable) {
			this.p_padding = this.window.style.padding;
			this.p_margin = this.window.style.margin;
			this.p_s_width = this.window.style.width;
			this.p_s_height = this.window.style.height;
			this.p_width = this.window.width;
			this.p_height = this.window.height;
			this.p_body_margin = window.document.body.style.margin;
			this.p_body_overflow = window.document.body.style.overflow;
			this.window.style.margin = "0";
			this.window.style.padding = "0";
			this.window.style.width = window.innerWidth + "px";
			this.window.style.height = window.innerHeight + "px";
			if(window.devicePixelRatio == null) this.window_dpr = 1.0; else this.window_dpr = window.devicePixelRatio;
			this.window.width = Math.floor(window.innerWidth * this.window_dpr);
			this.window.height = Math.floor(window.innerHeight * this.window_dpr);
			window.document.body.style.margin = "0";
			window.document.body.style.overflow = "hidden";
			if(true_fullscreen) {
				if(($_=this.window,$bind($_,$_.requestFullscreen)) != null) this.window.requestFullscreen(); else if(this.window.requestFullScreen != null) this.window.requestFullScreen(null); else if(this.window.webkitRequestFullscreen != null) this.window.webkitRequestFullscreen(); else if(this.window.mozRequestFullScreen != null) this.window.mozRequestFullScreen(); else _result = false;
			}
			window.addEventListener("resize",$bind(this,this.onresize_handler));
		} else {
			window.removeEventListener("resize",$bind(this,this.onresize_handler));
			this.window.style.padding = this.p_padding;
			this.window.style.margin = this.p_margin;
			this.window.style.width = this.p_s_width;
			this.window.style.height = this.p_s_height;
			this.window.width = this.p_width;
			this.window.height = this.p_height;
			window.document.body.style.margin = this.p_body_margin;
			window.document.body.style.overflow = this.p_body_overflow;
			if(true_fullscreen) {
				if(($_=window.document,$bind($_,$_.exitFullscreen)) != null) window.document.exitFullscreen(); else if(window.document.webkitExitFullscreen != null) window.document.webkitExitFullscreen(); else if(window.document.mozCancelFullScreen != null) window.document.mozCancelFullScreen(); else _result = false;
			}
		}
		return _result;
	}
	,shutdown: function(_immediate) {
		if(_immediate == null) _immediate = false;
		haxe_Log.trace("  i / runtime / " + "runtime / web / shutdown",{ fileName : "Runtime.hx", lineNumber : 230, className : "snow.core.web.Runtime", methodName : "shutdown"});
		window.document.removeEventListener("visibilitychange",$bind(this,this.on_visibilitychange));
		window.document.removeEventListener("keydown",$bind(this,this.on_keydown));
		window.document.removeEventListener("keyup",$bind(this,this.on_keyup));
		window.document.removeEventListener("keypress",$bind(this,this.on_keypress));
		window.removeEventListener("gamepadconnected",$bind(this,this.on_gamepadconnected));
		window.removeEventListener("gamepaddisconnected",$bind(this,this.on_gamepaddisconnected));
		this.window.remove();
		this.window = null;
		snow_modules_opengl_web_GL.gl = null;
	}
	,run: function() {
		haxe_Log.trace("  i / runtime / " + "web / run",{ fileName : "Runtime.hx", lineNumber : 248, className : "snow.core.web.Runtime", methodName : "run"});
		this.loop_pre_ready();
		return false;
	}
	,ready: function() {
		haxe_Log.trace("  i / runtime / " + "web / ready",{ fileName : "Runtime.hx", lineNumber : 258, className : "snow.core.web.Runtime", methodName : "ready"});
		this.create_window();
	}
	,dispatch_window_ev: function(_type,_x,_y) {
		this.app.dispatch_window_event(_type,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1,_x,_y);
	}
	,setup_events: function() {
		var _g = this;
		this.window.addEventListener("mouseleave",function(_ev) {
			_g.dispatch_window_ev(11,null,null);
		});
		this.window.addEventListener("mouseenter",function(_ev1) {
			_g.dispatch_window_ev(10,null,null);
		});
		window.document.addEventListener("visibilitychange",$bind(this,this.on_visibilitychange));
		window.document.addEventListener("keydown",$bind(this,this.on_keydown));
		window.document.addEventListener("keyup",$bind(this,this.on_keyup));
		window.document.addEventListener("keypress",$bind(this,this.on_keypress));
		this.window.addEventListener("contextmenu",function(_ev2) {
			if(_g.app.config.runtime.prevent_default_context_menu) _ev2.preventDefault();
		});
		this.window.addEventListener("mousedown",function(_ev3) {
			_g.app.input.dispatch_mouse_down_event(Math.floor(_g.window_dpr * (_ev3.pageX - _g.window_x)),Math.floor(_g.window_dpr * (_ev3.pageY - _g.window_y)),_ev3.button + 1,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1);
		});
		this.window.addEventListener("mouseup",function(_ev4) {
			_g.app.input.dispatch_mouse_up_event(Math.floor(_g.window_dpr * (_ev4.pageX - _g.window_x)),Math.floor(_g.window_dpr * (_ev4.pageY - _g.window_y)),_ev4.button + 1,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1);
		});
		this.window.addEventListener("mousemove",function(_ev5) {
			var _movement_x;
			if(_ev5.movementX == null) _movement_x = 0; else _movement_x = _ev5.movementX;
			var _movement_y;
			if(_ev5.movementY == null) _movement_y = 0; else _movement_y = _ev5.movementY;
			_movement_x = Math.floor(_movement_x * _g.window_dpr);
			_movement_y = Math.floor(_movement_y * _g.window_dpr);
			_g.app.input.dispatch_mouse_move_event(Math.floor(_g.window_dpr * (_ev5.pageX - _g.window_x)),Math.floor(_g.window_dpr * (_ev5.pageY - _g.window_y)),_movement_x,_movement_y,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1);
		});
		this.window.addEventListener("wheel",function(_ev6) {
			if(_g.app.config.runtime.prevent_default_mouse_wheel) _ev6.preventDefault();
			_g.app.input.dispatch_mouse_wheel_event(_ev6.deltaX,_ev6.deltaY,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1);
		});
		this.window.addEventListener("touchstart",function(_ev7) {
			if(_g.app.config.runtime.prevent_default_touches) _ev7.preventDefault();
			var _bound = _g.window.getBoundingClientRect();
			var _g1 = 0;
			var _g2 = _ev7.changedTouches;
			while(_g1 < _g2.length) {
				var touch = _g2[_g1];
				++_g1;
				var _x = touch.clientX - _bound.left;
				var _y = touch.clientY - _bound.top;
				_x = _x / _bound.width;
				_y = _y / _bound.height;
				_g.app.input.dispatch_touch_down_event(_x,_y,0,0,touch.identifier,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start);
			}
		});
		this.window.addEventListener("touchend",function(_ev8) {
			if(_g.app.config.runtime.prevent_default_touches) _ev8.preventDefault();
			var _bound1 = _g.window.getBoundingClientRect();
			var _g11 = 0;
			var _g21 = _ev8.changedTouches;
			while(_g11 < _g21.length) {
				var touch1 = _g21[_g11];
				++_g11;
				var _x1 = touch1.clientX - _bound1.left;
				var _y1 = touch1.clientY - _bound1.top;
				_x1 = _x1 / _bound1.width;
				_y1 = _y1 / _bound1.height;
				_g.app.input.dispatch_touch_up_event(_x1,_y1,0,0,touch1.identifier,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start);
			}
		});
		this.window.addEventListener("touchmove",function(_ev9) {
			if(_g.app.config.runtime.prevent_default_touches) _ev9.preventDefault();
			var _bound2 = _g.window.getBoundingClientRect();
			var _g12 = 0;
			var _g22 = _ev9.changedTouches;
			while(_g12 < _g22.length) {
				var touch2 = _g22[_g12];
				++_g12;
				var _x2 = touch2.clientX - _bound2.left;
				var _y2 = touch2.clientY - _bound2.top;
				_x2 = _x2 / _bound2.width;
				_y2 = _y2 / _bound2.height;
				_g.app.input.dispatch_touch_move_event(_x2,_y2,0,0,touch2.identifier,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start);
			}
		});
		window.addEventListener("gamepadconnected",$bind(this,this.on_gamepadconnected));
		window.addEventListener("gamepaddisconnected",$bind(this,this.on_gamepaddisconnected));
	}
	,on_visibilitychange: function(_) {
		if(window.document.hidden) {
			this.app.dispatch_window_event(2,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1,null,null);
			this.app.dispatch_window_event(7,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1,null,null);
			this.app.dispatch_window_event(13,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1,null,null);
		} else {
			this.app.dispatch_window_event(1,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1,null,null);
			this.app.dispatch_window_event(9,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1,null,null);
			this.app.dispatch_window_event(12,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1,null,null);
		}
	}
	,on_keydown: function(_ev) {
		var _keycode = this.convert_keycode(_ev.keyCode);
		var _scancode = snow_systems_input_Keycodes.to_scan(_keycode);
		var _mod_state = this.mod_state_from_event(_ev);
		if(HxOverrides.indexOf(this.app.config.runtime.prevent_default_keys,_keycode,0) != -1) _ev.preventDefault();
		this.app.input.dispatch_key_down_event(_keycode,_scancode,_ev.repeat,_mod_state,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1);
	}
	,on_keyup: function(_ev) {
		var _keycode = this.convert_keycode(_ev.keyCode);
		var _scancode = snow_systems_input_Keycodes.to_scan(_keycode);
		var _mod_state = this.mod_state_from_event(_ev);
		if(HxOverrides.indexOf(this.app.config.runtime.prevent_default_keys,_keycode,0) != -1) _ev.preventDefault();
		this.app.input.dispatch_key_up_event(_keycode,_scancode,_ev.repeat,_mod_state,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1);
	}
	,on_keypress: function(_ev) {
		if(_ev.which != 0 && HxOverrides.indexOf(snow_core_web_Runtime.key_press_ignored,_ev.keyCode,0) == -1) {
			var _text = String.fromCharCode(_ev.charCode);
			this.app.input.dispatch_text_event(_text,0,_text.length,2,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start,1);
		}
	}
	,on_gamepadconnected: function(_ev) {
		this.gamepads_init_cache(_ev.gamepad);
		this.app.input.dispatch_gamepad_device_event(_ev.gamepad.index,_ev.gamepad.id,1,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start);
	}
	,on_gamepaddisconnected: function(_ev) {
		this.gamepad_btns_cache[_ev.gamepad.index] = null;
		this.app.input.dispatch_gamepad_device_event(_ev.gamepad.index,_ev.gamepad.id,2,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start);
	}
	,create_window: function() {
		var config = this.app.config.window;
		var _this = window.document;
		this.window = _this.createElement("canvas");
		if(window.devicePixelRatio == null) this.window_dpr = 1.0; else this.window_dpr = window.devicePixelRatio;
		this.window.width = Math.floor(config.width * this.window_dpr);
		this.window.height = Math.floor(config.height * this.window_dpr);
		this.window_w = config.width;
		this.window_h = config.height;
		this.window.style.width = config.width + "px";
		this.window.style.height = config.height + "px";
		this.window.style.background = "#000";
		this.window.id = this.app.config.runtime.window_id;
		this.app.config.runtime.window_parent.appendChild(this.window);
		if(config.title != null) window.document.title = config.title;
		if(!this.create_render_context(this.window)) {
			this.create_render_context_failed();
			return;
		}
		this.post_render_context(this.window);
		this.setup_events();
		if(config.fullscreen) {
			this.window_fullscreen(true,config.true_fullscreen);
			this.update_window_bounds();
		}
	}
	,post_render_context: function(window) {
		var color = this.app.config.render.default_clear;
		snow_modules_opengl_web_GL.gl.clearDepth(1.0);
		snow_modules_opengl_web_GL.gl.clearStencil(0);
		snow_modules_opengl_web_GL.gl.clearColor(color.r,color.g,color.b,color.a);
		snow_modules_opengl_web_GL.gl.clear(17664);
	}
	,create_render_context: function(_window) {
		var config = this.app.config.render;
		var attr = config.webgl;
		attr = this.apply_GL_attr(config,attr);
		var _gl = null;
		if(config.webgl.version != 1) {
			_gl = this.window.getContext("webgl" + config.webgl.version);
			if(_gl == null) _gl = this.window.getContext("experimental-webgl" + config.webgl.version);
		} else _gl = js_html__$CanvasElement_CanvasUtil.getContextWebGL(this.window,attr);
		snow_modules_opengl_web_GL.gl = _gl;
		haxe_Log.trace("  i / runtime / " + ("web / GL / context(" + Std.string(_gl != null) + ")"),{ fileName : "Runtime.hx", lineNumber : 652, className : "snow.core.web.Runtime", methodName : "create_render_context"});
		return _gl != null;
	}
	,apply_GL_attr: function(render,attr) {
		if(attr.alpha == null) attr.alpha = false;
		attr.alpha = attr.alpha;
		if(attr.premultipliedAlpha == null) attr.premultipliedAlpha = false;
		attr.premultipliedAlpha = attr.premultipliedAlpha;
		if(attr.antialias == null) attr.antialias = this.app.config.render.antialiasing > 0;
		attr.antialias = attr.antialias;
		if(attr.depth == null) attr.depth = this.app.config.render.depth > 0;
		attr.depth = attr.depth;
		if(attr.stencil == null) attr.stencil = this.app.config.render.stencil > 0;
		attr.stencil = attr.stencil;
		return attr;
	}
	,create_render_context_failed: function() {
		var msg = "WebGL is required to run this!<br/><br/>";
		msg += "visit <a style=\"color:#06b4fb; text-decoration:none;\" href=\"http://get.webgl.org/\">get.webgl.com</a> for info<br/>";
		msg += "and contact the developer of this app";
		var text_el;
		var overlay_el;
		var _this = window.document;
		text_el = _this.createElement("div");
		var _this1 = window.document;
		overlay_el = _this1.createElement("div");
		text_el.style.marginLeft = "auto";
		text_el.style.marginRight = "auto";
		text_el.style.color = "#d3d3d3";
		text_el.style.marginTop = "5em";
		text_el.style.fontSize = "1.4em";
		text_el.style.fontFamily = "helvetica,sans-serif";
		text_el.innerHTML = msg;
		overlay_el.style.top = "0";
		overlay_el.style.left = "0";
		overlay_el.style.width = "100%";
		overlay_el.style.height = "100%";
		overlay_el.style.display = "block";
		overlay_el.style.minWidth = "100%";
		overlay_el.style.minHeight = "100%";
		overlay_el.style.textAlign = "center";
		overlay_el.style.position = "absolute";
		overlay_el.style.background = "rgba(1,1,1,0.90)";
		overlay_el.appendChild(text_el);
		window.document.body.appendChild(overlay_el);
		throw new js__$Boot_HaxeError(snow_types_Error.error("runtime / web / failed to create render context, unable to recover"));
	}
	,request_frame: function() {
		window.requestAnimationFrame($bind(this,this.loop));
	}
	,loop: function(_t) {
		if(_t == null) _t = 0.016;
		if(this.app.has_shutdown) return false;
		if(this.gamepads_supported) this.gamepads_poll();
		this.update_window_bounds();
		this.app.dispatch_event(3);
		if(!this.app.shutting_down) window.requestAnimationFrame($bind(this,this.loop));
		return true;
	}
	,loop_pre_ready: function(_t) {
		if(_t == null) _t = 0.016;
		this.app.dispatch_event(3);
		if(!this.app.shutting_down) {
			if(!this.app.ready) window.requestAnimationFrame($bind(this,this.loop_pre_ready)); else window.requestAnimationFrame($bind(this,this.loop));
		}
		return true;
	}
	,mod_state_from_event: function(_key_event) {
		var _none = !_key_event.altKey && !_key_event.ctrlKey && !_key_event.metaKey && !_key_event.shiftKey;
		this.app.input.mod_state.none = _none;
		this.app.input.mod_state.lshift = _key_event.shiftKey;
		this.app.input.mod_state.rshift = _key_event.shiftKey;
		this.app.input.mod_state.lctrl = _key_event.ctrlKey;
		this.app.input.mod_state.rctrl = _key_event.ctrlKey;
		this.app.input.mod_state.lalt = _key_event.altKey;
		this.app.input.mod_state.ralt = _key_event.altKey;
		this.app.input.mod_state.lmeta = _key_event.metaKey;
		this.app.input.mod_state.rmeta = _key_event.metaKey;
		this.app.input.mod_state.num = false;
		this.app.input.mod_state.caps = false;
		this.app.input.mod_state.mode = false;
		this.app.input.mod_state.ctrl = _key_event.ctrlKey;
		this.app.input.mod_state.shift = _key_event.shiftKey;
		this.app.input.mod_state.alt = _key_event.altKey;
		this.app.input.mod_state.meta = _key_event.metaKey;
		return this.app.input.mod_state;
	}
	,convert_keycode: function(dom_keycode) {
		if(dom_keycode >= 65 && dom_keycode <= 90) return dom_keycode + 32;
		return snow_core_web__$Runtime_DOMKeys.dom_key_to_keycode(dom_keycode);
	}
	,get_window_x: function(_bounds) {
		return Math.round(_bounds.left + window.pageXOffset - window.document.body.clientTop);
	}
	,get_window_y: function(_bounds) {
		return Math.round(_bounds.top + window.pageYOffset - window.document.body.clientLeft);
	}
	,update_window_bounds: function() {
		if(window.devicePixelRatio == null) this.window_dpr = 1.0; else this.window_dpr = window.devicePixelRatio;
		var _bounds = this.window.getBoundingClientRect();
		var _x = Math.round(_bounds.left + window.pageXOffset - window.document.body.clientTop);
		var _y = Math.round(_bounds.top + window.pageYOffset - window.document.body.clientLeft);
		var _w = Math.round(_bounds.width);
		var _h = Math.round(_bounds.height);
		if(_x != this.window_x || _y != this.window_y) {
			this.window_x = _x;
			this.window_y = _y;
			this.dispatch_window_ev(4,this.window_x,this.window_y);
		}
		if(_w != this.window_w || _h != this.window_h) {
			this.window_w = _w;
			this.window_h = _h;
			this.window.width = Math.floor(this.window_w * this.window_dpr);
			this.window.height = Math.floor(this.window_h * this.window_dpr);
			this.dispatch_window_ev(6,this.window.width,this.window.height);
		}
	}
	,gamepads_init_cache: function(_gamepad) {
		this.gamepad_btns_cache[_gamepad.index] = [];
		var _g1 = 0;
		var _g = _gamepad.buttons.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.gamepad_btns_cache[_gamepad.index].push(0);
		}
	}
	,gamepads_init: function() {
		var _list;
		if(($_=window.navigator,$bind($_,$_.getGamepads)) != null) _list = window.navigator.getGamepads(); else if(window.navigator.webkitGetGamepads != null) _list = window.navigator.webkitGetGamepads(); else _list = null;
		if(_list != null) {
			this.gamepads_supported = true;
			this.gamepad_btns_cache = [];
			var _g = 0;
			while(_g < _list.length) {
				var _gamepad = _list[_g];
				++_g;
				if(_gamepad != null) this.gamepads_init_cache(_gamepad);
			}
		} else haxe_Log.trace("  i / runtime / " + "Gamepads are not supported in this browser :(",{ fileName : "Runtime.hx", lineNumber : 861, className : "snow.core.web.Runtime", methodName : "gamepads_init"});
	}
	,gamepads_poll: function() {
		var list;
		if(($_=window.navigator,$bind($_,$_.getGamepads)) != null) list = window.navigator.getGamepads(); else if(window.navigator.webkitGetGamepads != null) list = window.navigator.webkitGetGamepads(); else list = null;
		if(list == null) throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("list was null" + (" ( " + "gamepad list not found, but they were previously?" + " )")));
		var _count = list.length;
		var _idx = 0;
		while(_idx < _count) {
			var _gamepad = list[_idx];
			if(_gamepad == null) {
				_idx++;
				continue;
			}
			var _g1 = 0;
			var _g = _gamepad.axes.length;
			while(_g1 < _g) {
				var _axis_idx = _g1++;
				var _axis = _gamepad.axes[_axis_idx];
				if(_axis != 0) this.app.input.dispatch_gamepad_axis_event(_gamepad.index,_axis_idx,_axis,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start);
			}
			var _prev_btn = this.gamepad_btns_cache[_gamepad.index];
			var _g11 = 0;
			var _g2 = _gamepad.buttons.length;
			while(_g11 < _g2) {
				var _btn_idx = _g11++;
				var _btn = _gamepad.buttons[_btn_idx];
				if(_btn.value != _prev_btn[_btn_idx]) {
					if(_btn.pressed) this.app.input.dispatch_gamepad_button_down_event(_gamepad.index,_btn_idx,_btn.value,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start); else this.app.input.dispatch_gamepad_button_up_event(_gamepad.index,_btn_idx,_btn.value,window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start);
					_prev_btn[_btn_idx] = _btn.value;
				}
			}
			_idx++;
		}
	}
	,gamepads_get_list: function() {
		if(($_=window.navigator,$bind($_,$_.getGamepads)) != null) return window.navigator.getGamepads();
		if(window.navigator.webkitGetGamepads != null) return window.navigator.webkitGetGamepads();
		return null;
	}
	,guess_os: function() {
		var _ver = window.navigator.appVersion;
		var _agent = window.navigator.userAgent;
		if((function($this) {
			var $r;
			var r = new EReg("mac","gi");
			$r = r.match(_ver);
			return $r;
		}(this))) return "mac";
		if((function($this) {
			var $r;
			var r1 = new EReg("win","gi");
			$r = r1.match(_ver);
			return $r;
		}(this))) return "windows";
		if((function($this) {
			var $r;
			var r2 = new EReg("x11","gi");
			$r = r2.match(_ver);
			return $r;
		}(this))) return "linux";
		if((function($this) {
			var $r;
			var r3 = new EReg("linux","gi");
			$r = r3.match(_ver);
			return $r;
		}(this))) return "linux";
		if((function($this) {
			var $r;
			var r4 = new EReg("android","gi");
			$r = r4.match(_ver);
			return $r;
		}(this))) return "android";
		if((function($this) {
			var $r;
			var r5 = new EReg("ipad","gi");
			$r = r5.match(_agent);
			return $r;
		}(this))) return "ios";
		if((function($this) {
			var $r;
			var r6 = new EReg("iphone","gi");
			$r = r6.match(_agent);
			return $r;
		}(this))) return "ios";
		if((function($this) {
			var $r;
			var r7 = new EReg("ipod","gi");
			$r = r7.match(_agent);
			return $r;
		}(this))) return "ios";
		return "unknown";
	}
	,__class__: snow_core_web_Runtime
};
var snow_core_web__$Runtime_DOMKeys = function() { };
$hxClasses["snow.core.web._Runtime.DOMKeys"] = snow_core_web__$Runtime_DOMKeys;
snow_core_web__$Runtime_DOMKeys.__name__ = ["snow","core","web","_Runtime","DOMKeys"];
snow_core_web__$Runtime_DOMKeys.dom_key_to_keycode = function(_keycode) {
	switch(_keycode) {
	case 16:
		return 1073742049;
	case 17:
		return 1073742048;
	case 18:
		return 1073742050;
	case 20:
		return 1073741881;
	case 33:
		return 1073741899;
	case 34:
		return 1073741902;
	case 35:
		return 1073741901;
	case 36:
		return 1073741898;
	case 37:
		return 1073741904;
	case 38:
		return 1073741906;
	case 39:
		return 1073741903;
	case 40:
		return 1073741905;
	case 44:
		return 1073741894;
	case 45:
		return 1073741897;
	case 46:
		return 127;
	case 91:
		return 1073742051;
	case 93:
		return 1073742055;
	case 224:
		return 1073742051;
	case 96:
		return 1073741922;
	case 97:
		return 1073741913;
	case 98:
		return 1073741914;
	case 99:
		return 1073741915;
	case 100:
		return 1073741916;
	case 101:
		return 1073741917;
	case 102:
		return 1073741918;
	case 103:
		return 1073741919;
	case 104:
		return 1073741920;
	case 105:
		return 1073741921;
	case 106:
		return 1073741909;
	case 107:
		return 1073741911;
	case 109:
		return 1073741910;
	case 110:
		return 1073742044;
	case 111:
		return 1073741908;
	case 144:
		return 1073741907;
	case 112:
		return 1073741882;
	case 113:
		return 1073741883;
	case 114:
		return 1073741884;
	case 115:
		return 1073741885;
	case 116:
		return 1073741886;
	case 117:
		return 1073741887;
	case 118:
		return 1073741888;
	case 119:
		return 1073741889;
	case 120:
		return 1073741890;
	case 121:
		return 1073741891;
	case 122:
		return 1073741892;
	case 123:
		return 1073741893;
	case 124:
		return 1073741928;
	case 125:
		return 1073741929;
	case 126:
		return 1073741930;
	case 127:
		return 1073741931;
	case 128:
		return 1073741932;
	case 129:
		return 1073741933;
	case 130:
		return 1073741934;
	case 131:
		return 1073741935;
	case 132:
		return 1073741936;
	case 133:
		return 1073741937;
	case 134:
		return 1073741938;
	case 135:
		return 1073741939;
	case 160:
		return 94;
	case 161:
		return 33;
	case 162:
		return 34;
	case 163:
		return 35;
	case 164:
		return 36;
	case 165:
		return 37;
	case 166:
		return 38;
	case 167:
		return 95;
	case 168:
		return 40;
	case 169:
		return 41;
	case 170:
		return 42;
	case 171:
		return 43;
	case 172:
		return 92;
	case 173:
		return 45;
	case 174:
		return 91;
	case 175:
		return 93;
	case 176:
		return 96;
	case 181:
		return 1073742086;
	case 182:
		return 1073741953;
	case 183:
		return 1073741952;
	case 188:
		return 44;
	case 190:
		return 46;
	case 191:
		return 47;
	case 192:
		return 96;
	case 219:
		return 91;
	case 221:
		return 93;
	case 220:
		return 92;
	case 222:
		return 39;
	}
	return _keycode;
};
var snow_modules_interfaces_Assets = function() { };
$hxClasses["snow.modules.interfaces.Assets"] = snow_modules_interfaces_Assets;
snow_modules_interfaces_Assets.__name__ = ["snow","modules","interfaces","Assets"];
snow_modules_interfaces_Assets.prototype = {
	__class__: snow_modules_interfaces_Assets
};
var snow_core_web_assets_Assets = function(_app) {
	this.app = _app;
};
$hxClasses["snow.core.web.assets.Assets"] = snow_core_web_assets_Assets;
snow_core_web_assets_Assets.__name__ = ["snow","core","web","assets","Assets"];
snow_core_web_assets_Assets.__interfaces__ = [snow_modules_interfaces_Assets];
snow_core_web_assets_Assets.prototype = {
	onevent: function(event) {
	}
	,shutdown: function() {
	}
	,image_info_from_load: function(_id,_components) {
		if(_components == null) _components = 4;
		return this.app.io.data_flow(_id,snow_systems_assets_AssetImage.processor);
	}
	,image_info_from_element: function(_id,_elem) {
		var width_pot = this.nearest_power_of_two(_elem.width);
		var height_pot = this.nearest_power_of_two(_elem.height);
		var image_bytes = this.POT_bytes_from_element(_elem.width,_elem.height,width_pot,height_pot,_elem);
		var info = new snow_types_ImageData(this.app,{ id : _id, bpp : 4, width : _elem.width, height : _elem.height, width_actual : width_pot, height_actual : height_pot, bpp_source : 4, pixels : image_bytes});
		image_bytes = null;
		return info;
	}
	,image_info_from_pixels: function(_id,_width,_height,_pixels,_bpp) {
		if(_bpp == null) _bpp = 4;
		var info = new snow_types_ImageData(this.app,{ id : _id, bpp : 4, width : _width, height : _height, width_actual : _width, height_actual : _height, bpp_source : 4, pixels : _pixels});
		return info;
	}
	,image_info_from_bytes: function(_id,_bytes,_components) {
		if(_components == null) _components = 4;
		var _g = this;
		if(_id == null) throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_id was null" + ""));
		if(_bytes == null) throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_bytes was null" + ""));
		if(!(_bytes.length != 0)) throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("_bytes.length != 0" + ""));
		var ext = haxe_io_Path.extension(_id);
		return new snow_api_Promise(function(resolve,reject) {
			var str = "";
			var i = 0;
			var len = _bytes.length;
			while(i < len) str += String.fromCharCode((function($this) {
				var $r;
				var idx = i++;
				$r = _bytes[idx];
				return $r;
			}(this)) & 255);
			var b64 = window.btoa(str);
			var src = "data:image/" + ext + ";base64," + b64;
			var _img = new Image();
			_img.onload = function(_) {
				var info = _g.image_info_from_element(_id,_img);
				resolve(info);
			};
			_img.onerror = function(e) {
				reject(snow_types_Error.error("failed to load image from bytes, on error: " + e));
			};
			_img.src = src;
		});
	}
	,POT_bytes_from_pixels: function(_width,_height,_width_pot,_height_pot,_source) {
		var tmp_canvas;
		var _this = window.document;
		tmp_canvas = _this.createElement("canvas");
		tmp_canvas.width = _width_pot;
		tmp_canvas.height = _height_pot;
		var tmp_context = tmp_canvas.getContext("2d",null);
		tmp_context.clearRect(0,0,tmp_canvas.width,tmp_canvas.height);
		var image_bytes = null;
		var _pixels = new Uint8ClampedArray(_source.buffer);
		var _imgdata = tmp_context.createImageData(_width,_height);
		_imgdata.data.set(_pixels);
		try {
			tmp_context.putImageData(_imgdata,0,0);
			image_bytes = tmp_context.getImageData(0,0,tmp_canvas.width,tmp_canvas.height);
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			var tips = "- textures served from file:/// throw security errors\n";
			tips += "- textures served over http:// work for cross origin byte requests";
			haxe_Log.trace("   i / assets / " + tips,{ fileName : "Assets.hx", lineNumber : 183, className : "snow.core.web.assets.Assets", methodName : "POT_bytes_from_pixels"});
			throw new js__$Boot_HaxeError(e);
		}
		tmp_canvas = null;
		tmp_context = null;
		_imgdata = null;
		return new Uint8Array(image_bytes.data);
	}
	,POT_bytes_from_element: function(_width,_height,_width_pot,_height_pot,_source) {
		var tmp_canvas;
		var _this = window.document;
		tmp_canvas = _this.createElement("canvas");
		tmp_canvas.width = _width_pot;
		tmp_canvas.height = _height_pot;
		var tmp_context = tmp_canvas.getContext("2d",null);
		tmp_context.clearRect(0,0,tmp_canvas.width,tmp_canvas.height);
		tmp_context.drawImage(_source,0,0,_width,_height);
		var image_bytes = null;
		try {
			image_bytes = tmp_context.getImageData(0,0,tmp_canvas.width,tmp_canvas.height);
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			var tips = "- textures served from file:/// throw security errors\n";
			tips += "- textures served over http:// work for cross origin byte requests";
			haxe_Log.trace("   i / assets / " + tips,{ fileName : "Assets.hx", lineNumber : 221, className : "snow.core.web.assets.Assets", methodName : "POT_bytes_from_element"});
			throw new js__$Boot_HaxeError(e);
		}
		tmp_canvas = null;
		tmp_context = null;
		return new Uint8Array(image_bytes.data);
	}
	,nearest_power_of_two: function(_value) {
		if(!snow_core_web_assets_Assets.POT) return _value;
		_value--;
		_value |= _value >> 1;
		_value |= _value >> 2;
		_value |= _value >> 4;
		_value |= _value >> 8;
		_value |= _value >> 16;
		_value++;
		return _value;
	}
	,__class__: snow_core_web_assets_Assets
};
var snow_modules_interfaces_IO = function() { };
$hxClasses["snow.modules.interfaces.IO"] = snow_modules_interfaces_IO;
snow_modules_interfaces_IO.__name__ = ["snow","modules","interfaces","IO"];
snow_modules_interfaces_IO.prototype = {
	__class__: snow_modules_interfaces_IO
};
var snow_core_web_io_IO = function(_app) {
	this.app = _app;
};
$hxClasses["snow.core.web.io.IO"] = snow_core_web_io_IO;
snow_core_web_io_IO.__name__ = ["snow","core","web","io","IO"];
snow_core_web_io_IO.__interfaces__ = [snow_modules_interfaces_IO];
snow_core_web_io_IO.prototype = {
	shutdown: function() {
	}
	,onevent: function(_event) {
	}
	,app_path: function() {
		return "./";
	}
	,app_path_prefs: function() {
		return "./";
	}
	,url_open: function(_url) {
		if(_url != null && _url.length > 0) window.open(_url,"_blank");
	}
	,data_load: function(_path,_options) {
		return new snow_api_Promise(function(resolve,reject) {
			var _async = true;
			var _binary = true;
			if(_options != null) {
				if(_options.binary != null) _binary = _options.binary;
			}
			var request = new XMLHttpRequest();
			request.open("GET",_path,_async);
			if(_binary) request.overrideMimeType("text/plain; charset=x-user-defined"); else request.overrideMimeType("text/plain; charset=UTF-8");
			if(_async) request.responseType = "arraybuffer";
			request.onload = function(data) {
				if(request.status == 200) resolve((function($this) {
					var $r;
					var _elements = request.response;
					$r = new Uint8Array(_elements);
					return $r;
				}(this))); else reject(snow_types_Error.error("request status was " + request.status + " / " + request.statusText));
			};
			request.send();
		});
	}
	,data_save: function(_path,_data,_options) {
		return false;
	}
	,string_save_path: function(_slot) {
		if(_slot == null) _slot = 0;
		var _pref_path = "<localstorage>";
		var _slot_path = this.string_slot_id(_slot);
		var _path = haxe_io_Path.join([_pref_path,_slot_path]);
		return haxe_io_Path.normalize(_path);
	}
	,string_slot_id: function(_slot) {
		if(_slot == null) _slot = 0;
		var _parts = snow_types_Config.app_ident.split(".");
		var _appname = _parts.pop();
		var _org = _parts.join(".");
		return "" + _org + "/" + _appname + "/" + this.app.io.string_save_prefix + "." + _slot;
	}
	,string_slot_destroy: function(_slot) {
		if(_slot == null) _slot = 0;
		var storage = window.localStorage;
		if(storage == null) {
			haxe_Log.trace("       i / io / " + "localStorage isnt supported in this browser?!",{ fileName : "IO.hx", lineNumber : 119, className : "snow.core.web.io.IO", methodName : "string_slot_destroy"});
			return false;
		}
		var _id = this.string_slot_id(_slot);
		storage.removeItem(_id);
		return false;
	}
	,string_slot_save: function(_slot,_contents) {
		if(_slot == null) _slot = 0;
		var storage = window.localStorage;
		if(storage == null) {
			haxe_Log.trace("       i / io / " + "localStorage isnt supported in this browser?!",{ fileName : "IO.hx", lineNumber : 136, className : "snow.core.web.io.IO", methodName : "string_slot_save"});
			return false;
		}
		var _id = this.string_slot_id(_slot);
		storage.setItem(_id,_contents);
		return true;
	}
	,string_slot_load: function(_slot) {
		if(_slot == null) _slot = 0;
		var storage = window.localStorage;
		if(storage == null) {
			haxe_Log.trace("       i / io / " + "localStorage isnt supported in this browser?!",{ fileName : "IO.hx", lineNumber : 154, className : "snow.core.web.io.IO", methodName : "string_slot_load"});
			return null;
		}
		var _id = this.string_slot_id(_slot);
		return storage.getItem(_id);
	}
	,string_slot_encode: function(_string) {
		return window.btoa(_string);
	}
	,string_slot_decode: function(_string) {
		return window.atob(_string);
	}
	,__class__: snow_core_web_io_IO
};
var snow_modules_opengl_web_GL = function() { };
$hxClasses["snow.modules.opengl.web.GL"] = snow_modules_opengl_web_GL;
snow_modules_opengl_web_GL.__name__ = ["snow","modules","opengl","web","GL"];
snow_modules_opengl_web_GL.__properties__ = {get_version:"get_version"}
snow_modules_opengl_web_GL.versionString = function() {
	var ver = snow_modules_opengl_web_GL.gl.getParameter(7938);
	var slver = snow_modules_opengl_web_GL.gl.getParameter(35724);
	var ren = snow_modules_opengl_web_GL.gl.getParameter(7937);
	var ven = snow_modules_opengl_web_GL.gl.getParameter(7936);
	return "/ " + ver + " / " + slver + " / " + ren + " / " + ven + " /";
};
snow_modules_opengl_web_GL.activeTexture = function(texture) {
	snow_modules_opengl_web_GL.gl.activeTexture(texture);
};
snow_modules_opengl_web_GL.attachShader = function(program,shader) {
	snow_modules_opengl_web_GL.gl.attachShader(program,shader);
};
snow_modules_opengl_web_GL.bindAttribLocation = function(program,index,name) {
	snow_modules_opengl_web_GL.gl.bindAttribLocation(program,index,name);
};
snow_modules_opengl_web_GL.bindBuffer = function(target,buffer) {
	snow_modules_opengl_web_GL.gl.bindBuffer(target,buffer);
};
snow_modules_opengl_web_GL.bindFramebuffer = function(target,framebuffer) {
	snow_modules_opengl_web_GL.gl.bindFramebuffer(target,framebuffer);
};
snow_modules_opengl_web_GL.bindRenderbuffer = function(target,renderbuffer) {
	snow_modules_opengl_web_GL.gl.bindRenderbuffer(target,renderbuffer);
};
snow_modules_opengl_web_GL.bindTexture = function(target,texture) {
	snow_modules_opengl_web_GL.gl.bindTexture(target,texture);
};
snow_modules_opengl_web_GL.blendColor = function(red,green,blue,alpha) {
	snow_modules_opengl_web_GL.gl.blendColor(red,green,blue,alpha);
};
snow_modules_opengl_web_GL.blendEquation = function(mode) {
	snow_modules_opengl_web_GL.gl.blendEquation(mode);
};
snow_modules_opengl_web_GL.blendEquationSeparate = function(modeRGB,modeAlpha) {
	snow_modules_opengl_web_GL.gl.blendEquationSeparate(modeRGB,modeAlpha);
};
snow_modules_opengl_web_GL.blendFunc = function(sfactor,dfactor) {
	snow_modules_opengl_web_GL.gl.blendFunc(sfactor,dfactor);
};
snow_modules_opengl_web_GL.blendFuncSeparate = function(srcRGB,dstRGB,srcAlpha,dstAlpha) {
	snow_modules_opengl_web_GL.gl.blendFuncSeparate(srcRGB,dstRGB,srcAlpha,dstAlpha);
};
snow_modules_opengl_web_GL.bufferData = function(target,data,usage) {
	snow_modules_opengl_web_GL.gl.bufferData(target,data,usage);
};
snow_modules_opengl_web_GL.bufferSubData = function(target,offset,data) {
	snow_modules_opengl_web_GL.gl.bufferSubData(target,offset,data);
};
snow_modules_opengl_web_GL.checkFramebufferStatus = function(target) {
	return snow_modules_opengl_web_GL.gl.checkFramebufferStatus(target);
};
snow_modules_opengl_web_GL.clear = function(mask) {
	snow_modules_opengl_web_GL.gl.clear(mask);
};
snow_modules_opengl_web_GL.clearColor = function(red,green,blue,alpha) {
	snow_modules_opengl_web_GL.gl.clearColor(red,green,blue,alpha);
};
snow_modules_opengl_web_GL.clearDepth = function(depth) {
	snow_modules_opengl_web_GL.gl.clearDepth(depth);
};
snow_modules_opengl_web_GL.clearStencil = function(s) {
	snow_modules_opengl_web_GL.gl.clearStencil(s);
};
snow_modules_opengl_web_GL.colorMask = function(red,green,blue,alpha) {
	snow_modules_opengl_web_GL.gl.colorMask(red,green,blue,alpha);
};
snow_modules_opengl_web_GL.compileShader = function(shader) {
	snow_modules_opengl_web_GL.gl.compileShader(shader);
};
snow_modules_opengl_web_GL.compressedTexImage2D = function(target,level,internalformat,width,height,border,data) {
	snow_modules_opengl_web_GL.gl.compressedTexImage2D(target,level,internalformat,width,height,border,data);
};
snow_modules_opengl_web_GL.compressedTexSubImage2D = function(target,level,xoffset,yoffset,width,height,format,data) {
	snow_modules_opengl_web_GL.gl.compressedTexSubImage2D(target,level,xoffset,yoffset,width,height,format,data);
};
snow_modules_opengl_web_GL.copyTexImage2D = function(target,level,internalformat,x,y,width,height,border) {
	snow_modules_opengl_web_GL.gl.copyTexImage2D(target,level,internalformat,x,y,width,height,border);
};
snow_modules_opengl_web_GL.copyTexSubImage2D = function(target,level,xoffset,yoffset,x,y,width,height) {
	snow_modules_opengl_web_GL.gl.copyTexSubImage2D(target,level,xoffset,yoffset,x,y,width,height);
};
snow_modules_opengl_web_GL.createBuffer = function() {
	return snow_modules_opengl_web_GL.gl.createBuffer();
};
snow_modules_opengl_web_GL.createFramebuffer = function() {
	return snow_modules_opengl_web_GL.gl.createFramebuffer();
};
snow_modules_opengl_web_GL.createProgram = function() {
	return snow_modules_opengl_web_GL.gl.createProgram();
};
snow_modules_opengl_web_GL.createRenderbuffer = function() {
	return snow_modules_opengl_web_GL.gl.createRenderbuffer();
};
snow_modules_opengl_web_GL.createShader = function(type) {
	return snow_modules_opengl_web_GL.gl.createShader(type);
};
snow_modules_opengl_web_GL.createTexture = function() {
	return snow_modules_opengl_web_GL.gl.createTexture();
};
snow_modules_opengl_web_GL.cullFace = function(mode) {
	snow_modules_opengl_web_GL.gl.cullFace(mode);
};
snow_modules_opengl_web_GL.deleteBuffer = function(buffer) {
	snow_modules_opengl_web_GL.gl.deleteBuffer(buffer);
};
snow_modules_opengl_web_GL.deleteFramebuffer = function(framebuffer) {
	snow_modules_opengl_web_GL.gl.deleteFramebuffer(framebuffer);
};
snow_modules_opengl_web_GL.deleteProgram = function(program) {
	snow_modules_opengl_web_GL.gl.deleteProgram(program);
};
snow_modules_opengl_web_GL.deleteRenderbuffer = function(renderbuffer) {
	snow_modules_opengl_web_GL.gl.deleteRenderbuffer(renderbuffer);
};
snow_modules_opengl_web_GL.deleteShader = function(shader) {
	snow_modules_opengl_web_GL.gl.deleteShader(shader);
};
snow_modules_opengl_web_GL.deleteTexture = function(texture) {
	snow_modules_opengl_web_GL.gl.deleteTexture(texture);
};
snow_modules_opengl_web_GL.depthFunc = function(func) {
	snow_modules_opengl_web_GL.gl.depthFunc(func);
};
snow_modules_opengl_web_GL.depthMask = function(flag) {
	snow_modules_opengl_web_GL.gl.depthMask(flag);
};
snow_modules_opengl_web_GL.depthRange = function(zNear,zFar) {
	snow_modules_opengl_web_GL.gl.depthRange(zNear,zFar);
};
snow_modules_opengl_web_GL.detachShader = function(program,shader) {
	snow_modules_opengl_web_GL.gl.detachShader(program,shader);
};
snow_modules_opengl_web_GL.disable = function(cap) {
	snow_modules_opengl_web_GL.gl.disable(cap);
};
snow_modules_opengl_web_GL.disableVertexAttribArray = function(index) {
	snow_modules_opengl_web_GL.gl.disableVertexAttribArray(index);
};
snow_modules_opengl_web_GL.drawArrays = function(mode,first,count) {
	snow_modules_opengl_web_GL.gl.drawArrays(mode,first,count);
};
snow_modules_opengl_web_GL.drawElements = function(mode,count,type,offset) {
	snow_modules_opengl_web_GL.gl.drawElements(mode,count,type,offset);
};
snow_modules_opengl_web_GL.enable = function(cap) {
	snow_modules_opengl_web_GL.gl.enable(cap);
};
snow_modules_opengl_web_GL.enableVertexAttribArray = function(index) {
	snow_modules_opengl_web_GL.gl.enableVertexAttribArray(index);
};
snow_modules_opengl_web_GL.finish = function() {
	snow_modules_opengl_web_GL.gl.finish();
};
snow_modules_opengl_web_GL.flush = function() {
	snow_modules_opengl_web_GL.gl.flush();
};
snow_modules_opengl_web_GL.framebufferRenderbuffer = function(target,attachment,renderbuffertarget,renderbuffer) {
	snow_modules_opengl_web_GL.gl.framebufferRenderbuffer(target,attachment,renderbuffertarget,renderbuffer);
};
snow_modules_opengl_web_GL.framebufferTexture2D = function(target,attachment,textarget,texture,level) {
	snow_modules_opengl_web_GL.gl.framebufferTexture2D(target,attachment,textarget,texture,level);
};
snow_modules_opengl_web_GL.frontFace = function(mode) {
	snow_modules_opengl_web_GL.gl.frontFace(mode);
};
snow_modules_opengl_web_GL.generateMipmap = function(target) {
	snow_modules_opengl_web_GL.gl.generateMipmap(target);
};
snow_modules_opengl_web_GL.getActiveAttrib = function(program,index) {
	return snow_modules_opengl_web_GL.gl.getActiveAttrib(program,index);
};
snow_modules_opengl_web_GL.getActiveUniform = function(program,index) {
	return snow_modules_opengl_web_GL.gl.getActiveUniform(program,index);
};
snow_modules_opengl_web_GL.getAttachedShaders = function(program) {
	return snow_modules_opengl_web_GL.gl.getAttachedShaders(program);
};
snow_modules_opengl_web_GL.getAttribLocation = function(program,name) {
	return snow_modules_opengl_web_GL.gl.getAttribLocation(program,name);
};
snow_modules_opengl_web_GL.getBufferParameter = function(target,pname) {
	return snow_modules_opengl_web_GL.gl.getBufferParameter(target,pname);
};
snow_modules_opengl_web_GL.getContextAttributes = function() {
	return snow_modules_opengl_web_GL.gl.getContextAttributes();
};
snow_modules_opengl_web_GL.getError = function() {
	return snow_modules_opengl_web_GL.gl.getError();
};
snow_modules_opengl_web_GL.getExtension = function(name) {
	return snow_modules_opengl_web_GL.gl.getExtension(name);
};
snow_modules_opengl_web_GL.getFramebufferAttachmentParameter = function(target,attachment,pname) {
	return snow_modules_opengl_web_GL.gl.getFramebufferAttachmentParameter(target,attachment,pname);
};
snow_modules_opengl_web_GL.getParameter = function(pname) {
	return snow_modules_opengl_web_GL.gl.getParameter(pname);
};
snow_modules_opengl_web_GL.getProgramInfoLog = function(program) {
	return snow_modules_opengl_web_GL.gl.getProgramInfoLog(program);
};
snow_modules_opengl_web_GL.getProgramParameter = function(program,pname) {
	return snow_modules_opengl_web_GL.gl.getProgramParameter(program,pname);
};
snow_modules_opengl_web_GL.getRenderbufferParameter = function(target,pname) {
	return snow_modules_opengl_web_GL.gl.getRenderbufferParameter(target,pname);
};
snow_modules_opengl_web_GL.getShaderInfoLog = function(shader) {
	return snow_modules_opengl_web_GL.gl.getShaderInfoLog(shader);
};
snow_modules_opengl_web_GL.getShaderParameter = function(shader,pname) {
	return snow_modules_opengl_web_GL.gl.getShaderParameter(shader,pname);
};
snow_modules_opengl_web_GL.getShaderPrecisionFormat = function(shadertype,precisiontype) {
	return snow_modules_opengl_web_GL.gl.getShaderPrecisionFormat(shadertype,precisiontype);
};
snow_modules_opengl_web_GL.getShaderSource = function(shader) {
	return snow_modules_opengl_web_GL.gl.getShaderSource(shader);
};
snow_modules_opengl_web_GL.getSupportedExtensions = function() {
	return snow_modules_opengl_web_GL.gl.getSupportedExtensions();
};
snow_modules_opengl_web_GL.getTexParameter = function(target,pname) {
	return snow_modules_opengl_web_GL.gl.getTexParameter(target,pname);
};
snow_modules_opengl_web_GL.getUniform = function(program,location) {
	return snow_modules_opengl_web_GL.gl.getUniform(program,location);
};
snow_modules_opengl_web_GL.getUniformLocation = function(program,name) {
	return snow_modules_opengl_web_GL.gl.getUniformLocation(program,name);
};
snow_modules_opengl_web_GL.getVertexAttrib = function(index,pname) {
	return snow_modules_opengl_web_GL.gl.getVertexAttrib(index,pname);
};
snow_modules_opengl_web_GL.getVertexAttribOffset = function(index,pname) {
	return snow_modules_opengl_web_GL.gl.getVertexAttribOffset(index,pname);
};
snow_modules_opengl_web_GL.hint = function(target,mode) {
	snow_modules_opengl_web_GL.gl.hint(target,mode);
};
snow_modules_opengl_web_GL.isBuffer = function(buffer) {
	return snow_modules_opengl_web_GL.gl.isBuffer(buffer);
};
snow_modules_opengl_web_GL.isEnabled = function(cap) {
	return snow_modules_opengl_web_GL.gl.isEnabled(cap);
};
snow_modules_opengl_web_GL.isFramebuffer = function(framebuffer) {
	return snow_modules_opengl_web_GL.gl.isFramebuffer(framebuffer);
};
snow_modules_opengl_web_GL.isProgram = function(program) {
	return snow_modules_opengl_web_GL.gl.isProgram(program);
};
snow_modules_opengl_web_GL.isRenderbuffer = function(renderbuffer) {
	return snow_modules_opengl_web_GL.gl.isRenderbuffer(renderbuffer);
};
snow_modules_opengl_web_GL.isShader = function(shader) {
	return snow_modules_opengl_web_GL.gl.isShader(shader);
};
snow_modules_opengl_web_GL.isTexture = function(texture) {
	return snow_modules_opengl_web_GL.gl.isTexture(texture);
};
snow_modules_opengl_web_GL.lineWidth = function(width) {
	snow_modules_opengl_web_GL.gl.lineWidth(width);
};
snow_modules_opengl_web_GL.linkProgram = function(program) {
	snow_modules_opengl_web_GL.gl.linkProgram(program);
};
snow_modules_opengl_web_GL.pixelStorei = function(pname,param) {
	snow_modules_opengl_web_GL.gl.pixelStorei(pname,param);
};
snow_modules_opengl_web_GL.polygonOffset = function(factor,units) {
	snow_modules_opengl_web_GL.gl.polygonOffset(factor,units);
};
snow_modules_opengl_web_GL.readPixels = function(x,y,width,height,format,type,data) {
	snow_modules_opengl_web_GL.gl.readPixels(x,y,width,height,format,type,data);
};
snow_modules_opengl_web_GL.renderbufferStorage = function(target,internalformat,width,height) {
	snow_modules_opengl_web_GL.gl.renderbufferStorage(target,internalformat,width,height);
};
snow_modules_opengl_web_GL.sampleCoverage = function(value,invert) {
	snow_modules_opengl_web_GL.gl.sampleCoverage(value,invert);
};
snow_modules_opengl_web_GL.scissor = function(x,y,width,height) {
	snow_modules_opengl_web_GL.gl.scissor(x,y,width,height);
};
snow_modules_opengl_web_GL.shaderSource = function(shader,source) {
	snow_modules_opengl_web_GL.gl.shaderSource(shader,source);
};
snow_modules_opengl_web_GL.stencilFunc = function(func,ref,mask) {
	snow_modules_opengl_web_GL.gl.stencilFunc(func,ref,mask);
};
snow_modules_opengl_web_GL.stencilFuncSeparate = function(face,func,ref,mask) {
	snow_modules_opengl_web_GL.gl.stencilFuncSeparate(face,func,ref,mask);
};
snow_modules_opengl_web_GL.stencilMask = function(mask) {
	snow_modules_opengl_web_GL.gl.stencilMask(mask);
};
snow_modules_opengl_web_GL.stencilMaskSeparate = function(face,mask) {
	snow_modules_opengl_web_GL.gl.stencilMaskSeparate(face,mask);
};
snow_modules_opengl_web_GL.stencilOp = function(fail,zfail,zpass) {
	snow_modules_opengl_web_GL.gl.stencilOp(fail,zfail,zpass);
};
snow_modules_opengl_web_GL.stencilOpSeparate = function(face,fail,zfail,zpass) {
	snow_modules_opengl_web_GL.gl.stencilOpSeparate(face,fail,zfail,zpass);
};
snow_modules_opengl_web_GL.texImage2D = function(target,level,internalformat,width,height,border,format,type,data) {
	snow_modules_opengl_web_GL.gl.texImage2D(target,level,internalformat,width,height,border,format,type,data);
};
snow_modules_opengl_web_GL.texParameterf = function(target,pname,param) {
	snow_modules_opengl_web_GL.gl.texParameterf(target,pname,param);
};
snow_modules_opengl_web_GL.texParameteri = function(target,pname,param) {
	snow_modules_opengl_web_GL.gl.texParameteri(target,pname,param);
};
snow_modules_opengl_web_GL.texSubImage2D = function(target,level,xoffset,yoffset,width,height,format,type,data) {
	snow_modules_opengl_web_GL.gl.texSubImage2D(target,level,xoffset,yoffset,width,height,format,type,data);
};
snow_modules_opengl_web_GL.uniform1f = function(location,x) {
	snow_modules_opengl_web_GL.gl.uniform1f(location,x);
};
snow_modules_opengl_web_GL.uniform1fv = function(location,data) {
	snow_modules_opengl_web_GL.gl.uniform1fv(location,data);
};
snow_modules_opengl_web_GL.uniform1i = function(location,x) {
	snow_modules_opengl_web_GL.gl.uniform1i(location,x);
};
snow_modules_opengl_web_GL.uniform1iv = function(location,data) {
	snow_modules_opengl_web_GL.gl.uniform1iv(location,data);
};
snow_modules_opengl_web_GL.uniform2f = function(location,x,y) {
	snow_modules_opengl_web_GL.gl.uniform2f(location,x,y);
};
snow_modules_opengl_web_GL.uniform2fv = function(location,data) {
	snow_modules_opengl_web_GL.gl.uniform2fv(location,data);
};
snow_modules_opengl_web_GL.uniform2i = function(location,x,y) {
	snow_modules_opengl_web_GL.gl.uniform2i(location,x,y);
};
snow_modules_opengl_web_GL.uniform2iv = function(location,data) {
	snow_modules_opengl_web_GL.gl.uniform2iv(location,data);
};
snow_modules_opengl_web_GL.uniform3f = function(location,x,y,z) {
	snow_modules_opengl_web_GL.gl.uniform3f(location,x,y,z);
};
snow_modules_opengl_web_GL.uniform3fv = function(location,data) {
	snow_modules_opengl_web_GL.gl.uniform3fv(location,data);
};
snow_modules_opengl_web_GL.uniform3i = function(location,x,y,z) {
	snow_modules_opengl_web_GL.gl.uniform3i(location,x,y,z);
};
snow_modules_opengl_web_GL.uniform3iv = function(location,data) {
	snow_modules_opengl_web_GL.gl.uniform3iv(location,data);
};
snow_modules_opengl_web_GL.uniform4f = function(location,x,y,z,w) {
	snow_modules_opengl_web_GL.gl.uniform4f(location,x,y,z,w);
};
snow_modules_opengl_web_GL.uniform4fv = function(location,data) {
	snow_modules_opengl_web_GL.gl.uniform4fv(location,data);
};
snow_modules_opengl_web_GL.uniform4i = function(location,x,y,z,w) {
	snow_modules_opengl_web_GL.gl.uniform4i(location,x,y,z,w);
};
snow_modules_opengl_web_GL.uniform4iv = function(location,data) {
	snow_modules_opengl_web_GL.gl.uniform4iv(location,data);
};
snow_modules_opengl_web_GL.uniformMatrix2fv = function(location,transpose,data) {
	snow_modules_opengl_web_GL.gl.uniformMatrix2fv(location,transpose,data);
};
snow_modules_opengl_web_GL.uniformMatrix3fv = function(location,transpose,data) {
	snow_modules_opengl_web_GL.gl.uniformMatrix3fv(location,transpose,data);
};
snow_modules_opengl_web_GL.uniformMatrix4fv = function(location,transpose,data) {
	snow_modules_opengl_web_GL.gl.uniformMatrix4fv(location,transpose,data);
};
snow_modules_opengl_web_GL.useProgram = function(program) {
	snow_modules_opengl_web_GL.gl.useProgram(program);
};
snow_modules_opengl_web_GL.validateProgram = function(program) {
	snow_modules_opengl_web_GL.gl.validateProgram(program);
};
snow_modules_opengl_web_GL.vertexAttrib1f = function(indx,x) {
	snow_modules_opengl_web_GL.gl.vertexAttrib1f(indx,x);
};
snow_modules_opengl_web_GL.vertexAttrib1fv = function(indx,data) {
	snow_modules_opengl_web_GL.gl.vertexAttrib1fv(indx,data);
};
snow_modules_opengl_web_GL.vertexAttrib2f = function(indx,x,y) {
	snow_modules_opengl_web_GL.gl.vertexAttrib2f(indx,x,y);
};
snow_modules_opengl_web_GL.vertexAttrib2fv = function(indx,data) {
	snow_modules_opengl_web_GL.gl.vertexAttrib2fv(indx,data);
};
snow_modules_opengl_web_GL.vertexAttrib3f = function(indx,x,y,z) {
	snow_modules_opengl_web_GL.gl.vertexAttrib3f(indx,x,y,z);
};
snow_modules_opengl_web_GL.vertexAttrib3fv = function(indx,data) {
	snow_modules_opengl_web_GL.gl.vertexAttrib3fv(indx,data);
};
snow_modules_opengl_web_GL.vertexAttrib4f = function(indx,x,y,z,w) {
	snow_modules_opengl_web_GL.gl.vertexAttrib4f(indx,x,y,z,w);
};
snow_modules_opengl_web_GL.vertexAttrib4fv = function(indx,data) {
	snow_modules_opengl_web_GL.gl.vertexAttrib4fv(indx,data);
};
snow_modules_opengl_web_GL.vertexAttribPointer = function(indx,size,type,normalized,stride,offset) {
	snow_modules_opengl_web_GL.gl.vertexAttribPointer(indx,size,type,normalized,stride,offset);
};
snow_modules_opengl_web_GL.viewport = function(x,y,width,height) {
	snow_modules_opengl_web_GL.gl.viewport(x,y,width,height);
};
snow_modules_opengl_web_GL.get_version = function() {
	return 7938;
};
var snow_modules_webaudio_Audio = function(_app) {
	this.active = false;
	this.handle_seq = 0;
	this.app = _app;
	this.instances = new haxe_ds_IntMap();
	try {
		this.context = new AudioContext();
	} catch( err ) {
		if (err instanceof js__$Boot_HaxeError) err = err.val;
		try {
			this.context = new window.webkitAudioContext();
		} catch( err1 ) {
			if (err1 instanceof js__$Boot_HaxeError) err1 = err1.val;
			haxe_Log.trace("    i / audio / " + "WebAudio: no AudioContext could be created! No audio loading or playback will be available.",{ fileName : "Audio.hx", lineNumber : 59, className : "snow.modules.webaudio.Audio", methodName : "new"});
			return;
		}
	}
	if(this.context == null) throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("context was null" + (" ( " + "Audio / webaudio / no AudioContext could be created, is the Web Audio API supported?" + " )")));
	var info = "channelCount: " + this.context.destination.channelCount + ", " + ("channelCountMode: \"" + this.context.destination.channelCountMode + "\", ") + ("channelInterpretation: \"" + this.context.destination.channelInterpretation + "\", ") + ("maxChannelCount: " + this.context.destination.maxChannelCount + ", ") + ("numberOfInputs: " + this.context.destination.numberOfInputs + ", ") + ("numberOfOutputs: " + this.context.destination.numberOfOutputs);
	haxe_Log.trace("    i / audio / " + ("webaudio: " + Std.string(this.context) + " / sampleRate: " + this.context.sampleRate + " / destination: " + info),{ fileName : "Audio.hx", lineNumber : 74, className : "snow.modules.webaudio.Audio", methodName : "new"});
	this.active = true;
};
$hxClasses["snow.modules.webaudio.Audio"] = snow_modules_webaudio_Audio;
snow_modules_webaudio_Audio.__name__ = ["snow","modules","webaudio","Audio"];
snow_modules_webaudio_Audio.__interfaces__ = [snow_modules_interfaces_Audio];
snow_modules_webaudio_Audio.prototype = {
	shutdown: function() {
		this.context.close();
	}
	,onevent: function(event) {
	}
	,snd_of: function(_handle) {
		return this.instances.h[_handle];
	}
	,play_buffer: function(_data) {
		var _node = this.context.createBufferSource();
		_node.buffer = _data.buffer;
		return _node;
	}
	,play_buffer_again: function(_handle,_snd,_start_time) {
		_snd.buffer_node = this.play_buffer(_snd.source.data);
		_snd.buffer_node.connect(_snd.pan_node);
		_snd.buffer_node.loop = _snd.loop;
		_snd.pan_node.connect(_snd.gain_node);
		_snd.gain_node.connect(this.context.destination);
		_snd.buffer_node.start(0,_start_time);
		_snd.buffer_node.onended = (function(f,a1) {
			return function() {
				f(a1);
			};
		})($bind(this,this.destroy_snd),_snd);
	}
	,play_instance: function(_handle,_source,_inst,_data,_buffer_node,_volume,_loop) {
		var _g = this;
		var _gain = this.context.createGain();
		var _pan = this.context.createPanner();
		var _node = null;
		var _pan_val = 0;
		_gain.gain.value = _volume;
		_pan.panningModel = "equalpower";
		_pan.setPosition(Math.cos(-1.5707),0,Math.sin(1.5707));
		if(_buffer_node != null) {
			_node = _buffer_node;
			_buffer_node.loop = _loop;
		}
		if(_data.media_node != null) {
			_node = _data.media_node;
			_data.media_elem.loop = _loop;
		}
		_node.connect(_pan);
		_pan.connect(_gain);
		_gain.connect(this.context.destination);
		var _snd = { handle : _handle, source : _source, instance : _inst, buffer_node : _buffer_node, media_node : _data.media_node, media_elem : _data.media_elem, gain_node : _gain, pan_node : _pan, state : 1, time_start : window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start, loop : _loop, pan : 0};
		this.instances.h[_handle] = _snd;
		if(_buffer_node != null) {
			_buffer_node.start(0);
			_buffer_node.onended = (function(f,a1) {
				return function() {
					f(a1);
				};
			})($bind(this,this.destroy_snd),_snd);
		}
		if(_data.media_node != null) {
			_data.media_elem.play();
			_data.media_node.addEventListener("ended",function() {
				_g.app.audio.emit_Int(0,_handle);
				_snd.state = 2;
			});
		}
	}
	,play: function(_source,_volume,_paused) {
		var _data = _source.data;
		var _handle = this.handle_seq;
		var _inst = _source.instance(_handle);
		if(_source.data.is_stream) {
			_data.media_elem.play();
			_data.media_elem.volume = 1.0;
			this.play_instance(_handle,_source,_inst,_data,null,_volume,false);
		} else this.play_instance(_handle,_source,_inst,_data,this.play_buffer(_data),_volume,false);
		this.handle_seq++;
		return _handle;
	}
	,loop: function(_source,_volume,_paused) {
		var _data = _source.data;
		var _handle = this.handle_seq;
		var _inst = _source.instance(_handle);
		if(_source.data.is_stream) {
			_data.media_elem.play();
			_data.media_elem.volume = 1.0;
			this.play_instance(_handle,_source,_inst,_data,null,_volume,true);
		} else this.play_instance(_handle,_source,_inst,_data,this.play_buffer(_data),_volume,true);
		this.handle_seq++;
		return _handle;
	}
	,stop_buffer: function(_snd) {
		_snd.buffer_node.stop();
		_snd.buffer_node.disconnect();
		_snd.gain_node.disconnect();
		_snd.pan_node.disconnect();
		_snd.buffer_node = null;
	}
	,pause: function(_handle) {
		var _snd = this.instances.h[_handle];
		if(_snd == null) return;
		_snd.time_pause = window.performance.now() / 1000.0 - snow_core_web_Runtime.timestamp_start - _snd.time_start;
		_snd.state = 0;
		if(_snd.buffer_node != null) this.stop_buffer(_snd); else if(_snd.media_node != null) _snd.media_elem.pause();
	}
	,unpause: function(_handle) {
		var _snd = this.instances.h[_handle];
		if(_snd == null) return;
		if(_snd.state != 0) return;
		if(_snd.media_node == null) this.play_buffer_again(_handle,_snd,_snd.time_pause); else _snd.media_elem.play();
		_snd.state = 1;
	}
	,destroy_snd: function(_snd) {
		if(_snd.buffer_node != null) {
			_snd.buffer_node.stop();
			_snd.buffer_node.disconnect();
			_snd.buffer_node = null;
		}
		if(_snd.media_node != null) {
			_snd.media_elem.pause();
			_snd.media_elem.currentTime = 0;
			_snd.media_node.disconnect();
			_snd.media_elem = null;
			_snd.media_node = null;
		}
		if(_snd.gain_node != null) {
			_snd.gain_node.disconnect();
			_snd.gain_node = null;
		}
		if(_snd.pan_node != null) {
			_snd.pan_node.disconnect();
			_snd.pan_node = null;
		}
		this.instances.remove(_snd.handle);
		_snd = null;
	}
	,stop: function(_handle) {
		var _snd = this.instances.h[_handle];
		if(_snd == null) return;
		this.destroy_snd(_snd);
		_snd.state = 2;
	}
	,volume: function(_handle,_volume) {
		var _snd = this.instances.h[_handle];
		if(_snd == null) return;
		_snd.gain_node.gain.value = _volume;
	}
	,pan: function(_handle,_pan) {
		var _snd = this.instances.h[_handle];
		if(_snd == null) return;
		_snd.pan = _pan;
		_snd.pan_node.setPosition(Math.cos((_pan - 1) * 1.5707),0,Math.sin((_pan + 1) * 1.5707));
	}
	,pitch: function(_handle,_pitch) {
		var _snd = this.instances.h[_handle];
		if(_snd == null) return;
		if(_snd.buffer_node != null) _snd.buffer_node.playbackRate.value = _pitch; else if(_snd.media_node != null) _snd.media_elem.playbackRate = _pitch;
	}
	,position: function(_handle,_time) {
		var _snd = this.instances.h[_handle];
		if(_snd == null) return;
		if(_snd.buffer_node != null) {
			this.stop_buffer(_snd);
			this.play_buffer_again(_handle,_snd,_time);
		} else _snd.media_elem.currentTime = _time;
	}
	,volume_of: function(_handle) {
		var _snd = this.instances.h[_handle];
		if(_snd == null) return 0.0;
		return _snd.gain_node.gain.value;
	}
	,pan_of: function(_handle) {
		var _snd = this.instances.h[_handle];
		if(_snd == null) return 0.0;
		return _snd.pan;
	}
	,pitch_of: function(_handle) {
		var _snd = this.instances.h[_handle];
		if(_snd == null) return 0.0;
		var _result = 1.0;
		if(_snd.buffer_node != null) _result = _snd.buffer_node.playbackRate.value; else if(_snd.media_node != null) _result = _snd.media_elem.playbackRate;
		return _result;
	}
	,position_of: function(_handle) {
		var _snd = this.instances.h[_handle];
		if(_snd == null) return 0.0;
		return 0.0;
	}
	,state_of: function(_handle) {
		var _snd = this.instances.h[_handle];
		if(_snd == null) return -1;
		return _snd.state;
	}
	,loop_of: function(_handle) {
		var _snd = this.instances.h[_handle];
		if(_snd == null) return false;
		return _snd.loop;
	}
	,instance_of: function(_handle) {
		var _snd = this.instances.h[_handle];
		if(_snd == null) return null;
		return _snd.instance;
	}
	,suspend: function() {
		this.context.suspend();
	}
	,resume: function() {
		this.context.resume();
	}
	,data_from_load: function(_path,_is_stream,_format) {
		if(_is_stream == null) _is_stream = false;
		if(!this.active) return snow_api_Promise.reject("WebAudio context unavailable");
		if(_format == null) _format = snow_core_Audio.audio_format_from_path(_path);
		if(_is_stream) return this.data_from_load_stream(_path,_format);
		return this.data_from_load_sound(_path,_format);
	}
	,data_from_bytes: function(_id,_bytes,_format) {
		var _g = this;
		if(!this.active) return snow_api_Promise.reject("WebAudio context unavailable");
		return new snow_api_Promise(function(resolve,reject) {
			_g.data_from_bytes_direct(_id,_bytes,_format,resolve,reject);
		});
	}
	,data_from_bytes_direct: function(_id,_bytes,_format,resolve,reject) {
		var _g = this;
		this.context.decodeAudioData(_bytes.buffer,function(_buffer) {
			var _data = new snow_modules_webaudio__$Audio_AudioDataWebAudio(_g.app,_buffer,null,null,{ id : _id, is_stream : false, format : _format, samples : null, length : _buffer.length, channels : _buffer.numberOfChannels, rate : _buffer.sampleRate | 0});
			resolve(_data);
			return;
		},function() {
			reject("failed to decode audio for `" + _id + "`");
			return;
		});
	}
	,data_from_load_sound: function(_path,_format) {
		var _g = this;
		return new snow_api_Promise(function(resolve,reject) {
			var _load = _g.app.io.module.data_load(_path,null);
			_load.then(function(_bytes) {
				_g.data_from_bytes_direct(_path,_bytes,_format,resolve,reject);
			});
		});
	}
	,data_from_load_stream: function(_path,_format) {
		var _g = this;
		return new snow_api_Promise(function(resolve,reject) {
			var _element = new Audio(_path);
			_element.autoplay = false;
			_element.controls = false;
			_element.preload = "auto";
			_element.onerror = function(err) {
				var _error;
				var _g1 = _element.error.code;
				switch(_g1) {
				case 1:
					_error = "MEDIA_ERR_ABORTED";
					break;
				case 2:
					_error = "MEDIA_ERR_NETWORK";
					break;
				case 3:
					_error = "MEDIA_ERR_DECODE";
					break;
				case 4:
					_error = "MEDIA_ERR_SRC_NOT_SUPPORTED";
					break;
				case 5:
					_error = "MEDIA_ERR_ENCRYPTED";
					break;
				default:
					_error = "unknown error";
				}
				return reject("failed to load `" + _path + "` as stream : `" + _error + "`");
			};
			_element.onloadedmetadata = function(_) {
				var _node = _g.context.createMediaElementSource(_element);
				var _bytes_per_sample = 2;
				var _rate = _g.context.sampleRate | 0;
				var _channels = _node.channelCount;
				var _sample_frames = _rate * _channels * _bytes_per_sample;
				var _length = _element.duration * _sample_frames | 0;
				var _data = new snow_modules_webaudio__$Audio_AudioDataWebAudio(_g.app,null,_node,_element,{ id : _path, is_stream : true, format : _format, samples : null, length : _length, channels : _channels, rate : _rate});
				return resolve(_data);
			};
		});
	}
	,__class__: snow_modules_webaudio_Audio
};
var snow_types_AudioData = function(_app,_options) {
	this.is_stream = false;
	this.format = 0;
	this.bits_per_sample = 16;
	this.channels = 1;
	this.length = 0;
	this.rate = 44100;
	this.id = "AudioData";
	this.app = _app;
	if(_options.id == null) _options.id = this.id;
	this.id = _options.id;
	if(_options.rate == null) _options.rate = this.rate;
	this.rate = _options.rate;
	if(_options.length == null) _options.length = this.length;
	this.length = _options.length;
	if(_options.format == null) _options.format = this.format;
	this.format = _options.format;
	if(_options.channels == null) _options.channels = this.channels;
	this.channels = _options.channels;
	if(_options.bits_per_sample == null) _options.bits_per_sample = this.bits_per_sample;
	this.bits_per_sample = _options.bits_per_sample;
	if(_options.is_stream == null) _options.is_stream = this.is_stream;
	this.is_stream = _options.is_stream;
	if(_options.samples == null) _options.samples = this.samples;
	this.samples = _options.samples;
	_options = null;
};
$hxClasses["snow.types.AudioData"] = snow_types_AudioData;
snow_types_AudioData.__name__ = ["snow","types","AudioData"];
snow_types_AudioData.prototype = {
	destroy: function() {
		this.id = null;
		this.samples = null;
	}
	,seek: function(_to) {
		return false;
	}
	,portion: function(_into,_start,_len,_into_result) {
		return _into_result;
	}
	,toString: function() {
		return "{ \"AudioData\":true, \"id\":" + this.id + ", \"rate\":" + this.rate + ", \"length\":" + this.length + ", \"channels\":" + this.channels + ", \"format\":\"" + (function($this) {
			var $r;
			var this1 = $this.format;
			$r = this1 != null?(function($this) {
				var $r;
				switch(this1) {
				case 0:
					$r = "af_unknown";
					break;
				case 1:
					$r = "af_custom";
					break;
				case 2:
					$r = "af_ogg";
					break;
				case 3:
					$r = "af_wav";
					break;
				case 4:
					$r = "af_pcm";
					break;
				default:
					$r = "" + this1;
				}
				return $r;
			}($this)):"" + this1;
			return $r;
		}(this)) + "\", \"is_stream\":" + Std.string(this.is_stream) + " }";
	}
	,__class__: snow_types_AudioData
};
var snow_modules_webaudio__$Audio_AudioDataWebAudio = function(_app,_buffer,_media_node,_media_elem,_opt) {
	this.buffer = _buffer;
	this.media_node = _media_node;
	this.media_elem = _media_elem;
	snow_types_AudioData.call(this,_app,_opt);
};
$hxClasses["snow.modules.webaudio._Audio.AudioDataWebAudio"] = snow_modules_webaudio__$Audio_AudioDataWebAudio;
snow_modules_webaudio__$Audio_AudioDataWebAudio.__name__ = ["snow","modules","webaudio","_Audio","AudioDataWebAudio"];
snow_modules_webaudio__$Audio_AudioDataWebAudio.__super__ = snow_types_AudioData;
snow_modules_webaudio__$Audio_AudioDataWebAudio.prototype = $extend(snow_types_AudioData.prototype,{
	destroy: function() {
		this.buffer = null;
		this.media_node = null;
		this.media_elem = null;
	}
	,__class__: snow_modules_webaudio__$Audio_AudioDataWebAudio
});
var snow_systems_assets_Asset = function(_system,_id,_type) {
	if(_type == null) _type = 0;
	this.loaded = false;
	if(_id == null) throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_id was null" + ""));
	if(_system == null) throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_system was null" + ""));
	this.system = _system;
	this.type = _type;
	this.id = _id;
};
$hxClasses["snow.systems.assets.Asset"] = snow_systems_assets_Asset;
snow_systems_assets_Asset.__name__ = ["snow","systems","assets","Asset"];
snow_systems_assets_Asset.prototype = {
	destroy: function() {
	}
	,__class__: snow_systems_assets_Asset
};
var snow_systems_assets_AssetImage = function(_system,_id,_image) {
	snow_systems_assets_Asset.call(this,_system,_id,4);
	this.set_image(_image);
};
$hxClasses["snow.systems.assets.AssetImage"] = snow_systems_assets_AssetImage;
snow_systems_assets_AssetImage.__name__ = ["snow","systems","assets","AssetImage"];
snow_systems_assets_AssetImage.load = function(_system,_id) {
	if(_id == null) throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_id was null" + ""));
	if(_system == null) throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_system was null" + ""));
	return new snow_systems_assets_AssetImage(_system,_id,null).reload();
};
snow_systems_assets_AssetImage.load_from_bytes = function(_system,_id,_bytes) {
	if(_id == null) throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_id was null" + ""));
	if(_bytes == null) throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_bytes was null" + ""));
	if(_system == null) throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_system was null" + ""));
	return new snow_systems_assets_AssetImage(_system,_id,null).reload_from_bytes(_bytes);
};
snow_systems_assets_AssetImage.load_from_pixels = function(_system,_id,_width,_height,_pixels) {
	if(_id == null) throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_id was null" + ""));
	if(_pixels == null) throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_pixels was null" + ""));
	if(_system == null) throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_system was null" + ""));
	var info = _system.module.image_info_from_pixels(_id,_width,_height,_pixels);
	return new snow_systems_assets_AssetImage(_system,_id,info);
};
snow_systems_assets_AssetImage.provider = function(_app,_path) {
	return _app.assets.module.image_info_from_load(_path);
};
snow_systems_assets_AssetImage.processor = function(_app,_id,_data) {
	if(_data == null) return snow_api_Promise.reject(snow_types_Error.error("AssetImage processor: data was null"));
	return _app.assets.module.image_info_from_bytes(_id,_data);
};
snow_systems_assets_AssetImage.__super__ = snow_systems_assets_Asset;
snow_systems_assets_AssetImage.prototype = $extend(snow_systems_assets_Asset.prototype,{
	reload: function() {
		var _g = this;
		this.loaded = false;
		return new snow_api_Promise(function(resolve,reject) {
			var _load = _g.system.app.io.data_flow(haxe_io_Path.join([_g.system.root,_g.id]),null,snow_systems_assets_AssetImage.provider);
			_load.then(function(_image) {
				_g.set_image(_image);
				resolve(_g);
			}).error(reject);
		});
	}
	,destroy: function() {
		this.image.destroy();
		this.set_image(null);
	}
	,reload_from_bytes: function(_bytes) {
		var _g = this;
		this.loaded = false;
		return new snow_api_Promise(function(resolve,reject) {
			var _load = _g.system.module.image_info_from_bytes(_g.id,_bytes);
			_load.then(function(_image) {
				_g.set_image(_image);
				resolve(_g);
			}).error(reject);
		});
	}
	,reload_from_pixels: function(_width,_height,_pixels) {
		this.loaded = false;
		this.set_image(this.system.module.image_info_from_pixels(this.id,_width,_height,_pixels));
	}
	,set_image: function(_image) {
		this.loaded = _image != null;
		return this.image = _image;
	}
	,__class__: snow_systems_assets_AssetImage
	,__properties__: {set_image:"set_image"}
});
var snow_systems_assets_AssetAudio = function(_system,_id,_audio) {
	snow_systems_assets_Asset.call(this,_system,_id,5);
	this.set_audio(_audio);
};
$hxClasses["snow.systems.assets.AssetAudio"] = snow_systems_assets_AssetAudio;
snow_systems_assets_AssetAudio.__name__ = ["snow","systems","assets","AssetAudio"];
snow_systems_assets_AssetAudio.load = function(_system,_id,_is_stream) {
	if(_is_stream == null) _is_stream = false;
	if(_id == null) throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_id was null" + ""));
	if(_system == null) throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_system was null" + ""));
	return new snow_systems_assets_AssetAudio(_system,_id,null).reload(_is_stream);
};
snow_systems_assets_AssetAudio.load_from_bytes = function(_system,_id,_bytes,_format) {
	if(_id == null) throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_id was null" + ""));
	if(_bytes == null) throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_bytes was null" + ""));
	if(_system == null) throw new js__$Boot_HaxeError(snow_api_DebugError.null_assertion("_system was null" + ""));
	return new snow_systems_assets_AssetAudio(_system,_id,null).reload_from_bytes(_bytes,_format);
};
snow_systems_assets_AssetAudio.__super__ = snow_systems_assets_Asset;
snow_systems_assets_AssetAudio.prototype = $extend(snow_systems_assets_Asset.prototype,{
	reload: function(_is_stream) {
		if(_is_stream == null) _is_stream = false;
		var _g = this;
		this.loaded = false;
		return new snow_api_Promise(function(resolve,reject) {
			var _load = _g.system.app.audio.module.data_from_load(haxe_io_Path.join([_g.system.root,_g.id]),_is_stream);
			_load.then(function(_audio) {
				_g.set_audio(_audio);
				resolve(_g);
			}).error(reject);
		});
	}
	,destroy: function() {
		this.audio.destroy();
		this.set_audio(null);
	}
	,reload_from_bytes: function(_bytes,_format) {
		var _g = this;
		this.loaded = false;
		return new snow_api_Promise(function(resolve,reject) {
			var _load = _g.system.app.audio.module.data_from_bytes(_g.id,_bytes,_format);
			_load.then(function(_audio) {
				_g.set_audio(_audio);
				resolve(_g);
			}).error(reject);
		});
	}
	,set_audio: function(_audio) {
		this.loaded = _audio != null;
		return this.audio = _audio;
	}
	,__class__: snow_systems_assets_AssetAudio
	,__properties__: {set_audio:"set_audio"}
});
var snow_systems_assets_AssetBytes = function(_system,_id,_bytes) {
	snow_systems_assets_Asset.call(this,_system,_id,1);
	this.set_bytes(_bytes);
};
$hxClasses["snow.systems.assets.AssetBytes"] = snow_systems_assets_AssetBytes;
snow_systems_assets_AssetBytes.__name__ = ["snow","systems","assets","AssetBytes"];
snow_systems_assets_AssetBytes.load = function(_system,_id) {
	return new snow_systems_assets_AssetBytes(_system,_id,null).reload();
};
snow_systems_assets_AssetBytes.__super__ = snow_systems_assets_Asset;
snow_systems_assets_AssetBytes.prototype = $extend(snow_systems_assets_Asset.prototype,{
	reload: function() {
		var _g = this;
		return new snow_api_Promise(function(resolve,reject) {
			_g.system.app.io.data_flow(haxe_io_Path.join([_g.system.root,_g.id])).then(function(_bytes) {
				_g.set_bytes(_bytes);
				resolve(_g);
			}).error(reject);
		});
	}
	,destroy: function() {
		this.set_bytes(null);
	}
	,set_bytes: function(_bytes) {
		this.loaded = _bytes != null;
		return this.bytes = _bytes;
	}
	,__class__: snow_systems_assets_AssetBytes
	,__properties__: {set_bytes:"set_bytes"}
});
var snow_systems_assets_AssetText = function(_system,_id,_text) {
	snow_systems_assets_Asset.call(this,_system,_id,2);
	this.set_text(_text);
};
$hxClasses["snow.systems.assets.AssetText"] = snow_systems_assets_AssetText;
snow_systems_assets_AssetText.__name__ = ["snow","systems","assets","AssetText"];
snow_systems_assets_AssetText.load = function(_system,_id) {
	return new snow_systems_assets_AssetText(_system,_id,null).reload();
};
snow_systems_assets_AssetText.processor = function(_app,_id,_data) {
	if(_data == null) return snow_api_Promise.reject(snow_types_Error.error("AssetText processor: data was null"));
	var _string = new haxe_io_Bytes(new Uint8Array(_data.buffer)).toString();
	_data = null;
	return snow_api_Promise.resolve(_string);
};
snow_systems_assets_AssetText.__super__ = snow_systems_assets_Asset;
snow_systems_assets_AssetText.prototype = $extend(snow_systems_assets_Asset.prototype,{
	reload: function() {
		var _g = this;
		return new snow_api_Promise(function(resolve,reject) {
			_g.system.app.io.data_flow(haxe_io_Path.join([_g.system.root,_g.id]),snow_systems_assets_AssetText.processor).then(function(_text) {
				_g.set_text(_text);
				resolve(_g);
			}).error(reject);
		});
	}
	,destroy: function() {
		this.set_text(null);
	}
	,set_text: function(_text) {
		this.loaded = _text != null;
		return this.text = _text;
	}
	,__class__: snow_systems_assets_AssetText
	,__properties__: {set_text:"set_text"}
});
var snow_systems_assets_AssetJSON = function(_system,_id,_json) {
	snow_systems_assets_Asset.call(this,_system,_id,3);
	this.set_json(_json);
};
$hxClasses["snow.systems.assets.AssetJSON"] = snow_systems_assets_AssetJSON;
snow_systems_assets_AssetJSON.__name__ = ["snow","systems","assets","AssetJSON"];
snow_systems_assets_AssetJSON.load = function(_system,_id) {
	return new snow_systems_assets_AssetJSON(_system,_id,null).reload();
};
snow_systems_assets_AssetJSON.processor = function(_app,_id,_data) {
	if(_data == null) return snow_api_Promise.reject(snow_types_Error.error("AssetJSON: data was null"));
	return new snow_api_Promise(function(resolve,reject) {
		var _data_json = null;
		try {
			_data_json = JSON.parse(new haxe_io_Bytes(new Uint8Array(_data.buffer)).toString());
			_data = null;
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			_data = null;
			return reject(snow_types_Error.parse(e));
		}
		return resolve(_data_json);
	});
};
snow_systems_assets_AssetJSON.__super__ = snow_systems_assets_Asset;
snow_systems_assets_AssetJSON.prototype = $extend(snow_systems_assets_Asset.prototype,{
	reload: function() {
		var _g = this;
		return new snow_api_Promise(function(resolve,reject) {
			_g.system.app.io.data_flow(haxe_io_Path.join([_g.system.root,_g.id]),snow_systems_assets_AssetJSON.processor).then(function(_json) {
				_g.set_json(_json);
				resolve(_g);
			}).error(reject);
		});
	}
	,destroy: function() {
		this.set_json(null);
	}
	,set_json: function(_json) {
		this.loaded = _json != null;
		return this.json = _json;
	}
	,__class__: snow_systems_assets_AssetJSON
	,__properties__: {set_json:"set_json"}
});
var snow_systems_assets_Assets = function(_app) {
	this.root = "";
	this.app = _app;
	this.module = new snow_core_web_assets_Assets(this.app);
};
$hxClasses["snow.systems.assets.Assets"] = snow_systems_assets_Assets;
snow_systems_assets_Assets.__name__ = ["snow","systems","assets","Assets"];
snow_systems_assets_Assets.prototype = {
	shutdown: function() {
		this.module.shutdown();
	}
	,path: function(_id) {
		return haxe_io_Path.join([this.root,_id]);
	}
	,bytes: function(_id) {
		return snow_systems_assets_AssetBytes.load(this,_id);
	}
	,text: function(_id) {
		return snow_systems_assets_AssetText.load(this,_id);
	}
	,json: function(_id) {
		return snow_systems_assets_AssetJSON.load(this,_id);
	}
	,image: function(_id) {
		return snow_systems_assets_AssetImage.load(this,_id);
	}
	,image_from_bytes: function(_id,_bytes) {
		return snow_systems_assets_AssetImage.load_from_bytes(this,_id,_bytes);
	}
	,image_from_pixels: function(_id,_width,_height,_pixels) {
		return snow_systems_assets_AssetImage.load_from_pixels(this,_id,_width,_height,_pixels);
	}
	,audio: function(_id,_is_stream) {
		if(_is_stream == null) _is_stream = false;
		return snow_systems_assets_AssetAudio.load(this,_id,_is_stream);
	}
	,audio_from_bytes: function(_id,_bytes,_format) {
		return snow_systems_assets_AssetAudio.load_from_bytes(this,_id,_bytes,_format);
	}
	,__class__: snow_systems_assets_Assets
};
var snow_systems_audio_Audio = function(_app) {
	this.active = false;
	this.app = _app;
	this.module = new snow_modules_webaudio_Audio(this.app);
	this.emitter = new snow_api_Emitter();
	this.active = this.module.active;
};
$hxClasses["snow.systems.audio.Audio"] = snow_systems_audio_Audio;
snow_systems_audio_Audio.__name__ = ["snow","systems","audio","Audio"];
snow_systems_audio_Audio.prototype = {
	off_Int: function(_event,_handler) {
		return this.emitter.off(_event,_handler);
	}
	,on_Int: function(_event,_handler) {
		this.emitter.on(_event,_handler);
	}
	,emit_Int: function(_event,_data) {
		this.emitter.emit(_event,_data);
	}
	,emit_snow_systems_audio_AudioSource: function(_event,_data) {
		this.emitter.emit(_event,_data);
	}
	,play: function(_source,_volume,_paused) {
		if(_paused == null) _paused = false;
		if(_volume == null) _volume = 1.0;
		if(!(_source != null)) throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("_source != null" + (" ( " + "audio source must not be null" + " )")));
		if(!this.active) return -1;
		return this.module.play(_source,_volume,_paused);
	}
	,loop: function(_source,_volume,_paused) {
		if(_paused == null) _paused = false;
		if(_volume == null) _volume = 1.0;
		if(!(_source != null)) throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("_source != null" + (" ( " + "audio source must not be null" + " )")));
		if(!this.active) return -1;
		return this.module.loop(_source,_volume,_paused);
	}
	,pause: function(_handle) {
		if(!this.active || _handle == null) return;
		this.module.pause(_handle);
	}
	,unpause: function(_handle) {
		if(!this.active || _handle == null) return;
		this.module.unpause(_handle);
	}
	,stop: function(_handle) {
		if(!this.active || _handle == null) return;
		this.module.stop(_handle);
	}
	,volume: function(_handle,_volume) {
		if(!this.active || _handle == null) return;
		this.module.volume(_handle,_volume);
	}
	,pan: function(_handle,_pan) {
		if(!this.active || _handle == null) return;
		this.module.pan(_handle,_pan);
	}
	,pitch: function(_handle,_pitch) {
		if(!this.active || _handle == null) return;
		this.module.pitch(_handle,_pitch);
	}
	,position: function(_handle,_position) {
		if(!this.active || _handle == null) return;
		this.module.position(_handle,_position);
	}
	,state_of: function(_handle) {
		return this.module.state_of(_handle);
	}
	,loop_of: function(_handle) {
		if(!this.active) throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("active" + (" ( " + "audio is suspended, queries are invalid" + " )")));
		return this.module.loop_of(_handle);
	}
	,instance_of: function(_handle) {
		if(!this.active) throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("active" + (" ( " + "audio is suspended, queries are invalid" + " )")));
		return this.module.instance_of(_handle);
	}
	,volume_of: function(_handle) {
		if(!this.active) throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("active" + (" ( " + "audio is suspended, queries are invalid" + " )")));
		return this.module.volume_of(_handle);
	}
	,pan_of: function(_handle) {
		if(!this.active) throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("active" + (" ( " + "audio is suspended, queries are invalid" + " )")));
		return this.module.pan_of(_handle);
	}
	,pitch_of: function(_handle) {
		if(!this.active) throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("active" + (" ( " + "audio is suspended, queries are invalid" + " )")));
		return this.module.pitch_of(_handle);
	}
	,position_of: function(_handle) {
		if(!this.active) throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("active" + (" ( " + "audio is suspended, queries are invalid" + " )")));
		return this.module.position_of(_handle);
	}
	,suspend: function() {
		if(!this.active) return;
		this.active = false;
		this.module.suspend();
	}
	,resume: function() {
		if(this.active || !this.module.active) return;
		this.active = true;
		this.module.resume();
	}
	,onevent: function(_event) {
		this.module.onevent(_event);
		if(_event.type == 4) this.suspend(); else if(_event.type == 5) this.resume(); else if(_event.type == 8) {
			var _g = _event.window.type;
			switch(_g) {
			case 7:
				this.suspend();
				break;
			case 9:
				this.resume();
				break;
			default:
			}
		}
	}
	,shutdown: function() {
		this.active = false;
		this.module.shutdown();
	}
	,__class__: snow_systems_audio_Audio
};
var snow_systems_audio_AudioInstance = function(_source,_handle) {
	this.destroyed = false;
	this.source = _source;
	this.handle = _handle;
};
$hxClasses["snow.systems.audio.AudioInstance"] = snow_systems_audio_AudioInstance;
snow_systems_audio_AudioInstance.__name__ = ["snow","systems","audio","AudioInstance"];
snow_systems_audio_AudioInstance.prototype = {
	tick: function() {
	}
	,has_ended: function() {
		if(!(this.destroyed == false)) throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("destroyed == false" + (" ( " + "snow / Audio / Instance has_ended queried after being destroyed" + " )")));
		return this.source.app.audio.state_of(this.handle) == 2;
	}
	,destroy: function() {
		if(!(this.destroyed == false)) throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("destroyed == false" + (" ( " + "snow / Audio / Instance being destroyed more than once" + " )")));
		this.source.app.audio.emit_Int(1,this.handle);
		this.source.instance_killed(this);
		this.destroyed = true;
		this.source = null;
		this.handle = -1;
	}
	,data_get: function(_into,_start,_length,_into_result) {
		if(!(this.destroyed == false)) throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("destroyed == false" + (" ( " + "snow / Audio / Instance data_get queried after being destroyed" + " )")));
		return this.source.data.portion(_into,_start,_length,_into_result);
	}
	,data_seek: function(_to_samples) {
		if(!(this.destroyed == false)) throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("destroyed == false" + (" ( " + "snow / Audio / Instance data_seek queried after being destroyed" + " )")));
		return this.source.data.seek(_to_samples);
	}
	,__class__: snow_systems_audio_AudioInstance
};
var snow_systems_audio_AudioSource = function(_app,_data) {
	this.stream_buffer_count = 2;
	this.stream_buffer_length = 176400;
	this.app = _app;
	this.data = _data;
	this.instances = [];
};
$hxClasses["snow.systems.audio.AudioSource"] = snow_systems_audio_AudioSource;
snow_systems_audio_AudioSource.__name__ = ["snow","systems","audio","AudioSource"];
snow_systems_audio_AudioSource.prototype = {
	instance: function(_handle) {
		var _instance = new snow_systems_audio_AudioInstance(this,_handle);
		if(HxOverrides.indexOf(this.instances,_instance,0) == -1) this.instances.push(_instance);
		return _instance;
	}
	,bytes_to_seconds: function(_bytes) {
		var _word;
		if(this.data.bits_per_sample == 16) _word = 2; else _word = 1;
		var _sample_frames = this.data.rate * this.data.channels * _word;
		return _bytes / _sample_frames;
	}
	,seconds_to_bytes: function(_seconds) {
		var _word;
		if(this.data.bits_per_sample == 16) _word = 2; else _word = 1;
		var _sample_frames = this.data.rate * this.data.channels * _word;
		return _seconds * _sample_frames | 0;
	}
	,duration: function() {
		return this.bytes_to_seconds(this.data.length);
	}
	,destroy: function() {
		var c = this.instances.length;
		var i = 0;
		haxe_Log.trace("i / audiosource / " + ("destroy " + this.data.id + ", stream=" + Std.string(this.data.is_stream) + ", instances=" + c),{ fileName : "AudioSource.hx", lineNumber : 79, className : "snow.systems.audio.AudioSource", methodName : "destroy"});
		this.app.audio.emit_snow_systems_audio_AudioSource(2,this);
		while(i < c) {
			var _instance = this.instances.pop();
			_instance.destroy();
			_instance = null;
			i++;
		}
		this.data.destroy();
		this.data = null;
		this.instances = null;
		this.app = null;
	}
	,instance_killed: function(_instance) {
		HxOverrides.remove(this.instances,_instance);
	}
	,__class__: snow_systems_audio_AudioSource
};
var snow_systems_input_Input = function(_app) {
	this.touch_count = 0;
	this.gamepad_init_count = 16;
	this.app = _app;
	this.event = new snow_types_InputEvent();
	this.key_event = new snow_types_KeyEvent();
	this.text_event = new snow_types_TextEvent();
	this.mouse_event = new snow_types_MouseEvent();
	this.touch_event = new snow_types_TouchEvent();
	this.gamepad_event = new snow_types_GamepadEvent();
	this.mod_state = new snow_types_ModState();
	this.mod_state.none = true;
	this.key_code_pressed = new haxe_ds_IntMap();
	this.key_code_down = new haxe_ds_IntMap();
	this.key_code_released = new haxe_ds_IntMap();
	this.scan_code_pressed = new haxe_ds_IntMap();
	this.scan_code_down = new haxe_ds_IntMap();
	this.scan_code_released = new haxe_ds_IntMap();
	this.mouse_button_pressed = new haxe_ds_IntMap();
	this.mouse_button_down = new haxe_ds_IntMap();
	this.mouse_button_released = new haxe_ds_IntMap();
	this.gamepad_button_pressed = new haxe_ds_IntMap();
	this.gamepad_button_down = new haxe_ds_IntMap();
	this.gamepad_button_released = new haxe_ds_IntMap();
	this.gamepad_axis_values = new haxe_ds_IntMap();
	var _g1 = 0;
	var _g = this.gamepad_init_count;
	while(_g1 < _g) {
		var i = _g1++;
		var value = new haxe_ds_IntMap();
		this.gamepad_button_pressed.h[i] = value;
		var value1 = new haxe_ds_IntMap();
		this.gamepad_button_down.h[i] = value1;
		var value2 = new haxe_ds_IntMap();
		this.gamepad_button_released.h[i] = value2;
		var value3 = new haxe_ds_IntMap();
		this.gamepad_axis_values.h[i] = value3;
	}
	this.touches_down = new haxe_ds_IntMap();
};
$hxClasses["snow.systems.input.Input"] = snow_systems_input_Input;
snow_systems_input_Input.__name__ = ["snow","systems","input","Input"];
snow_systems_input_Input.prototype = {
	shutdown: function() {
	}
	,keypressed: function(_code) {
		return this.key_code_pressed.h.hasOwnProperty(_code);
	}
	,keyreleased: function(_code) {
		return this.key_code_released.h.hasOwnProperty(_code);
	}
	,keydown: function(_code) {
		return this.key_code_down.h.hasOwnProperty(_code);
	}
	,scanpressed: function(_code) {
		return this.scan_code_pressed.h.hasOwnProperty(_code);
	}
	,scanreleased: function(_code) {
		return this.scan_code_released.h.hasOwnProperty(_code);
	}
	,scandown: function(_code) {
		return this.scan_code_down.h.hasOwnProperty(_code);
	}
	,mousepressed: function(_button) {
		return this.mouse_button_pressed.h.hasOwnProperty(_button);
	}
	,mousereleased: function(_button) {
		return this.mouse_button_released.h.hasOwnProperty(_button);
	}
	,mousedown: function(_button) {
		return this.mouse_button_down.h.hasOwnProperty(_button);
	}
	,gamepadpressed: function(_gamepad,_button) {
		var _gamepad_state = this.gamepad_button_pressed.h[_gamepad];
		if(_gamepad_state != null) return _gamepad_state.h.hasOwnProperty(_button); else return false;
	}
	,gamepadreleased: function(_gamepad,_button) {
		var _gamepad_state = this.gamepad_button_released.h[_gamepad];
		if(_gamepad_state != null) return _gamepad_state.h.hasOwnProperty(_button); else return false;
	}
	,gamepaddown: function(_gamepad,_button) {
		var _gamepad_state = this.gamepad_button_down.h[_gamepad];
		if(_gamepad_state != null) return _gamepad_state.h.hasOwnProperty(_button); else return false;
	}
	,gamepadaxis: function(_gamepad,_axis) {
		var _gamepad_state = this.gamepad_axis_values.h[_gamepad];
		if(_gamepad_state != null) {
			if(_gamepad_state.h.hasOwnProperty(_axis)) return _gamepad_state.h[_axis];
		}
		return 0;
	}
	,dispatch_key_down_event: function(keycode,scancode,repeat,mod,timestamp,window_id) {
		if(!repeat) {
			this.key_code_pressed.h[keycode] = false;
			this.key_code_down.h[keycode] = true;
			this.scan_code_pressed.h[scancode] = false;
			this.scan_code_down.h[scancode] = true;
		}
		this.key_event.set(1,keycode,scancode,repeat,mod);
		this.event.set_key(this.key_event,window_id,timestamp);
		this.app.dispatch_input_event(this.event);
		this.app.host.onkeydown(keycode,scancode,repeat,mod,timestamp,window_id);
	}
	,dispatch_key_up_event: function(keycode,scancode,repeat,mod,timestamp,window_id) {
		this.key_code_released.h[keycode] = false;
		this.key_code_down.remove(keycode);
		this.scan_code_released.h[scancode] = false;
		this.scan_code_down.remove(scancode);
		this.key_event.set(2,keycode,scancode,repeat,mod);
		this.event.set_key(this.key_event,window_id,timestamp);
		this.app.dispatch_input_event(this.event);
		this.app.host.onkeyup(keycode,scancode,repeat,mod,timestamp,window_id);
	}
	,dispatch_text_event: function(text,start,length,type,timestamp,window_id) {
		this.text_event.set(type,text,start,length);
		this.event.set_text(this.text_event,window_id,timestamp);
		this.app.dispatch_input_event(this.event);
		this.app.host.ontextinput(text,start,length,type,timestamp,window_id);
	}
	,dispatch_mouse_move_event: function(x,y,xrel,yrel,timestamp,window_id) {
		this.mouse_event.set(1,x,y,xrel,yrel,0,0,0);
		this.event.set_mouse(this.mouse_event,window_id,timestamp);
		this.app.dispatch_input_event(this.event);
		this.app.host.onmousemove(x,y,xrel,yrel,timestamp,window_id);
	}
	,dispatch_mouse_down_event: function(x,y,button,timestamp,window_id) {
		this.mouse_button_pressed.h[button] = false;
		this.mouse_button_down.h[button] = true;
		this.mouse_event.set(2,x,y,0,0,button,0,0);
		this.event.set_mouse(this.mouse_event,window_id,timestamp);
		this.app.dispatch_input_event(this.event);
		this.app.host.onmousedown(x,y,button,timestamp,window_id);
	}
	,dispatch_mouse_up_event: function(x,y,button,timestamp,window_id) {
		this.mouse_button_released.h[button] = false;
		this.mouse_button_down.remove(button);
		this.mouse_event.set(3,x,y,0,0,button,0,0);
		this.event.set_mouse(this.mouse_event,window_id,timestamp);
		this.app.dispatch_input_event(this.event);
		this.app.host.onmouseup(x,y,button,timestamp,window_id);
	}
	,dispatch_mouse_wheel_event: function(x,y,timestamp,window_id) {
		this.mouse_event.set(4,0,0,0,0,0,x,y);
		this.event.set_mouse(this.mouse_event,window_id,timestamp);
		this.app.dispatch_input_event(this.event);
		this.app.host.onmousewheel(x,y,timestamp,window_id);
	}
	,dispatch_touch_down_event: function(x,y,dx,dy,touch_id,timestamp) {
		if(!this.touches_down.h.hasOwnProperty(touch_id)) {
			this.touch_count++;
			this.touches_down.h[touch_id] = true;
		}
		this.touch_event.set(2,touch_id,x,y,dx,dy);
		this.event.set_touch(this.touch_event,timestamp);
		this.app.dispatch_input_event(this.event);
		this.app.host.ontouchdown(x,y,dx,dy,touch_id,timestamp);
	}
	,dispatch_touch_up_event: function(x,y,dx,dy,touch_id,timestamp) {
		this.touch_event.set(3,touch_id,x,y,dx,dy);
		this.event.set_touch(this.touch_event,timestamp);
		this.app.dispatch_input_event(this.event);
		this.app.host.ontouchup(x,y,dx,dy,touch_id,timestamp);
		if(this.touches_down.remove(touch_id)) this.touch_count--;
	}
	,dispatch_touch_move_event: function(x,y,dx,dy,touch_id,timestamp) {
		this.touch_event.set(1,touch_id,x,y,dx,dy);
		this.event.set_touch(this.touch_event,timestamp);
		this.app.dispatch_input_event(this.event);
		this.app.host.ontouchmove(x,y,dx,dy,touch_id,timestamp);
	}
	,dispatch_gamepad_axis_event: function(gamepad,axis,value,timestamp) {
		if(!this.gamepad_axis_values.h.hasOwnProperty(gamepad)) throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("gamepad_axis_values.exists(gamepad)" + (" ( " + ("gamepad with id " + gamepad + " not pre-inited? Is gamepad_init_count too low, or the gamepad id not sequential from 0?") + " )")));
		var this1 = this.gamepad_axis_values.h[gamepad];
		this1.set(axis,value);
		this.gamepad_event.set_axis(gamepad,axis,value);
		this.event.set_gamepad(this.gamepad_event,timestamp);
		this.app.dispatch_input_event(this.event);
		this.app.host.ongamepadaxis(gamepad,axis,value,timestamp);
	}
	,dispatch_gamepad_button_down_event: function(gamepad,button,value,timestamp) {
		if(!this.gamepad_button_pressed.h.hasOwnProperty(gamepad)) throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("gamepad_button_pressed.exists(gamepad)" + (" ( " + ("gamepad with id " + gamepad + " not pre-inited? Is gamepad_init_count too low, or the gamepad id not sequential from 0?") + " )")));
		if(!this.gamepad_button_down.h.hasOwnProperty(gamepad)) throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("gamepad_button_down.exists(gamepad)" + (" ( " + ("gamepad with id " + gamepad + " not pre-inited? Is gamepad_init_count too low, or the gamepad id not sequential from 0?") + " )")));
		var this1 = this.gamepad_button_pressed.h[gamepad];
		this1.set(button,false);
		var this2 = this.gamepad_button_down.h[gamepad];
		this2.set(button,true);
		this.gamepad_event.set_button(2,gamepad,button,value);
		this.event.set_gamepad(this.gamepad_event,timestamp);
		this.app.dispatch_input_event(this.event);
		this.app.host.ongamepaddown(gamepad,button,value,timestamp);
	}
	,dispatch_gamepad_button_up_event: function(gamepad,button,value,timestamp) {
		if(!this.gamepad_button_released.h.hasOwnProperty(gamepad)) throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("gamepad_button_released.exists(gamepad)" + (" ( " + ("gamepad with id " + gamepad + " not pre-inited? Is gamepad_init_count too low, or the gamepad id not sequential from 0?") + " )")));
		if(!this.gamepad_button_down.h.hasOwnProperty(gamepad)) throw new js__$Boot_HaxeError(snow_api_DebugError.assertion("gamepad_button_down.exists(gamepad)" + (" ( " + ("gamepad with id " + gamepad + " not pre-inited? Is gamepad_init_count too low, or the gamepad id not sequential from 0?") + " )")));
		var this1 = this.gamepad_button_released.h[gamepad];
		this1.set(button,false);
		var this2 = this.gamepad_button_down.h[gamepad];
		this2.remove(button);
		this.gamepad_event.set_button(3,gamepad,button,value);
		this.event.set_gamepad(this.gamepad_event,timestamp);
		this.app.dispatch_input_event(this.event);
		this.app.host.ongamepadup(gamepad,button,value,timestamp);
	}
	,dispatch_gamepad_device_event: function(gamepad,id,type,timestamp) {
		this.gamepad_event.set_device(gamepad,id,type);
		this.event.set_gamepad(this.gamepad_event,timestamp);
		this.app.dispatch_input_event(this.event);
		this.app.host.ongamepaddevice(gamepad,id,type,timestamp);
	}
	,onevent: function(_event) {
		if(_event.type == 3) {
			this._update_keystate();
			this._update_gamepadstate();
			this._update_mousestate();
		}
	}
	,_update_mousestate: function() {
		var $it0 = this.mouse_button_pressed.keys();
		while( $it0.hasNext() ) {
			var _code = $it0.next();
			if(this.mouse_button_pressed.h[_code]) this.mouse_button_pressed.remove(_code); else this.mouse_button_pressed.h[_code] = true;
		}
		var $it1 = this.mouse_button_released.keys();
		while( $it1.hasNext() ) {
			var _code1 = $it1.next();
			if(this.mouse_button_released.h[_code1]) this.mouse_button_released.remove(_code1); else this.mouse_button_released.h[_code1] = true;
		}
	}
	,_update_gamepadstate: function() {
		var $it0 = this.gamepad_button_pressed.iterator();
		while( $it0.hasNext() ) {
			var _gamepad_pressed = $it0.next();
			var $it1 = _gamepad_pressed.keys();
			while( $it1.hasNext() ) {
				var _button = $it1.next();
				if(_gamepad_pressed.h[_button]) _gamepad_pressed.remove(_button); else _gamepad_pressed.h[_button] = true;
			}
		}
		var $it2 = this.gamepad_button_released.iterator();
		while( $it2.hasNext() ) {
			var _gamepad_released = $it2.next();
			var $it3 = _gamepad_released.keys();
			while( $it3.hasNext() ) {
				var _button1 = $it3.next();
				if(_gamepad_released.h[_button1]) _gamepad_released.remove(_button1); else _gamepad_released.h[_button1] = true;
			}
		}
	}
	,_update_keystate: function() {
		var $it0 = this.key_code_pressed.keys();
		while( $it0.hasNext() ) {
			var _code = $it0.next();
			if(this.key_code_pressed.h[_code]) this.key_code_pressed.remove(_code); else this.key_code_pressed.h[_code] = true;
		}
		var $it1 = this.key_code_released.keys();
		while( $it1.hasNext() ) {
			var _code1 = $it1.next();
			if(this.key_code_released.h[_code1]) this.key_code_released.remove(_code1); else this.key_code_released.h[_code1] = true;
		}
		var $it2 = this.scan_code_pressed.keys();
		while( $it2.hasNext() ) {
			var _code2 = $it2.next();
			if(this.scan_code_pressed.h[_code2]) this.scan_code_pressed.remove(_code2); else this.scan_code_pressed.h[_code2] = true;
		}
		var $it3 = this.scan_code_released.keys();
		while( $it3.hasNext() ) {
			var _code3 = $it3.next();
			if(this.scan_code_released.h[_code3]) this.scan_code_released.remove(_code3); else this.scan_code_released.h[_code3] = true;
		}
	}
	,__class__: snow_systems_input_Input
};
var snow_systems_input_Keycodes = function() { };
$hxClasses["snow.systems.input.Keycodes"] = snow_systems_input_Keycodes;
snow_systems_input_Keycodes.__name__ = ["snow","systems","input","Keycodes"];
snow_systems_input_Keycodes.from_scan = function(scancode) {
	return scancode | 1073741824;
};
snow_systems_input_Keycodes.to_scan = function(keycode) {
	if((keycode & 1073741824) != 0) return keycode & -1073741825;
	switch(keycode) {
	case 13:
		return 40;
	case 27:
		return 41;
	case 8:
		return 42;
	case 9:
		return 43;
	case 32:
		return 44;
	case 47:
		return 56;
	case 48:
		return 39;
	case 49:
		return 30;
	case 50:
		return 31;
	case 51:
		return 32;
	case 52:
		return 33;
	case 53:
		return 34;
	case 54:
		return 35;
	case 55:
		return 36;
	case 56:
		return 37;
	case 57:
		return 38;
	case 59:
		return 51;
	case 61:
		return 46;
	case 91:
		return 47;
	case 92:
		return 49;
	case 93:
		return 48;
	case 96:
		return 53;
	case 97:
		return 4;
	case 98:
		return 5;
	case 99:
		return 6;
	case 100:
		return 7;
	case 101:
		return 8;
	case 102:
		return 9;
	case 103:
		return 10;
	case 104:
		return 11;
	case 105:
		return 12;
	case 106:
		return 13;
	case 107:
		return 14;
	case 108:
		return 15;
	case 109:
		return 16;
	case 110:
		return 17;
	case 111:
		return 18;
	case 112:
		return 19;
	case 113:
		return 20;
	case 114:
		return 21;
	case 115:
		return 22;
	case 116:
		return 23;
	case 117:
		return 24;
	case 118:
		return 25;
	case 119:
		return 26;
	case 120:
		return 27;
	case 121:
		return 28;
	case 122:
		return 29;
	}
	return 0;
};
snow_systems_input_Keycodes.$name = function(keycode) {
	if((keycode & 1073741824) != 0) return snow_systems_input_Scancodes.$name(keycode & -1073741825);
	switch(keycode) {
	case 13:
		return snow_systems_input_Scancodes.$name(40);
	case 27:
		return snow_systems_input_Scancodes.$name(41);
	case 8:
		return snow_systems_input_Scancodes.$name(42);
	case 9:
		return snow_systems_input_Scancodes.$name(43);
	case 32:
		return snow_systems_input_Scancodes.$name(44);
	case 127:
		return snow_systems_input_Scancodes.$name(76);
	default:
		var decoder = new haxe_Utf8();
		decoder.__b += String.fromCharCode(keycode);
		return decoder.__b;
	}
};
var snow_systems_input_Scancodes = function() { };
$hxClasses["snow.systems.input.Scancodes"] = snow_systems_input_Scancodes;
snow_systems_input_Scancodes.__name__ = ["snow","systems","input","Scancodes"];
snow_systems_input_Scancodes.$name = function(scancode) {
	var res = null;
	if(scancode >= 0 && scancode < snow_systems_input_Scancodes.scancode_names.length) res = snow_systems_input_Scancodes.scancode_names[scancode];
	if(res != null) return res; else return "";
};
var snow_systems_io_IO = function(_app) {
	this.string_save_prefix = "slot";
	this.app = _app;
	this.module = new snow_core_web_io_IO(this.app);
};
$hxClasses["snow.systems.io.IO"] = snow_systems_io_IO;
snow_systems_io_IO.__name__ = ["snow","systems","io","IO"];
snow_systems_io_IO.prototype = {
	app_path: function() {
		return this.module.app_path();
	}
	,app_path_prefs: function() {
		return this.module.app_path_prefs();
	}
	,url_open: function(_url) {
		this.module.url_open(_url);
	}
	,data_load: function(_path,_options) {
		return this.module.data_load(_path,_options);
	}
	,data_save: function(_path,_data,_options) {
		return this.module.data_save(_path,_data,_options);
	}
	,data_flow: function(_id,_processor,_provider) {
		var _g = this;
		if(_provider == null) _provider = $bind(this,this.default_provider);
		return new snow_api_Promise(function(resolve,reject) {
			_provider(_g.app,_id).then(function(data) {
				if(_processor != null) _processor(_g.app,_id,data).then(resolve,reject); else resolve(data);
			}).error(reject);
		});
	}
	,string_save_path: function(_slot) {
		if(_slot == null) _slot = 0;
		return this.module.string_save_path(_slot);
	}
	,string_save: function(_key,_value,_slot) {
		if(_slot == null) _slot = 0;
		var _string_map = this.string_slots_sync(_slot);
		var _encoded_key = window.btoa(_key);
		if(_value == null) _string_map.remove(_encoded_key); else {
			var _encoded_value = window.btoa(_value);
			if(__map_reserved[_encoded_key] != null) _string_map.setReserved(_encoded_key,_encoded_value); else _string_map.h[_encoded_key] = _encoded_value;
		}
		var _contents = haxe_Serializer.run(_string_map);
		_contents = window.btoa(_contents);
		return this.module.string_slot_save(_slot,_contents);
	}
	,string_load: function(_key,_slot) {
		if(_slot == null) _slot = 0;
		var _string_map = this.string_slots_sync(_slot);
		var _encoded_key = window.btoa(_key);
		var _encoded_value;
		_encoded_value = __map_reserved[_encoded_key] != null?_string_map.getReserved(_encoded_key):_string_map.h[_encoded_key];
		if(_encoded_value == null) return null;
		return window.atob(_encoded_value);
	}
	,string_destroy: function(_slot) {
		if(_slot == null) _slot = 0;
		if(this.string_slots == null) this.string_slots = new haxe_ds_IntMap(); else this.string_slots.remove(_slot);
		return this.module.string_slot_destroy(_slot);
	}
	,string_slots_sync: function(_slot) {
		if(_slot == null) _slot = 0;
		if(this.string_slots == null) this.string_slots = new haxe_ds_IntMap();
		var _string_map = this.string_slots.h[_slot];
		if(_string_map == null) {
			var _string = this.module.string_slot_load(_slot);
			if(_string == null) _string_map = new haxe_ds_StringMap(); else {
				_string = window.atob(_string);
				_string_map = haxe_Unserializer.run(_string);
			}
			this.string_slots.h[_slot] = _string_map;
		}
		return _string_map;
	}
	,default_provider: function(_app,_id) {
		return this.module.data_load(_id,null);
	}
	,onevent: function(_event) {
		this.module.onevent(_event);
	}
	,shutdown: function() {
		this.module.shutdown();
	}
	,__class__: snow_systems_io_IO
};
var snow_types_Config = function() { };
$hxClasses["snow.types.Config"] = snow_types_Config;
snow_types_Config.__name__ = ["snow","types","Config"];
var snow_types_Error = $hxClasses["snow.types.Error"] = { __ename__ : ["snow","types","Error"], __constructs__ : ["error","init","parse"] };
snow_types_Error.error = function(value) { var $x = ["error",0,value]; $x.__enum__ = snow_types_Error; $x.toString = $estr; return $x; };
snow_types_Error.init = function(value) { var $x = ["init",1,value]; $x.__enum__ = snow_types_Error; $x.toString = $estr; return $x; };
snow_types_Error.parse = function(value) { var $x = ["parse",2,value]; $x.__enum__ = snow_types_Error; $x.toString = $estr; return $x; };
var snow_types__$Types_ExtensionsInit = function() { };
$hxClasses["snow.types._Types.ExtensionsInit"] = snow_types__$Types_ExtensionsInit;
snow_types__$Types_ExtensionsInit.__name__ = ["snow","types","_Types","ExtensionsInit"];
var snow_types__$Types_AssetType_$Impl_$ = {};
$hxClasses["snow.types._Types.AssetType_Impl_"] = snow_types__$Types_AssetType_$Impl_$;
snow_types__$Types_AssetType_$Impl_$.__name__ = ["snow","types","_Types","AssetType_Impl_"];
snow_types__$Types_AssetType_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 0:
		return "at_unknown";
	case 1:
		return "at_bytes";
	case 2:
		return "at_text";
	case 3:
		return "at_json";
	case 4:
		return "at_image";
	case 5:
		return "at_audio";
	default:
		return "" + this1;
	}
};
var snow_types_ImageData = function(_app,_options) {
	this.bpp_source = 4;
	this.bpp = 4;
	this.height_actual = 0;
	this.width_actual = 0;
	this.height = 0;
	this.width = 0;
	this.id = "ImageData";
	this.app = _app;
	if(_options.id == null) _options.id = this.id;
	this.id = _options.id;
	this.width = _options.width;
	this.height = _options.height;
	this.width_actual = _options.width_actual;
	this.height_actual = _options.height_actual;
	this.bpp = _options.bpp;
	this.bpp_source = _options.bpp_source;
	if(_options.pixels == null) _options.pixels = this.pixels;
	this.pixels = _options.pixels;
	_options = null;
};
$hxClasses["snow.types.ImageData"] = snow_types_ImageData;
snow_types_ImageData.__name__ = ["snow","types","ImageData"];
snow_types_ImageData.prototype = {
	destroy: function() {
		this.id = null;
		this.pixels = null;
	}
	,toString: function() {
		return "{ \"ImageData\":true, \"id\":" + this.id + ", \"width\":" + this.width + ", \"height\":" + this.height + ", \"width_actual\":" + this.width_actual + ", \"height_actual\":" + this.height_actual + ", \"bpp\":" + this.bpp + ", \"bpp_source\":" + this.bpp_source + " }";
	}
	,__class__: snow_types_ImageData
};
var snow_types__$Types_AudioFormatType_$Impl_$ = {};
$hxClasses["snow.types._Types.AudioFormatType_Impl_"] = snow_types__$Types_AudioFormatType_$Impl_$;
snow_types__$Types_AudioFormatType_$Impl_$.__name__ = ["snow","types","_Types","AudioFormatType_Impl_"];
snow_types__$Types_AudioFormatType_$Impl_$.toString = function(this1) {
	if(this1 != null) switch(this1) {
	case 0:
		return "af_unknown";
	case 1:
		return "af_custom";
	case 2:
		return "af_ogg";
	case 3:
		return "af_wav";
	case 4:
		return "af_pcm";
	default:
		return "" + this1;
	} else return "" + this1;
};
var snow_types__$Types_AudioEvent_$Impl_$ = {};
$hxClasses["snow.types._Types.AudioEvent_Impl_"] = snow_types__$Types_AudioEvent_$Impl_$;
snow_types__$Types_AudioEvent_$Impl_$.__name__ = ["snow","types","_Types","AudioEvent_Impl_"];
snow_types__$Types_AudioEvent_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 0:
		return "ae_end";
	case 1:
		return "ae_destroyed";
	case 2:
		return "ae_destroyed_source";
	default:
		return "" + this1;
	}
};
var snow_types__$Types_AudioState_$Impl_$ = {};
$hxClasses["snow.types._Types.AudioState_Impl_"] = snow_types__$Types_AudioState_$Impl_$;
snow_types__$Types_AudioState_$Impl_$.__name__ = ["snow","types","_Types","AudioState_Impl_"];
snow_types__$Types_AudioState_$Impl_$.toString = function(this1) {
	switch(this1) {
	case -1:
		return "as_invalid";
	case 0:
		return "as_paused";
	case 1:
		return "as_playing";
	case 2:
		return "as_stopped";
	default:
		return "" + this1;
	}
};
var snow_types__$Types_OpenGLProfile_$Impl_$ = {};
$hxClasses["snow.types._Types.OpenGLProfile_Impl_"] = snow_types__$Types_OpenGLProfile_$Impl_$;
snow_types__$Types_OpenGLProfile_$Impl_$.__name__ = ["snow","types","_Types","OpenGLProfile_Impl_"];
snow_types__$Types_OpenGLProfile_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 0:
		return "compatibility";
	case 1:
		return "core";
	case 2:
		return "gles";
	default:
		return "" + this1;
	}
};
var snow_types_SystemEvent = function() {
};
$hxClasses["snow.types.SystemEvent"] = snow_types_SystemEvent;
snow_types_SystemEvent.__name__ = ["snow","types","SystemEvent"];
snow_types_SystemEvent.prototype = {
	set: function(_type,_window,_input) {
		this.type = _type;
		this.window = _window;
		this.input = _input;
	}
	,toString: function() {
		var _s;
		_s = "{ \"SystemEvent\":true, \"type\":\"" + (function($this) {
			var $r;
			var this1 = $this.type;
			$r = (function($this) {
				var $r;
				switch(this1) {
				case 0:
					$r = "se_unknown";
					break;
				case 1:
					$r = "se_init";
					break;
				case 2:
					$r = "se_ready";
					break;
				case 3:
					$r = "se_tick";
					break;
				case 4:
					$r = "se_freeze";
					break;
				case 5:
					$r = "se_unfreeze";
					break;
				case 7:
					$r = "se_shutdown";
					break;
				case 8:
					$r = "se_window";
					break;
				case 9:
					$r = "se_input";
					break;
				case 10:
					$r = "se_quit";
					break;
				case 11:
					$r = "se_app_terminating";
					break;
				case 12:
					$r = "se_app_lowmemory";
					break;
				case 13:
					$r = "se_app_willenterbackground";
					break;
				case 14:
					$r = "se_app_didenterbackground";
					break;
				case 15:
					$r = "se_app_willenterforeground";
					break;
				case 16:
					$r = "se_app_didenterforeground";
					break;
				default:
					$r = "" + this1;
				}
				return $r;
			}($this));
			return $r;
		}(this)) + "\"";
		if(this.window != null) _s += ", \"window\":" + Std.string(this.window);
		if(this.input != null) _s += ", \"input\":" + Std.string(this.input);
		_s += " }";
		return _s;
	}
	,__class__: snow_types_SystemEvent
};
var snow_types_WindowEvent = function() {
	this.window_id = -1;
	this.timestamp = 0.0;
	this.type = 0;
};
$hxClasses["snow.types.WindowEvent"] = snow_types_WindowEvent;
snow_types_WindowEvent.__name__ = ["snow","types","WindowEvent"];
snow_types_WindowEvent.prototype = {
	set: function(_type,_timestamp,_window_id,_x,_y) {
		this.type = _type;
		this.timestamp = _timestamp;
		this.window_id = _window_id;
		this.x = _x;
		this.y = _y;
	}
	,toString: function() {
		return "{ \"WindowEvent\":true, \"type\":\"" + (function($this) {
			var $r;
			var this1 = $this.type;
			$r = (function($this) {
				var $r;
				switch(this1) {
				case 0:
					$r = "we_unknown";
					break;
				case 1:
					$r = "we_shown";
					break;
				case 2:
					$r = "we_hidden";
					break;
				case 3:
					$r = "we_exposed";
					break;
				case 4:
					$r = "we_moved";
					break;
				case 5:
					$r = "we_resized";
					break;
				case 6:
					$r = "we_size_changed";
					break;
				case 7:
					$r = "we_minimized";
					break;
				case 8:
					$r = "we_maximized";
					break;
				case 9:
					$r = "we_restored";
					break;
				case 10:
					$r = "we_enter";
					break;
				case 11:
					$r = "we_leave";
					break;
				case 12:
					$r = "we_focus_gained";
					break;
				case 13:
					$r = "we_focus_lost";
					break;
				case 14:
					$r = "we_close";
					break;
				default:
					$r = "" + this1;
				}
				return $r;
			}($this));
			return $r;
		}(this)) + "\", \"window\":" + this.window_id + ", \"x\":" + this.x + ", \"y\":" + this.y + ", \"time\":" + this.timestamp + " }";
	}
	,__class__: snow_types_WindowEvent
};
var snow_types_KeyEvent = function() {
};
$hxClasses["snow.types.KeyEvent"] = snow_types_KeyEvent;
snow_types_KeyEvent.__name__ = ["snow","types","KeyEvent"];
snow_types_KeyEvent.prototype = {
	set: function(_type,_keycode,_scancode,_repeat,_mod) {
		this.type = _type;
		this.keycode = _keycode;
		this.scancode = _scancode;
		this.repeat = _repeat;
		this.mod = _mod;
	}
	,toString: function() {
		return "{ \"KeyEvent\":true, \"type\":\"" + (function($this) {
			var $r;
			var this1 = $this.type;
			$r = (function($this) {
				var $r;
				switch(this1) {
				case 0:
					$r = "ke_unknown";
					break;
				case 1:
					$r = "ke_down";
					break;
				case 2:
					$r = "ke_up";
					break;
				default:
					$r = "" + this1;
				}
				return $r;
			}($this));
			return $r;
		}(this)) + "\", \"keycode\":" + this.keycode + ", \"scancode\":" + this.scancode + ", \"repeat\":" + Std.string(this.repeat) + ", \"mod\":" + Std.string(this.mod) + " }";
	}
	,__class__: snow_types_KeyEvent
};
var snow_types_TextEvent = function() {
};
$hxClasses["snow.types.TextEvent"] = snow_types_TextEvent;
snow_types_TextEvent.__name__ = ["snow","types","TextEvent"];
snow_types_TextEvent.prototype = {
	set: function(_type,_text,_start,_length) {
		this.type = _type;
		this.text = _text;
		this.start = _start;
		this.length = _length;
	}
	,toString: function() {
		return "{ \"TextEvent\":true, \"type\":\"" + (function($this) {
			var $r;
			var this1 = $this.type;
			$r = (function($this) {
				var $r;
				switch(this1) {
				case 0:
					$r = "te_unknown";
					break;
				case 1:
					$r = "te_edit";
					break;
				case 2:
					$r = "te_input";
					break;
				default:
					$r = "" + this1;
				}
				return $r;
			}($this));
			return $r;
		}(this)) + "\", \"text\":\"" + this.text + "\", \"start\":" + this.start + ", \"length\":" + this.length + " }";
	}
	,__class__: snow_types_TextEvent
};
var snow_types_MouseEvent = function() {
};
$hxClasses["snow.types.MouseEvent"] = snow_types_MouseEvent;
snow_types_MouseEvent.__name__ = ["snow","types","MouseEvent"];
snow_types_MouseEvent.prototype = {
	set: function(_type,_x,_y,_x_rel,_y_rel,_button,_wheel_x,_wheel_y) {
		this.type = _type;
		this.x = _x;
		this.y = _y;
		this.x_rel = _x_rel;
		this.y_rel = _y_rel;
		this.button = _button;
		this.wheel_x = _wheel_x;
		this.wheel_y = _wheel_y;
	}
	,toString: function() {
		return "{ \"MouseEvent\":true, \"type\":\"" + (function($this) {
			var $r;
			var this1 = $this.type;
			$r = (function($this) {
				var $r;
				switch(this1) {
				case 0:
					$r = "me_unknown";
					break;
				case 1:
					$r = "me_move";
					break;
				case 2:
					$r = "me_down";
					break;
				case 3:
					$r = "me_up";
					break;
				case 4:
					$r = "me_wheel";
					break;
				default:
					$r = "" + this1;
				}
				return $r;
			}($this));
			return $r;
		}(this)) + "\", \"x\":" + this.x + ", \"y\":" + this.y + ", \"button\":" + this.button + ", \"x_rel\":" + this.x_rel + ", \"y_rel\":" + this.y_rel + ", \"wheel_x\":" + this.wheel_x + ", \"wheel_y\":" + this.wheel_y + " }";
	}
	,__class__: snow_types_MouseEvent
};
var snow_types_TouchEvent = function() {
};
$hxClasses["snow.types.TouchEvent"] = snow_types_TouchEvent;
snow_types_TouchEvent.__name__ = ["snow","types","TouchEvent"];
snow_types_TouchEvent.prototype = {
	set: function(_type,_id,_x,_y,_dx,_dy) {
		this.type = _type;
		this.touch_id = _id;
		this.x = _x;
		this.y = _y;
		this.dx = _dx;
		this.dy = _dy;
	}
	,toString: function() {
		return "{ \"TouchEvent\":true, \"type\":\"" + (function($this) {
			var $r;
			var this1 = $this.type;
			$r = (function($this) {
				var $r;
				switch(this1) {
				case 0:
					$r = "te_unknown";
					break;
				case 1:
					$r = "te_move";
					break;
				case 2:
					$r = "te_down";
					break;
				case 3:
					$r = "te_up";
					break;
				default:
					$r = "" + this1;
				}
				return $r;
			}($this));
			return $r;
		}(this)) + "\", \"touch_id\":" + this.touch_id + ", \"x\":" + this.x + ", \"y\":" + this.y + ", \"dx\":" + this.dx + ", \"dy\":" + this.dy + " }";
	}
	,__class__: snow_types_TouchEvent
};
var snow_types_GamepadEvent = function() {
};
$hxClasses["snow.types.GamepadEvent"] = snow_types_GamepadEvent;
snow_types_GamepadEvent.__name__ = ["snow","types","GamepadEvent"];
snow_types_GamepadEvent.prototype = {
	set_axis: function(_gamepad,_axis,_value) {
		this.button = null;
		this.device_id = null;
		this.device_event = null;
		this.axis = _axis;
		this.value = _value;
		this.type = 1;
		this.gamepad = _gamepad;
	}
	,set_button: function(_type,_gamepad,_button,_value) {
		this.axis = null;
		this.device_id = null;
		this.device_event = null;
		this.type = _type;
		this.value = _value;
		this.button = _button;
		this.gamepad = _gamepad;
	}
	,set_device: function(_gamepad,_id,_event) {
		this.axis = null;
		this.value = null;
		this.button = null;
		this.device_id = _id;
		this.device_event = _event;
		this.gamepad = _gamepad;
		this.type = 4;
	}
	,toString: function() {
		return "{ \"GamepadEvent\":true, \"type\":\"" + (function($this) {
			var $r;
			var this1 = $this.type;
			$r = (function($this) {
				var $r;
				switch(this1) {
				case 0:
					$r = "ge_unknown";
					break;
				case 1:
					$r = "ge_axis";
					break;
				case 2:
					$r = "ge_down";
					break;
				case 3:
					$r = "ge_up";
					break;
				case 4:
					$r = "ge_device";
					break;
				default:
					$r = "" + this1;
				}
				return $r;
			}($this));
			return $r;
		}(this)) + "\", \"gamepad\":" + this.gamepad + ", \"axis\":" + this.axis + ", \"button\":" + this.button + ", \"value\":" + this.value + ", \"device_id\":\"" + this.device_id + "\", \"device_event\":\"" + (function($this) {
			var $r;
			var this2 = $this.device_event;
			$r = (function($this) {
				var $r;
				switch(this2) {
				case 0:
					$r = "ge_unknown";
					break;
				case 1:
					$r = "ge_device_added";
					break;
				case 2:
					$r = "ge_device_removed";
					break;
				case 3:
					$r = "ge_device_remapped";
					break;
				default:
					$r = "" + this2;
				}
				return $r;
			}($this));
			return $r;
		}(this)) + "\" }";
	}
	,__class__: snow_types_GamepadEvent
};
var snow_types_InputEvent = function() {
	this.window_id = -1;
	this.timestamp = 0.0;
};
$hxClasses["snow.types.InputEvent"] = snow_types_InputEvent;
snow_types_InputEvent.__name__ = ["snow","types","InputEvent"];
snow_types_InputEvent.prototype = {
	reset: function(_type,_window_id,_timestamp) {
		this.type = _type;
		this.key = null;
		this.text = null;
		this.mouse = null;
		this.touch = null;
		this.gamepad = null;
		this.window_id = _window_id;
		this.timestamp = _timestamp;
	}
	,set_key: function(_event,_window_id,_timestamp) {
		this.type = 1;
		this.key = null;
		this.text = null;
		this.mouse = null;
		this.touch = null;
		this.gamepad = null;
		this.window_id = _window_id;
		this.timestamp = _timestamp;
		this.key = _event;
	}
	,set_text: function(_event,_window_id,_timestamp) {
		this.type = 2;
		this.key = null;
		this.text = null;
		this.mouse = null;
		this.touch = null;
		this.gamepad = null;
		this.window_id = _window_id;
		this.timestamp = _timestamp;
		this.text = _event;
	}
	,set_mouse: function(_event,_window_id,_timestamp) {
		this.type = 3;
		this.key = null;
		this.text = null;
		this.mouse = null;
		this.touch = null;
		this.gamepad = null;
		this.window_id = _window_id;
		this.timestamp = _timestamp;
		this.mouse = _event;
	}
	,set_touch: function(_event,_timestamp) {
		this.type = 4;
		this.key = null;
		this.text = null;
		this.mouse = null;
		this.touch = null;
		this.gamepad = null;
		this.window_id = 0;
		this.timestamp = _timestamp;
		this.touch = _event;
	}
	,set_gamepad: function(_event,_timestamp) {
		this.type = 5;
		this.key = null;
		this.text = null;
		this.mouse = null;
		this.touch = null;
		this.gamepad = null;
		this.window_id = 0;
		this.timestamp = _timestamp;
		this.gamepad = _event;
	}
	,toString: function() {
		var _s;
		_s = "{ \"InputEvent\":true, \"type\":\"" + (function($this) {
			var $r;
			var this1 = $this.type;
			$r = (function($this) {
				var $r;
				switch(this1) {
				case 0:
					$r = "ie_unknown";
					break;
				case 1:
					$r = "ie_key";
					break;
				case 2:
					$r = "ie_text";
					break;
				case 3:
					$r = "ie_mouse";
					break;
				case 4:
					$r = "ie_touch";
					break;
				case 5:
					$r = "ie_gamepad";
					break;
				case 6:
					$r = "ie_joystick";
					break;
				default:
					$r = "" + this1;
				}
				return $r;
			}($this));
			return $r;
		}(this)) + "\"";
		if(this.key != null) _s += ", \"key\":" + Std.string(this.key);
		if(this.text != null) _s += ", \"text\":" + Std.string(this.text);
		if(this.mouse != null) _s += ", \"mouse\":" + Std.string(this.mouse);
		if(this.touch != null) _s += ", \"touch\":" + Std.string(this.touch);
		if(this.gamepad != null) _s += ", \"gamepad\":" + Std.string(this.gamepad);
		_s += "\"window\":" + this.window_id + ", \"time\":" + this.timestamp + " }";
		return _s;
	}
	,__class__: snow_types_InputEvent
};
var snow_types_ModState = function() {
	this.meta = false;
	this.alt = false;
	this.shift = false;
	this.ctrl = false;
	this.mode = false;
	this.caps = false;
	this.num = false;
	this.rmeta = false;
	this.lmeta = false;
	this.ralt = false;
	this.lalt = false;
	this.rctrl = false;
	this.lctrl = false;
	this.rshift = false;
	this.lshift = false;
	this.none = false;
};
$hxClasses["snow.types.ModState"] = snow_types_ModState;
snow_types_ModState.__name__ = ["snow","types","ModState"];
snow_types_ModState.prototype = {
	toString: function() {
		var _s = "{ \"ModState\":true ";
		if(this.none) return _s + ", \"none\":true }";
		if(this.lshift) _s += ", \"lshift\":true";
		if(this.rshift) _s += ", \"rshift\":true";
		if(this.lctrl) _s += ", \"lctrl\":true";
		if(this.rctrl) _s += ", \"rctrl\":true";
		if(this.lalt) _s += ", \"lalt\":true";
		if(this.ralt) _s += ", \"ralt\":true";
		if(this.lmeta) _s += ", \"lmeta\":true";
		if(this.rmeta) _s += ", \"rmeta\":true";
		if(this.num) _s += ", \"num\":true";
		if(this.caps) _s += ", \"caps\":true";
		if(this.mode) _s += ", \"mode\":true";
		if(this.ctrl) _s += ", \"ctrl\":true";
		if(this.shift) _s += ", \"shift\":true";
		if(this.alt) _s += ", \"alt\":true";
		if(this.meta) _s += ", \"meta\":true";
		_s += "}";
		return _s;
	}
	,__class__: snow_types_ModState
};
var snow_types__$Types_KeyEventType_$Impl_$ = {};
$hxClasses["snow.types._Types.KeyEventType_Impl_"] = snow_types__$Types_KeyEventType_$Impl_$;
snow_types__$Types_KeyEventType_$Impl_$.__name__ = ["snow","types","_Types","KeyEventType_Impl_"];
snow_types__$Types_KeyEventType_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 0:
		return "ke_unknown";
	case 1:
		return "ke_down";
	case 2:
		return "ke_up";
	default:
		return "" + this1;
	}
};
var snow_types__$Types_MouseEventType_$Impl_$ = {};
$hxClasses["snow.types._Types.MouseEventType_Impl_"] = snow_types__$Types_MouseEventType_$Impl_$;
snow_types__$Types_MouseEventType_$Impl_$.__name__ = ["snow","types","_Types","MouseEventType_Impl_"];
snow_types__$Types_MouseEventType_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 0:
		return "me_unknown";
	case 1:
		return "me_move";
	case 2:
		return "me_down";
	case 3:
		return "me_up";
	case 4:
		return "me_wheel";
	default:
		return "" + this1;
	}
};
var snow_types__$Types_TouchEventType_$Impl_$ = {};
$hxClasses["snow.types._Types.TouchEventType_Impl_"] = snow_types__$Types_TouchEventType_$Impl_$;
snow_types__$Types_TouchEventType_$Impl_$.__name__ = ["snow","types","_Types","TouchEventType_Impl_"];
snow_types__$Types_TouchEventType_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 0:
		return "te_unknown";
	case 1:
		return "te_move";
	case 2:
		return "te_down";
	case 3:
		return "te_up";
	default:
		return "" + this1;
	}
};
var snow_types__$Types_GamepadEventType_$Impl_$ = {};
$hxClasses["snow.types._Types.GamepadEventType_Impl_"] = snow_types__$Types_GamepadEventType_$Impl_$;
snow_types__$Types_GamepadEventType_$Impl_$.__name__ = ["snow","types","_Types","GamepadEventType_Impl_"];
snow_types__$Types_GamepadEventType_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 0:
		return "ge_unknown";
	case 1:
		return "ge_axis";
	case 2:
		return "ge_down";
	case 3:
		return "ge_up";
	case 4:
		return "ge_device";
	default:
		return "" + this1;
	}
};
var snow_types__$Types_TextEventType_$Impl_$ = {};
$hxClasses["snow.types._Types.TextEventType_Impl_"] = snow_types__$Types_TextEventType_$Impl_$;
snow_types__$Types_TextEventType_$Impl_$.__name__ = ["snow","types","_Types","TextEventType_Impl_"];
snow_types__$Types_TextEventType_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 0:
		return "te_unknown";
	case 1:
		return "te_edit";
	case 2:
		return "te_input";
	default:
		return "" + this1;
	}
};
var snow_types__$Types_GamepadDeviceEventType_$Impl_$ = {};
$hxClasses["snow.types._Types.GamepadDeviceEventType_Impl_"] = snow_types__$Types_GamepadDeviceEventType_$Impl_$;
snow_types__$Types_GamepadDeviceEventType_$Impl_$.__name__ = ["snow","types","_Types","GamepadDeviceEventType_Impl_"];
snow_types__$Types_GamepadDeviceEventType_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 0:
		return "ge_unknown";
	case 1:
		return "ge_device_added";
	case 2:
		return "ge_device_removed";
	case 3:
		return "ge_device_remapped";
	default:
		return "" + this1;
	}
};
var snow_types__$Types_SystemEventType_$Impl_$ = {};
$hxClasses["snow.types._Types.SystemEventType_Impl_"] = snow_types__$Types_SystemEventType_$Impl_$;
snow_types__$Types_SystemEventType_$Impl_$.__name__ = ["snow","types","_Types","SystemEventType_Impl_"];
snow_types__$Types_SystemEventType_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 0:
		return "se_unknown";
	case 1:
		return "se_init";
	case 2:
		return "se_ready";
	case 3:
		return "se_tick";
	case 4:
		return "se_freeze";
	case 5:
		return "se_unfreeze";
	case 7:
		return "se_shutdown";
	case 8:
		return "se_window";
	case 9:
		return "se_input";
	case 10:
		return "se_quit";
	case 11:
		return "se_app_terminating";
	case 12:
		return "se_app_lowmemory";
	case 13:
		return "se_app_willenterbackground";
	case 14:
		return "se_app_didenterbackground";
	case 15:
		return "se_app_willenterforeground";
	case 16:
		return "se_app_didenterforeground";
	default:
		return "" + this1;
	}
};
var snow_types__$Types_WindowEventType_$Impl_$ = {};
$hxClasses["snow.types._Types.WindowEventType_Impl_"] = snow_types__$Types_WindowEventType_$Impl_$;
snow_types__$Types_WindowEventType_$Impl_$.__name__ = ["snow","types","_Types","WindowEventType_Impl_"];
snow_types__$Types_WindowEventType_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 0:
		return "we_unknown";
	case 1:
		return "we_shown";
	case 2:
		return "we_hidden";
	case 3:
		return "we_exposed";
	case 4:
		return "we_moved";
	case 5:
		return "we_resized";
	case 6:
		return "we_size_changed";
	case 7:
		return "we_minimized";
	case 8:
		return "we_maximized";
	case 9:
		return "we_restored";
	case 10:
		return "we_enter";
	case 11:
		return "we_leave";
	case 12:
		return "we_focus_gained";
	case 13:
		return "we_focus_lost";
	case 14:
		return "we_close";
	default:
		return "" + this1;
	}
};
var snow_types__$Types_InputEventType_$Impl_$ = {};
$hxClasses["snow.types._Types.InputEventType_Impl_"] = snow_types__$Types_InputEventType_$Impl_$;
snow_types__$Types_InputEventType_$Impl_$.__name__ = ["snow","types","_Types","InputEventType_Impl_"];
snow_types__$Types_InputEventType_$Impl_$.toString = function(this1) {
	switch(this1) {
	case 0:
		return "ie_unknown";
	case 1:
		return "ie_key";
	case 2:
		return "ie_text";
	case 3:
		return "ie_mouse";
	case 4:
		return "ie_touch";
	case 5:
		return "ie_gamepad";
	case 6:
		return "ie_joystick";
	default:
		return "" + this1;
	}
};
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
if(Array.prototype.indexOf) HxOverrides.indexOf = function(a,o,i) {
	return Array.prototype.indexOf.call(a,o,i);
};
$hxClasses.Math = Math;
String.prototype.__class__ = $hxClasses.String = String;
String.__name__ = ["String"];
$hxClasses.Array = Array;
Array.__name__ = ["Array"];
Date.prototype.__class__ = $hxClasses.Date = Date;
Date.__name__ = ["Date"];
var Int = $hxClasses.Int = { __name__ : ["Int"]};
var Dynamic = $hxClasses.Dynamic = { __name__ : ["Dynamic"]};
var Float = $hxClasses.Float = Number;
Float.__name__ = ["Float"];
var Bool = $hxClasses.Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = $hxClasses.Class = { __name__ : ["Class"]};
var Enum = { };
if(Array.prototype.map == null) Array.prototype.map = function(f) {
	var a = [];
	var _g1 = 0;
	var _g = this.length;
	while(_g1 < _g) {
		var i = _g1++;
		a[i] = f(this[i]);
	}
	return a;
};
if(Array.prototype.filter == null) Array.prototype.filter = function(f1) {
	var a1 = [];
	var _g11 = 0;
	var _g2 = this.length;
	while(_g11 < _g2) {
		var i1 = _g11++;
		var e = this[i1];
		if(f1(e)) a1.push(e);
	}
	return a1;
};
haxe_Resource.content = [{ name : "default.frag.textured.gl3.glsl", data : "I3ZlcnNpb24gMzMwIGNvcmUNCg0KdW5pZm9ybSBzYW1wbGVyMkQgdGV4MDsNCmluIHZlYzIgdGNvb3JkOw0KaW4gdmVjNCBjb2xvcjsNCm91dCB2ZWM0IGZyYWc7DQoNCnZvaWQgbWFpbigpIHsNCiAgICB2ZWM0IHRleGNvbG9yID0gdGV4dHVyZSh0ZXgwLCB0Y29vcmQpOw0KICAgIGZyYWcgPSBjb2xvciAqIHRleGNvbG9yOw0KfQ"},{ name : "version", data : "MS4wLjAtYWxwaGEuMw"},{ name : "default.vert.gl3.glsl", data : "I3ZlcnNpb24gMzMwIGNvcmUNCg0KbGF5b3V0KGxvY2F0aW9uID0gMCkgaW4gdmVjMyB2ZXJ0ZXhQb3NpdGlvbjsNCmxheW91dChsb2NhdGlvbiA9IDEpIGluIHZlYzIgdmVydGV4VENvb3JkOw0KbGF5b3V0KGxvY2F0aW9uID0gMikgaW4gdmVjNCB2ZXJ0ZXhDb2xvcjsNCmxheW91dChsb2NhdGlvbiA9IDMpIGluIHZlYzMgdmVydGV4Tm9ybWFsOw0KDQpvdXQgdmVjMiB0Y29vcmQ7DQpvdXQgdmVjNCBjb2xvcjsNCg0KdW5pZm9ybSBtYXQ0IHByb2plY3Rpb25NYXRyaXg7DQp1bmlmb3JtIG1hdDQgbW9kZWxWaWV3TWF0cml4Ow0KDQp2b2lkIG1haW4odm9pZCkgew0KDQogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogbW9kZWxWaWV3TWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsNCiAgICB0Y29vcmQgPSB2ZXJ0ZXhUQ29vcmQ7DQogICAgY29sb3IgPSB2ZXJ0ZXhDb2xvcjsNCg0KfQ"},{ name : "default.vert.glsl", data : "YXR0cmlidXRlIHZlYzMgdmVydGV4UG9zaXRpb247DQphdHRyaWJ1dGUgdmVjMiB2ZXJ0ZXhUQ29vcmQ7DQphdHRyaWJ1dGUgdmVjNCB2ZXJ0ZXhDb2xvcjsNCmF0dHJpYnV0ZSB2ZWMzIHZlcnRleE5vcm1hbDsNCg0KdmFyeWluZyB2ZWMyIHRjb29yZDsNCnZhcnlpbmcgdmVjNCBjb2xvcjsNCg0KdW5pZm9ybSBtYXQ0IHByb2plY3Rpb25NYXRyaXg7DQp1bmlmb3JtIG1hdDQgbW9kZWxWaWV3TWF0cml4Ow0KDQp2b2lkIG1haW4odm9pZCkgew0KDQogICAgZ2xfUG9zaXRpb24gPSBwcm9qZWN0aW9uTWF0cml4ICogbW9kZWxWaWV3TWF0cml4ICogdmVjNCh2ZXJ0ZXhQb3NpdGlvbiwgMS4wKTsNCiAgICB0Y29vcmQgPSB2ZXJ0ZXhUQ29vcmQ7DQogICAgY29sb3IgPSB2ZXJ0ZXhDb2xvcjsNCiAgICAgICAgLy9obW0hIEkgdGhpbmsgc2hhZGVycyBhcmUgY29tcGlsZWQgb3B0aW1pc2VkLCByZW1vdmluZyB1bnVzZWQgdmFsdWVzIHdoaWNoIG1lYW5zDQogICAgICAgIC8vdGhhdCB0aGUgc2hhZGVycyBnZXRWZXJ0ZXhOb3JtYWwgYXR0cmlidXRlIHJldHVybnMgaW52YWxpZCAoLTEpIHZhbHVlcyENCiAgICB2ZWMzIG4gPSB2ZXJ0ZXhOb3JtYWw7DQogICAgZ2xfUG9pbnRTaXplID0gMS4wOw0KDQp9"},{ name : "default.frag.bitmapfont.gl3.glsl", data : "I3ZlcnNpb24gMzMwIGNvcmUNCg0KI2RlZmluZSBPVVRMSU5FIDENCiNkZWZpbmUgR0xPVyAxDQojZGVmaW5lIFNVUEVSU0FNUExFIDENCg0KdW5pZm9ybSBzYW1wbGVyMkQgdGV4MDsNCmluIHZlYzIgdGNvb3JkOw0KaW4gdmVjNCBjb2xvcjsNCm91dCB2ZWM0IGZyYWc7DQoNCnVuaWZvcm0gZmxvYXQgc21vb3RobmVzczsNCnVuaWZvcm0gZmxvYXQgdGhpY2tuZXNzOw0KDQp1bmlmb3JtIHZlYzQgb3V0bGluZV9jb2xvcjsNCnVuaWZvcm0gZmxvYXQgb3V0bGluZTsNCg0KdW5pZm9ybSB2ZWM0IGdsb3dfY29sb3I7DQp1bmlmb3JtIGZsb2F0IGdsb3dfdGhyZXNob2xkOw0KdW5pZm9ybSBmbG9hdCBnbG93X2Ftb3VudDsNCg0KDQpmbG9hdCBlZGdlKGZsb2F0IHZhbHVlLCBmbG9hdCBhbW91bnQsIGZsb2F0IHQpIHsNCiAgICByZXR1cm4gc21vb3Roc3RlcCh2YWx1ZSAtIGFtb3VudCwgdmFsdWUgKyBhbW91bnQsIHQpOw0KfQ0KDQpmbG9hdCBnZXQodmVjMiB1diwgZmxvYXQgd2lkdGgpIHsNCiAgICBmbG9hdCB0ZXhhID0gdGV4dHVyZSh0ZXgwLCB1dikuYTsNCiAgICByZXR1cm4gc21vb3Roc3RlcCgwLjUgLSB3aWR0aCwgMC41ICsgd2lkdGgsIHRleGEpOw0KfQ0KDQp2b2lkIG1haW4oKSB7DQoNCi8vYmFzaWMgc2RmDQoNCiAgICBmbG9hdCBkaXN0ID0gdGV4dHVyZSh0ZXgwLCB0Y29vcmQpLmE7DQogICAgICAgIC8vZndpZHRoIGtlZXBzIHdpZHRoIHNpbWlsYXIgZGVzcGl0ZSBzY2FsaW5nLCBzZWUgYmVsb3cgZm9yIG9wdGlvbnMNCiAgICBmbG9hdCBzbW9vdGhhbXQgPSBzbW9vdGhuZXNzICogZndpZHRoKGRpc3QpOw0KICAgIC8vIGZsb2F0IHNtb290aGFtdCA9IHNtb290aG5lc3MgKiBsZW5ndGgodmVjMihkRmR4KGRpc3QpLCBkRmR5KGRpc3QpKSk7DQoNCiAgICAgICAgLy9jYWxjdWxhdGUgdGhlIGVkZ2Ugc21vb3RoaW5nDQogICAgZmxvYXQgYWxwaGEgPSBlZGdlKDEuMCAtIHRoaWNrbmVzcywgc21vb3RoYW10LCBkaXN0KTsNCg0KLy9zdXBlciBzYW1wbGluZw0KDQogICAgICAgICNpZiBTVVBFUlNBTVBMRSA9PSAxDQoNCiAgICAgICAgICAgICAgICAvL3RoZXNlIHZhbHVlcyBjYW4gYmUgZXhwb3NlZCBsYXRlcg0KICAgICAgICAgICAgICAgIC8vdGhlIGN1cnJlbnQgYmVpbmcgMC4yNS9zcXJ0KDIpDQogICAgICAgICAgICBmbG9hdCBmYWN0b3IgPSAwLjE3Njc3NjY5NTM7DQogICAgICAgICAgICBmbG9hdCBzYW1wbGVhbXQgPSAwLjU7DQogICAgICAgICAgICAgICAgLy90aGlzIGlzIGEgc2ltcGxlIGJveCBmaWx0ZXIgYXJvdW5kIHRoZSBwb2ludCwNCiAgICAgICAgICAgICAgICAvL3dlIHVzZSBhIHNlcGFyYXRlIHdpZHRoIGZvciBub3cNCiAgICAgICAgICAgIGZsb2F0IHNhbXBsZXcgPSBzYW1wbGVhbXQgKiBmd2lkdGgoZGlzdCk7DQogICAgICAgICAgICB2ZWMyIHNhbXBsZW9mZnNldCA9IGZhY3RvciAqIChkRmR4KHRjb29yZCkgKyBkRmR5KHRjb29yZCkpOw0KICAgICAgICAgICAgdmVjNCBmbHRyID0gdmVjNCh0Y29vcmQgLSBzYW1wbGVvZmZzZXQsIHRjb29yZCArIHNhbXBsZW9mZnNldCk7DQoNCiAgICAgICAgICAgIGZsb2F0IHRvdGFsID0gZ2V0KCBmbHRyLnh5LCBzYW1wbGV3ICkgKyBnZXQoIGZsdHIuencsIHNhbXBsZXcgKSArDQogICAgICAgICAgICAgICAgICAgICAgICAgIGdldCggZmx0ci54dywgc2FtcGxldyApICsgZ2V0KCBmbHRyLnp5LCBzYW1wbGV3ICk7DQoNCiAgICAgICAgICAgIGFscGhhID0gKGFscGhhICsgMC41ICogdG90YWwpIC8gMy4wOw0KDQogICAgICAgICNlbmRpZiAvL1NVUEVSU0FNUExFDQoNCiAgICAgICAgLy90aGUgYmFzZSBjb2xvciArIHNjYWxlZCBieSB0aGUgbmV3IGFscGhhDQogICAgdmVjNCBmaW5hbENvbG9yID0gdmVjNChjb2xvci5yZ2IsIGNvbG9yLmEgKiBhbHBoYSk7DQoNCi8vb3V0bGluZQ0KDQogICAgI2lmIE9VVExJTkUgPT0gMQ0KDQogICAgICAgICAgICAvL3dpcA0KICAgICAgICBpZihvdXRsaW5lID4gMC4wKSB7DQoNCiAgICAgICAgICAgIC8vcmFuZ2Ugb2YgMS4wIH4gMC4xLCB3ZSBnZXQgMCB+IDENCiAgICAgICAgICAgIGZsb2F0IF9vdXRsaW5lID0gMC45IC0gKG91dGxpbmUgKiAwLjkpOw0KICAgICAgICAgICAgZmxvYXQgX291dGxpbmVfYSA9IGVkZ2UoX291dGxpbmUsIHNtb290aGFtdCwgZGlzdCk7DQogICAgICAgICAgICB2ZWM0IF9vdXRsaW5lX2MgPSB2ZWM0KG91dGxpbmVfY29sb3IucmdiLCBvdXRsaW5lX2NvbG9yLmEgKiBfb3V0bGluZV9hKTsNCg0KICAgICAgICAgICAgZmluYWxDb2xvciA9IG1peChfb3V0bGluZV9jLCBmaW5hbENvbG9yLCBhbHBoYSk7DQoNCiAgICAgICAgfSAvL291dGxpbmUgPiAwLjANCg0KICAgICNlbmRpZiAvL09VVExJTkUNCg0KLy8gZ2xvdw0KDQogICAgI2lmIEdMT1cgPT0gMQ0KDQogICAgICAgICAgICAvL3dpcA0KICAgICAgICBpZihnbG93X2Ftb3VudCA+IDAuMCkgew0KDQogICAgICAgICAgICAvLzp0b2RvOiBleHBvc2Ugb2Zmc2V0IGZvciBkaXJlY3Rpb25hbCBzaGFkb3cNCiAgICAgICAgICAgIC8vIHZlYzIgX2dsb3dfb2ZmcyA9IHZlYzIoMCwwKTsNCiAgICAgICAgICAgIC8vIGZsb2F0IF9nbG93X2Rpc3QgPSB0ZXh0dXJlKHRleDAsIHRjb29yZCAtIF9nbG93X29mZnNldCkuYTsNCg0KICAgICAgICAgICAgZmxvYXQgX2dsb3dfYW10ID0gMS4wIC0gZ2xvd19hbW91bnQ7DQogICAgICAgICAgICBmbG9hdCBfZ2xvd19saW1pdCA9IChfZ2xvd19hbXQgKiBnbG93X3RocmVzaG9sZCk7DQogICAgICAgICAgICBmbG9hdCBfZ2xvd19hID0gZWRnZShfZ2xvd19hbXQsIF9nbG93X2xpbWl0LCBkaXN0KTsNCiAgICAgICAgICAgIHZlYzQgIF9nbG93X2MgPSB2ZWM0KGdsb3dfY29sb3IucmdiLCBnbG93X2NvbG9yLmEgKiBfZ2xvd19hKTsNCg0KICAgICAgICAgICAgZmluYWxDb2xvciA9IG1peChfZ2xvd19jLCBmaW5hbENvbG9yLCBmaW5hbENvbG9yLmEpOw0KDQogICAgICAgIH0gLy9nbG93X2Ftb3VudCA+IDANCg0KICAgICNlbmRpZiAvL0dMT1cNCg0KLy9kb25lDQoNCiAgICBmcmFnID0gZmluYWxDb2xvcjsNCg0KDQp9IC8vbWFpbg0K"},{ name : "build", data : "K2JjZTcxMjVmNjc"},{ name : "default.frag.glsl", data : "dmFyeWluZyB2ZWMyIHRjb29yZDsNCnZhcnlpbmcgdmVjNCBjb2xvcjsNCg0Kdm9pZCBtYWluKCkgew0KICAgIGdsX0ZyYWdDb2xvciA9IGNvbG9yOw0KfQ"},{ name : "default.fnt", data : "aW5mbyBmYWNlPWRlZmF1bHQgc2l6ZT0zMiBib2xkPTAgaXRhbGljPTAgY2hhcnNldD0gdW5pY29kZT0gc3RyZXRjaEg9MTAwIHNtb290aD0xIGFhPTEgcGFkZGluZz0yLDIsMiwyIHNwYWNpbmc9MCwwIG91dGxpbmU9MA0KY29tbW9uIGxpbmVIZWlnaHQ9MzguODggYmFzZT0zMSBzY2FsZVc9Mjc1IHNjYWxlSD01MTIgcGFnZXM9MSBwYWNrZWQ9MA0KcGFnZSBpZD0wIGZpbGU9ImRlZmF1bHQucG5nIg0KY2hhcnMgY291bnQ9MjE3DQpjaGFyIGlkPTMyIHg9MiB5PTIgd2lkdGg9MCBoZWlnaHQ9MCB4b2Zmc2V0PTAgeW9mZnNldD0zMC44OCB4YWR2YW5jZT03LjIgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MzMgeD0yIHk9NCB3aWR0aD03IGhlaWdodD0yNyB4b2Zmc2V0PTEuODkgeW9mZnNldD02Ljg4IHhhZHZhbmNlPTcuNzQgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MzQgeD0yIHk9MzMgd2lkdGg9MTMgaGVpZ2h0PTEyIHhvZmZzZXQ9MS4yOCB5b2Zmc2V0PTYuODggeGFkdmFuY2U9MTIuODYgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MzUgeD0xMSB5PTIgd2lkdGg9MjMgaGVpZ2h0PTI1IHhvZmZzZXQ9MS4wNiB5b2Zmc2V0PTguNDggeGFkdmFuY2U9MjIuNTMgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MzYgeD0yIHk9NDcgd2lkdGg9MTcgaGVpZ2h0PTI4IHhvZmZzZXQ9MS4zNCB5b2Zmc2V0PTYuOTQgeGFkdmFuY2U9MTYuNDUgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MzcgeD0yIHk9Nzcgd2lkdGg9MjcgaGVpZ2h0PTI2IHhvZmZzZXQ9MS4xMiB5b2Zmc2V0PTguMzIgeGFkdmFuY2U9MjYuODggcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MzggeD0yMSB5PTI5IHdpZHRoPTIwIGhlaWdodD0yNiB4b2Zmc2V0PTEuMTUgeW9mZnNldD04LjM4IHhhZHZhbmNlPTE5LjU1IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTM5IHg9MjEgeT01NyB3aWR0aD02IGhlaWdodD0xMiB4b2Zmc2V0PTEuMzEgeW9mZnNldD02Ljg4IHhhZHZhbmNlPTUuODIgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9NDAgeD0yIHk9MTA1IHdpZHRoPTkgaGVpZ2h0PTMxIHhvZmZzZXQ9MS4zNCB5b2Zmc2V0PTYuODggeGFkdmFuY2U9OC4zNSBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD00MSB4PTIgeT0xMzggd2lkdGg9OSBoZWlnaHQ9MzEgeG9mZnNldD0wLjc3IHlvZmZzZXQ9Ni44OCB4YWR2YW5jZT04LjM1IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTQyIHg9MjkgeT01NyB3aWR0aD0xNCBoZWlnaHQ9MTMgeG9mZnNldD0xLjA2IHlvZmZzZXQ9Ni45MSB4YWR2YW5jZT0xMy42MyBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD00MyB4PTM2IHk9MiB3aWR0aD0xNCBoZWlnaHQ9MTQgeG9mZnNldD0xLjQ3IHlvZmZzZXQ9MTYuNDIgeGFkdmFuY2U9MTQuODIgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9NDQgeD0zNiB5PTE4IHdpZHRoPTYgaGVpZ2h0PTkgeG9mZnNldD0xLjgyIHlvZmZzZXQ9MjguMTMgeGFkdmFuY2U9Ni45MSBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD00NSB4PTQzIHk9Mjkgd2lkdGg9MTMgaGVpZ2h0PTUgeG9mZnNldD0xLjgyIHlvZmZzZXQ9MjAuNTEgeGFkdmFuY2U9MTMuNTcgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9NDYgeD00NCB5PTE4IHdpZHRoPTUgaGVpZ2h0PTUgeG9mZnNldD0xLjgyIHlvZmZzZXQ9MjguMTMgeGFkdmFuY2U9Ni41MyBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD00NyB4PTIgeT0xNzEgd2lkdGg9MTggaGVpZ2h0PTI4IHhvZmZzZXQ9MC42MSB5b2Zmc2V0PTguNDggeGFkdmFuY2U9MTcuMDIgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9NDggeD0xMyB5PTEwNSB3aWR0aD0yMSBoZWlnaHQ9MjYgeG9mZnNldD0yLjAyIHlvZmZzZXQ9OC4wMyB4YWR2YW5jZT0yMi44NSBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD00OSB4PTUyIHk9MiB3aWR0aD0xMCBoZWlnaHQ9MjUgeG9mZnNldD0xLjA5IHlvZmZzZXQ9OC40OCB4YWR2YW5jZT0xMS4zNiBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD01MCB4PTMxIHk9NzIgd2lkdGg9MTYgaGVpZ2h0PTI1IHhvZmZzZXQ9MS42IHlvZmZzZXQ9OC4wMyB4YWR2YW5jZT0xNi43NyBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD01MSB4PTQ1IHk9MzYgd2lkdGg9MTcgaGVpZ2h0PTI2IHhvZmZzZXQ9MS4yOCB5b2Zmc2V0PTguMDMgeGFkdmFuY2U9MTcuNSBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD01MiB4PTEzIHk9MTMzIHdpZHRoPTE4IGhlaWdodD0yNSB4b2Zmc2V0PTAuNDUgeW9mZnNldD04LjQ4IHhhZHZhbmNlPTE3Ljg5IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTUzIHg9MiB5PTIwMSB3aWR0aD0xNyBoZWlnaHQ9MjUgeG9mZnNldD0xLjYzIHlvZmZzZXQ9OC40OCB4YWR2YW5jZT0xNy4zMSBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD01NCB4PTIgeT0yMjggd2lkdGg9MTcgaGVpZ2h0PTI1IHhvZmZzZXQ9MS45OCB5b2Zmc2V0PTguNDggeGFkdmFuY2U9MTguMTggcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9NTUgeD0yIHk9MjU1IHdpZHRoPTE3IGhlaWdodD0yNSB4b2Zmc2V0PTEuMjUgeW9mZnNldD04LjQ4IHhhZHZhbmNlPTE2LjA2IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTU2IHg9MiB5PTI4MiB3aWR0aD0xOCBoZWlnaHQ9MjYgeG9mZnNldD0xLjg5IHlvZmZzZXQ9OC4wNiB4YWR2YW5jZT0xOS40OSBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD01NyB4PTIxIHk9MjAxIHdpZHRoPTE3IGhlaWdodD0yNSB4b2Zmc2V0PTEuNDQgeW9mZnNldD04LjAzIHhhZHZhbmNlPTE4LjI0IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTU4IHg9MjIgeT0xNjAgd2lkdGg9NSBoZWlnaHQ9MTcgeG9mZnNldD0xLjgyIHlvZmZzZXQ9MTYuOCB4YWR2YW5jZT02LjUzIHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTU5IHg9MjIgeT0xNzkgd2lkdGg9NiBoZWlnaHQ9MjAgeG9mZnNldD0xLjgyIHlvZmZzZXQ9MTYuOCB4YWR2YW5jZT02LjkxIHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTYwIHg9MjkgeT0xNjAgd2lkdGg9MTMgaGVpZ2h0PTE2IHhvZmZzZXQ9MS4wNiB5b2Zmc2V0PTE1LjIgeGFkdmFuY2U9MTIuOTYgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9NjEgeD0zMCB5PTE3OCB3aWR0aD0xNCBoZWlnaHQ9MTAgeG9mZnNldD0yLjExIHlvZmZzZXQ9MTguMjcgeGFkdmFuY2U9MTYuMDYgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9NjIgeD0zMyB5PTEzMyB3aWR0aD0xMiBoZWlnaHQ9MTYgeG9mZnNldD0xLjkyIHlvZmZzZXQ9MTUuMiB4YWR2YW5jZT0xMi45MyBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD02MyB4PTM2IHk9OTkgd2lkdGg9MTQgaGVpZ2h0PTI3IHhvZmZzZXQ9MC45NiB5b2Zmc2V0PTYuODggeGFkdmFuY2U9MTQuMTEgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9NjQgeD00NCB5PTE1MSB3aWR0aD0yMyBoZWlnaHQ9MjMgeG9mZnNldD0xLjU3IHlvZmZzZXQ9MTMuMTggeGFkdmFuY2U9MjMuMSBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD02NSB4PTQ5IHk9NjQgd2lkdGg9MjIgaGVpZ2h0PTI1IHhvZmZzZXQ9MC4yMiB5b2Zmc2V0PTguNDggeGFkdmFuY2U9MTkuNzEgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9NjYgeD0yMSB5PTIyOCB3aWR0aD0xOCBoZWlnaHQ9MjUgeG9mZnNldD0yLjU2IHlvZmZzZXQ9OC40OCB4YWR2YW5jZT0xOS4xIHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTY3IHg9NDAgeT0xOTAgd2lkdGg9MjAgaGVpZ2h0PTI2IHhvZmZzZXQ9MS4yNSB5b2Zmc2V0PTguMDMgeGFkdmFuY2U9MTkuNzEgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9NjggeD0yMSB5PTI1NSB3aWR0aD0yMiBoZWlnaHQ9MjUgeG9mZnNldD0yLjU2IHlvZmZzZXQ9OC40OCB4YWR2YW5jZT0yMy4yNiBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD02OSB4PTQxIHk9MjE4IHdpZHRoPTE3IGhlaWdodD0yNSB4b2Zmc2V0PTIuNTYgeW9mZnNldD04LjQ4IHhhZHZhbmNlPTE3LjczIHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTcwIHg9NTIgeT05MSB3aWR0aD0xNiBoZWlnaHQ9MjUgeG9mZnNldD0yLjU2IHlvZmZzZXQ9OC40OCB4YWR2YW5jZT0xNi43NCBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD03MSB4PTUyIHk9MTE4IHdpZHRoPTIxIGhlaWdodD0yNiB4b2Zmc2V0PTEuMjUgeW9mZnNldD04LjAzIHhhZHZhbmNlPTIxLjUgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9NzIgeD03MCB5PTkxIHdpZHRoPTIxIGhlaWdodD0yNSB4b2Zmc2V0PTIuNTYgeW9mZnNldD04LjQ4IHhhZHZhbmNlPTIzLjg3IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTczIHg9NjQgeT0yIHdpZHRoPTYgaGVpZ2h0PTI1IHhvZmZzZXQ9Mi41NiB5b2Zmc2V0PTguNDggeGFkdmFuY2U9OC4xNiBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD03NCB4PTY0IHk9Mjkgd2lkdGg9OSBoZWlnaHQ9MzEgeG9mZnNldD0tMC41NCB5b2Zmc2V0PTguNDggeGFkdmFuY2U9OC4xNiBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD03NSB4PTcyIHk9MiB3aWR0aD0xOCBoZWlnaHQ9MjUgeG9mZnNldD0yLjU2IHlvZmZzZXQ9OC40OCB4YWR2YW5jZT0xOC40NiBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD03NiB4PTczIHk9NjIgd2lkdGg9MTYgaGVpZ2h0PTI1IHhvZmZzZXQ9Mi41NiB5b2Zmc2V0PTguNDggeGFkdmFuY2U9MTYuMDMgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9NzcgeD03NSB5PTI5IHdpZHRoPTI2IGhlaWdodD0yNSB4b2Zmc2V0PTEuNTQgeW9mZnNldD04LjQ4IHhhZHZhbmNlPTI1Ljk4IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTc4IHg9OTIgeT0yIHdpZHRoPTIwIGhlaWdodD0yNSB4b2Zmc2V0PTIuNTYgeW9mZnNldD04LjQ4IHhhZHZhbmNlPTIyLjUzIHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTc5IHg9OTEgeT01NiB3aWR0aD0yNSBoZWlnaHQ9MjYgeG9mZnNldD0xLjI1IHlvZmZzZXQ9OC4wMyB4YWR2YW5jZT0yNC41OCBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD04MCB4PTEwMyB5PTI5IHdpZHRoPTE4IGhlaWdodD0yNSB4b2Zmc2V0PTIuNTYgeW9mZnNldD04LjQ4IHhhZHZhbmNlPTE4LjMgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9ODEgeD0yIHk9MzEwIHdpZHRoPTI1IGhlaWdodD0yNiB4b2Zmc2V0PTEuMjUgeW9mZnNldD04LjAzIHhhZHZhbmNlPTI0LjU4IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTgyIHg9MTE0IHk9MiB3aWR0aD0xOSBoZWlnaHQ9MjUgeG9mZnNldD0yLjU2IHlvZmZzZXQ9OC40OCB4YWR2YW5jZT0xOS4zIHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTgzIHg9MjIgeT0yODIgd2lkdGg9MTkgaGVpZ2h0PTI2IHhvZmZzZXQ9MS4yOCB5b2Zmc2V0PTguMDMgeGFkdmFuY2U9MTguNjkgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9ODQgeD0yIHk9MzM4IHdpZHRoPTE5IGhlaWdodD0yNSB4b2Zmc2V0PTAuNDggeW9mZnNldD04LjQ4IHhhZHZhbmNlPTE3LjA2IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTg1IHg9MiB5PTM2NSB3aWR0aD0yMSBoZWlnaHQ9MjUgeG9mZnNldD0yLjMgeW9mZnNldD04LjQ4IHhhZHZhbmNlPTIzLjE3IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTg2IHg9MjMgeT0zMzggd2lkdGg9MjMgaGVpZ2h0PTI1IHhvZmZzZXQ9MC4xMyB5b2Zmc2V0PTguNDggeGFkdmFuY2U9MjAuNjEgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9ODcgeD0yOSB5PTMxMCB3aWR0aD0zMyBoZWlnaHQ9MjUgeG9mZnNldD0wLjQ1IHlvZmZzZXQ9OC40OCB4YWR2YW5jZT0zMS4wNyBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD04OCB4PTQzIHk9MjgyIHdpZHRoPTIxIGhlaWdodD0yNSB4b2Zmc2V0PTAuMjkgeW9mZnNldD04LjQ4IHhhZHZhbmNlPTE5LjE3IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTg5IHg9NDUgeT0yNDUgd2lkdGg9MjEgaGVpZ2h0PTI1IHhvZmZzZXQ9LTAuMSB5b2Zmc2V0PTguNDggeGFkdmFuY2U9MTguMTQgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9OTAgeD02MCB5PTIxOCB3aWR0aD0yMCBoZWlnaHQ9MjUgeG9mZnNldD0wLjI5IHlvZmZzZXQ9OC40OCB4YWR2YW5jZT0xNy41NyBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD05MSB4PTYyIHk9MTc2IHdpZHRoPTExIGhlaWdodD0zMSB4b2Zmc2V0PTIuMjQgeW9mZnNldD02Ljg4IHhhZHZhbmNlPTEwLjQ2IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTkzIHg9NzUgeT0xMTggd2lkdGg9MTEgaGVpZ2h0PTMxIHhvZmZzZXQ9MC4xOSB5b2Zmc2V0PTYuODggeGFkdmFuY2U9MTAuNjYgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9OTQgeD02OSB5PTE1MSB3aWR0aD0xNiBoZWlnaHQ9MTMgeG9mZnNldD0xLjU3IHlvZmZzZXQ9Ni41OSB4YWR2YW5jZT0xNi4zNSBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD05NSB4PTkxIHk9ODQgd2lkdGg9MjEgaGVpZ2h0PTUgeG9mZnNldD0wLjEgeW9mZnNldD0zMi4wMyB4YWR2YW5jZT0xOC4xMSBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD05NiB4PTMzIHk9MTUxIHdpZHRoPTkgaGVpZ2h0PTcgeG9mZnNldD0xLjg2IHlvZmZzZXQ9Ny40NiB4YWR2YW5jZT05LjcgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9OTcgeD03NSB5PTE2NiB3aWR0aD0xNyBoZWlnaHQ9MTkgeG9mZnNldD0wLjc3IHlvZmZzZXQ9MTQuODggeGFkdmFuY2U9MTUuMzYgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9OTggeD03NSB5PTE4NyB3aWR0aD0xNyBoZWlnaHQ9MjcgeG9mZnNldD0xLjkyIHlvZmZzZXQ9Ni44OCB4YWR2YW5jZT0xNy43NiBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD05OSB4PTg4IHk9MTE4IHdpZHRoPTE1IGhlaWdodD0xOSB4b2Zmc2V0PTEuMDYgeW9mZnNldD0xNC44OCB4YWR2YW5jZT0xNC41MyBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0xMDAgeD0yIHk9MzkyIHdpZHRoPTE3IGhlaWdodD0yNyB4b2Zmc2V0PTEuMDIgeW9mZnNldD02Ljg4IHhhZHZhbmNlPTE3Ljc2IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTEwMSB4PTkzIHk9OTEgd2lkdGg9MTcgaGVpZ2h0PTE5IHhvZmZzZXQ9MC45OSB5b2Zmc2V0PTE0Ljg4IHhhZHZhbmNlPTE2LjM4IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTEwMiB4PTIgeT00MjEgd2lkdGg9MTIgaGVpZ2h0PTI3IHhvZmZzZXQ9MC4zMiB5b2Zmc2V0PTYuODggeGFkdmFuY2U9MTAuNTkgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MTAzIHg9MiB5PTQ1MCB3aWR0aD0xOCBoZWlnaHQ9MjcgeG9mZnNldD0wLjgzIHlvZmZzZXQ9MTQuODggeGFkdmFuY2U9MTUuOTQgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MTA0IHg9MTYgeT00MjEgd2lkdGg9MTYgaGVpZ2h0PTI3IHhvZmZzZXQ9MS45MiB5b2Zmc2V0PTYuODggeGFkdmFuY2U9MTcuMzQgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MTA1IHg9ODggeT0xMzkgd2lkdGg9NSBoZWlnaHQ9MjUgeG9mZnNldD0xLjk1IHlvZmZzZXQ9OC40OCB4YWR2YW5jZT02Ljc4IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTEwNiB4PTI1IHk9MzY1IHdpZHRoPTggaGVpZ2h0PTMzIHhvZmZzZXQ9LTAuMzggeW9mZnNldD04LjQ4IHhhZHZhbmNlPTYuNzggcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MTA3IHg9MiB5PTQ3OSB3aWR0aD0xNSBoZWlnaHQ9MjcgeG9mZnNldD0xLjkyIHlvZmZzZXQ9Ni44OCB4YWR2YW5jZT0xNC4zNCBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0xMDggeD0xOSB5PTQ3OSB3aWR0aD04IGhlaWdodD0yNyB4b2Zmc2V0PTEuOTIgeW9mZnNldD02Ljg4IHhhZHZhbmNlPTcuNTUgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MTA5IHg9MjEgeT00MDAgd2lkdGg9MjcgaGVpZ2h0PTE5IHhvZmZzZXQ9MS45NSB5b2Zmc2V0PTE0Ljg4IHhhZHZhbmNlPTI4LjA2IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTExMCB4PTIyIHk9NDUwIHdpZHRoPTE3IGhlaWdodD0xOSB4b2Zmc2V0PTEuOTUgeW9mZnNldD0xNC44OCB4YWR2YW5jZT0xNy44OSBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0xMTEgeD0zNCB5PTQyMSB3aWR0aD0xOCBoZWlnaHQ9MTkgeG9mZnNldD0xLjAyIHlvZmZzZXQ9MTQuODggeGFkdmFuY2U9MTcuNiBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0xMTIgeD0zNSB5PTM2NSB3aWR0aD0xNyBoZWlnaHQ9MjYgeG9mZnNldD0xLjk1IHlvZmZzZXQ9MTQuODggeGFkdmFuY2U9MTcuODIgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MTEzIHg9NTAgeT0zOTMgd2lkdGg9MTcgaGVpZ2h0PTI2IHhvZmZzZXQ9MS4wNiB5b2Zmc2V0PTE0Ljg4IHhhZHZhbmNlPTE3LjgyIHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTExNCB4PTQ4IHk9MzM3IHdpZHRoPTExIGhlaWdodD0xOSB4b2Zmc2V0PTEuOTUgeW9mZnNldD0xNC42MiB4YWR2YW5jZT0xMC4yNyBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0xMTUgeD01NCB5PTM1OCB3aWR0aD0xNCBoZWlnaHQ9MTkgeG9mZnNldD0xLjAyIHlvZmZzZXQ9MTQuODggeGFkdmFuY2U9MTMuMjUgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MTE2IHg9MjkgeT00NzEgd2lkdGg9MTIgaGVpZ2h0PTIzIHhvZmZzZXQ9MC41OCB5b2Zmc2V0PTExLjA0IHhhZHZhbmNlPTEwLjc4IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTExNyB4PTYxIHk9MzM3IHdpZHRoPTE2IGhlaWdodD0xOSB4b2Zmc2V0PTEuNzkgeW9mZnNldD0xNS4yIHhhZHZhbmNlPTE2Ljc3IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTExOCB4PTY0IHk9MzA5IHdpZHRoPTE4IGhlaWdodD0xOCB4b2Zmc2V0PTAuMjkgeW9mZnNldD0xNS4yIHhhZHZhbmNlPTE1Ljc0IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTExOSB4PTQxIHk9NDQyIHdpZHRoPTI1IGhlaWdodD0xOCB4b2Zmc2V0PTAuMzggeW9mZnNldD0xNS4yIHhhZHZhbmNlPTIzLjIgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MTIwIHg9NTQgeT00MjEgd2lkdGg9MTcgaGVpZ2h0PTE4IHhvZmZzZXQ9MC4zNSB5b2Zmc2V0PTE1LjIgeGFkdmFuY2U9MTUuMTcgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MTIxIHg9NjYgeT0yNzIgd2lkdGg9MTggaGVpZ2h0PTI2IHhvZmZzZXQ9MC4yMiB5b2Zmc2V0PTE1LjIgeGFkdmFuY2U9MTYuMTYgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MTIyIHg9NjggeT0yNDUgd2lkdGg9MTYgaGVpZ2h0PTE4IHhvZmZzZXQ9MC43IHlvZmZzZXQ9MTUuMiB4YWR2YW5jZT0xNS4wNyBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0xMjMgeD02OSB5PTM3OSB3aWR0aD0xMSBoZWlnaHQ9MzEgeG9mZnNldD0wLjYxIHlvZmZzZXQ9Ni44OCB4YWR2YW5jZT05LjU3IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTEyNCB4PTc5IHk9MzI5IHdpZHRoPTUgaGVpZ2h0PTMzIHhvZmZzZXQ9Mi4yNCB5b2Zmc2V0PTYuODggeGFkdmFuY2U9Ny4zMyBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0xMjUgeD00MyB5PTQ2MiB3aWR0aD0xMSBoZWlnaHQ9MzEgeG9mZnNldD0wLjA2IHlvZmZzZXQ9Ni44OCB4YWR2YW5jZT05LjU3IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTEyNiB4PTQ2IHk9MTc2IHdpZHRoPTE0IGhlaWdodD02IHhvZmZzZXQ9MS43MyB5b2Zmc2V0PTIxLjg2IHhhZHZhbmNlPTE0LjU2IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTEyNyB4PTg0IHk9MzAwIHdpZHRoPTE2IGhlaWdodD0yNSB4b2Zmc2V0PTMuMDIgeW9mZnNldD04LjA0IHhhZHZhbmNlPTE5LjIgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9ODM2NCB4PTgyIHk9MjE2IHdpZHRoPTIyIGhlaWdodD0yNCB4b2Zmc2V0PTEuMDYgeW9mZnNldD05LjAyIHhhZHZhbmNlPTIyLjUgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9ODIxOCB4PTEzIHk9MTYwIHdpZHRoPTYgaGVpZ2h0PTkgeG9mZnNldD0xLjgyIHlvZmZzZXQ9MjguMTMgeGFkdmFuY2U9Ni45MSBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD00MDIgeD05NCB5PTE2NiB3aWR0aD0xNiBoZWlnaHQ9MzMgeG9mZnNldD0tMS4wOSB5b2Zmc2V0PTguMDMgeGFkdmFuY2U9MTEuMjMgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9ODIyMiB4PTU0IHk9Mzc5IHdpZHRoPTEzIGhlaWdodD05IHhvZmZzZXQ9MS44MiB5b2Zmc2V0PTI4LjEzIHhhZHZhbmNlPTE0LjI3IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTgyMzAgeD02OCB5PTI2NSB3aWR0aD0yMSBoZWlnaHQ9NSB4b2Zmc2V0PTEuODIgeW9mZnNldD0yOC4xMyB4YWR2YW5jZT0yMS42MyBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD04MjI0IHg9OTUgeT0xMzkgd2lkdGg9MTQgaGVpZ2h0PTIyIHhvZmZzZXQ9MS4xMiB5b2Zmc2V0PTExLjQ2IHhhZHZhbmNlPTEzLjU3IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTgyMjUgeD0xMDUgeT0xMTIgd2lkdGg9MTQgaGVpZ2h0PTI0IHhvZmZzZXQ9MS43IHlvZmZzZXQ9MTEuNDYgeGFkdmFuY2U9MTQuNzIgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9NzEwIHg9NjYgeT0zMDAgd2lkdGg9MTIgaGVpZ2h0PTcgeG9mZnNldD0yLjQzIHlvZmZzZXQ9Ny4wNCB4YWR2YW5jZT0xNC4yNyBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD04MjQwIHg9MTE0IHk9ODQgd2lkdGg9MzkgaGVpZ2h0PTI2IHhvZmZzZXQ9MS4xNSB5b2Zmc2V0PTguMzIgeGFkdmFuY2U9MzguNDMgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MzUyIHg9NTYgeT00NjIgd2lkdGg9MTkgaGVpZ2h0PTMzIHhvZmZzZXQ9MS4yOCB5b2Zmc2V0PTAuNDggeGFkdmFuY2U9MTguNjkgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9ODI0OSB4PTY4IHk9NDQxIHdpZHRoPTExIGhlaWdodD0xNiB4b2Zmc2V0PTAuNDUgeW9mZnNldD0xNS4yIHhhZHZhbmNlPTEwLjMgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MzM4IHg9MTE4IHk9NTYgd2lkdGg9MzQgaGVpZ2h0PTI2IHhvZmZzZXQ9MS4yOCB5b2Zmc2V0PTguMDMgeGFkdmFuY2U9MzQuMjcgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MzgxIHg9NzcgeT00NTkgd2lkdGg9MjAgaGVpZ2h0PTMzIHhvZmZzZXQ9MC4yOSB5b2Zmc2V0PTAuNDggeGFkdmFuY2U9MTcuNTcgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9ODIxNiB4PTMwIHk9MTkwIHdpZHRoPTYgaGVpZ2h0PTkgeG9mZnNldD0xLjM4IHlvZmZzZXQ9Ni44OCB4YWR2YW5jZT01Ljk1IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTgyMTcgeD03MCB5PTM1OCB3aWR0aD02IGhlaWdodD05IHhvZmZzZXQ9MS4zNCB5b2Zmc2V0PTYuODggeGFkdmFuY2U9NS40MSBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD04MjIwIHg9OTQgeT0yMDEgd2lkdGg9MTMgaGVpZ2h0PTkgeG9mZnNldD0xLjM4IHlvZmZzZXQ9Ni44OCB4YWR2YW5jZT0xMi42NyBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD04MjIxIHg9NzggeT0zNjQgd2lkdGg9MTMgaGVpZ2h0PTkgeG9mZnNldD0xLjM0IHlvZmZzZXQ9Ni44OCB4YWR2YW5jZT0xMi4xMyBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD04MjI2IHg9NDMgeT00OTUgd2lkdGg9MTAgaGVpZ2h0PTEwIHhvZmZzZXQ9MS40MSB5b2Zmc2V0PTE4LjUgeGFkdmFuY2U9OS43OSBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD04MjExIHg9NjkgeT00MTIgd2lkdGg9MTUgaGVpZ2h0PTUgeG9mZnNldD0xLjgyIHlvZmZzZXQ9MjAuNTEgeGFkdmFuY2U9MTYuMDYgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9ODIxMiB4PTQ1IHk9MjcyIHdpZHRoPTE4IGhlaWdodD01IHhvZmZzZXQ9MS44MiB5b2Zmc2V0PTIwLjUxIHhhZHZhbmNlPTE5LjAxIHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTczMiB4PTU1IHk9NDk3IHdpZHRoPTE0IGhlaWdodD02IHhvZmZzZXQ9Mi45NCB5b2Zmc2V0PTguNDIgeGFkdmFuY2U9MTYuOSBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD04NDgyIHg9NzcgeT00OTQgd2lkdGg9MjMgaGVpZ2h0PTE0IHhvZmZzZXQ9MC45OSB5b2Zmc2V0PTguNDggeGFkdmFuY2U9MjMuMjYgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MzUzIHg9ODYgeT0zMjcgd2lkdGg9MTQgaGVpZ2h0PTI3IHhvZmZzZXQ9MS4wMiB5b2Zmc2V0PTcuMiB4YWR2YW5jZT0xMy4yNSBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD04MjUwIHg9NzMgeT00MTkgd2lkdGg9MTEgaGVpZ2h0PTE2IHhvZmZzZXQ9MS4zMSB5b2Zmc2V0PTE1LjIgeGFkdmFuY2U9MTAuMzQgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MzM5IHg9ODEgeT00Mzcgd2lkdGg9MjkgaGVpZ2h0PTE5IHhvZmZzZXQ9MS4wMiB5b2Zmc2V0PTE0Ljg4IHhhZHZhbmNlPTI4Ljg2IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTM4MiB4PTExMSB5PTEzOCB3aWR0aD0xNiBoZWlnaHQ9MjYgeG9mZnNldD0wLjcgeW9mZnNldD03LjIgeGFkdmFuY2U9MTUuMDcgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9Mzc2IHg9OTkgeT00NTggd2lkdGg9MjEgaGVpZ2h0PTMyIHhvZmZzZXQ9LTAuMSB5b2Zmc2V0PTEuNzYgeGFkdmFuY2U9MTguMTQgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MTYxIHg9ODIgeT0zNzUgd2lkdGg9NyBoZWlnaHQ9MjcgeG9mZnNldD0xLjYgeW9mZnNldD0xNC44OCB4YWR2YW5jZT03LjE3IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTE2MiB4PTg2IHk9NDA0IHdpZHRoPTE1IGhlaWdodD0yOCB4b2Zmc2V0PTEuMDkgeW9mZnNldD02Ljk0IHhhZHZhbmNlPTE1LjI2IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTE2MyB4PTEyMyB5PTI5IHdpZHRoPTE2IGhlaWdodD0yNSB4b2Zmc2V0PTEuMDkgeW9mZnNldD04LjI5IHhhZHZhbmNlPTE2IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTE2NCB4PTEyMSB5PTExMiB3aWR0aD0xOSBoZWlnaHQ9MjMgeG9mZnNldD0xLjk1IHlvZmZzZXQ9OS41NCB4YWR2YW5jZT0yMC4wMyBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0xNjUgeD0xMzUgeT0yIHdpZHRoPTIyIGhlaWdodD0yNSB4b2Zmc2V0PTAuOTYgeW9mZnNldD04LjQ4IHhhZHZhbmNlPTIxLjU3IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTE2NiB4PTkzIHk9MzU2IHdpZHRoPTUgaGVpZ2h0PTMzIHhvZmZzZXQ9Mi4zIHlvZmZzZXQ9Ni44OCB4YWR2YW5jZT03LjQyIHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTE2NyB4PTEwMCB5PTM1NiB3aWR0aD0xNSBoZWlnaHQ9MjkgeG9mZnNldD0xLjE4IHlvZmZzZXQ9Ni44OCB4YWR2YW5jZT0xNC41OSBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0xNjggeD02MiB5PTIwOSB3aWR0aD0xMSBoZWlnaHQ9NiB4b2Zmc2V0PTIuNzggeW9mZnNldD04LjQ4IHhhZHZhbmNlPTEzLjUgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MTY5IHg9MTQxIHk9Mjkgd2lkdGg9MjIgaGVpZ2h0PTI0IHhvZmZzZXQ9MS41NyB5b2Zmc2V0PTguNyB4YWR2YW5jZT0yMy4wNCBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0xNzAgeD0yOSB5PTQ5NiB3aWR0aD0xMiBoZWlnaHQ9MTIgeG9mZnNldD0xLjA2IHlvZmZzZXQ9Ny42OCB4YWR2YW5jZT0xMS4xNyBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0xNzEgeD0xMDIgeT00OTIgd2lkdGg9MTkgaGVpZ2h0PTE2IHhvZmZzZXQ9MC40OCB5b2Zmc2V0PTE1LjIgeGFkdmFuY2U9MTguMDIgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MTcyIHg9OTEgeT0zOTEgd2lkdGg9MTcgaGVpZ2h0PTExIHhvZmZzZXQ9Mi4xMSB5b2Zmc2V0PTE3Ljg5IHhhZHZhbmNlPTE5LjA3IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTE3MyB4PTY0IHk9MzI5IHdpZHRoPTEzIGhlaWdodD02IHhvZmZzZXQ9MS44MiB5b2Zmc2V0PTIwLjUxIHhhZHZhbmNlPTEzLjU3IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTE3NCB4PTE1OSB5PTIgd2lkdGg9MjIgaGVpZ2h0PTI0IHhvZmZzZXQ9MS41NyB5b2Zmc2V0PTguNyB4YWR2YW5jZT0yMy4wNCBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0xNzUgeD01NSB5PTUwNSB3aWR0aD0xOSBoZWlnaHQ9NSB4b2Zmc2V0PS0wLjA5IHlvZmZzZXQ9NC41OCB4YWR2YW5jZT0xNiBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0xNzYgeD04NiB5PTI0MiB3aWR0aD0xMSBoZWlnaHQ9MTEgeG9mZnNldD0xLjA5IHlvZmZzZXQ9Ni43MiB4YWR2YW5jZT0xMC42NiBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0xNzcgeD04NiB5PTI3MiB3aWR0aD0xNCBoZWlnaHQ9MTggeG9mZnNldD0yLjA1IHlvZmZzZXQ9MTMuODYgeGFkdmFuY2U9MTUuOTQgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MTc4IHg9OTEgeT0yNTUgd2lkdGg9MTEgaGVpZ2h0PTE1IHhvZmZzZXQ9MC44IHlvZmZzZXQ9OC4yOSB4YWR2YW5jZT05LjczIHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTE3OSB4PTE1NCB5PTU1IHdpZHRoPTExIGhlaWdodD0xNSB4b2Zmc2V0PTAuNjEgeW9mZnNldD04LjI5IHhhZHZhbmNlPTkuOTIgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MTgwIHg9MTU0IHk9NzIgd2lkdGg9OSBoZWlnaHQ9NyB4b2Zmc2V0PTEuODYgeW9mZnNldD03LjQ2IHhhZHZhbmNlPTkuNyBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0xODEgeD0xMDMgeT00MDQgd2lkdGg9MTggaGVpZ2h0PTI2IHhvZmZzZXQ9Mi4zNCB5b2Zmc2V0PTE1LjIgeGFkdmFuY2U9MTguOTEgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MTgyIHg9MTY1IHk9Mjggd2lkdGg9MjAgaGVpZ2h0PTI1IHhvZmZzZXQ9MS4wNiB5b2Zmc2V0PTguNDggeGFkdmFuY2U9MTkuOSBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0xODMgeD05OSB5PTI0MiB3aWR0aD03IGhlaWdodD03IHhvZmZzZXQ9MS44MiB5b2Zmc2V0PTE5LjkgeGFkdmFuY2U9Ny42MiBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0xODQgeD0xMTAgeT0zODcgd2lkdGg9NyBoZWlnaHQ9NyB4b2Zmc2V0PTQuNjEgeW9mZnNldD0zMi42MSB4YWR2YW5jZT05LjcgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MTg1IHg9MTgzIHk9MiB3aWR0aD03IGhlaWdodD0xNSB4b2Zmc2V0PTAuNzQgeW9mZnNldD04LjU0IHhhZHZhbmNlPTYuOTEgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MTg2IHg9MTEyIHk9NDMyIHdpZHRoPTEyIGhlaWdodD0xMiB4b2Zmc2V0PTEuMDYgeW9mZnNldD03LjY4IHhhZHZhbmNlPTExLjg0IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTE4NyB4PTEwNiB5PTIxMiB3aWR0aD0xOSBoZWlnaHQ9MTYgeG9mZnNldD0xLjMxIHlvZmZzZXQ9MTUuMiB4YWR2YW5jZT0xOC4wMiBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0xODggeD0xMjIgeT00NDYgd2lkdGg9MjMgaGVpZ2h0PTI4IHhvZmZzZXQ9MS4yNSB5b2Zmc2V0PTguNDggeGFkdmFuY2U9MjIuOTQgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MTg5IHg9MTIzIHk9NDc2IHdpZHRoPTI0IGhlaWdodD0yOCB4b2Zmc2V0PTEuMTUgeW9mZnNldD04LjQ4IHhhZHZhbmNlPTIzLjMzIHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTE5MCB4PTExMiB5PTE2NiB3aWR0aD0yOSBoZWlnaHQ9MjggeG9mZnNldD0xLjAyIHlvZmZzZXQ9OC4yOSB4YWR2YW5jZT0yOC4zMiBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0xOTEgeD0xMjkgeT0xMzcgd2lkdGg9MTQgaGVpZ2h0PTI3IHhvZmZzZXQ9MS45OCB5b2Zmc2V0PTE0Ljg4IHhhZHZhbmNlPTE0LjM3IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTE5MiB4PTEwMiB5PTI3MiB3aWR0aD0yMiBoZWlnaHQ9MzMgeG9mZnNldD0wLjIyIHlvZmZzZXQ9MC43NCB4YWR2YW5jZT0xOS43MSBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0xOTMgeD0xMDggeT0yMzAgd2lkdGg9MjIgaGVpZ2h0PTMzIHhvZmZzZXQ9MC4yMiB5b2Zmc2V0PTAuNzQgeGFkdmFuY2U9MTkuNzEgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MTk0IHg9MTAyIHk9MzA3IHdpZHRoPTIyIGhlaWdodD0zMyB4b2Zmc2V0PTAuMjIgeW9mZnNldD0wLjMyIHhhZHZhbmNlPTE5LjcxIHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTE5NSB4PTEyNyB5PTE5NiB3aWR0aD0yMiBoZWlnaHQ9MzIgeG9mZnNldD0wLjIyIHlvZmZzZXQ9MS43IHhhZHZhbmNlPTE5LjcxIHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTE5NiB4PTExNyB5PTM0MiB3aWR0aD0yMiBoZWlnaHQ9MzIgeG9mZnNldD0wLjIyIHlvZmZzZXQ9MS43NiB4YWR2YW5jZT0xOS43MSBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0xOTcgeD0xMjMgeT0zNzYgd2lkdGg9MjIgaGVpZ2h0PTMzIHhvZmZzZXQ9MC4yMiB5b2Zmc2V0PTAgeGFkdmFuY2U9MTkuNzEgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MTk4IHg9MTQzIHk9MTY2IHdpZHRoPTI5IGhlaWdodD0yNSB4b2Zmc2V0PS0wLjIyIHlvZmZzZXQ9OC40OCB4YWR2YW5jZT0yNy42OCBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0xOTkgeD0xMjYgeT00MTEgd2lkdGg9MjAgaGVpZ2h0PTMyIHhvZmZzZXQ9MS4yNSB5b2Zmc2V0PTguMDMgeGFkdmFuY2U9MTkuNzEgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MjAwIHg9MTQ1IHk9MTEyIHdpZHRoPTE3IGhlaWdodD0zMyB4b2Zmc2V0PTIuNTYgeW9mZnNldD0wLjc0IHhhZHZhbmNlPTE3LjczIHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTIwMSB4PTEyNiB5PTI2NSB3aWR0aD0xNyBoZWlnaHQ9MzMgeG9mZnNldD0yLjU2IHlvZmZzZXQ9MC43NCB4YWR2YW5jZT0xNy43MyBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0yMDIgeD0xMzIgeT0yMzAgd2lkdGg9MTcgaGVpZ2h0PTMzIHhvZmZzZXQ9Mi41NiB5b2Zmc2V0PTAuMzIgeGFkdmFuY2U9MTcuNzMgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MjAzIHg9MTI2IHk9MzAwIHdpZHRoPTE3IGhlaWdodD0zMiB4b2Zmc2V0PTIuNTYgeW9mZnNldD0xLjc2IHhhZHZhbmNlPTE3LjczIHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTIwNCB4PTE0MSB5PTMzNCB3aWR0aD05IGhlaWdodD0zMyB4b2Zmc2V0PTEuMTIgeW9mZnNldD0wLjc0IHhhZHZhbmNlPTguMTYgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MjA1IHg9MTQ3IHk9MzY5IHdpZHRoPTkgaGVpZ2h0PTMzIHhvZmZzZXQ9MS4xMiB5b2Zmc2V0PTAuNzQgeGFkdmFuY2U9OC4xNiBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0yMDYgeD0xNDUgeT0yNjUgd2lkdGg9MTIgaGVpZ2h0PTMzIHhvZmZzZXQ9LTAuNjEgeW9mZnNldD0wLjMyIHhhZHZhbmNlPTguMTYgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MjA3IHg9MTQ1IHk9MzAwIHdpZHRoPTExIGhlaWdodD0zMiB4b2Zmc2V0PTAuMTMgeW9mZnNldD0xLjc2IHhhZHZhbmNlPTguMTYgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MjA4IHg9MTU1IHk9ODEgd2lkdGg9MjUgaGVpZ2h0PTI1IHhvZmZzZXQ9LTAuMjYgeW9mZnNldD04LjQ4IHhhZHZhbmNlPTIzLjM2IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTIwOSB4PTE1MiB5PTMzNCB3aWR0aD0yMCBoZWlnaHQ9MzIgeG9mZnNldD0yLjU2IHlvZmZzZXQ9MS43IHhhZHZhbmNlPTIyLjUzIHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTIxMCB4PTE2NCB5PTEwOCB3aWR0aD0yNSBoZWlnaHQ9MzMgeG9mZnNldD0xLjI1IHlvZmZzZXQ9MC43NCB4YWR2YW5jZT0yNC41OCBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0yMTEgeD0xODIgeT01NSB3aWR0aD0yNSBoZWlnaHQ9MzMgeG9mZnNldD0xLjI1IHlvZmZzZXQ9MC43NCB4YWR2YW5jZT0yNC41OCBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0yMTIgeD0xODcgeT0xOSB3aWR0aD0yNSBoZWlnaHQ9MzQgeG9mZnNldD0xLjI1IHlvZmZzZXQ9MC4zMiB4YWR2YW5jZT0yNC41OCBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0yMTMgeD0xNTggeT0zMDAgd2lkdGg9MjUgaGVpZ2h0PTMyIHhvZmZzZXQ9MS4yNSB5b2Zmc2V0PTEuNyB4YWR2YW5jZT0yNC41OCBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0yMTQgeD0xNTEgeT0xOTMgd2lkdGg9MjUgaGVpZ2h0PTMyIHhvZmZzZXQ9MS4yNSB5b2Zmc2V0PTEuNzYgeGFkdmFuY2U9MjQuNTggcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MjE1IHg9MTEyIHk9MTk2IHdpZHRoPTEzIGhlaWdodD0xMyB4b2Zmc2V0PTEuOTUgeW9mZnNldD0xNi45NiB4YWR2YW5jZT0xNC4wNSBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0yMTYgeD0xNDcgeT00NDUgd2lkdGg9MjUgaGVpZ2h0PTI2IHhvZmZzZXQ9MS4yNSB5b2Zmc2V0PTcuOTcgeGFkdmFuY2U9MjQuNTQgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MjE3IHg9MTUxIHk9MjI3IHdpZHRoPTIxIGhlaWdodD0zMyB4b2Zmc2V0PTIuMzQgeW9mZnNldD0wLjc0IHhhZHZhbmNlPTIzLjIzIHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTIxOCB4PTE1OSB5PTI2MiB3aWR0aD0yMSBoZWlnaHQ9MzMgeG9mZnNldD0yLjM0IHlvZmZzZXQ9MC43NCB4YWR2YW5jZT0yMy4yMyBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0yMTkgeD0xNDkgeT00NzMgd2lkdGg9MjEgaGVpZ2h0PTM0IHhvZmZzZXQ9Mi4zNCB5b2Zmc2V0PTAuMzIgeGFkdmFuY2U9MjMuMjMgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MjIwIHg9MTc0IHk9MjI3IHdpZHRoPTIxIGhlaWdodD0zMiB4b2Zmc2V0PTIuMzQgeW9mZnNldD0xLjc2IHhhZHZhbmNlPTIzLjIzIHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTIyMSB4PTE4MiB5PTI2MSB3aWR0aD0yMSBoZWlnaHQ9MzMgeG9mZnNldD0tMC4xIHlvZmZzZXQ9MC43NCB4YWR2YW5jZT0xOC4xNCBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0yMjIgeD0xNzIgeT00NzMgd2lkdGg9MTggaGVpZ2h0PTI1IHhvZmZzZXQ9Mi41NiB5b2Zmc2V0PTguNDggeGFkdmFuY2U9MTguMjQgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MjIzIHg9MTQ4IHk9NDA0IHdpZHRoPTE5IGhlaWdodD0zMSB4b2Zmc2V0PTAuNTEgeW9mZnNldD02Ljg4IHhhZHZhbmNlPTE3LjgyIHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTIyNCB4PTE1OCB5PTM2OCB3aWR0aD0xNyBoZWlnaHQ9MjYgeG9mZnNldD0wLjc3IHlvZmZzZXQ9Ny40NiB4YWR2YW5jZT0xNS4zNiBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0yMjUgeD0xNzQgeT0zMzQgd2lkdGg9MTcgaGVpZ2h0PTI2IHhvZmZzZXQ9MC43NyB5b2Zmc2V0PTcuNDYgeGFkdmFuY2U9MTUuMzYgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MjI2IHg9MTg1IHk9Mjk2IHdpZHRoPTE3IGhlaWdodD0yNyB4b2Zmc2V0PTAuNzcgeW9mZnNldD03LjA0IHhhZHZhbmNlPTE1LjM2IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTIyNyB4PTE2OSB5PTM5NiB3aWR0aD0xNyBoZWlnaHQ9MjUgeG9mZnNldD0wLjc3IHlvZmZzZXQ9OC40MiB4YWR2YW5jZT0xNS4zNiBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0yMjggeD0xNzcgeT0zNjIgd2lkdGg9MTcgaGVpZ2h0PTI1IHhvZmZzZXQ9MC43NyB5b2Zmc2V0PTguNDggeGFkdmFuY2U9MTUuMzYgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MjI5IHg9MTkzIHk9MzI1IHdpZHRoPTE3IGhlaWdodD0yNyB4b2Zmc2V0PTAuNzcgeW9mZnNldD02LjcyIHhhZHZhbmNlPTE1LjM2IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTIzMCB4PTE2OSB5PTQyMyB3aWR0aD0yNiBoZWlnaHQ9MTkgeG9mZnNldD0wLjcgeW9mZnNldD0xNC44OCB4YWR2YW5jZT0yNS41NCBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0yMzEgeD0yMDQgeT0yOTYgd2lkdGg9MTUgaGVpZ2h0PTI1IHhvZmZzZXQ9MS4wNiB5b2Zmc2V0PTE0Ljg4IHhhZHZhbmNlPTE0LjUzIHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTIzMiB4PTE3NCB5PTQ0NCB3aWR0aD0xNyBoZWlnaHQ9MjYgeG9mZnNldD0wLjk5IHlvZmZzZXQ9Ny40NiB4YWR2YW5jZT0xNi4zOCBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0yMzMgeD0xODggeT0zODkgd2lkdGg9MTcgaGVpZ2h0PTI2IHhvZmZzZXQ9MC45OSB5b2Zmc2V0PTcuNDYgeGFkdmFuY2U9MTYuMzggcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MjM0IHg9MTk2IHk9MzU0IHdpZHRoPTE3IGhlaWdodD0yNyB4b2Zmc2V0PTAuOTkgeW9mZnNldD03LjA0IHhhZHZhbmNlPTE2LjM4IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTIzNSB4PTIxMiB5PTMyMyB3aWR0aD0xNyBoZWlnaHQ9MjUgeG9mZnNldD0wLjk5IHlvZmZzZXQ9OC40OCB4YWR2YW5jZT0xNi4zOCBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0yMzYgeD0xOTIgeT00NzIgd2lkdGg9OSBoZWlnaHQ9MjYgeG9mZnNldD0wLjQyIHlvZmZzZXQ9Ny40NiB4YWR2YW5jZT02Ljc4IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTIzNyB4PTE5MyB5PTQ0NCB3aWR0aD05IGhlaWdodD0yNiB4b2Zmc2V0PTAuNDIgeW9mZnNldD03LjQ2IHhhZHZhbmNlPTYuNzggcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MjM4IHg9MjAzIHk9NDcyIHdpZHRoPTEyIGhlaWdodD0yNiB4b2Zmc2V0PS0xLjMxIHlvZmZzZXQ9Ny4wNCB4YWR2YW5jZT02Ljc4IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTIzOSB4PTE5NyB5PTQxNyB3aWR0aD0xMSBoZWlnaHQ9MjUgeG9mZnNldD0tMC41OCB5b2Zmc2V0PTguNDggeGFkdmFuY2U9Ni43OCBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0yNDAgeD0yMDQgeT00NDQgd2lkdGg9MTcgaGVpZ2h0PTI2IHhvZmZzZXQ9MC45IHlvZmZzZXQ9OC4xNiB4YWR2YW5jZT0xNi41NCBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0yNDEgeD0yMDcgeT0zODMgd2lkdGg9MTcgaGVpZ2h0PTI1IHhvZmZzZXQ9MS45NSB5b2Zmc2V0PTguNDIgeGFkdmFuY2U9MTcuODkgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MjQyIHg9MjE1IHk9MzUwIHdpZHRoPTE4IGhlaWdodD0yNiB4b2Zmc2V0PTEuMDIgeW9mZnNldD03LjQ2IHhhZHZhbmNlPTE3LjYgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MjQzIHg9MjEwIHk9NDEwIHdpZHRoPTE4IGhlaWdodD0yNiB4b2Zmc2V0PTEuMDIgeW9mZnNldD03LjQ2IHhhZHZhbmNlPTE3LjYgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MjQ0IHg9MjI2IHk9Mzc4IHdpZHRoPTE4IGhlaWdodD0yNyB4b2Zmc2V0PTEuMDIgeW9mZnNldD03LjA0IHhhZHZhbmNlPTE3LjYgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MjQ1IHg9MjE3IHk9NDcyIHdpZHRoPTE4IGhlaWdodD0yNSB4b2Zmc2V0PTEuMDIgeW9mZnNldD04LjQyIHhhZHZhbmNlPTE3LjYgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MjQ2IHg9MjIzIHk9NDM4IHdpZHRoPTE4IGhlaWdodD0yNSB4b2Zmc2V0PTEuMDIgeW9mZnNldD04LjQ4IHhhZHZhbmNlPTE3LjYgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MjQ3IHg9MTY0IHk9MTQzIHdpZHRoPTE3IGhlaWdodD0xOSB4b2Zmc2V0PTIuMTEgeW9mZnNldD0xMy43OSB4YWR2YW5jZT0xOC45NCBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0yNDggeD0xNzQgeT0xNjQgd2lkdGg9MTkgaGVpZ2h0PTIxIHhvZmZzZXQ9MS4wNiB5b2Zmc2V0PTEzLjc5IHhhZHZhbmNlPTE4LjI0IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTI0OSB4PTIzMCB5PTQwNyB3aWR0aD0xNiBoZWlnaHQ9MjYgeG9mZnNldD0xLjc5IHlvZmZzZXQ9Ny40NiB4YWR2YW5jZT0xNi43NyBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0yNTAgeD0xNzggeT0xODcgd2lkdGg9MTYgaGVpZ2h0PTI2IHhvZmZzZXQ9MS43OSB5b2Zmc2V0PTcuNDYgeGFkdmFuY2U9MTYuNzcgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MjUxIHg9MjM3IHk9NDY1IHdpZHRoPTE2IGhlaWdodD0yNyB4b2Zmc2V0PTEuNzkgeW9mZnNldD03LjA0IHhhZHZhbmNlPTE2Ljc3IHBhZ2U9MCBjaG5sPTE1DQpjaGFyIGlkPTI1MiB4PTI0MyB5PTQzNSB3aWR0aD0xNiBoZWlnaHQ9MjUgeG9mZnNldD0xLjc5IHlvZmZzZXQ9OC40OCB4YWR2YW5jZT0xNi43NyBwYWdlPTAgY2hubD0xNQ0KY2hhciBpZD0yNTMgeD0yNTUgeT00NjIgd2lkdGg9MTggaGVpZ2h0PTM0IHhvZmZzZXQ9MC4yMiB5b2Zmc2V0PTcuNDYgeGFkdmFuY2U9MTYuMTYgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MjU0IHg9MTkxIHk9OTAgd2lkdGg9MTggaGVpZ2h0PTM0IHhvZmZzZXQ9MS45MiB5b2Zmc2V0PTYuODggeGFkdmFuY2U9MTguNTYgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MjU1IHg9MjA5IHk9NTUgd2lkdGg9MTggaGVpZ2h0PTMzIHhvZmZzZXQ9MC4yMiB5b2Zmc2V0PTguNDggeGFkdmFuY2U9MTYuMTYgcGFnZT0wIGNobmw9MTUNCmNoYXIgaWQ9MzIgeD0wIHk9MCB3aWR0aD0wIGhlaWdodD0wIHhvZmZzZXQ9MC4yMiB5b2Zmc2V0PTguNDggeGFkdmFuY2U9Ny4yIHBhZ2U9MCBjaG5sPTE1DQprZXJuaW5ncyBjb3VudD0xNzA3DQprZXJuaW5nIGZpcnN0PTM0IHNlY29uZD0zOCBhbW91bnQ9LTAuMjYNCmtlcm5pbmcgZmlyc3Q9MzQgc2Vjb25kPTQ0IGFtb3VudD0tMy41Mg0Ka2VybmluZyBmaXJzdD0zNCBzZWNvbmQ9NDUgYW1vdW50PS0wLjcNCmtlcm5pbmcgZmlyc3Q9MzQgc2Vjb25kPTQ2IGFtb3VudD0tMy41Mg0Ka2VybmluZyBmaXJzdD0zNCBzZWNvbmQ9NDcgYW1vdW50PS0xLjE1DQprZXJuaW5nIGZpcnN0PTM0IHNlY29uZD01MiBhbW91bnQ9LTAuNjENCmtlcm5pbmcgZmlyc3Q9MzQgc2Vjb25kPTU0IGFtb3VudD0tMC4zNQ0Ka2VybmluZyBmaXJzdD0zNCBzZWNvbmQ9NjQgYW1vdW50PS0wLjcNCmtlcm5pbmcgZmlyc3Q9MzQgc2Vjb25kPTY1IGFtb3VudD0tMS4zOA0Ka2VybmluZyBmaXJzdD0zNCBzZWNvbmQ9NzcgYW1vdW50PS0wLjU4DQprZXJuaW5nIGZpcnN0PTM0IHNlY29uZD05NyBhbW91bnQ9LTAuNDINCmtlcm5pbmcgZmlyc3Q9MzQgc2Vjb25kPTk5IGFtb3VudD0tMC42NA0Ka2VybmluZyBmaXJzdD0zNCBzZWNvbmQ9MTAzIGFtb3VudD0tMC40OA0Ka2VybmluZyBmaXJzdD0zNCBzZWNvbmQ9MTE1IGFtb3VudD0tMC4zOA0Ka2VybmluZyBmaXJzdD0zNCBzZWNvbmQ9MTcxIGFtb3VudD0tMC40OA0Ka2VybmluZyBmaXJzdD0zNCBzZWNvbmQ9MTk4IGFtb3VudD0tMS43DQprZXJuaW5nIGZpcnN0PTM0IHNlY29uZD0yMzggYW1vdW50PTAuOTMNCmtlcm5pbmcgZmlyc3Q9MzQgc2Vjb25kPTI0MCBhbW91bnQ9LTAuNjENCmtlcm5pbmcgZmlyc3Q9MzQgc2Vjb25kPTgyMTggYW1vdW50PS0zLjUyDQprZXJuaW5nIGZpcnN0PTM4IHNlY29uZD0zNCBhbW91bnQ9LTEuNDcNCmtlcm5pbmcgZmlyc3Q9Mzggc2Vjb25kPTg0IGFtb3VudD0tMS43Mw0Ka2VybmluZyBmaXJzdD0zOCBzZWNvbmQ9ODYgYW1vdW50PS0xLjI1DQprZXJuaW5nIGZpcnN0PTM4IHNlY29uZD04NyBhbW91bnQ9LTAuNzQNCmtlcm5pbmcgZmlyc3Q9Mzggc2Vjb25kPTg5IGFtb3VudD0tMS43DQprZXJuaW5nIGZpcnN0PTM4IHNlY29uZD0xMDIgYW1vdW50PS0wLjQ1DQprZXJuaW5nIGZpcnN0PTM4IHNlY29uZD0xMDggYW1vdW50PS0wLjE2DQprZXJuaW5nIGZpcnN0PTM4IHNlY29uZD0xMTYgYW1vdW50PS0wLjY3DQprZXJuaW5nIGZpcnN0PTM4IHNlY29uZD0xMTcgYW1vdW50PS0wLjE5DQprZXJuaW5nIGZpcnN0PTM4IHNlY29uZD0xMTggYW1vdW50PS0wLjQyDQprZXJuaW5nIGZpcnN0PTM4IHNlY29uZD0xMTkgYW1vdW50PS0wLjI5DQprZXJuaW5nIGZpcnN0PTM4IHNlY29uZD0xMjEgYW1vdW50PS0wLjUxDQprZXJuaW5nIGZpcnN0PTM4IHNlY29uZD0yMjMgYW1vdW50PS0wLjQyDQprZXJuaW5nIGZpcnN0PTM4IHNlY29uZD04MjE3IGFtb3VudD0tMS40Nw0Ka2VybmluZyBmaXJzdD0zOSBzZWNvbmQ9MjM4IGFtb3VudD0wLjkzDQprZXJuaW5nIGZpcnN0PTQwIHNlY29uZD00OCBhbW91bnQ9LTAuODMNCmtlcm5pbmcgZmlyc3Q9NDAgc2Vjb25kPTUyIGFtb3VudD0tMC43DQprZXJuaW5nIGZpcnN0PTQwIHNlY29uZD01NCBhbW91bnQ9LTAuODYNCmtlcm5pbmcgZmlyc3Q9NDAgc2Vjb25kPTU2IGFtb3VudD0tMC42MQ0Ka2VybmluZyBmaXJzdD00MCBzZWNvbmQ9NTcgYW1vdW50PS0wLjM1DQprZXJuaW5nIGZpcnN0PTQwIHNlY29uZD02NiBhbW91bnQ9LTAuNDINCmtlcm5pbmcgZmlyc3Q9NDAgc2Vjb25kPTY3IGFtb3VudD0tMC44Ng0Ka2VybmluZyBmaXJzdD00MCBzZWNvbmQ9NjkgYW1vdW50PS0wLjQyDQprZXJuaW5nIGZpcnN0PTQwIHNlY29uZD03NCBhbW91bnQ9MC43DQprZXJuaW5nIGZpcnN0PTQwIHNlY29uZD03NyBhbW91bnQ9LTAuNTQNCmtlcm5pbmcgZmlyc3Q9NDAgc2Vjb25kPTgzIGFtb3VudD0tMC4zNQ0Ka2VybmluZyBmaXJzdD00MCBzZWNvbmQ9ODUgYW1vdW50PS0wLjQyDQprZXJuaW5nIGZpcnN0PTQwIHNlY29uZD05NyBhbW91bnQ9LTAuOA0Ka2VybmluZyBmaXJzdD00MCBzZWNvbmQ9OTkgYW1vdW50PS0xLjAyDQprZXJuaW5nIGZpcnN0PTQwIHNlY29uZD0xMDIgYW1vdW50PS0wLjU0DQprZXJuaW5nIGZpcnN0PTQwIHNlY29uZD0xMDMgYW1vdW50PS0wLjc3DQprZXJuaW5nIGZpcnN0PTQwIHNlY29uZD0xMDkgYW1vdW50PS0wLjc0DQprZXJuaW5nIGZpcnN0PTQwIHNlY29uZD0xMTUgYW1vdW50PS0wLjc0DQprZXJuaW5nIGZpcnN0PTQwIHNlY29uZD0xMTYgYW1vdW50PS0wLjgNCmtlcm5pbmcgZmlyc3Q9NDAgc2Vjb25kPTExNyBhbW91bnQ9LTAuOTMNCmtlcm5pbmcgZmlyc3Q9NDAgc2Vjb25kPTExOCBhbW91bnQ9LTAuOA0Ka2VybmluZyBmaXJzdD00MCBzZWNvbmQ9MTE5IGFtb3VudD0tMC43Nw0Ka2VybmluZyBmaXJzdD00MCBzZWNvbmQ9MTIxIGFtb3VudD0tMC44DQprZXJuaW5nIGZpcnN0PTQwIHNlY29uZD0xMjIgYW1vdW50PS0wLjI5DQprZXJuaW5nIGZpcnN0PTQwIHNlY29uZD0yMjMgYW1vdW50PS0wLjY0DQprZXJuaW5nIGZpcnN0PTQwIHNlY29uZD0yNDAgYW1vdW50PS0wLjc3DQprZXJuaW5nIGZpcnN0PTQwIHNlY29uZD0zNTMgYW1vdW50PS0wLjM4DQprZXJuaW5nIGZpcnN0PTQyIHNlY29uZD03NyBhbW91bnQ9LTAuNTgNCmtlcm5pbmcgZmlyc3Q9NDIgc2Vjb25kPTg0IGFtb3VudD0wLjM1DQprZXJuaW5nIGZpcnN0PTQyIHNlY29uZD04NiBhbW91bnQ9MC41MQ0Ka2VybmluZyBmaXJzdD00MiBzZWNvbmQ9ODcgYW1vdW50PTAuMjkNCmtlcm5pbmcgZmlyc3Q9NDIgc2Vjb25kPTEwMyBhbW91bnQ9LTAuNTgNCmtlcm5pbmcgZmlyc3Q9NDIgc2Vjb25kPTE5OCBhbW91bnQ9LTEuNw0Ka2VybmluZyBmaXJzdD00MiBzZWNvbmQ9MjM2IGFtb3VudD0wLjUxDQprZXJuaW5nIGZpcnN0PTQyIHNlY29uZD0yMzcgYW1vdW50PTAuMzgNCmtlcm5pbmcgZmlyc3Q9NDIgc2Vjb25kPTIzOCBhbW91bnQ9Mi4wOA0Ka2VybmluZyBmaXJzdD00MiBzZWNvbmQ9MjM5IGFtb3VudD0xLjM4DQprZXJuaW5nIGZpcnN0PTQyIHNlY29uZD0yNDAgYW1vdW50PS0wLjc3DQprZXJuaW5nIGZpcnN0PTQzIHNlY29uZD00OSBhbW91bnQ9LTAuODYNCmtlcm5pbmcgZmlyc3Q9NDMgc2Vjb25kPTUwIGFtb3VudD0tMS4yMg0Ka2VybmluZyBmaXJzdD00MyBzZWNvbmQ9NTEgYW1vdW50PS0wLjU4DQprZXJuaW5nIGZpcnN0PTQzIHNlY29uZD01NSBhbW91bnQ9LTEuMjgNCmtlcm5pbmcgZmlyc3Q9NDQgc2Vjb25kPTM0IGFtb3VudD0tMy41Mg0Ka2VybmluZyBmaXJzdD00NCBzZWNvbmQ9NDggYW1vdW50PS0wLjU0DQprZXJuaW5nIGZpcnN0PTQ0IHNlY29uZD00OSBhbW91bnQ9LTAuNDUNCmtlcm5pbmcgZmlyc3Q9NDQgc2Vjb25kPTgyMTYgYW1vdW50PS00LjIyDQprZXJuaW5nIGZpcnN0PTQ0IHNlY29uZD04MjE3IGFtb3VudD0tNC4zMg0Ka2VybmluZyBmaXJzdD00NSBzZWNvbmQ9MzQgYW1vdW50PS0wLjcNCmtlcm5pbmcgZmlyc3Q9NDUgc2Vjb25kPTgzIGFtb3VudD0tMC40Mg0Ka2VybmluZyBmaXJzdD00NSBzZWNvbmQ9ODQgYW1vdW50PS0xLjI4DQprZXJuaW5nIGZpcnN0PTQ1IHNlY29uZD04NiBhbW91bnQ9LTAuNTgNCmtlcm5pbmcgZmlyc3Q9NDUgc2Vjb25kPTg3IGFtb3VudD0tMC4yNg0Ka2VybmluZyBmaXJzdD00NSBzZWNvbmQ9ODggYW1vdW50PS0wLjQ1DQprZXJuaW5nIGZpcnN0PTQ1IHNlY29uZD04OSBhbW91bnQ9LTEuMDkNCmtlcm5pbmcgZmlyc3Q9NDUgc2Vjb25kPTkwIGFtb3VudD0tMC42MQ0Ka2VybmluZyBmaXJzdD00NSBzZWNvbmQ9MTAyIGFtb3VudD0tMC4yOQ0Ka2VybmluZyBmaXJzdD00NSBzZWNvbmQ9MTE2IGFtb3VudD0tMC4yNg0Ka2VybmluZyBmaXJzdD00NSBzZWNvbmQ9MTIwIGFtb3VudD0tMC4yOQ0Ka2VybmluZyBmaXJzdD00NSBzZWNvbmQ9MTIyIGFtb3VudD0tMC44DQprZXJuaW5nIGZpcnN0PTQ1IHNlY29uZD0yMjMgYW1vdW50PS0wLjI2DQprZXJuaW5nIGZpcnN0PTQ1IHNlY29uZD04MjE3IGFtb3VudD0tMi4wMg0Ka2VybmluZyBmaXJzdD00NiBzZWNvbmQ9MzQgYW1vdW50PS0zLjUyDQprZXJuaW5nIGZpcnN0PTQ2IHNlY29uZD00OCBhbW91bnQ9LTAuNTQNCmtlcm5pbmcgZmlyc3Q9NDYgc2Vjb25kPTQ5IGFtb3VudD0tMC40NQ0Ka2VybmluZyBmaXJzdD00NiBzZWNvbmQ9NjcgYW1vdW50PS0wLjQ1DQprZXJuaW5nIGZpcnN0PTQ2IHNlY29uZD04NCBhbW91bnQ9LTEuMzQNCmtlcm5pbmcgZmlyc3Q9NDYgc2Vjb25kPTg1IGFtb3VudD0tMC40Mg0Ka2VybmluZyBmaXJzdD00NiBzZWNvbmQ9ODYgYW1vdW50PS0xLjM4DQprZXJuaW5nIGZpcnN0PTQ2IHNlY29uZD04NyBhbW91bnQ9LTAuOTYNCmtlcm5pbmcgZmlyc3Q9NDYgc2Vjb25kPTg5IGFtb3VudD0tMS4zMQ0Ka2VybmluZyBmaXJzdD00NiBzZWNvbmQ9MTAyIGFtb3VudD0tMC40OA0Ka2VybmluZyBmaXJzdD00NiBzZWNvbmQ9MTE2IGFtb3VudD0tMC41NA0Ka2VybmluZyBmaXJzdD00NiBzZWNvbmQ9MTE4IGFtb3VudD0tMC45Mw0Ka2VybmluZyBmaXJzdD00NiBzZWNvbmQ9MTE5IGFtb3VudD0tMC42NA0Ka2VybmluZyBmaXJzdD00NiBzZWNvbmQ9MTIxIGFtb3VudD0tMS4wOQ0Ka2VybmluZyBmaXJzdD00NiBzZWNvbmQ9MjIzIGFtb3VudD0tMC40Mg0Ka2VybmluZyBmaXJzdD00NiBzZWNvbmQ9ODIxNiBhbW91bnQ9LTQuMjINCmtlcm5pbmcgZmlyc3Q9NDYgc2Vjb25kPTgyMTcgYW1vdW50PS00LjMyDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD00NyBhbW91bnQ9LTEuODkNCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTQ4IGFtb3VudD0tMC4zMg0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9NTIgYW1vdW50PS0xLjI1DQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD01NCBhbW91bnQ9LTAuOQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9NjUgYW1vdW50PS0xLjU0DQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD02NyBhbW91bnQ9LTAuNDINCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTc3IGFtb3VudD0tMC42MQ0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9ODkgYW1vdW50PTAuMjINCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTk3IGFtb3VudD0tMS4yMg0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9OTkgYW1vdW50PS0xLjM0DQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0xMDMgYW1vdW50PS0xLjIyDQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0xMDkgYW1vdW50PS0wLjkNCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTExNSBhbW91bnQ9LTEuMTINCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTExNyBhbW91bnQ9LTAuODMNCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTEyMiBhbW91bnQ9LTAuNDgNCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTE5OCBhbW91bnQ9LTEuNzMNCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTIzOCBhbW91bnQ9MC40Mg0Ka2VybmluZyBmaXJzdD00NyBzZWNvbmQ9MjM5IGFtb3VudD0wLjQ1DQprZXJuaW5nIGZpcnN0PTQ3IHNlY29uZD0yNDAgYW1vdW50PS0wLjcNCmtlcm5pbmcgZmlyc3Q9NDcgc2Vjb25kPTM1MyBhbW91bnQ9LTAuOA0Ka2VybmluZyBmaXJzdD00OCBzZWNvbmQ9NDEgYW1vdW50PS0wLjgzDQprZXJuaW5nIGZpcnN0PTQ4IHNlY29uZD00NCBhbW91bnQ9LTAuNTgNCmtlcm5pbmcgZmlyc3Q9NDggc2Vjb25kPTQ2IGFtb3VudD0tMC41OA0Ka2VybmluZyBmaXJzdD00OCBzZWNvbmQ9NDcgYW1vdW50PS0wLjQyDQprZXJuaW5nIGZpcnN0PTQ4IHNlY29uZD01NSBhbW91bnQ9LTAuMzUNCmtlcm5pbmcgZmlyc3Q9NDggc2Vjb25kPTY1IGFtb3VudD0tMC4zMg0Ka2VybmluZyBmaXJzdD00OCBzZWNvbmQ9ODQgYW1vdW50PS0wLjY0DQprZXJuaW5nIGZpcnN0PTQ4IHNlY29uZD04NiBhbW91bnQ9LTAuMzINCmtlcm5pbmcgZmlyc3Q9NDggc2Vjb25kPTg4IGFtb3VudD0tMC4zMg0Ka2VybmluZyBmaXJzdD00OCBzZWNvbmQ9ODkgYW1vdW50PS0wLjc0DQprZXJuaW5nIGZpcnN0PTQ4IHNlY29uZD05MCBhbW91bnQ9LTAuNDgNCmtlcm5pbmcgZmlyc3Q9NDggc2Vjb25kPTkzIGFtb3VudD0tMC42MQ0Ka2VybmluZyBmaXJzdD00OCBzZWNvbmQ9MTI1IGFtb3VudD0tMC41MQ0Ka2VybmluZyBmaXJzdD00OSBzZWNvbmQ9NDEgYW1vdW50PS0wLjM1DQprZXJuaW5nIGZpcnN0PTQ5IHNlY29uZD00MyBhbW91bnQ9LTAuMjYNCmtlcm5pbmcgZmlyc3Q9NTAgc2Vjb25kPTQzIGFtb3VudD0tMC41NA0Ka2VybmluZyBmaXJzdD01MCBzZWNvbmQ9MTgzIGFtb3VudD0tMC40NQ0Ka2VybmluZyBmaXJzdD01MSBzZWNvbmQ9NDEgYW1vdW50PS0wLjU0DQprZXJuaW5nIGZpcnN0PTUyIHNlY29uZD0zNCBhbW91bnQ9LTAuMzgNCmtlcm5pbmcgZmlyc3Q9NTIgc2Vjb25kPTQxIGFtb3VudD0tMC42Nw0Ka2VybmluZyBmaXJzdD01MiBzZWNvbmQ9NDQgYW1vdW50PS0wLjUxDQprZXJuaW5nIGZpcnN0PTUyIHNlY29uZD00NiBhbW91bnQ9LTAuNDgNCmtlcm5pbmcgZmlyc3Q9NTIgc2Vjb25kPTg0IGFtb3VudD0tMC41OA0Ka2VybmluZyBmaXJzdD01MiBzZWNvbmQ9ODYgYW1vdW50PS0wLjM4DQprZXJuaW5nIGZpcnN0PTUyIHNlY29uZD04NyBhbW91bnQ9LTAuMzUNCmtlcm5pbmcgZmlyc3Q9NTIgc2Vjb25kPTg5IGFtb3VudD0tMC40NQ0Ka2VybmluZyBmaXJzdD01MiBzZWNvbmQ9OTAgYW1vdW50PS0wLjI2DQprZXJuaW5nIGZpcnN0PTUyIHNlY29uZD0xMjIgYW1vdW50PS0wLjI5DQprZXJuaW5nIGZpcnN0PTUyIHNlY29uZD0xNzYgYW1vdW50PS0wLjM1DQprZXJuaW5nIGZpcnN0PTU0IHNlY29uZD00MSBhbW91bnQ9LTAuNTQNCmtlcm5pbmcgZmlyc3Q9NTQgc2Vjb25kPTQ5IGFtb3VudD0tMC4yNg0Ka2VybmluZyBmaXJzdD01NCBzZWNvbmQ9NTUgYW1vdW50PS0wLjI2DQprZXJuaW5nIGZpcnN0PTU0IHNlY29uZD04NCBhbW91bnQ9LTAuOA0Ka2VybmluZyBmaXJzdD01NCBzZWNvbmQ9ODYgYW1vdW50PS0wLjUxDQprZXJuaW5nIGZpcnN0PTU0IHNlY29uZD04NyBhbW91bnQ9LTAuMzgNCmtlcm5pbmcgZmlyc3Q9NTQgc2Vjb25kPTg5IGFtb3VudD0tMC42Nw0Ka2VybmluZyBmaXJzdD01NCBzZWNvbmQ9MTIxIGFtb3VudD0tMC4yOQ0Ka2VybmluZyBmaXJzdD01NCBzZWNvbmQ9MTc2IGFtb3VudD0tMC4zNQ0Ka2VybmluZyBmaXJzdD01NSBzZWNvbmQ9MzUgYW1vdW50PS0wLjkNCmtlcm5pbmcgZmlyc3Q9NTUgc2Vjb25kPTQzIGFtb3VudD0tMS4xNQ0Ka2VybmluZyBmaXJzdD01NSBzZWNvbmQ9NDQgYW1vdW50PS0xLjI1DQprZXJuaW5nIGZpcnN0PTU1IHNlY29uZD00NiBhbW91bnQ9LTEuMjUNCmtlcm5pbmcgZmlyc3Q9NTUgc2Vjb25kPTQ3IGFtb3VudD0tMS43OQ0Ka2VybmluZyBmaXJzdD01NSBzZWNvbmQ9NDggYW1vdW50PS0wLjI5DQprZXJuaW5nIGZpcnN0PTU1IHNlY29uZD01MiBhbW91bnQ9LTEuMTINCmtlcm5pbmcgZmlyc3Q9NTUgc2Vjb25kPTU0IGFtb3VudD0tMC43Nw0Ka2VybmluZyBmaXJzdD01NSBzZWNvbmQ9NjUgYW1vdW50PS0xLjQ3DQprZXJuaW5nIGZpcnN0PTU1IHNlY29uZD02NyBhbW91bnQ9LTAuMzINCmtlcm5pbmcgZmlyc3Q9NTUgc2Vjb25kPTc3IGFtb3VudD0tMC42NA0Ka2VybmluZyBmaXJzdD01NSBzZWNvbmQ9ODQgYW1vdW50PTAuNTQNCmtlcm5pbmcgZmlyc3Q9NTUgc2Vjb25kPTg2IGFtb3VudD0wLjk2DQprZXJuaW5nIGZpcnN0PTU1IHNlY29uZD04NyBhbW91bnQ9MC42MQ0Ka2VybmluZyBmaXJzdD01NSBzZWNvbmQ9ODggYW1vdW50PTAuNw0Ka2VybmluZyBmaXJzdD01NSBzZWNvbmQ9ODkgYW1vdW50PTEuMDYNCmtlcm5pbmcgZmlyc3Q9NTUgc2Vjb25kPTkzIGFtb3VudD0wLjgNCmtlcm5pbmcgZmlyc3Q9NTUgc2Vjb25kPTk3IGFtb3VudD0tMS4wNg0Ka2VybmluZyBmaXJzdD01NSBzZWNvbmQ9OTkgYW1vdW50PS0xLjIyDQprZXJuaW5nIGZpcnN0PTU1IHNlY29uZD0xMDMgYW1vdW50PS0xLjA5DQprZXJuaW5nIGZpcnN0PTU1IHNlY29uZD0xMDkgYW1vdW50PS0wLjc3DQprZXJuaW5nIGZpcnN0PTU1IHNlY29uZD0xMTUgYW1vdW50PS0xLjAyDQprZXJuaW5nIGZpcnN0PTU1IHNlY29uZD0xMTcgYW1vdW50PS0wLjc0DQprZXJuaW5nIGZpcnN0PTU1IHNlY29uZD0xMjIgYW1vdW50PS0wLjM1DQprZXJuaW5nIGZpcnN0PTU1IHNlY29uZD0xMjUgYW1vdW50PTAuOQ0Ka2VybmluZyBmaXJzdD01NSBzZWNvbmQ9MTgzIGFtb3VudD0tMC41OA0Ka2VybmluZyBmaXJzdD01NiBzZWNvbmQ9NDEgYW1vdW50PS0wLjU4DQprZXJuaW5nIGZpcnN0PTU2IHNlY29uZD04NCBhbW91bnQ9LTAuMjYNCmtlcm5pbmcgZmlyc3Q9NTYgc2Vjb25kPTg5IGFtb3VudD0tMC4zMg0Ka2VybmluZyBmaXJzdD01NyBzZWNvbmQ9NDEgYW1vdW50PS0wLjY0DQprZXJuaW5nIGZpcnN0PTU3IHNlY29uZD00NCBhbW91bnQ9LTAuNw0Ka2VybmluZyBmaXJzdD01NyBzZWNvbmQ9NDYgYW1vdW50PS0wLjcNCmtlcm5pbmcgZmlyc3Q9NTcgc2Vjb25kPTQ3IGFtb3VudD0tMC45OQ0Ka2VybmluZyBmaXJzdD01NyBzZWNvbmQ9NjUgYW1vdW50PS0wLjc3DQprZXJuaW5nIGZpcnN0PTU3IHNlY29uZD03NyBhbW91bnQ9LTAuMzINCmtlcm5pbmcgZmlyc3Q9NTcgc2Vjb25kPTkwIGFtb3VudD0tMC4zMg0Ka2VybmluZyBmaXJzdD02MSBzZWNvbmQ9NTAgYW1vdW50PS0wLjMyDQprZXJuaW5nIGZpcnN0PTYxIHNlY29uZD01NSBhbW91bnQ9LTAuNTgNCmtlcm5pbmcgZmlyc3Q9NjQgc2Vjb25kPTM0IGFtb3VudD0tMC4yOQ0Ka2VybmluZyBmaXJzdD02NCBzZWNvbmQ9ODQgYW1vdW50PS0xLjcNCmtlcm5pbmcgZmlyc3Q9NjQgc2Vjb25kPTg2IGFtb3VudD0tMC45Mw0Ka2VybmluZyBmaXJzdD02NCBzZWNvbmQ9ODcgYW1vdW50PS0wLjY0DQprZXJuaW5nIGZpcnN0PTY0IHNlY29uZD04OCBhbW91bnQ9LTAuNTENCmtlcm5pbmcgZmlyc3Q9NjQgc2Vjb25kPTg5IGFtb3VudD0tMS40NA0Ka2VybmluZyBmaXJzdD02NCBzZWNvbmQ9OTAgYW1vdW50PS0wLjY0DQprZXJuaW5nIGZpcnN0PTY0IHNlY29uZD04MjE3IGFtb3VudD0tMC42NA0Ka2VybmluZyBmaXJzdD02NSBzZWNvbmQ9MzQgYW1vdW50PS0xLjM4DQprZXJuaW5nIGZpcnN0PTY1IHNlY29uZD00MiBhbW91bnQ9LTEuNDENCmtlcm5pbmcgZmlyc3Q9NjUgc2Vjb25kPTQ5IGFtb3VudD0tMC41NA0Ka2VybmluZyBmaXJzdD02NSBzZWNvbmQ9NTcgYW1vdW50PS0wLjQ1DQprZXJuaW5nIGZpcnN0PTY1IHNlY29uZD02MyBhbW91bnQ9LTAuNTQNCmtlcm5pbmcgZmlyc3Q9NjUgc2Vjb25kPTY3IGFtb3VudD0tMC4zNQ0Ka2VybmluZyBmaXJzdD02NSBzZWNvbmQ9ODQgYW1vdW50PS0xLjczDQprZXJuaW5nIGZpcnN0PTY1IHNlY29uZD04NSBhbW91bnQ9LTAuNTENCmtlcm5pbmcgZmlyc3Q9NjUgc2Vjb25kPTg2IGFtb3VudD0tMS41Nw0Ka2VybmluZyBmaXJzdD02NSBzZWNvbmQ9ODcgYW1vdW50PS0xLjE4DQprZXJuaW5nIGZpcnN0PTY1IHNlY29uZD04OSBhbW91bnQ9LTIuMDUNCmtlcm5pbmcgZmlyc3Q9NjUgc2Vjb25kPTk5IGFtb3VudD0tMC4zNQ0Ka2VybmluZyBmaXJzdD02NSBzZWNvbmQ9MTAyIGFtb3VudD0tMC40OA0Ka2VybmluZyBmaXJzdD02NSBzZWNvbmQ9MTAzIGFtb3VudD0tMC4yNg0Ka2VybmluZyBmaXJzdD02NSBzZWNvbmQ9MTA4IGFtb3VudD0tMC4yMg0Ka2VybmluZyBmaXJzdD02NSBzZWNvbmQ9MTE2IGFtb3VudD0tMC44Ng0Ka2VybmluZyBmaXJzdD02NSBzZWNvbmQ9MTE3IGFtb3VudD0tMC4zOA0Ka2VybmluZyBmaXJzdD02NSBzZWNvbmQ9MTE4IGFtb3VudD0tMS4xMg0Ka2VybmluZyBmaXJzdD02NSBzZWNvbmQ9MTE5IGFtb3VudD0tMC45DQprZXJuaW5nIGZpcnN0PTY1IHNlY29uZD0xMjEgYW1vdW50PS0xLjI1DQprZXJuaW5nIGZpcnN0PTY1IHNlY29uZD0xMjUgYW1vdW50PS0wLjMyDQprZXJuaW5nIGZpcnN0PTY1IHNlY29uZD0xNzEgYW1vdW50PS0wLjI5DQprZXJuaW5nIGZpcnN0PTY1IHNlY29uZD0xNzQgYW1vdW50PS0wLjQ4DQprZXJuaW5nIGZpcnN0PTY1IHNlY29uZD0yMjMgYW1vdW50PS0wLjQ1DQprZXJuaW5nIGZpcnN0PTY1IHNlY29uZD0yNDAgYW1vdW50PS0wLjE5DQprZXJuaW5nIGZpcnN0PTY1IHNlY29uZD04MjE2IGFtb3VudD0tMS42Mw0Ka2VybmluZyBmaXJzdD02NSBzZWNvbmQ9ODIxNyBhbW91bnQ9LTEuNjYNCmtlcm5pbmcgZmlyc3Q9NjUgc2Vjb25kPTg0ODIgYW1vdW50PS0xLjQxDQprZXJuaW5nIGZpcnN0PTY2IHNlY29uZD00MSBhbW91bnQ9LTAuOA0Ka2VybmluZyBmaXJzdD02NiBzZWNvbmQ9NDIgYW1vdW50PS0wLjI5DQprZXJuaW5nIGZpcnN0PTY2IHNlY29uZD01MCBhbW91bnQ9LTAuMjkNCmtlcm5pbmcgZmlyc3Q9NjYgc2Vjb25kPTU1IGFtb3VudD0tMC40Mg0Ka2VybmluZyBmaXJzdD02NiBzZWNvbmQ9NjMgYW1vdW50PS0wLjUxDQprZXJuaW5nIGZpcnN0PTY2IHNlY29uZD04MyBhbW91bnQ9LTAuMTYNCmtlcm5pbmcgZmlyc3Q9NjYgc2Vjb25kPTg0IGFtb3VudD0tMC45DQprZXJuaW5nIGZpcnN0PTY2IHNlY29uZD04NiBhbW91bnQ9LTAuNTENCmtlcm5pbmcgZmlyc3Q9NjYgc2Vjb25kPTg3IGFtb3VudD0tMC4zNQ0Ka2VybmluZyBmaXJzdD02NiBzZWNvbmQ9ODggYW1vdW50PS0wLjQ4DQprZXJuaW5nIGZpcnN0PTY2IHNlY29uZD04OSBhbW91bnQ9LTAuODYNCmtlcm5pbmcgZmlyc3Q9NjYgc2Vjb25kPTkwIGFtb3VudD0tMC4yNg0Ka2VybmluZyBmaXJzdD02NiBzZWNvbmQ9OTMgYW1vdW50PS0wLjkzDQprZXJuaW5nIGZpcnN0PTY2IHNlY29uZD05OCBhbW91bnQ9LTAuMTkNCmtlcm5pbmcgZmlyc3Q9NjYgc2Vjb25kPTEwMiBhbW91bnQ9LTAuNDUNCmtlcm5pbmcgZmlyc3Q9NjYgc2Vjb25kPTEwMyBhbW91bnQ9LTAuMjINCmtlcm5pbmcgZmlyc3Q9NjYgc2Vjb25kPTEwNSBhbW91bnQ9LTAuMTkNCmtlcm5pbmcgZmlyc3Q9NjYgc2Vjb25kPTEwOCBhbW91bnQ9LTAuMTkNCmtlcm5pbmcgZmlyc3Q9NjYgc2Vjb25kPTEwOSBhbW91bnQ9LTAuMTkNCmtlcm5pbmcgZmlyc3Q9NjYgc2Vjb25kPTExNSBhbW91bnQ9LTAuMTYNCmtlcm5pbmcgZmlyc3Q9NjYgc2Vjb25kPTExNiBhbW91bnQ9LTAuNTQNCmtlcm5pbmcgZmlyc3Q9NjYgc2Vjb25kPTExNyBhbW91bnQ9LTAuMTYNCmtlcm5pbmcgZmlyc3Q9NjYgc2Vjb25kPTExOCBhbW91bnQ9LTAuNTQNCmtlcm5pbmcgZmlyc3Q9NjYgc2Vjb25kPTExOSBhbW91bnQ9LTAuNDINCmtlcm5pbmcgZmlyc3Q9NjYgc2Vjb25kPTEyMCBhbW91bnQ9LTAuNw0Ka2VybmluZyBmaXJzdD02NiBzZWNvbmQ9MTIxIGFtb3VudD0tMC42NA0Ka2VybmluZyBmaXJzdD02NiBzZWNvbmQ9MTIyIGFtb3VudD0tMC40NQ0Ka2VybmluZyBmaXJzdD02NiBzZWNvbmQ9MTI1IGFtb3VudD0tMC44DQprZXJuaW5nIGZpcnN0PTY2IHNlY29uZD0xOTggYW1vdW50PS0wLjI2DQprZXJuaW5nIGZpcnN0PTY2IHNlY29uZD0yMjMgYW1vdW50PS0wLjQ1DQprZXJuaW5nIGZpcnN0PTY2IHNlY29uZD04NDgyIGFtb3VudD0tMC4zOA0Ka2VybmluZyBmaXJzdD02NyBzZWNvbmQ9NDUgYW1vdW50PS0xLjk1DQprZXJuaW5nIGZpcnN0PTY3IHNlY29uZD01MiBhbW91bnQ9LTEuNTcNCmtlcm5pbmcgZmlyc3Q9Njcgc2Vjb25kPTY3IGFtb3VudD0tMC40NQ0Ka2VybmluZyBmaXJzdD02NyBzZWNvbmQ9OTkgYW1vdW50PS0wLjQ1DQprZXJuaW5nIGZpcnN0PTY3IHNlY29uZD0xMDIgYW1vdW50PS0wLjIyDQprZXJuaW5nIGZpcnN0PTY3IHNlY29uZD0xMDMgYW1vdW50PS0wLjQ4DQprZXJuaW5nIGZpcnN0PTY3IHNlY29uZD0xMDkgYW1vdW50PS0wLjIyDQprZXJuaW5nIGZpcnN0PTY3IHNlY29uZD0xMTYgYW1vdW50PS0wLjIyDQprZXJuaW5nIGZpcnN0PTY3IHNlY29uZD0xMTcgYW1vdW50PS0wLjQ4DQprZXJuaW5nIGZpcnN0PTY3IHNlY29uZD0xMTggYW1vdW50PS0wLjIyDQprZXJuaW5nIGZpcnN0PTY3IHNlY29uZD0xMTkgYW1vdW50PS0wLjE5DQprZXJuaW5nIGZpcnN0PTY3IHNlY29uZD0xMjEgYW1vdW50PS0wLjIyDQprZXJuaW5nIGZpcnN0PTY3IHNlY29uZD0xNzEgYW1vdW50PS0wLjk2DQprZXJuaW5nIGZpcnN0PTY3IHNlY29uZD0yMjMgYW1vdW50PS0wLjE5DQprZXJuaW5nIGZpcnN0PTY3IHNlY29uZD0yMzggYW1vdW50PTAuOTkNCmtlcm5pbmcgZmlyc3Q9Njcgc2Vjb25kPTIzOSBhbW91bnQ9MC4zOA0Ka2VybmluZyBmaXJzdD02NyBzZWNvbmQ9MjQwIGFtb3VudD0tMC4yMg0Ka2VybmluZyBmaXJzdD02OCBzZWNvbmQ9NDEgYW1vdW50PS0wLjkNCmtlcm5pbmcgZmlyc3Q9Njggc2Vjb25kPTQ0IGFtb3VudD0tMC40OA0Ka2VybmluZyBmaXJzdD02OCBzZWNvbmQ9NDYgYW1vdW50PS0wLjQ1DQprZXJuaW5nIGZpcnN0PTY4IHNlY29uZD00NyBhbW91bnQ9LTAuNjENCmtlcm5pbmcgZmlyc3Q9Njggc2Vjb25kPTUxIGFtb3VudD0tMC4yNg0Ka2VybmluZyBmaXJzdD02OCBzZWNvbmQ9NTUgYW1vdW50PS0wLjUxDQprZXJuaW5nIGZpcnN0PTY4IHNlY29uZD02MyBhbW91bnQ9LTAuNjENCmtlcm5pbmcgZmlyc3Q9Njggc2Vjb25kPTY1IGFtb3VudD0tMC4zOA0Ka2VybmluZyBmaXJzdD02OCBzZWNvbmQ9NzcgYW1vdW50PS0wLjE5DQprZXJuaW5nIGZpcnN0PTY4IHNlY29uZD04NCBhbW91bnQ9LTAuOQ0Ka2VybmluZyBmaXJzdD02OCBzZWNvbmQ9ODYgYW1vdW50PS0wLjQyDQprZXJuaW5nIGZpcnN0PTY4IHNlY29uZD04NyBhbW91bnQ9LTAuMjYNCmtlcm5pbmcgZmlyc3Q9Njggc2Vjb25kPTg4IGFtb3VudD0tMC45OQ0Ka2VybmluZyBmaXJzdD02OCBzZWNvbmQ9ODkgYW1vdW50PS0wLjkzDQprZXJuaW5nIGZpcnN0PTY4IHNlY29uZD05MCBhbW91bnQ9LTAuNjcNCmtlcm5pbmcgZmlyc3Q9Njggc2Vjb25kPTkzIGFtb3VudD0tMS4wMg0Ka2VybmluZyBmaXJzdD02OCBzZWNvbmQ9OTcgYW1vdW50PS0wLjI2DQprZXJuaW5nIGZpcnN0PTY4IHNlY29uZD05OCBhbW91bnQ9LTAuMjINCmtlcm5pbmcgZmlyc3Q9Njggc2Vjb25kPTk5IGFtb3VudD0tMC4xOQ0Ka2VybmluZyBmaXJzdD02OCBzZWNvbmQ9MTAzIGFtb3VudD0tMC4xOQ0Ka2VybmluZyBmaXJzdD02OCBzZWNvbmQ9MTA1IGFtb3VudD0tMC4yMg0Ka2VybmluZyBmaXJzdD02OCBzZWNvbmQ9MTA4IGFtb3VudD0tMC4yMg0Ka2VybmluZyBmaXJzdD02OCBzZWNvbmQ9MTA5IGFtb3VudD0tMC4yMg0Ka2VybmluZyBmaXJzdD02OCBzZWNvbmQ9MTE1IGFtb3VudD0tMC4xOQ0Ka2VybmluZyBmaXJzdD02OCBzZWNvbmQ9MTE3IGFtb3VudD0tMC4xOQ0Ka2VybmluZyBmaXJzdD02OCBzZWNvbmQ9MTIwIGFtb3VudD0tMC4zOA0Ka2VybmluZyBmaXJzdD02OCBzZWNvbmQ9MTIyIGFtb3VudD0tMC4xOQ0Ka2VybmluZyBmaXJzdD02OCBzZWNvbmQ9MTI1IGFtb3VudD0tMC44Ng0Ka2VybmluZyBmaXJzdD02OCBzZWNvbmQ9MTk4IGFtb3VudD0tMC45Ng0Ka2VybmluZyBmaXJzdD02OCBzZWNvbmQ9MjIzIGFtb3VudD0tMC4xOQ0Ka2VybmluZyBmaXJzdD02OCBzZWNvbmQ9MjQwIGFtb3VudD0tMC4yMg0Ka2VybmluZyBmaXJzdD02OCBzZWNvbmQ9ODIxNyBhbW91bnQ9LTAuMjkNCmtlcm5pbmcgZmlyc3Q9Njggc2Vjb25kPTgyMTggYW1vdW50PS0wLjQ4DQprZXJuaW5nIGZpcnN0PTY4IHNlY29uZD04NDgyIGFtb3VudD0tMC4zMg0Ka2VybmluZyBmaXJzdD02OSBzZWNvbmQ9NDUgYW1vdW50PS0wLjM4DQprZXJuaW5nIGZpcnN0PTY5IHNlY29uZD01MiBhbW91bnQ9LTEuMTUNCmtlcm5pbmcgZmlyc3Q9Njkgc2Vjb25kPTY3IGFtb3VudD0tMC4zNQ0Ka2VybmluZyBmaXJzdD02OSBzZWNvbmQ9OTkgYW1vdW50PS0wLjUxDQprZXJuaW5nIGZpcnN0PTY5IHNlY29uZD0xMDIgYW1vdW50PS0wLjQyDQprZXJuaW5nIGZpcnN0PTY5IHNlY29uZD0xMDMgYW1vdW50PS0wLjQ4DQprZXJuaW5nIGZpcnN0PTY5IHNlY29uZD0xMDkgYW1vdW50PS0wLjI5DQprZXJuaW5nIGZpcnN0PTY5IHNlY29uZD0xMTUgYW1vdW50PS0wLjE2DQprZXJuaW5nIGZpcnN0PTY5IHNlY29uZD0xMTYgYW1vdW50PS0wLjQ1DQprZXJuaW5nIGZpcnN0PTY5IHNlY29uZD0xMTcgYW1vdW50PS0wLjU4DQprZXJuaW5nIGZpcnN0PTY5IHNlY29uZD0xMTggYW1vdW50PS0wLjQ4DQprZXJuaW5nIGZpcnN0PTY5IHNlY29uZD0xMTkgYW1vdW50PS0wLjQyDQprZXJuaW5nIGZpcnN0PTY5IHNlY29uZD0xMjEgYW1vdW50PS0wLjUxDQprZXJuaW5nIGZpcnN0PTY5IHNlY29uZD0xNzEgYW1vdW50PS0wLjY3DQprZXJuaW5nIGZpcnN0PTY5IHNlY29uZD0xNzQgYW1vdW50PS0wLjI2DQprZXJuaW5nIGZpcnN0PTY5IHNlY29uZD0yMjMgYW1vdW50PS0wLjQyDQprZXJuaW5nIGZpcnN0PTY5IHNlY29uZD0yMzggYW1vdW50PTAuNjcNCmtlcm5pbmcgZmlyc3Q9Njkgc2Vjb25kPTI0MCBhbW91bnQ9LTAuMzINCmtlcm5pbmcgZmlyc3Q9NzAgc2Vjb25kPTM4IGFtb3VudD0tMC4zNQ0Ka2VybmluZyBmaXJzdD03MCBzZWNvbmQ9NDIgYW1vdW50PTAuMzUNCmtlcm5pbmcgZmlyc3Q9NzAgc2Vjb25kPTQ0IGFtb3VudD0tMi4yNA0Ka2VybmluZyBmaXJzdD03MCBzZWNvbmQ9NDYgYW1vdW50PS0yLjI0DQprZXJuaW5nIGZpcnN0PTcwIHNlY29uZD00NyBhbW91bnQ9LTEuODINCmtlcm5pbmcgZmlyc3Q9NzAgc2Vjb25kPTUyIGFtb3VudD0tMS4wNg0Ka2VybmluZyBmaXJzdD03MCBzZWNvbmQ9NTQgYW1vdW50PS0wLjQyDQprZXJuaW5nIGZpcnN0PTcwIHNlY29uZD01OCBhbW91bnQ9LTAuNDINCmtlcm5pbmcgZmlyc3Q9NzAgc2Vjb25kPTU5IGFtb3VudD0tMC40Mg0Ka2VybmluZyBmaXJzdD03MCBzZWNvbmQ9NjQgYW1vdW50PS0xLjA5DQprZXJuaW5nIGZpcnN0PTcwIHNlY29uZD02NSBhbW91bnQ9LTEuNw0Ka2VybmluZyBmaXJzdD03MCBzZWNvbmQ9NjcgYW1vdW50PS0wLjI2DQprZXJuaW5nIGZpcnN0PTcwIHNlY29uZD03NyBhbW91bnQ9LTAuNTQNCmtlcm5pbmcgZmlyc3Q9NzAgc2Vjb25kPTg0IGFtb3VudD0wLjE2DQprZXJuaW5nIGZpcnN0PTcwIHNlY29uZD05MyBhbW91bnQ9MC41MQ0Ka2VybmluZyBmaXJzdD03MCBzZWNvbmQ9OTcgYW1vdW50PS0xLjgyDQprZXJuaW5nIGZpcnN0PTcwIHNlY29uZD05OCBhbW91bnQ9LTAuMTYNCmtlcm5pbmcgZmlyc3Q9NzAgc2Vjb25kPTk5IGFtb3VudD0tMS40MQ0Ka2VybmluZyBmaXJzdD03MCBzZWNvbmQ9MTAyIGFtb3VudD0tMC4zOA0Ka2VybmluZyBmaXJzdD03MCBzZWNvbmQ9MTAzIGFtb3VudD0tMS4yOA0Ka2VybmluZyBmaXJzdD03MCBzZWNvbmQ9MTA1IGFtb3VudD0tMC4yMg0Ka2VybmluZyBmaXJzdD03MCBzZWNvbmQ9MTA5IGFtb3VudD0tMS40NA0Ka2VybmluZyBmaXJzdD03MCBzZWNvbmQ9MTE1IGFtb3VudD0tMS4yNQ0Ka2VybmluZyBmaXJzdD03MCBzZWNvbmQ9MTE2IGFtb3VudD0tMC4yOQ0Ka2VybmluZyBmaXJzdD03MCBzZWNvbmQ9MTE3IGFtb3VudD0tMS4yNQ0Ka2VybmluZyBmaXJzdD03MCBzZWNvbmQ9MTE4IGFtb3VudD0tMC4yOQ0Ka2VybmluZyBmaXJzdD03MCBzZWNvbmQ9MTE5IGFtb3VudD0tMC4yNg0Ka2VybmluZyBmaXJzdD03MCBzZWNvbmQ9MTIwIGFtb3VudD0tMC41NA0Ka2VybmluZyBmaXJzdD03MCBzZWNvbmQ9MTIxIGFtb3VudD0tMC4yNg0Ka2VybmluZyBmaXJzdD03MCBzZWNvbmQ9MTIyIGFtb3VudD0tMC42NA0Ka2VybmluZyBmaXJzdD03MCBzZWNvbmQ9MTI1IGFtb3VudD0wLjYxDQprZXJuaW5nIGZpcnN0PTcwIHNlY29uZD0xNzEgYW1vdW50PS0wLjY0DQprZXJuaW5nIGZpcnN0PTcwIHNlY29uZD0xODcgYW1vdW50PS0xLjI1DQprZXJuaW5nIGZpcnN0PTcwIHNlY29uZD0xOTggYW1vdW50PS0zLjIzDQprZXJuaW5nIGZpcnN0PTcwIHNlY29uZD0yMjMgYW1vdW50PS0wLjQ4DQprZXJuaW5nIGZpcnN0PTcwIHNlY29uZD0yMjcgYW1vdW50PS0xLjYNCmtlcm5pbmcgZmlyc3Q9NzAgc2Vjb25kPTIzOCBhbW91bnQ9MS42Ng0Ka2VybmluZyBmaXJzdD03MCBzZWNvbmQ9MjM5IGFtb3VudD0wLjkNCmtlcm5pbmcgZmlyc3Q9NzAgc2Vjb25kPTI0MCBhbW91bnQ9LTEuMDkNCmtlcm5pbmcgZmlyc3Q9NzAgc2Vjb25kPTgyMTggYW1vdW50PS0yLjI0DQprZXJuaW5nIGZpcnN0PTcwIHNlY29uZD04NDgyIGFtb3VudD0wLjUxDQprZXJuaW5nIGZpcnN0PTcxIHNlY29uZD00MSBhbW91bnQ9LTAuMjYNCmtlcm5pbmcgZmlyc3Q9NzEgc2Vjb25kPTg0IGFtb3VudD0tMC4xNg0Ka2VybmluZyBmaXJzdD03MSBzZWNvbmQ9OTggYW1vdW50PS0wLjE5DQprZXJuaW5nIGZpcnN0PTcxIHNlY29uZD05OSBhbW91bnQ9LTAuMTYNCmtlcm5pbmcgZmlyc3Q9NzEgc2Vjb25kPTEwMiBhbW91bnQ9LTAuMzINCmtlcm5pbmcgZmlyc3Q9NzEgc2Vjb25kPTEwMyBhbW91bnQ9LTAuMTkNCmtlcm5pbmcgZmlyc3Q9NzEgc2Vjb25kPTEwNSBhbW91bnQ9LTAuMTkNCmtlcm5pbmcgZmlyc3Q9NzEgc2Vjb25kPTEwOCBhbW91bnQ9LTAuMTkNCmtlcm5pbmcgZmlyc3Q9NzEgc2Vjb25kPTEwOSBhbW91bnQ9LTAuMTkNCmtlcm5pbmcgZmlyc3Q9NzEgc2Vjb25kPTExNiBhbW91bnQ9LTAuMzgNCmtlcm5pbmcgZmlyc3Q9NzEgc2Vjb25kPTExNyBhbW91bnQ9LTAuMjINCmtlcm5pbmcgZmlyc3Q9NzEgc2Vjb25kPTExOCBhbW91bnQ9LTAuMzgNCmtlcm5pbmcgZmlyc3Q9NzEgc2Vjb25kPTExOSBhbW91bnQ9LTAuMjkNCmtlcm5pbmcgZmlyc3Q9NzEgc2Vjb25kPTEyMSBhbW91bnQ9LTAuNDUNCmtlcm5pbmcgZmlyc3Q9NzEgc2Vjb25kPTEyMiBhbW91bnQ9LTAuMjINCmtlcm5pbmcgZmlyc3Q9NzEgc2Vjb25kPTIyMyBhbW91bnQ9LTAuMzgNCmtlcm5pbmcgZmlyc3Q9NzIgc2Vjb25kPTQxIGFtb3VudD0tMC4zMg0Ka2VybmluZyBmaXJzdD03MiBzZWNvbmQ9NzcgYW1vdW50PS0wLjE2DQprZXJuaW5nIGZpcnN0PTcyIHNlY29uZD05NyBhbW91bnQ9LTAuMzINCmtlcm5pbmcgZmlyc3Q9NzIgc2Vjb25kPTk4IGFtb3VudD0tMC4yOQ0Ka2VybmluZyBmaXJzdD03MiBzZWNvbmQ9OTkgYW1vdW50PS0wLjQ1DQprZXJuaW5nIGZpcnN0PTcyIHNlY29uZD0xMDIgYW1vdW50PS0wLjI5DQprZXJuaW5nIGZpcnN0PTcyIHNlY29uZD0xMDMgYW1vdW50PS0wLjQ4DQprZXJuaW5nIGZpcnN0PTcyIHNlY29uZD0xMDUgYW1vdW50PS0wLjI5DQprZXJuaW5nIGZpcnN0PTcyIHNlY29uZD0xMDggYW1vdW50PS0wLjMyDQprZXJuaW5nIGZpcnN0PTcyIHNlY29uZD0xMDkgYW1vdW50PS0wLjI5DQprZXJuaW5nIGZpcnN0PTcyIHNlY29uZD0xMTUgYW1vdW50PS0wLjMyDQprZXJuaW5nIGZpcnN0PTcyIHNlY29uZD0xMTYgYW1vdW50PS0wLjI5DQprZXJuaW5nIGZpcnN0PTcyIHNlY29uZD0xMTcgYW1vdW50PS0wLjM1DQprZXJuaW5nIGZpcnN0PTcyIHNlY29uZD0xMTggYW1vdW50PS0wLjI5DQprZXJuaW5nIGZpcnN0PTcyIHNlY29uZD0xMTkgYW1vdW50PS0wLjI2DQprZXJuaW5nIGZpcnN0PTcyIHNlY29uZD0xMjEgYW1vdW50PS0wLjI5DQprZXJuaW5nIGZpcnN0PTcyIHNlY29uZD0xMjIgYW1vdW50PS0wLjMyDQprZXJuaW5nIGZpcnN0PTcyIHNlY29uZD0yMjMgYW1vdW50PS0wLjM4DQprZXJuaW5nIGZpcnN0PTcyIHNlY29uZD0yNDAgYW1vdW50PS0wLjQyDQprZXJuaW5nIGZpcnN0PTc0IHNlY29uZD00MSBhbW91bnQ9LTAuMzINCmtlcm5pbmcgZmlyc3Q9NzQgc2Vjb25kPTc3IGFtb3VudD0tMC4xNg0Ka2VybmluZyBmaXJzdD03NCBzZWNvbmQ9OTcgYW1vdW50PS0wLjMyDQprZXJuaW5nIGZpcnN0PTc0IHNlY29uZD05OCBhbW91bnQ9LTAuMjkNCmtlcm5pbmcgZmlyc3Q9NzQgc2Vjb25kPTk5IGFtb3VudD0tMC40NQ0Ka2VybmluZyBmaXJzdD03NCBzZWNvbmQ9MTAyIGFtb3VudD0tMC4yOQ0Ka2VybmluZyBmaXJzdD03NCBzZWNvbmQ9MTAzIGFtb3VudD0tMC40OA0Ka2VybmluZyBmaXJzdD03NCBzZWNvbmQ9MTA1IGFtb3VudD0tMC4yOQ0Ka2VybmluZyBmaXJzdD03NCBzZWNvbmQ9MTA4IGFtb3VudD0tMC4zMg0Ka2VybmluZyBmaXJzdD03NCBzZWNvbmQ9MTA5IGFtb3VudD0tMC4yOQ0Ka2VybmluZyBmaXJzdD03NCBzZWNvbmQ9MTE1IGFtb3VudD0tMC4zMg0Ka2VybmluZyBmaXJzdD03NCBzZWNvbmQ9MTE2IGFtb3VudD0tMC4yOQ0Ka2VybmluZyBmaXJzdD03NCBzZWNvbmQ9MTE3IGFtb3VudD0tMC4zNQ0Ka2VybmluZyBmaXJzdD03NCBzZWNvbmQ9MTE4IGFtb3VudD0tMC4yOQ0Ka2VybmluZyBmaXJzdD03NCBzZWNvbmQ9MTE5IGFtb3VudD0tMC4yNg0Ka2VybmluZyBmaXJzdD03NCBzZWNvbmQ9MTIxIGFtb3VudD0tMC4yOQ0Ka2VybmluZyBmaXJzdD03NCBzZWNvbmQ9MTIyIGFtb3VudD0tMC4zMg0Ka2VybmluZyBmaXJzdD03NCBzZWNvbmQ9MjIzIGFtb3VudD0tMC4zOA0Ka2VybmluZyBmaXJzdD03NCBzZWNvbmQ9MjQwIGFtb3VudD0tMC40Mg0Ka2VybmluZyBmaXJzdD03NSBzZWNvbmQ9MzggYW1vdW50PS0wLjI5DQprZXJuaW5nIGZpcnN0PTc1IHNlY29uZD00MiBhbW91bnQ9MC4yOQ0Ka2VybmluZyBmaXJzdD03NSBzZWNvbmQ9NDUgYW1vdW50PS0wLjM4DQprZXJuaW5nIGZpcnN0PTc1IHNlY29uZD02NyBhbW91bnQ9LTAuOQ0Ka2VybmluZyBmaXJzdD03NSBzZWNvbmQ9ODMgYW1vdW50PS0wLjE5DQprZXJuaW5nIGZpcnN0PTc1IHNlY29uZD05MyBhbW91bnQ9MS4wNg0Ka2VybmluZyBmaXJzdD03NSBzZWNvbmQ9OTkgYW1vdW50PS0xLjA5DQprZXJuaW5nIGZpcnN0PTc1IHNlY29uZD0xMDIgYW1vdW50PS0wLjMyDQprZXJuaW5nIGZpcnN0PTc1IHNlY29uZD0xMDMgYW1vdW50PS0wLjU4DQprZXJuaW5nIGZpcnN0PTc1IHNlY29uZD0xMTYgYW1vdW50PS0wLjg2DQprZXJuaW5nIGZpcnN0PTc1IHNlY29uZD0xMTcgYW1vdW50PS0wLjc3DQprZXJuaW5nIGZpcnN0PTc1IHNlY29uZD0xMTggYW1vdW50PS0xLjc2DQprZXJuaW5nIGZpcnN0PTc1IHNlY29uZD0xMTkgYW1vdW50PS0xLjQ0DQprZXJuaW5nIGZpcnN0PTc1IHNlY29uZD0xMjEgYW1vdW50PS0xLjgyDQprZXJuaW5nIGZpcnN0PTc1IHNlY29uZD0xMjUgYW1vdW50PTEuMDYNCmtlcm5pbmcgZmlyc3Q9NzUgc2Vjb25kPTE3MSBhbW91bnQ9LTAuOTMNCmtlcm5pbmcgZmlyc3Q9NzUgc2Vjb25kPTE3NCBhbW91bnQ9LTAuNTgNCmtlcm5pbmcgZmlyc3Q9NzUgc2Vjb25kPTIyMyBhbW91bnQ9LTAuMzUNCmtlcm5pbmcgZmlyc3Q9NzUgc2Vjb25kPTIzNiBhbW91bnQ9MC4zMg0Ka2VybmluZyBmaXJzdD03NSBzZWNvbmQ9MjM4IGFtb3VudD0wLjc3DQprZXJuaW5nIGZpcnN0PTc1IHNlY29uZD0yMzkgYW1vdW50PTEuMzENCmtlcm5pbmcgZmlyc3Q9NzUgc2Vjb25kPTI0MCBhbW91bnQ9LTAuNTQNCmtlcm5pbmcgZmlyc3Q9NzUgc2Vjb25kPTg0ODIgYW1vdW50PTAuODYNCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTM0IGFtb3VudD0tMi44OA0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9NDIgYW1vdW50PS0yLjg4DQprZXJuaW5nIGZpcnN0PTc2IHNlY29uZD00NSBhbW91bnQ9LTEuOTINCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTQ4IGFtb3VudD0tMC40Mg0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9NDkgYW1vdW50PS0wLjY0DQprZXJuaW5nIGZpcnN0PTc2IHNlY29uZD01MiBhbW91bnQ9LTEuOTgNCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTU3IGFtb3VudD0tMC45Mw0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9NjMgYW1vdW50PS0wLjgNCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTY3IGFtb3VudD0tMC43Nw0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9ODQgYW1vdW50PS0yLjE0DQprZXJuaW5nIGZpcnN0PTc2IHNlY29uZD04NSBhbW91bnQ9LTAuNTgNCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTg2IGFtb3VudD0tMy4yNg0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9ODcgYW1vdW50PS0xLjcNCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTg5IGFtb3VudD0tMy4xNA0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9OTMgYW1vdW50PS0wLjUxDQprZXJuaW5nIGZpcnN0PTc2IHNlY29uZD05OSBhbW91bnQ9LTAuMzINCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTEwMiBhbW91bnQ9LTAuNDgNCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTEwMyBhbW91bnQ9LTAuMjINCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTExNiBhbW91bnQ9LTAuNzcNCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTExNyBhbW91bnQ9LTAuMjINCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTExOCBhbW91bnQ9LTEuODINCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTExOSBhbW91bnQ9LTEuNDENCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTEyMSBhbW91bnQ9LTIuNA0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9MTI1IGFtb3VudD0tMC40OA0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9MTcxIGFtb3VudD0tMS4wOQ0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9MTc0IGFtb3VudD0tMS4xNQ0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9MTgzIGFtb3VudD0tMS44Ng0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9MjIzIGFtb3VudD0tMC40Mg0Ka2VybmluZyBmaXJzdD03NiBzZWNvbmQ9ODIxNiBhbW91bnQ9LTIuODUNCmtlcm5pbmcgZmlyc3Q9NzYgc2Vjb25kPTgyMTcgYW1vdW50PS0yLjg1DQprZXJuaW5nIGZpcnN0PTc2IHNlY29uZD04NDgyIGFtb3VudD0tMi44OA0Ka2VybmluZyBmaXJzdD03NyBzZWNvbmQ9MzQgYW1vdW50PS0wLjU4DQprZXJuaW5nIGZpcnN0PTc3IHNlY29uZD00MSBhbW91bnQ9LTAuNDUNCmtlcm5pbmcgZmlyc3Q9Nzcgc2Vjb25kPTQyIGFtb3VudD0tMC41OA0Ka2VybmluZyBmaXJzdD03NyBzZWNvbmQ9NDkgYW1vdW50PS0wLjI5DQprZXJuaW5nIGZpcnN0PTc3IHNlY29uZD02MyBhbW91bnQ9LTAuNDUNCmtlcm5pbmcgZmlyc3Q9Nzcgc2Vjb25kPTY2IGFtb3VudD0tMC4xNg0Ka2VybmluZyBmaXJzdD03NyBzZWNvbmQ9NjcgYW1vdW50PS0wLjE2DQprZXJuaW5nIGZpcnN0PTc3IHNlY29uZD02OSBhbW91bnQ9LTAuMTYNCmtlcm5pbmcgZmlyc3Q9Nzcgc2Vjb25kPTc0IGFtb3VudD0tMC4xNg0Ka2VybmluZyBmaXJzdD03NyBzZWNvbmQ9ODQgYW1vdW50PS0wLjgNCmtlcm5pbmcgZmlyc3Q9Nzcgc2Vjb25kPTg1IGFtb3VudD0tMC4yNg0Ka2VybmluZyBmaXJzdD03NyBzZWNvbmQ9ODYgYW1vdW50PS0wLjY0DQprZXJuaW5nIGZpcnN0PTc3IHNlY29uZD04NyBhbW91bnQ9LTAuNTgNCmtlcm5pbmcgZmlyc3Q9Nzcgc2Vjb25kPTg5IGFtb3VudD0tMC43NA0Ka2VybmluZyBmaXJzdD03NyBzZWNvbmQ9OTcgYW1vdW50PS0wLjE5DQprZXJuaW5nIGZpcnN0PTc3IHNlY29uZD05OCBhbW91bnQ9LTAuMzUNCmtlcm5pbmcgZmlyc3Q9Nzcgc2Vjb25kPTk5IGFtb3VudD0tMC4zOA0Ka2VybmluZyBmaXJzdD03NyBzZWNvbmQ9MTAyIGFtb3VudD0tMC41MQ0Ka2VybmluZyBmaXJzdD03NyBzZWNvbmQ9MTAzIGFtb3VudD0tMC40Mg0Ka2VybmluZyBmaXJzdD03NyBzZWNvbmQ9MTA1IGFtb3VudD0tMC4zMg0Ka2VybmluZyBmaXJzdD03NyBzZWNvbmQ9MTA4IGFtb3VudD0tMC4zNQ0Ka2VybmluZyBmaXJzdD03NyBzZWNvbmQ9MTA5IGFtb3VudD0tMC4zMg0Ka2VybmluZyBmaXJzdD03NyBzZWNvbmQ9MTE1IGFtb3VudD0tMC4xOQ0Ka2VybmluZyBmaXJzdD03NyBzZWNvbmQ9MTE2IGFtb3VudD0tMC42NA0Ka2VybmluZyBmaXJzdD03NyBzZWNvbmQ9MTE3IGFtb3VudD0tMC4zOA0Ka2VybmluZyBmaXJzdD03NyBzZWNvbmQ9MTE4IGFtb3VudD0tMC43DQprZXJuaW5nIGZpcnN0PTc3IHNlY29uZD0xMTkgYW1vdW50PS0wLjY0DQprZXJuaW5nIGZpcnN0PTc3IHNlY29uZD0xMjEgYW1vdW50PS0wLjc0DQprZXJuaW5nIGZpcnN0PTc3IHNlY29uZD0xMjIgYW1vdW50PS0wLjIyDQprZXJuaW5nIGZpcnN0PTc3IHNlY29uZD0yMjMgYW1vdW50PS0wLjU4DQprZXJuaW5nIGZpcnN0PTc3IHNlY29uZD0yNDAgYW1vdW50PS0wLjI5DQprZXJuaW5nIGZpcnN0PTc3IHNlY29uZD04MjE2IGFtb3VudD0tMC42NA0Ka2VybmluZyBmaXJzdD03NyBzZWNvbmQ9ODIxNyBhbW91bnQ9LTAuNjQNCmtlcm5pbmcgZmlyc3Q9Nzcgc2Vjb25kPTg0ODIgYW1vdW50PS0wLjYxDQprZXJuaW5nIGZpcnN0PTc5IHNlY29uZD00MSBhbW91bnQ9LTAuODYNCmtlcm5pbmcgZmlyc3Q9Nzkgc2Vjb25kPTQ0IGFtb3VudD0tMC40NQ0Ka2VybmluZyBmaXJzdD03OSBzZWNvbmQ9NDYgYW1vdW50PS0wLjQ1DQprZXJuaW5nIGZpcnN0PTc5IHNlY29uZD00NyBhbW91bnQ9LTAuNTQNCmtlcm5pbmcgZmlyc3Q9Nzkgc2Vjb25kPTU1IGFtb3VudD0tMC40Mg0Ka2VybmluZyBmaXJzdD03OSBzZWNvbmQ9NjMgYW1vdW50PS0wLjUxDQprZXJuaW5nIGZpcnN0PTc5IHNlY29uZD02NSBhbW91bnQ9LTAuMzUNCmtlcm5pbmcgZmlyc3Q9Nzkgc2Vjb25kPTc3IGFtb3VudD0tMC4xNg0Ka2VybmluZyBmaXJzdD03OSBzZWNvbmQ9ODQgYW1vdW50PS0wLjc3DQprZXJuaW5nIGZpcnN0PTc5IHNlY29uZD04NiBhbW91bnQ9LTAuMzgNCmtlcm5pbmcgZmlyc3Q9Nzkgc2Vjb25kPTg3IGFtb3VudD0tMC4yNg0Ka2VybmluZyBmaXJzdD03OSBzZWNvbmQ9ODggYW1vdW50PS0wLjg2DQprZXJuaW5nIGZpcnN0PTc5IHNlY29uZD04OSBhbW91bnQ9LTAuODMNCmtlcm5pbmcgZmlyc3Q9Nzkgc2Vjb25kPTkwIGFtb3VudD0tMC41OA0Ka2VybmluZyBmaXJzdD03OSBzZWNvbmQ9OTMgYW1vdW50PS0wLjkzDQprZXJuaW5nIGZpcnN0PTc5IHNlY29uZD05NyBhbW91bnQ9LTAuMjkNCmtlcm5pbmcgZmlyc3Q9Nzkgc2Vjb25kPTk4IGFtb3VudD0tMC4xOQ0Ka2VybmluZyBmaXJzdD03OSBzZWNvbmQ9OTkgYW1vdW50PS0wLjE5DQprZXJuaW5nIGZpcnN0PTc5IHNlY29uZD0xMDMgYW1vdW50PS0wLjE5DQprZXJuaW5nIGZpcnN0PTc5IHNlY29uZD0xMDUgYW1vdW50PS0wLjIyDQprZXJuaW5nIGZpcnN0PTc5IHNlY29uZD0xMDggYW1vdW50PS0wLjE5DQprZXJuaW5nIGZpcnN0PTc5IHNlY29uZD0xMDkgYW1vdW50PS0wLjIyDQprZXJuaW5nIGZpcnN0PTc5IHNlY29uZD0xMTUgYW1vdW50PS0wLjE5DQprZXJuaW5nIGZpcnN0PTc5IHNlY29uZD0xMTcgYW1vdW50PS0wLjE2DQprZXJuaW5nIGZpcnN0PTc5IHNlY29uZD0xMjAgYW1vdW50PS0wLjM1DQprZXJuaW5nIGZpcnN0PTc5IHNlY29uZD0xMjIgYW1vdW50PS0wLjE5DQprZXJuaW5nIGZpcnN0PTc5IHNlY29uZD0xMjUgYW1vdW50PS0wLjgNCmtlcm5pbmcgZmlyc3Q9Nzkgc2Vjb25kPTE5OCBhbW91bnQ9LTAuODYNCmtlcm5pbmcgZmlyc3Q9Nzkgc2Vjb25kPTIyMyBhbW91bnQ9LTAuMTYNCmtlcm5pbmcgZmlyc3Q9Nzkgc2Vjb25kPTI0MCBhbW91bnQ9LTAuMTkNCmtlcm5pbmcgZmlyc3Q9Nzkgc2Vjb25kPTgyMTcgYW1vdW50PS0wLjI5DQprZXJuaW5nIGZpcnN0PTc5IHNlY29uZD04MjE4IGFtb3VudD0tMC40NQ0Ka2VybmluZyBmaXJzdD03OSBzZWNvbmQ9ODQ4MiBhbW91bnQ9LTAuMzINCmtlcm5pbmcgZmlyc3Q9ODAgc2Vjb25kPTM4IGFtb3VudD0tMC4xOQ0Ka2VybmluZyBmaXJzdD04MCBzZWNvbmQ9NDEgYW1vdW50PS0wLjQ4DQprZXJuaW5nIGZpcnN0PTgwIHNlY29uZD00NCBhbW91bnQ9LTIuNTkNCmtlcm5pbmcgZmlyc3Q9ODAgc2Vjb25kPTQ2IGFtb3VudD0tMi41OQ0Ka2VybmluZyBmaXJzdD04MCBzZWNvbmQ9NDcgYW1vdW50PS0xLjQ3DQprZXJuaW5nIGZpcnN0PTgwIHNlY29uZD01MSBhbW91bnQ9LTAuMjYNCmtlcm5pbmcgZmlyc3Q9ODAgc2Vjb25kPTUyIGFtb3VudD0tMC40NQ0Ka2VybmluZyBmaXJzdD04MCBzZWNvbmQ9NjQgYW1vdW50PS0wLjQ4DQprZXJuaW5nIGZpcnN0PTgwIHNlY29uZD02NSBhbW91bnQ9LTEuMjgNCmtlcm5pbmcgZmlyc3Q9ODAgc2Vjb25kPTc3IGFtb3VudD0tMC4zMg0Ka2VybmluZyBmaXJzdD04MCBzZWNvbmQ9ODggYW1vdW50PS0wLjQ1DQprZXJuaW5nIGZpcnN0PTgwIHNlY29uZD05MCBhbW91bnQ9LTAuMjYNCmtlcm5pbmcgZmlyc3Q9ODAgc2Vjb25kPTk3IGFtb3VudD0tMC40NQ0Ka2VybmluZyBmaXJzdD04MCBzZWNvbmQ9OTggYW1vdW50PS0wLjE2DQprZXJuaW5nIGZpcnN0PTgwIHNlY29uZD05OSBhbW91bnQ9LTAuNDINCmtlcm5pbmcgZmlyc3Q9ODAgc2Vjb25kPTEwMyBhbW91bnQ9LTAuMzINCmtlcm5pbmcgZmlyc3Q9ODAgc2Vjb25kPTEwNSBhbW91bnQ9LTAuMTkNCmtlcm5pbmcgZmlyc3Q9ODAgc2Vjb25kPTEwOCBhbW91bnQ9LTAuMTYNCmtlcm5pbmcgZmlyc3Q9ODAgc2Vjb25kPTEwOSBhbW91bnQ9LTAuMjYNCmtlcm5pbmcgZmlyc3Q9ODAgc2Vjb25kPTExNSBhbW91bnQ9LTAuMjYNCmtlcm5pbmcgZmlyc3Q9ODAgc2Vjb25kPTExNyBhbW91bnQ9LTAuMTkNCmtlcm5pbmcgZmlyc3Q9ODAgc2Vjb25kPTE5OCBhbW91bnQ9LTIuMjENCmtlcm5pbmcgZmlyc3Q9ODAgc2Vjb25kPTIzOCBhbW91bnQ9MC44DQprZXJuaW5nIGZpcnN0PTgwIHNlY29uZD0yMzkgYW1vdW50PTAuMTMNCmtlcm5pbmcgZmlyc3Q9ODAgc2Vjb25kPTI0MCBhbW91bnQ9LTAuNw0Ka2VybmluZyBmaXJzdD04MCBzZWNvbmQ9ODIxOCBhbW91bnQ9LTIuNTkNCmtlcm5pbmcgZmlyc3Q9ODIgc2Vjb25kPTUyIGFtb3VudD0tMC43DQprZXJuaW5nIGZpcnN0PTgyIHNlY29uZD04NCBhbW91bnQ9LTAuNDINCmtlcm5pbmcgZmlyc3Q9ODIgc2Vjb25kPTg2IGFtb3VudD0tMC4xNg0Ka2VybmluZyBmaXJzdD04MiBzZWNvbmQ9ODkgYW1vdW50PS0wLjM1DQprZXJuaW5nIGZpcnN0PTgyIHNlY29uZD05MyBhbW91bnQ9LTAuNTENCmtlcm5pbmcgZmlyc3Q9ODIgc2Vjb25kPTk3IGFtb3VudD0tMC4xNg0Ka2VybmluZyBmaXJzdD04MiBzZWNvbmQ9OTggYW1vdW50PS0wLjE5DQprZXJuaW5nIGZpcnN0PTgyIHNlY29uZD05OSBhbW91bnQ9LTAuNjENCmtlcm5pbmcgZmlyc3Q9ODIgc2Vjb25kPTEwMiBhbW91bnQ9LTAuMjINCmtlcm5pbmcgZmlyc3Q9ODIgc2Vjb25kPTEwMyBhbW91bnQ9LTAuNDINCmtlcm5pbmcgZmlyc3Q9ODIgc2Vjb25kPTEwNSBhbW91bnQ9LTAuMjINCmtlcm5pbmcgZmlyc3Q9ODIgc2Vjb25kPTEwOCBhbW91bnQ9LTAuMjYNCmtlcm5pbmcgZmlyc3Q9ODIgc2Vjb25kPTEwOSBhbW91bnQ9LTAuMjYNCmtlcm5pbmcgZmlyc3Q9ODIgc2Vjb25kPTExNiBhbW91bnQ9LTAuMjYNCmtlcm5pbmcgZmlyc3Q9ODIgc2Vjb25kPTExNyBhbW91bnQ9LTAuMzgNCmtlcm5pbmcgZmlyc3Q9ODIgc2Vjb25kPTExOCBhbW91bnQ9LTAuMjYNCmtlcm5pbmcgZmlyc3Q9ODIgc2Vjb25kPTExOSBhbW91bnQ9LTAuMTkNCmtlcm5pbmcgZmlyc3Q9ODIgc2Vjb25kPTEyMSBhbW91bnQ9LTAuMjYNCmtlcm5pbmcgZmlyc3Q9ODIgc2Vjb25kPTEyNSBhbW91bnQ9LTAuMjkNCmtlcm5pbmcgZmlyc3Q9ODIgc2Vjb25kPTE3MSBhbW91bnQ9LTAuNDUNCmtlcm5pbmcgZmlyc3Q9ODIgc2Vjb25kPTIyMyBhbW91bnQ9LTAuMjkNCmtlcm5pbmcgZmlyc3Q9ODIgc2Vjb25kPTI0MCBhbW91bnQ9LTAuNDUNCmtlcm5pbmcgZmlyc3Q9ODMgc2Vjb25kPTQxIGFtb3VudD0tMC4zMg0Ka2VybmluZyBmaXJzdD04MyBzZWNvbmQ9ODggYW1vdW50PS0wLjE2DQprZXJuaW5nIGZpcnN0PTgzIHNlY29uZD05OCBhbW91bnQ9LTAuMTkNCmtlcm5pbmcgZmlyc3Q9ODMgc2Vjb25kPTEwMiBhbW91bnQ9LTAuNDINCmtlcm5pbmcgZmlyc3Q9ODMgc2Vjb25kPTEwMyBhbW91bnQ9LTAuMTkNCmtlcm5pbmcgZmlyc3Q9ODMgc2Vjb25kPTEwNSBhbW91bnQ9LTAuMTkNCmtlcm5pbmcgZmlyc3Q9ODMgc2Vjb25kPTEwOCBhbW91bnQ9LTAuMTkNCmtlcm5pbmcgZmlyc3Q9ODMgc2Vjb25kPTEwOSBhbW91bnQ9LTAuMTkNCmtlcm5pbmcgZmlyc3Q9ODMgc2Vjb25kPTExNSBhbW91bnQ9LTAuMTYNCmtlcm5pbmcgZmlyc3Q9ODMgc2Vjb25kPTExNiBhbW91bnQ9LTAuNDgNCmtlcm5pbmcgZmlyc3Q9ODMgc2Vjb25kPTExNyBhbW91bnQ9LTAuMTkNCmtlcm5pbmcgZmlyc3Q9ODMgc2Vjb25kPTExOCBhbW91bnQ9LTAuNDgNCmtlcm5pbmcgZmlyc3Q9ODMgc2Vjb25kPTExOSBhbW91bnQ9LTAuMzgNCmtlcm5pbmcgZmlyc3Q9ODMgc2Vjb25kPTEyMCBhbW91bnQ9LTAuNDUNCmtlcm5pbmcgZmlyc3Q9ODMgc2Vjb25kPTEyMSBhbW91bnQ9LTAuNTENCmtlcm5pbmcgZmlyc3Q9ODMgc2Vjb25kPTEyMiBhbW91bnQ9LTAuMzgNCmtlcm5pbmcgZmlyc3Q9ODMgc2Vjb25kPTIyMyBhbW91bnQ9LTAuMzgNCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTM4IGFtb3VudD0tMC40OA0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9NDIgYW1vdW50PTAuMzgNCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTQ0IGFtb3VudD0tMS4zOA0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9NDUgYW1vdW50PS0xLjI4DQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD00NiBhbW91bnQ9LTEuMzQNCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTQ3IGFtb3VudD0tMS42Mw0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9NDggYW1vdW50PS0wLjY3DQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD01MiBhbW91bnQ9LTEuNDQNCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTU0IGFtb3VudD0tMS4yMg0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9NTYgYW1vdW50PS0wLjI2DQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD01OCBhbW91bnQ9LTEuMDkNCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTU5IGFtb3VudD0tMS4wOQ0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9NjQgYW1vdW50PS0xLjg5DQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD02NSBhbW91bnQ9LTEuNzMNCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTY3IGFtb3VudD0tMC43Nw0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9NzcgYW1vdW50PS0wLjgzDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD05MyBhbW91bnQ9MC41OA0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9OTcgYW1vdW50PS0xLjk1DQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD05OCBhbW91bnQ9LTAuMTkNCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTk5IGFtb3VudD0tMi41Mw0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MTAyIGFtb3VudD0tMC44DQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0xMDMgYW1vdW50PS0yLjU5DQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0xMDUgYW1vdW50PS0wLjI5DQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0xMDggYW1vdW50PS0wLjE5DQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0xMDkgYW1vdW50PS0yLjgyDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0xMTUgYW1vdW50PS0xLjg5DQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0xMTYgYW1vdW50PS0wLjgzDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0xMTcgYW1vdW50PS0yLjc4DQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0xMTggYW1vdW50PS0yLjY2DQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0xMTkgYW1vdW50PS0yLjM3DQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0xMjAgYW1vdW50PS0yLjc1DQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0xMjEgYW1vdW50PS0yLjcyDQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0xMjIgYW1vdW50PS0xLjU0DQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0xMjUgYW1vdW50PTAuNjcNCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTE3MSBhbW91bnQ9LTEuOTUNCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTE3NCBhbW91bnQ9LTAuNzcNCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTE4NyBhbW91bnQ9LTEuODkNCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTE5OCBhbW91bnQ9LTIuMzQNCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTIyMyBhbW91bnQ9LTAuOTMNCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTIyNyBhbW91bnQ9LTEuNw0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MjM2IGFtb3VudD0tMC4wNg0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MjM3IGFtb3VudD0tMC4wNg0Ka2VybmluZyBmaXJzdD04NCBzZWNvbmQ9MjM4IGFtb3VudD0xLjY2DQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD0yMzkgYW1vdW50PTAuOTYNCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTI0MCBhbW91bnQ9LTEuMzENCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTI1NCBhbW91bnQ9LTEuNTQNCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTM1MyBhbW91bnQ9LTEuMjgNCmtlcm5pbmcgZmlyc3Q9ODQgc2Vjb25kPTgyMTggYW1vdW50PS0xLjM4DQprZXJuaW5nIGZpcnN0PTg0IHNlY29uZD04NDgyIGFtb3VudD0wLjUxDQprZXJuaW5nIGZpcnN0PTg1IHNlY29uZD00MSBhbW91bnQ9LTAuMzUNCmtlcm5pbmcgZmlyc3Q9ODUgc2Vjb25kPTQ0IGFtb3VudD0tMC40Mg0Ka2VybmluZyBmaXJzdD04NSBzZWNvbmQ9NDYgYW1vdW50PS0wLjQyDQprZXJuaW5nIGZpcnN0PTg1IHNlY29uZD00NyBhbW91bnQ9LTAuNw0Ka2VybmluZyBmaXJzdD04NSBzZWNvbmQ9NjUgYW1vdW50PS0wLjUxDQprZXJuaW5nIGZpcnN0PTg1IHNlY29uZD03NyBhbW91bnQ9LTAuMjYNCmtlcm5pbmcgZmlyc3Q9ODUgc2Vjb25kPTkwIGFtb3VudD0tMC4xNg0Ka2VybmluZyBmaXJzdD04NSBzZWNvbmQ9OTcgYW1vdW50PS0wLjQ1DQprZXJuaW5nIGZpcnN0PTg1IHNlY29uZD05OCBhbW91bnQ9LTAuMzUNCmtlcm5pbmcgZmlyc3Q9ODUgc2Vjb25kPTk5IGFtb3VudD0tMC40Mg0Ka2VybmluZyBmaXJzdD04NSBzZWNvbmQ9MTAyIGFtb3VudD0tMC4xOQ0Ka2VybmluZyBmaXJzdD04NSBzZWNvbmQ9MTAzIGFtb3VudD0tMC40NQ0Ka2VybmluZyBmaXJzdD04NSBzZWNvbmQ9MTA1IGFtb3VudD0tMC40Mg0Ka2VybmluZyBmaXJzdD04NSBzZWNvbmQ9MTA4IGFtb3VudD0tMC4zOA0Ka2VybmluZyBmaXJzdD04NSBzZWNvbmQ9MTA5IGFtb3VudD0tMC41MQ0Ka2VybmluZyBmaXJzdD04NSBzZWNvbmQ9MTE1IGFtb3VudD0tMC40Mg0Ka2VybmluZyBmaXJzdD04NSBzZWNvbmQ9MTE2IGFtb3VudD0tMC4yMg0Ka2VybmluZyBmaXJzdD04NSBzZWNvbmQ9MTE3IGFtb3VudD0tMC40NQ0Ka2VybmluZyBmaXJzdD04NSBzZWNvbmQ9MTE4IGFtb3VudD0tMC4xOQ0Ka2VybmluZyBmaXJzdD04NSBzZWNvbmQ9MTE5IGFtb3VudD0tMC4xOQ0Ka2VybmluZyBmaXJzdD04NSBzZWNvbmQ9MTIwIGFtb3VudD0tMC4xOQ0Ka2VybmluZyBmaXJzdD04NSBzZWNvbmQ9MTIxIGFtb3VudD0tMC4xOQ0Ka2VybmluZyBmaXJzdD04NSBzZWNvbmQ9MTIyIGFtb3VudD0tMC4zOA0Ka2VybmluZyBmaXJzdD04NSBzZWNvbmQ9MTk4IGFtb3VudD0tMC41MQ0Ka2VybmluZyBmaXJzdD04NSBzZWNvbmQ9MjIzIGFtb3VudD0tMC4yNg0Ka2VybmluZyBmaXJzdD04NSBzZWNvbmQ9MjM4IGFtb3VudD0tMC4xNg0Ka2VybmluZyBmaXJzdD04NSBzZWNvbmQ9MjQwIGFtb3VudD0tMC40NQ0Ka2VybmluZyBmaXJzdD04NSBzZWNvbmQ9ODIxOCBhbW91bnQ9LTAuNDINCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTM4IGFtb3VudD0tMC40Mg0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9NDIgYW1vdW50PTAuNTENCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTQ0IGFtb3VudD0tMS4zOA0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9NDUgYW1vdW50PS0wLjU4DQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD00NiBhbW91bnQ9LTEuMzgNCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTQ3IGFtb3VudD0tMS43Ng0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9NDggYW1vdW50PS0wLjMyDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD01MiBhbW91bnQ9LTEuMTUNCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTU0IGFtb3VudD0tMC44Mw0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9NTkgYW1vdW50PS0wLjI2DQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD02NCBhbW91bnQ9LTEuMzgNCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTY1IGFtb3VudD0tMS41Nw0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9NjcgYW1vdW50PS0wLjM4DQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD03NyBhbW91bnQ9LTAuNjcNCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTkzIGFtb3VudD0wLjkzDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD05NyBhbW91bnQ9LTEuMjgNCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTk5IGFtb3VudD0tMS45Mg0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9MTAyIGFtb3VudD0tMC4zOA0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9MTAzIGFtb3VudD0tMS43DQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0xMDkgYW1vdW50PS0xLjE1DQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0xMTUgYW1vdW50PS0xLjI1DQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0xMTYgYW1vdW50PS0wLjU0DQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0xMTcgYW1vdW50PS0xLjE1DQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0xMTggYW1vdW50PS0wLjQ1DQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0xMTkgYW1vdW50PS0wLjQ4DQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0xMjAgYW1vdW50PS0wLjQyDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0xMjEgYW1vdW50PS0wLjQyDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0xMjIgYW1vdW50PS0wLjQyDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0xMjUgYW1vdW50PTAuOTMNCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTE3MSBhbW91bnQ9LTEuMTUNCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTE3NCBhbW91bnQ9LTAuMzUNCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTE4NyBhbW91bnQ9LTAuMzgNCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTE5OCBhbW91bnQ9LTEuOTINCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTIyMyBhbW91bnQ9LTAuNDUNCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTIzNiBhbW91bnQ9MC4yOQ0Ka2VybmluZyBmaXJzdD04NiBzZWNvbmQ9MjM4IGFtb3VudD0xLjQxDQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD0yMzkgYW1vdW50PTEuMjgNCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTI0MCBhbW91bnQ9LTEuMjgNCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTM1MyBhbW91bnQ9LTAuOTMNCmtlcm5pbmcgZmlyc3Q9ODYgc2Vjb25kPTgyMTggYW1vdW50PS0xLjM4DQprZXJuaW5nIGZpcnN0PTg2IHNlY29uZD04NDgyIGFtb3VudD0wLjgzDQprZXJuaW5nIGZpcnN0PTg3IHNlY29uZD0zOCBhbW91bnQ9LTAuMjkNCmtlcm5pbmcgZmlyc3Q9ODcgc2Vjb25kPTQyIGFtb3VudD0wLjU0DQprZXJuaW5nIGZpcnN0PTg3IHNlY29uZD00NCBhbW91bnQ9LTAuOTkNCmtlcm5pbmcgZmlyc3Q9ODcgc2Vjb25kPTQ1IGFtb3VudD0tMC4yNg0Ka2VybmluZyBmaXJzdD04NyBzZWNvbmQ9NDYgYW1vdW50PS0wLjk2DQprZXJuaW5nIGZpcnN0PTg3IHNlY29uZD00NyBhbW91bnQ9LTEuMzENCmtlcm5pbmcgZmlyc3Q9ODcgc2Vjb25kPTUyIGFtb3VudD0tMC43NA0Ka2VybmluZyBmaXJzdD04NyBzZWNvbmQ9NTQgYW1vdW50PS0wLjQ4DQprZXJuaW5nIGZpcnN0PTg3IHNlY29uZD02NCBhbW91bnQ9LTEuMDYNCmtlcm5pbmcgZmlyc3Q9ODcgc2Vjb25kPTY1IGFtb3VudD0tMS4xOA0Ka2VybmluZyBmaXJzdD04NyBzZWNvbmQ9NjcgYW1vdW50PS0wLjIyDQprZXJuaW5nIGZpcnN0PTg3IHNlY29uZD03NyBhbW91bnQ9LTAuNTQNCmtlcm5pbmcgZmlyc3Q9ODcgc2Vjb25kPTkzIGFtb3VudD0wLjgzDQprZXJuaW5nIGZpcnN0PTg3IHNlY29uZD05NyBhbW91bnQ9LTEuMjgNCmtlcm5pbmcgZmlyc3Q9ODcgc2Vjb25kPTk5IGFtb3VudD0tMS4yNQ0Ka2VybmluZyBmaXJzdD04NyBzZWNvbmQ9MTAyIGFtb3VudD0tMC4yOQ0Ka2VybmluZyBmaXJzdD04NyBzZWNvbmQ9MTAzIGFtb3VudD0tMS4yOA0Ka2VybmluZyBmaXJzdD04NyBzZWNvbmQ9MTA1IGFtb3VudD0tMC4xNg0Ka2VybmluZyBmaXJzdD04NyBzZWNvbmQ9MTA5IGFtb3VudD0tMS4wMg0Ka2VybmluZyBmaXJzdD04NyBzZWNvbmQ9MTE1IGFtb3VudD0tMS4xOA0Ka2VybmluZyBmaXJzdD04NyBzZWNvbmQ9MTE2IGFtb3VudD0tMC40Mg0Ka2VybmluZyBmaXJzdD04NyBzZWNvbmQ9MTE3IGFtb3VudD0tMC45Mw0Ka2VybmluZyBmaXJzdD04NyBzZWNvbmQ9MTE4IGFtb3VudD0tMC4yOQ0Ka2VybmluZyBmaXJzdD04NyBzZWNvbmQ9MTE5IGFtb3VudD0tMC4yOQ0Ka2VybmluZyBmaXJzdD04NyBzZWNvbmQ9MTIwIGFtb3VudD0tMC4yMg0Ka2VybmluZyBmaXJzdD04NyBzZWNvbmQ9MTIxIGFtb3VudD0tMC4yNg0Ka2VybmluZyBmaXJzdD04NyBzZWNvbmQ9MTIyIGFtb3VudD0tMC4yOQ0Ka2VybmluZyBmaXJzdD04NyBzZWNvbmQ9MTI1IGFtb3VudD0wLjkNCmtlcm5pbmcgZmlyc3Q9ODcgc2Vjb25kPTE3MSBhbW91bnQ9LTAuODMNCmtlcm5pbmcgZmlyc3Q9ODcgc2Vjb25kPTE5OCBhbW91bnQ9LTEuNQ0Ka2VybmluZyBmaXJzdD04NyBzZWNvbmQ9MjIzIGFtb3VudD0tMC4zNQ0Ka2VybmluZyBmaXJzdD04NyBzZWNvbmQ9MjM2IGFtb3VudD0wLjEzDQprZXJuaW5nIGZpcnN0PTg3IHNlY29uZD0yMzggYW1vdW50PTEuNDENCmtlcm5pbmcgZmlyc3Q9ODcgc2Vjb25kPTIzOSBhbW91bnQ9MS4xNQ0Ka2VybmluZyBmaXJzdD04NyBzZWNvbmQ9MjQwIGFtb3VudD0tMS4wOQ0Ka2VybmluZyBmaXJzdD04NyBzZWNvbmQ9ODIxOCBhbW91bnQ9LTAuOTkNCmtlcm5pbmcgZmlyc3Q9ODcgc2Vjb25kPTg0ODIgYW1vdW50PTAuNzQNCmtlcm5pbmcgZmlyc3Q9ODggc2Vjb25kPTM4IGFtb3VudD0tMC4zMg0Ka2VybmluZyBmaXJzdD04OCBzZWNvbmQ9NDUgYW1vdW50PS0wLjQyDQprZXJuaW5nIGZpcnN0PTg4IHNlY29uZD02NyBhbW91bnQ9LTAuODYNCmtlcm5pbmcgZmlyc3Q9ODggc2Vjb25kPTgzIGFtb3VudD0tMC4xNg0Ka2VybmluZyBmaXJzdD04OCBzZWNvbmQ9OTMgYW1vdW50PTAuOTkNCmtlcm5pbmcgZmlyc3Q9ODggc2Vjb25kPTk5IGFtb3VudD0tMS4wNg0Ka2VybmluZyBmaXJzdD04OCBzZWNvbmQ9MTAyIGFtb3VudD0tMC4zNQ0Ka2VybmluZyBmaXJzdD04OCBzZWNvbmQ9MTAzIGFtb3VudD0tMC41OA0Ka2VybmluZyBmaXJzdD04OCBzZWNvbmQ9MTE2IGFtb3VudD0tMC45DQprZXJuaW5nIGZpcnN0PTg4IHNlY29uZD0xMTcgYW1vdW50PS0wLjc3DQprZXJuaW5nIGZpcnN0PTg4IHNlY29uZD0xMTggYW1vdW50PS0xLjU3DQprZXJuaW5nIGZpcnN0PTg4IHNlY29uZD0xMTkgYW1vdW50PS0xLjM4DQprZXJuaW5nIGZpcnN0PTg4IHNlY29uZD0xMjEgYW1vdW50PS0xLjYNCmtlcm5pbmcgZmlyc3Q9ODggc2Vjb25kPTEyNSBhbW91bnQ9MC45OQ0Ka2VybmluZyBmaXJzdD04OCBzZWNvbmQ9MTcxIGFtb3VudD0tMC45Ng0Ka2VybmluZyBmaXJzdD04OCBzZWNvbmQ9MTc0IGFtb3VudD0tMC41OA0Ka2VybmluZyBmaXJzdD04OCBzZWNvbmQ9MjIzIGFtb3VudD0tMC40Mg0Ka2VybmluZyBmaXJzdD04OCBzZWNvbmQ9MjM2IGFtb3VudD0wLjIyDQprZXJuaW5nIGZpcnN0PTg4IHNlY29uZD0yMzggYW1vdW50PTAuNzQNCmtlcm5pbmcgZmlyc3Q9ODggc2Vjb25kPTIzOSBhbW91bnQ9MS4yMg0Ka2VybmluZyBmaXJzdD04OCBzZWNvbmQ9MjQwIGFtb3VudD0tMC41NA0Ka2VybmluZyBmaXJzdD04OCBzZWNvbmQ9ODQ4MiBhbW91bnQ9MC43Nw0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MzggYW1vdW50PS0wLjYxDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD00MiBhbW91bnQ9MC40Mg0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9NDQgYW1vdW50PS0xLjMxDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD00NSBhbW91bnQ9LTEuMDkNCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTQ2IGFtb3VudD0tMS4zMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9NDcgYW1vdW50PS0xLjc2DQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD00OCBhbW91bnQ9LTAuNzQNCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTUyIGFtb3VudD0tMS42DQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD01NCBhbW91bnQ9LTEuMjINCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTU2IGFtb3VudD0tMC4zMg0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9NTggYW1vdW50PS0wLjY3DQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD01OSBhbW91bnQ9LTAuNjcNCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTYzIGFtb3VudD0wLjQyDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD02NCBhbW91bnQ9LTEuODYNCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTY1IGFtb3VudD0tMi4wNQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9NjcgYW1vdW50PS0wLjgzDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD03NyBhbW91bnQ9LTAuNzcNCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTkzIGFtb3VudD0wLjk5DQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD05NyBhbW91bnQ9LTIuMTQNCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTk5IGFtb3VudD0tMi43Mg0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MTAyIGFtb3VudD0tMC42MQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MTAzIGFtb3VudD0tMi40Mw0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MTA5IGFtb3VudD0tMi4yMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MTE1IGFtb3VudD0tMi4yNA0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MTE2IGFtb3VudD0tMS4xMg0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MTE3IGFtb3VudD0tMi4xMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MTE4IGFtb3VudD0tMS4zMQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MTE5IGFtb3VudD0tMS4yOA0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MTIwIGFtb3VudD0tMS4zNA0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MTIxIGFtb3VudD0tMS4yNQ0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MTIyIGFtb3VudD0tMC44Ng0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MTI1IGFtb3VudD0xLjA2DQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0xNzEgYW1vdW50PS0xLjg2DQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0xNzQgYW1vdW50PS0wLjgzDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0xODcgYW1vdW50PS0wLjk5DQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0xOTggYW1vdW50PS0yLjQzDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0yMjMgYW1vdW50PS0wLjgzDQprZXJuaW5nIGZpcnN0PTg5IHNlY29uZD0yMzYgYW1vdW50PTAuNTENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTIzOCBhbW91bnQ9MS4yMg0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9MjM5IGFtb3VudD0xLjUNCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTI0MCBhbW91bnQ9LTEuMjgNCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTI1NCBhbW91bnQ9LTAuOTkNCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTM1MyBhbW91bnQ9LTAuNw0Ka2VybmluZyBmaXJzdD04OSBzZWNvbmQ9ODIxOCBhbW91bnQ9LTEuMzENCmtlcm5pbmcgZmlyc3Q9ODkgc2Vjb25kPTg0ODIgYW1vdW50PTEuMDYNCmtlcm5pbmcgZmlyc3Q9OTAgc2Vjb25kPTQ1IGFtb3VudD0tMS4yNQ0Ka2VybmluZyBmaXJzdD05MCBzZWNvbmQ9NDggYW1vdW50PS0wLjQyDQprZXJuaW5nIGZpcnN0PTkwIHNlY29uZD01MiBhbW91bnQ9LTEuODINCmtlcm5pbmcgZmlyc3Q9OTAgc2Vjb25kPTU0IGFtb3VudD0tMC4yOQ0Ka2VybmluZyBmaXJzdD05MCBzZWNvbmQ9NjcgYW1vdW50PS0wLjU4DQprZXJuaW5nIGZpcnN0PTkwIHNlY29uZD05MyBhbW91bnQ9MC43NA0Ka2VybmluZyBmaXJzdD05MCBzZWNvbmQ9OTcgYW1vdW50PS0wLjMyDQprZXJuaW5nIGZpcnN0PTkwIHNlY29uZD05OSBhbW91bnQ9LTAuOTMNCmtlcm5pbmcgZmlyc3Q9OTAgc2Vjb25kPTEwMiBhbW91bnQ9LTAuNDgNCmtlcm5pbmcgZmlyc3Q9OTAgc2Vjb25kPTEwMyBhbW91bnQ9LTAuODYNCmtlcm5pbmcgZmlyc3Q9OTAgc2Vjb25kPTEwNSBhbW91bnQ9LTAuMTkNCmtlcm5pbmcgZmlyc3Q9OTAgc2Vjb25kPTEwOSBhbW91bnQ9LTAuNjcNCmtlcm5pbmcgZmlyc3Q9OTAgc2Vjb25kPTExNSBhbW91bnQ9LTAuMzUNCmtlcm5pbmcgZmlyc3Q9OTAgc2Vjb25kPTExNiBhbW91bnQ9LTAuNDgNCmtlcm5pbmcgZmlyc3Q9OTAgc2Vjb25kPTExNyBhbW91bnQ9LTEuMDINCmtlcm5pbmcgZmlyc3Q9OTAgc2Vjb25kPTExOCBhbW91bnQ9LTAuNDgNCmtlcm5pbmcgZmlyc3Q9OTAgc2Vjb25kPTExOSBhbW91bnQ9LTAuNDgNCmtlcm5pbmcgZmlyc3Q9OTAgc2Vjb25kPTEyMSBhbW91bnQ9LTAuNDUNCmtlcm5pbmcgZmlyc3Q9OTAgc2Vjb25kPTEyMiBhbW91bnQ9LTAuMjYNCmtlcm5pbmcgZmlyc3Q9OTAgc2Vjb25kPTEyNSBhbW91bnQ9MC43NA0Ka2VybmluZyBmaXJzdD05MCBzZWNvbmQ9MTcxIGFtb3VudD0tMS4zNA0Ka2VybmluZyBmaXJzdD05MCBzZWNvbmQ9MTc0IGFtb3VudD0tMC43NA0Ka2VybmluZyBmaXJzdD05MCBzZWNvbmQ9MjIzIGFtb3VudD0tMC41NA0Ka2VybmluZyBmaXJzdD05MCBzZWNvbmQ9MjM2IGFtb3VudD0wLjE5DQprZXJuaW5nIGZpcnN0PTkwIHNlY29uZD0yMzggYW1vdW50PTAuOTMNCmtlcm5pbmcgZmlyc3Q9OTAgc2Vjb25kPTIzOSBhbW91bnQ9MS4xOA0Ka2VybmluZyBmaXJzdD05MCBzZWNvbmQ9MjQwIGFtb3VudD0tMC42Nw0Ka2VybmluZyBmaXJzdD05MCBzZWNvbmQ9ODQ4MiBhbW91bnQ9MC43Nw0Ka2VybmluZyBmaXJzdD05MSBzZWNvbmQ9NDggYW1vdW50PS0wLjc3DQprZXJuaW5nIGZpcnN0PTkxIHNlY29uZD01MiBhbW91bnQ9LTAuOQ0Ka2VybmluZyBmaXJzdD05MSBzZWNvbmQ9NTQgYW1vdW50PS0wLjg2DQprZXJuaW5nIGZpcnN0PTkxIHNlY29uZD01NiBhbW91bnQ9LTAuMjYNCmtlcm5pbmcgZmlyc3Q9OTEgc2Vjb25kPTY1IGFtb3VudD0tMC45Mw0Ka2VybmluZyBmaXJzdD05MSBzZWNvbmQ9NjcgYW1vdW50PS0wLjk2DQprZXJuaW5nIGZpcnN0PTkxIHNlY29uZD03NCBhbW91bnQ9MS41Nw0Ka2VybmluZyBmaXJzdD05MSBzZWNvbmQ9NzcgYW1vdW50PS0wLjM4DQprZXJuaW5nIGZpcnN0PTkxIHNlY29uZD04NCBhbW91bnQ9MC43DQprZXJuaW5nIGZpcnN0PTkxIHNlY29uZD04NiBhbW91bnQ9MC45OQ0Ka2VybmluZyBmaXJzdD05MSBzZWNvbmQ9ODcgYW1vdW50PTAuODYNCmtlcm5pbmcgZmlyc3Q9OTEgc2Vjb25kPTg4IGFtb3VudD0wLjkNCmtlcm5pbmcgZmlyc3Q9OTEgc2Vjb25kPTg5IGFtb3VudD0xLjE1DQprZXJuaW5nIGZpcnN0PTkxIHNlY29uZD05NyBhbW91bnQ9LTEuMjINCmtlcm5pbmcgZmlyc3Q9OTEgc2Vjb25kPTk5IGFtb3VudD0tMS4zOA0Ka2VybmluZyBmaXJzdD05MSBzZWNvbmQ9MTA2IGFtb3VudD0wLjIyDQprZXJuaW5nIGZpcnN0PTkxIHNlY29uZD0xMDkgYW1vdW50PS0xLjM0DQprZXJuaW5nIGZpcnN0PTkxIHNlY29uZD0xMTIgYW1vdW50PS0xLjA2DQprZXJuaW5nIGZpcnN0PTkxIHNlY29uZD0xMTUgYW1vdW50PS0xLjIyDQprZXJuaW5nIGZpcnN0PTkxIHNlY29uZD0xMTYgYW1vdW50PS0xLjAyDQprZXJuaW5nIGZpcnN0PTkxIHNlY29uZD0xMTcgYW1vdW50PS0xLjMxDQprZXJuaW5nIGZpcnN0PTkxIHNlY29uZD0xMTggYW1vdW50PS0xLjI4DQprZXJuaW5nIGZpcnN0PTkxIHNlY29uZD0xMTkgYW1vdW50PS0xLjIyDQprZXJuaW5nIGZpcnN0PTkxIHNlY29uZD0xMjAgYW1vdW50PS0wLjk2DQprZXJuaW5nIGZpcnN0PTkxIHNlY29uZD0xMjEgYW1vdW50PS0xLjI4DQprZXJuaW5nIGZpcnN0PTkxIHNlY29uZD0xMjIgYW1vdW50PS0xLjE4DQprZXJuaW5nIGZpcnN0PTkxIHNlY29uZD0xOTggYW1vdW50PS0wLjQyDQprZXJuaW5nIGZpcnN0PTkxIHNlY29uZD0yMjMgYW1vdW50PS0wLjM4DQprZXJuaW5nIGZpcnN0PTkxIHNlY29uZD0yMjcgYW1vdW50PS0wLjkNCmtlcm5pbmcgZmlyc3Q9OTEgc2Vjb25kPTIzNiBhbW91bnQ9MC40OA0Ka2VybmluZyBmaXJzdD05MSBzZWNvbmQ9MjM4IGFtb3VudD0xLjA5DQprZXJuaW5nIGZpcnN0PTkxIHNlY29uZD0yMzkgYW1vdW50PTEuNDQNCmtlcm5pbmcgZmlyc3Q9OTEgc2Vjb25kPTI0MCBhbW91bnQ9LTAuOA0Ka2VybmluZyBmaXJzdD05MSBzZWNvbmQ9MjU0IGFtb3VudD0tMC4xMw0Ka2VybmluZyBmaXJzdD05MSBzZWNvbmQ9MzUzIGFtb3VudD0tMC43Nw0Ka2VybmluZyBmaXJzdD05MSBzZWNvbmQ9MzgyIGFtb3VudD0tMC4zMg0Ka2VybmluZyBmaXJzdD05NyBzZWNvbmQ9MzQgYW1vdW50PS0wLjcNCmtlcm5pbmcgZmlyc3Q9OTcgc2Vjb25kPTM4IGFtb3VudD0tMC4zNQ0Ka2VybmluZyBmaXJzdD05NyBzZWNvbmQ9NDEgYW1vdW50PS0wLjMyDQprZXJuaW5nIGZpcnN0PTk3IHNlY29uZD00MiBhbW91bnQ9LTAuOA0Ka2VybmluZyBmaXJzdD05NyBzZWNvbmQ9NDkgYW1vdW50PS0wLjcNCmtlcm5pbmcgZmlyc3Q9OTcgc2Vjb25kPTU3IGFtb3VudD0tMC4yOQ0Ka2VybmluZyBmaXJzdD05NyBzZWNvbmQ9NjMgYW1vdW50PS0wLjg2DQprZXJuaW5nIGZpcnN0PTk3IHNlY29uZD02NiBhbW91bnQ9LTAuNTENCmtlcm5pbmcgZmlyc3Q9OTcgc2Vjb25kPTY3IGFtb3VudD0tMC42MQ0Ka2VybmluZyBmaXJzdD05NyBzZWNvbmQ9NjkgYW1vdW50PS0wLjUxDQprZXJuaW5nIGZpcnN0PTk3IHNlY29uZD03NCBhbW91bnQ9LTAuNTENCmtlcm5pbmcgZmlyc3Q9OTcgc2Vjb25kPTc3IGFtb3VudD0tMC4yNg0Ka2VybmluZyBmaXJzdD05NyBzZWNvbmQ9ODMgYW1vdW50PS0wLjE5DQprZXJuaW5nIGZpcnN0PTk3IHNlY29uZD04NCBhbW91bnQ9LTIuNjYNCmtlcm5pbmcgZmlyc3Q9OTcgc2Vjb25kPTg1IGFtb3VudD0tMC45Mw0Ka2VybmluZyBmaXJzdD05NyBzZWNvbmQ9ODYgYW1vdW50PS0yLjAyDQprZXJuaW5nIGZpcnN0PTk3IHNlY29uZD04NyBhbW91bnQ9LTEuNDcNCmtlcm5pbmcgZmlyc3Q9OTcgc2Vjb25kPTg5IGFtb3VudD0tMi45MQ0Ka2VybmluZyBmaXJzdD05NyBzZWNvbmQ9OTMgYW1vdW50PS0wLjkzDQprZXJuaW5nIGZpcnN0PTk3IHNlY29uZD0xMDIgYW1vdW50PS0wLjE2DQprZXJuaW5nIGZpcnN0PTk3IHNlY29uZD0xMTYgYW1vdW50PS0wLjMyDQprZXJuaW5nIGZpcnN0PTk3IHNlY29uZD0xMTggYW1vdW50PS0wLjU4DQprZXJuaW5nIGZpcnN0PTk3IHNlY29uZD0xMTkgYW1vdW50PS0wLjQyDQprZXJuaW5nIGZpcnN0PTk3IHNlY29uZD0xMjEgYW1vdW50PS0wLjY0DQprZXJuaW5nIGZpcnN0PTk3IHNlY29uZD0xMjUgYW1vdW50PS0wLjgNCmtlcm5pbmcgZmlyc3Q9OTcgc2Vjb25kPTE3NCBhbW91bnQ9LTAuMjYNCmtlcm5pbmcgZmlyc3Q9OTcgc2Vjb25kPTIyMyBhbW91bnQ9LTAuMjINCmtlcm5pbmcgZmlyc3Q9OTcgc2Vjb25kPTgyMTYgYW1vdW50PS0yLjI0DQprZXJuaW5nIGZpcnN0PTk3IHNlY29uZD04MjE3IGFtb3VudD0tMi4zNA0Ka2VybmluZyBmaXJzdD05NyBzZWNvbmQ9ODQ4MiBhbW91bnQ9LTAuODMNCmtlcm5pbmcgZmlyc3Q9OTggc2Vjb25kPTM0IGFtb3VudD0tMC43DQprZXJuaW5nIGZpcnN0PTk4IHNlY29uZD0zOCBhbW91bnQ9LTAuMzINCmtlcm5pbmcgZmlyc3Q9OTggc2Vjb25kPTQxIGFtb3VudD0tMC45Mw0Ka2VybmluZyBmaXJzdD05OCBzZWNvbmQ9NDIgYW1vdW50PS0wLjc3DQprZXJuaW5nIGZpcnN0PTk4IHNlY29uZD00NCBhbW91bnQ9LTAuMzINCmtlcm5pbmcgZmlyc3Q9OTggc2Vjb25kPTQ2IGFtb3VudD0tMC4yOQ0Ka2VybmluZyBmaXJzdD05OCBzZWNvbmQ9NDkgYW1vdW50PS0wLjY3DQprZXJuaW5nIGZpcnN0PTk4IHNlY29uZD01MCBhbW91bnQ9LTAuNzcNCmtlcm5pbmcgZmlyc3Q9OTggc2Vjb25kPTU1IGFtb3VudD0tMC45Ng0Ka2VybmluZyBmaXJzdD05OCBzZWNvbmQ9NjMgYW1vdW50PS0xLjAyDQprZXJuaW5nIGZpcnN0PTk4IHNlY29uZD02NSBhbW91bnQ9LTAuNTENCmtlcm5pbmcgZmlyc3Q9OTggc2Vjb25kPTY2IGFtb3VudD0tMC42MQ0Ka2VybmluZyBmaXJzdD05OCBzZWNvbmQ9NjcgYW1vdW50PS0wLjMyDQprZXJuaW5nIGZpcnN0PTk4IHNlY29uZD02OSBhbW91bnQ9LTAuNjENCmtlcm5pbmcgZmlyc3Q9OTggc2Vjb25kPTc0IGFtb3VudD0tMC42MQ0Ka2VybmluZyBmaXJzdD05OCBzZWNvbmQ9NzcgYW1vdW50PS0wLjU0DQprZXJuaW5nIGZpcnN0PTk4IHNlY29uZD04MyBhbW91bnQ9LTAuNjENCmtlcm5pbmcgZmlyc3Q9OTggc2Vjb25kPTg0IGFtb3VudD0tMi43Mg0Ka2VybmluZyBmaXJzdD05OCBzZWNvbmQ9ODUgYW1vdW50PS0wLjU4DQprZXJuaW5nIGZpcnN0PTk4IHNlY29uZD04NiBhbW91bnQ9LTIuMDINCmtlcm5pbmcgZmlyc3Q9OTggc2Vjb25kPTg3IGFtb3VudD0tMS40MQ0Ka2VybmluZyBmaXJzdD05OCBzZWNvbmQ9ODggYW1vdW50PS0xLjI1DQprZXJuaW5nIGZpcnN0PTk4IHNlY29uZD04OSBhbW91bnQ9LTIuODUNCmtlcm5pbmcgZmlyc3Q9OTggc2Vjb25kPTkwIGFtb3VudD0tMC45Mw0Ka2VybmluZyBmaXJzdD05OCBzZWNvbmQ9OTMgYW1vdW50PS0xLjI1DQprZXJuaW5nIGZpcnN0PTk4IHNlY29uZD0xMDIgYW1vdW50PS0wLjE2DQprZXJuaW5nIGZpcnN0PTk4IHNlY29uZD0xMTYgYW1vdW50PS0wLjE5DQprZXJuaW5nIGZpcnN0PTk4IHNlY29uZD0xMTggYW1vdW50PS0wLjI5DQprZXJuaW5nIGZpcnN0PTk4IHNlY29uZD0xMTkgYW1vdW50PS0wLjE2DQprZXJuaW5nIGZpcnN0PTk4IHNlY29uZD0xMjAgYW1vdW50PS0wLjU4DQprZXJuaW5nIGZpcnN0PTk4IHNlY29uZD0xMjEgYW1vdW50PS0wLjM1DQprZXJuaW5nIGZpcnN0PTk4IHNlY29uZD0xMjIgYW1vdW50PS0wLjMyDQprZXJuaW5nIGZpcnN0PTk4IHNlY29uZD0xMjUgYW1vdW50PS0wLjk2DQprZXJuaW5nIGZpcnN0PTk4IHNlY29uZD0xODcgYW1vdW50PS0wLjI5DQprZXJuaW5nIGZpcnN0PTk4IHNlY29uZD0yMjMgYW1vdW50PS0wLjI2DQprZXJuaW5nIGZpcnN0PTk4IHNlY29uZD04MjE2IGFtb3VudD0tMi40DQprZXJuaW5nIGZpcnN0PTk4IHNlY29uZD04MjE3IGFtb3VudD0tMi41DQprZXJuaW5nIGZpcnN0PTk4IHNlY29uZD04MjE4IGFtb3VudD0tMC4zMg0Ka2VybmluZyBmaXJzdD05OCBzZWNvbmQ9ODQ4MiBhbW91bnQ9LTAuNw0Ka2VybmluZyBmaXJzdD05OSBzZWNvbmQ9MzggYW1vdW50PS0wLjUxDQprZXJuaW5nIGZpcnN0PTk5IHNlY29uZD00MSBhbW91bnQ9LTAuMzgNCmtlcm5pbmcgZmlyc3Q9OTkgc2Vjb25kPTQ1IGFtb3VudD0tMS4xOA0Ka2VybmluZyBmaXJzdD05OSBzZWNvbmQ9NTIgYW1vdW50PS0wLjgNCmtlcm5pbmcgZmlyc3Q9OTkgc2Vjb25kPTU1IGFtb3VudD0tMC4zNQ0Ka2VybmluZyBmaXJzdD05OSBzZWNvbmQ9NjMgYW1vdW50PS0wLjkNCmtlcm5pbmcgZmlyc3Q9OTkgc2Vjb25kPTY2IGFtb3VudD0tMC4yOQ0Ka2VybmluZyBmaXJzdD05OSBzZWNvbmQ9NjcgYW1vdW50PS0wLjM4DQprZXJuaW5nIGZpcnN0PTk5IHNlY29uZD02OSBhbW91bnQ9LTAuMjkNCmtlcm5pbmcgZmlyc3Q9OTkgc2Vjb25kPTc0IGFtb3VudD0tMC4yOQ0Ka2VybmluZyBmaXJzdD05OSBzZWNvbmQ9NzcgYW1vdW50PS0wLjE2DQprZXJuaW5nIGZpcnN0PTk5IHNlY29uZD04MyBhbW91bnQ9LTAuMzgNCmtlcm5pbmcgZmlyc3Q9OTkgc2Vjb25kPTg0IGFtb3VudD0tMi4xMQ0Ka2VybmluZyBmaXJzdD05OSBzZWNvbmQ9ODUgYW1vdW50PS0wLjQyDQprZXJuaW5nIGZpcnN0PTk5IHNlY29uZD04NiBhbW91bnQ9LTAuNjQNCmtlcm5pbmcgZmlyc3Q9OTkgc2Vjb25kPTg3IGFtb3VudD0tMC40OA0Ka2VybmluZyBmaXJzdD05OSBzZWNvbmQ9ODkgYW1vdW50PS0xLjIyDQprZXJuaW5nIGZpcnN0PTk5IHNlY29uZD05MyBhbW91bnQ9LTAuNzcNCmtlcm5pbmcgZmlyc3Q9OTkgc2Vjb25kPTk5IGFtb3VudD0tMC4yMg0Ka2VybmluZyBmaXJzdD05OSBzZWNvbmQ9MTI1IGFtb3VudD0tMC41NA0Ka2VybmluZyBmaXJzdD05OSBzZWNvbmQ9MTcxIGFtb3VudD0tMC40Mg0Ka2VybmluZyBmaXJzdD05OSBzZWNvbmQ9MjQwIGFtb3VudD0tMC4xNg0Ka2VybmluZyBmaXJzdD05OSBzZWNvbmQ9ODIxNiBhbW91bnQ9LTEuMjgNCmtlcm5pbmcgZmlyc3Q9OTkgc2Vjb25kPTgyMTcgYW1vdW50PS0xLjM4DQprZXJuaW5nIGZpcnN0PTk5IHNlY29uZD04NDgyIGFtb3VudD0tMC4zNQ0Ka2VybmluZyBmaXJzdD0xMDAgc2Vjb25kPTM4IGFtb3VudD0tMC4zOA0Ka2VybmluZyBmaXJzdD0xMDAgc2Vjb25kPTY1IGFtb3VudD0tMC4yMg0Ka2VybmluZyBmaXJzdD0xMDAgc2Vjb25kPTY2IGFtb3VudD0tMC40NQ0Ka2VybmluZyBmaXJzdD0xMDAgc2Vjb25kPTY3IGFtb3VudD0tMC4zNQ0Ka2VybmluZyBmaXJzdD0xMDAgc2Vjb25kPTY5IGFtb3VudD0tMC40NQ0Ka2VybmluZyBmaXJzdD0xMDAgc2Vjb25kPTc0IGFtb3VudD0tMC40NQ0Ka2VybmluZyBmaXJzdD0xMDAgc2Vjb25kPTc3IGFtb3VudD0tMC41MQ0Ka2VybmluZyBmaXJzdD0xMDAgc2Vjb25kPTgzIGFtb3VudD0tMC4zMg0Ka2VybmluZyBmaXJzdD0xMDAgc2Vjb25kPTg0IGFtb3VudD0tMC4zNQ0Ka2VybmluZyBmaXJzdD0xMDAgc2Vjb25kPTg1IGFtb3VudD0tMC41MQ0Ka2VybmluZyBmaXJzdD0xMDAgc2Vjb25kPTg2IGFtb3VudD0tMC4xOQ0Ka2VybmluZyBmaXJzdD0xMDAgc2Vjb25kPTg3IGFtb3VudD0tMC4yNg0Ka2VybmluZyBmaXJzdD0xMDAgc2Vjb25kPTg5IGFtb3VudD0tMC4xNg0Ka2VybmluZyBmaXJzdD0xMDAgc2Vjb25kPTkwIGFtb3VudD0tMC4zNQ0Ka2VybmluZyBmaXJzdD0xMDEgc2Vjb25kPTM0IGFtb3VudD0tMC40OA0Ka2VybmluZyBmaXJzdD0xMDEgc2Vjb25kPTM4IGFtb3VudD0tMC4zMg0Ka2VybmluZyBmaXJzdD0xMDEgc2Vjb25kPTQxIGFtb3VudD0tMC44Mw0Ka2VybmluZyBmaXJzdD0xMDEgc2Vjb25kPTQyIGFtb3VudD0tMC41OA0Ka2VybmluZyBmaXJzdD0xMDEgc2Vjb25kPTQ5IGFtb3VudD0tMC42Nw0Ka2VybmluZyBmaXJzdD0xMDEgc2Vjb25kPTUwIGFtb3VudD0tMC4zNQ0Ka2VybmluZyBmaXJzdD0xMDEgc2Vjb25kPTU1IGFtb3VudD0tMC44Mw0Ka2VybmluZyBmaXJzdD0xMDEgc2Vjb25kPTYzIGFtb3VudD0tMS4wNg0Ka2VybmluZyBmaXJzdD0xMDEgc2Vjb25kPTY1IGFtb3VudD0tMC4xNg0Ka2VybmluZyBmaXJzdD0xMDEgc2Vjb25kPTY2IGFtb3VudD0tMC40OA0Ka2VybmluZyBmaXJzdD0xMDEgc2Vjb25kPTY3IGFtb3VudD0tMC4xOQ0Ka2VybmluZyBmaXJzdD0xMDEgc2Vjb25kPTY5IGFtb3VudD0tMC40OA0Ka2VybmluZyBmaXJzdD0xMDEgc2Vjb25kPTc0IGFtb3VudD0tMC40OA0Ka2VybmluZyBmaXJzdD0xMDEgc2Vjb25kPTc3IGFtb3VudD0tMC40Mg0Ka2VybmluZyBmaXJzdD0xMDEgc2Vjb25kPTgzIGFtb3VudD0tMC40OA0Ka2VybmluZyBmaXJzdD0xMDEgc2Vjb25kPTg0IGFtb3VudD0tMi4yMQ0Ka2VybmluZyBmaXJzdD0xMDEgc2Vjb25kPTg1IGFtb3VudD0tMC41MQ0Ka2VybmluZyBmaXJzdD0xMDEgc2Vjb25kPTg2IGFtb3VudD0tMS41DQprZXJuaW5nIGZpcnN0PTEwMSBzZWNvbmQ9ODcgYW1vdW50PS0xLjM4DQprZXJuaW5nIGZpcnN0PTEwMSBzZWNvbmQ9ODggYW1vdW50PS0wLjQyDQprZXJuaW5nIGZpcnN0PTEwMSBzZWNvbmQ9ODkgYW1vdW50PS0yLjYyDQprZXJuaW5nIGZpcnN0PTEwMSBzZWNvbmQ9OTAgYW1vdW50PS0wLjQyDQprZXJuaW5nIGZpcnN0PTEwMSBzZWNvbmQ9OTMgYW1vdW50PS0xLjE1DQprZXJuaW5nIGZpcnN0PTEwMSBzZWNvbmQ9MTE4IGFtb3VudD0tMC4xMw0Ka2VybmluZyBmaXJzdD0xMDEgc2Vjb25kPTEyMCBhbW91bnQ9LTAuMTYNCmtlcm5pbmcgZmlyc3Q9MTAxIHNlY29uZD0xMjEgYW1vdW50PS0wLjE2DQprZXJuaW5nIGZpcnN0PTEwMSBzZWNvbmQ9MTI1IGFtb3VudD0tMC45Mw0Ka2VybmluZyBmaXJzdD0xMDEgc2Vjb25kPTgyMTYgYW1vdW50PS0yLjE0DQprZXJuaW5nIGZpcnN0PTEwMSBzZWNvbmQ9ODIxNyBhbW91bnQ9LTIuMjQNCmtlcm5pbmcgZmlyc3Q9MTAxIHNlY29uZD04NDgyIGFtb3VudD0tMC42MQ0Ka2VybmluZyBmaXJzdD0xMDIgc2Vjb25kPTM4IGFtb3VudD0tMC42Nw0Ka2VybmluZyBmaXJzdD0xMDIgc2Vjb25kPTQ0IGFtb3VudD0tMC44Ng0Ka2VybmluZyBmaXJzdD0xMDIgc2Vjb25kPTQ1IGFtb3VudD0tMC43Nw0Ka2VybmluZyBmaXJzdD0xMDIgc2Vjb25kPTQ2IGFtb3VudD0tMC44Ng0Ka2VybmluZyBmaXJzdD0xMDIgc2Vjb25kPTQ3IGFtb3VudD0tMC43DQprZXJuaW5nIGZpcnN0PTEwMiBzZWNvbmQ9NTIgYW1vdW50PS0wLjM4DQprZXJuaW5nIGZpcnN0PTEwMiBzZWNvbmQ9NjQgYW1vdW50PS0wLjU0DQprZXJuaW5nIGZpcnN0PTEwMiBzZWNvbmQ9NjUgYW1vdW50PS0xLjQ0DQprZXJuaW5nIGZpcnN0PTEwMiBzZWNvbmQ9NjYgYW1vdW50PS0wLjM4DQprZXJuaW5nIGZpcnN0PTEwMiBzZWNvbmQ9NjkgYW1vdW50PS0wLjM4DQprZXJuaW5nIGZpcnN0PTEwMiBzZWNvbmQ9NzQgYW1vdW50PS0wLjM4DQprZXJuaW5nIGZpcnN0PTEwMiBzZWNvbmQ9NzcgYW1vdW50PS0wLjg2DQprZXJuaW5nIGZpcnN0PTEwMiBzZWNvbmQ9ODUgYW1vdW50PS0wLjI5DQprZXJuaW5nIGZpcnN0PTEwMiBzZWNvbmQ9OTAgYW1vdW50PS0wLjQyDQprZXJuaW5nIGZpcnN0PTEwMiBzZWNvbmQ9OTcgYW1vdW50PS0wLjE2DQprZXJuaW5nIGZpcnN0PTEwMiBzZWNvbmQ9OTkgYW1vdW50PS0wLjMyDQprZXJuaW5nIGZpcnN0PTEwMiBzZWNvbmQ9MTAzIGFtb3VudD0tMC4xMw0Ka2VybmluZyBmaXJzdD0xMDIgc2Vjb25kPTEyNSBhbW91bnQ9MC4yNg0Ka2VybmluZyBmaXJzdD0xMDIgc2Vjb25kPTE3MSBhbW91bnQ9LTAuNTQNCmtlcm5pbmcgZmlyc3Q9MTAyIHNlY29uZD0yNDAgYW1vdW50PS0xLjAyDQprZXJuaW5nIGZpcnN0PTEwMiBzZWNvbmQ9ODIxOCBhbW91bnQ9LTAuODYNCmtlcm5pbmcgZmlyc3Q9MTAzIHNlY29uZD0zOCBhbW91bnQ9LTAuMzgNCmtlcm5pbmcgZmlyc3Q9MTAzIHNlY29uZD00MSBhbW91bnQ9MC4xNg0Ka2VybmluZyBmaXJzdD0xMDMgc2Vjb25kPTQ3IGFtb3VudD0wLjQ1DQprZXJuaW5nIGZpcnN0PTEwMyBzZWNvbmQ9NTUgYW1vdW50PS0wLjk5DQprZXJuaW5nIGZpcnN0PTEwMyBzZWNvbmQ9NjMgYW1vdW50PS0xLjI1DQprZXJuaW5nIGZpcnN0PTEwMyBzZWNvbmQ9NjUgYW1vdW50PS0wLjIyDQprZXJuaW5nIGZpcnN0PTEwMyBzZWNvbmQ9NjYgYW1vdW50PS0wLjM1DQprZXJuaW5nIGZpcnN0PTEwMyBzZWNvbmQ9NjkgYW1vdW50PS0wLjM1DQprZXJuaW5nIGZpcnN0PTEwMyBzZWNvbmQ9NzQgYW1vdW50PTEuNDQNCmtlcm5pbmcgZmlyc3Q9MTAzIHNlY29uZD03NyBhbW91bnQ9LTAuNDUNCmtlcm5pbmcgZmlyc3Q9MTAzIHNlY29uZD04NCBhbW91bnQ9LTEuNTQNCmtlcm5pbmcgZmlyc3Q9MTAzIHNlY29uZD04NSBhbW91bnQ9LTAuMzINCmtlcm5pbmcgZmlyc3Q9MTAzIHNlY29uZD04NiBhbW91bnQ9LTAuMjkNCmtlcm5pbmcgZmlyc3Q9MTAzIHNlY29uZD04NyBhbW91bnQ9LTAuMTkNCmtlcm5pbmcgZmlyc3Q9MTAzIHNlY29uZD04OCBhbW91bnQ9LTAuMTkNCmtlcm5pbmcgZmlyc3Q9MTAzIHNlY29uZD04OSBhbW91bnQ9LTAuNTgNCmtlcm5pbmcgZmlyc3Q9MTAzIHNlY29uZD05MCBhbW91bnQ9LTAuMzUNCmtlcm5pbmcgZmlyc3Q9MTAzIHNlY29uZD05MyBhbW91bnQ9MC44DQprZXJuaW5nIGZpcnN0PTEwMyBzZWNvbmQ9MTA2IGFtb3VudD0wLjYxDQprZXJuaW5nIGZpcnN0PTEwMyBzZWNvbmQ9MTI1IGFtb3VudD0wLjkzDQprZXJuaW5nIGZpcnN0PTEwMyBzZWNvbmQ9MjQwIGFtb3VudD0tMC4xOQ0Ka2VybmluZyBmaXJzdD0xMDMgc2Vjb25kPTgyMTYgYW1vdW50PS0xLjA2DQprZXJuaW5nIGZpcnN0PTEwMyBzZWNvbmQ9ODIxNyBhbW91bnQ9LTEuMTINCmtlcm5pbmcgZmlyc3Q9MTA0IHNlY29uZD0zMyBhbW91bnQ9LTAuMjYNCmtlcm5pbmcgZmlyc3Q9MTA0IHNlY29uZD0zNCBhbW91bnQ9LTAuNTgNCmtlcm5pbmcgZmlyc3Q9MTA0IHNlY29uZD0zOCBhbW91bnQ9LTAuMzUNCmtlcm5pbmcgZmlyc3Q9MTA0IHNlY29uZD00MSBhbW91bnQ9LTAuNzcNCmtlcm5pbmcgZmlyc3Q9MTA0IHNlY29uZD00MiBhbW91bnQ9LTAuNjcNCmtlcm5pbmcgZmlyc3Q9MTA0IHNlY29uZD00OSBhbW91bnQ9LTAuOA0Ka2VybmluZyBmaXJzdD0xMDQgc2Vjb25kPTU1IGFtb3VudD0tMC43NA0Ka2VybmluZyBmaXJzdD0xMDQgc2Vjb25kPTYzIGFtb3VudD0tMS4wMg0Ka2VybmluZyBmaXJzdD0xMDQgc2Vjb25kPTY1IGFtb3VudD0tMC4xOQ0Ka2VybmluZyBmaXJzdD0xMDQgc2Vjb25kPTY2IGFtb3VudD0tMC41OA0Ka2VybmluZyBmaXJzdD0xMDQgc2Vjb25kPTY3IGFtb3VudD0tMC40Mg0Ka2VybmluZyBmaXJzdD0xMDQgc2Vjb25kPTY5IGFtb3VudD0tMC41OA0Ka2VybmluZyBmaXJzdD0xMDQgc2Vjb25kPTc0IGFtb3VudD0tMC41OA0Ka2VybmluZyBmaXJzdD0xMDQgc2Vjb25kPTc3IGFtb3VudD0tMC40OA0Ka2VybmluZyBmaXJzdD0xMDQgc2Vjb25kPTgzIGFtb3VudD0tMC40OA0Ka2VybmluZyBmaXJzdD0xMDQgc2Vjb25kPTg0IGFtb3VudD0tMy4wMQ0Ka2VybmluZyBmaXJzdD0xMDQgc2Vjb25kPTg1IGFtb3VudD0tMC44DQprZXJuaW5nIGZpcnN0PTEwNCBzZWNvbmQ9ODYgYW1vdW50PS0xLjg2DQprZXJuaW5nIGZpcnN0PTEwNCBzZWNvbmQ9ODcgYW1vdW50PS0xLjM0DQprZXJuaW5nIGZpcnN0PTEwNCBzZWNvbmQ9ODggYW1vdW50PS0wLjIyDQprZXJuaW5nIGZpcnN0PTEwNCBzZWNvbmQ9ODkgYW1vdW50PS0yLjk4DQprZXJuaW5nIGZpcnN0PTEwNCBzZWNvbmQ9OTAgYW1vdW50PS0wLjM1DQprZXJuaW5nIGZpcnN0PTEwNCBzZWNvbmQ9OTMgYW1vdW50PS0xLjI4DQprZXJuaW5nIGZpcnN0PTEwNCBzZWNvbmQ9MTAyIGFtb3VudD0tMC4xNg0Ka2VybmluZyBmaXJzdD0xMDQgc2Vjb25kPTExNiBhbW91bnQ9LTAuMjYNCmtlcm5pbmcgZmlyc3Q9MTA0IHNlY29uZD0xMTggYW1vdW50PS0wLjQyDQprZXJuaW5nIGZpcnN0PTEwNCBzZWNvbmQ9MTE5IGFtb3VudD0tMC4yNg0Ka2VybmluZyBmaXJzdD0xMDQgc2Vjb25kPTEyMSBhbW91bnQ9LTAuNDUNCmtlcm5pbmcgZmlyc3Q9MTA0IHNlY29uZD0xMjUgYW1vdW50PS0wLjk5DQprZXJuaW5nIGZpcnN0PTEwNCBzZWNvbmQ9MjIzIGFtb3VudD0tMC4yNg0Ka2VybmluZyBmaXJzdD0xMDQgc2Vjb25kPTgyMTYgYW1vdW50PS0yLjIxDQprZXJuaW5nIGZpcnN0PTEwNCBzZWNvbmQ9ODIxNyBhbW91bnQ9LTIuMw0Ka2VybmluZyBmaXJzdD0xMDQgc2Vjb25kPTg0ODIgYW1vdW50PS0wLjY3DQprZXJuaW5nIGZpcnN0PTEwNSBzZWNvbmQ9MzggYW1vdW50PS0wLjM4DQprZXJuaW5nIGZpcnN0PTEwNSBzZWNvbmQ9NjUgYW1vdW50PS0wLjI2DQprZXJuaW5nIGZpcnN0PTEwNSBzZWNvbmQ9NjYgYW1vdW50PS0wLjQ1DQprZXJuaW5nIGZpcnN0PTEwNSBzZWNvbmQ9NjcgYW1vdW50PS0wLjM4DQprZXJuaW5nIGZpcnN0PTEwNSBzZWNvbmQ9NjkgYW1vdW50PS0wLjQ1DQprZXJuaW5nIGZpcnN0PTEwNSBzZWNvbmQ9NzQgYW1vdW50PS0wLjQ1DQprZXJuaW5nIGZpcnN0PTEwNSBzZWNvbmQ9NzcgYW1vdW50PS0wLjQ4DQprZXJuaW5nIGZpcnN0PTEwNSBzZWNvbmQ9ODMgYW1vdW50PS0wLjM4DQprZXJuaW5nIGZpcnN0PTEwNSBzZWNvbmQ9ODQgYW1vdW50PS0wLjQ1DQprZXJuaW5nIGZpcnN0PTEwNSBzZWNvbmQ9ODUgYW1vdW50PS0wLjU4DQprZXJuaW5nIGZpcnN0PTEwNSBzZWNvbmQ9ODYgYW1vdW50PS0wLjI5DQprZXJuaW5nIGZpcnN0PTEwNSBzZWNvbmQ9ODcgYW1vdW50PS0wLjMyDQprZXJuaW5nIGZpcnN0PTEwNSBzZWNvbmQ9ODkgYW1vdW50PS0wLjI5DQprZXJuaW5nIGZpcnN0PTEwNSBzZWNvbmQ9OTAgYW1vdW50PS0wLjM1DQprZXJuaW5nIGZpcnN0PTEwNyBzZWNvbmQ9MzggYW1vdW50PS0wLjQ1DQprZXJuaW5nIGZpcnN0PTEwNyBzZWNvbmQ9NDUgYW1vdW50PS0wLjQ4DQprZXJuaW5nIGZpcnN0PTEwNyBzZWNvbmQ9NjMgYW1vdW50PS0wLjYxDQprZXJuaW5nIGZpcnN0PTEwNyBzZWNvbmQ9NjcgYW1vdW50PS0wLjcNCmtlcm5pbmcgZmlyc3Q9MTA3IHNlY29uZD04NCBhbW91bnQ9LTIuODgNCmtlcm5pbmcgZmlyc3Q9MTA3IHNlY29uZD04NSBhbW91bnQ9LTAuMTYNCmtlcm5pbmcgZmlyc3Q9MTA3IHNlY29uZD04NiBhbW91bnQ9LTAuMzUNCmtlcm5pbmcgZmlyc3Q9MTA3IHNlY29uZD04NyBhbW91bnQ9LTAuMTYNCmtlcm5pbmcgZmlyc3Q9MTA3IHNlY29uZD04OSBhbW91bnQ9LTEuMjUNCmtlcm5pbmcgZmlyc3Q9MTA3IHNlY29uZD05MyBhbW91bnQ9LTAuNTQNCmtlcm5pbmcgZmlyc3Q9MTA3IHNlY29uZD05NyBhbW91bnQ9LTAuMTYNCmtlcm5pbmcgZmlyc3Q9MTA3IHNlY29uZD05OSBhbW91bnQ9LTAuNw0Ka2VybmluZyBmaXJzdD0xMDcgc2Vjb25kPTEwMyBhbW91bnQ9LTAuNTgNCmtlcm5pbmcgZmlyc3Q9MTA3IHNlY29uZD0xNzEgYW1vdW50PS0wLjU4DQprZXJuaW5nIGZpcnN0PTEwNyBzZWNvbmQ9MjQwIGFtb3VudD0tMC44Mw0Ka2VybmluZyBmaXJzdD0xMDcgc2Vjb25kPTgyMTYgYW1vdW50PS0wLjg2DQprZXJuaW5nIGZpcnN0PTEwNyBzZWNvbmQ9ODIxNyBhbW91bnQ9LTAuOTMNCmtlcm5pbmcgZmlyc3Q9MTA4IHNlY29uZD0zNCBhbW91bnQ9LTAuMjkNCmtlcm5pbmcgZmlyc3Q9MTA4IHNlY29uZD0zOCBhbW91bnQ9LTAuMzgNCmtlcm5pbmcgZmlyc3Q9MTA4IHNlY29uZD00MiBhbW91bnQ9LTAuMzINCmtlcm5pbmcgZmlyc3Q9MTA4IHNlY29uZD02NiBhbW91bnQ9LTAuNTENCmtlcm5pbmcgZmlyc3Q9MTA4IHNlY29uZD02NyBhbW91bnQ9LTAuNjENCmtlcm5pbmcgZmlyc3Q9MTA4IHNlY29uZD02OSBhbW91bnQ9LTAuNTENCmtlcm5pbmcgZmlyc3Q9MTA4IHNlY29uZD03NCBhbW91bnQ9LTAuNTENCmtlcm5pbmcgZmlyc3Q9MTA4IHNlY29uZD03NyBhbW91bnQ9LTAuMjYNCmtlcm5pbmcgZmlyc3Q9MTA4IHNlY29uZD04NCBhbW91bnQ9LTAuNw0Ka2VybmluZyBmaXJzdD0xMDggc2Vjb25kPTg1IGFtb3VudD0tMC45DQprZXJuaW5nIGZpcnN0PTEwOCBzZWNvbmQ9ODYgYW1vdW50PS0wLjU0DQprZXJuaW5nIGZpcnN0PTEwOCBzZWNvbmQ9ODcgYW1vdW50PS0wLjYxDQprZXJuaW5nIGZpcnN0PTEwOCBzZWNvbmQ9ODkgYW1vdW50PS0wLjQ4DQprZXJuaW5nIGZpcnN0PTEwOCBzZWNvbmQ9OTkgYW1vdW50PS0wLjE2DQprZXJuaW5nIGZpcnN0PTEwOCBzZWNvbmQ9MTE2IGFtb3VudD0tMC4xNg0Ka2VybmluZyBmaXJzdD0xMDggc2Vjb25kPTExOCBhbW91bnQ9LTAuMjINCmtlcm5pbmcgZmlyc3Q9MTA4IHNlY29uZD0xMTkgYW1vdW50PS0wLjE2DQprZXJuaW5nIGZpcnN0PTEwOCBzZWNvbmQ9MTIxIGFtb3VudD0tMC4yMg0Ka2VybmluZyBmaXJzdD0xMDggc2Vjb25kPTE3MSBhbW91bnQ9LTAuMjkNCmtlcm5pbmcgZmlyc3Q9MTA4IHNlY29uZD04MjE2IGFtb3VudD0tMC4zNQ0Ka2VybmluZyBmaXJzdD0xMDggc2Vjb25kPTgyMTcgYW1vdW50PS0wLjMyDQprZXJuaW5nIGZpcnN0PTExMSBzZWNvbmQ9MzQgYW1vdW50PS0wLjY0DQprZXJuaW5nIGZpcnN0PTExMSBzZWNvbmQ9MzggYW1vdW50PS0wLjMyDQprZXJuaW5nIGZpcnN0PTExMSBzZWNvbmQ9NDEgYW1vdW50PS0xLjAyDQprZXJuaW5nIGZpcnN0PTExMSBzZWNvbmQ9NDIgYW1vdW50PS0wLjcNCmtlcm5pbmcgZmlyc3Q9MTExIHNlY29uZD00OSBhbW91bnQ9LTAuODMNCmtlcm5pbmcgZmlyc3Q9MTExIHNlY29uZD01MCBhbW91bnQ9LTAuODYNCmtlcm5pbmcgZmlyc3Q9MTExIHNlY29uZD01NSBhbW91bnQ9LTEuMDYNCmtlcm5pbmcgZmlyc3Q9MTExIHNlY29uZD02MyBhbW91bnQ9LTEuMDkNCmtlcm5pbmcgZmlyc3Q9MTExIHNlY29uZD02NSBhbW91bnQ9LTAuNTENCmtlcm5pbmcgZmlyc3Q9MTExIHNlY29uZD02NiBhbW91bnQ9LTAuNjENCmtlcm5pbmcgZmlyc3Q9MTExIHNlY29uZD02NyBhbW91bnQ9LTAuMzINCmtlcm5pbmcgZmlyc3Q9MTExIHNlY29uZD02OSBhbW91bnQ9LTAuNjENCmtlcm5pbmcgZmlyc3Q9MTExIHNlY29uZD03NCBhbW91bnQ9LTAuNjENCmtlcm5pbmcgZmlyc3Q9MTExIHNlY29uZD03NyBhbW91bnQ9LTAuNTQNCmtlcm5pbmcgZmlyc3Q9MTExIHNlY29uZD04MyBhbW91bnQ9LTAuNTgNCmtlcm5pbmcgZmlyc3Q9MTExIHNlY29uZD04NCBhbW91bnQ9LTIuNjYNCmtlcm5pbmcgZmlyc3Q9MTExIHNlY29uZD04NSBhbW91bnQ9LTAuNTgNCmtlcm5pbmcgZmlyc3Q9MTExIHNlY29uZD04NiBhbW91bnQ9LTIuMDUNCmtlcm5pbmcgZmlyc3Q9MTExIHNlY29uZD04NyBhbW91bnQ9LTEuNDENCmtlcm5pbmcgZmlyc3Q9MTExIHNlY29uZD04OCBhbW91bnQ9LTEuMjINCmtlcm5pbmcgZmlyc3Q9MTExIHNlY29uZD04OSBhbW91bnQ9LTIuODUNCmtlcm5pbmcgZmlyc3Q9MTExIHNlY29uZD05MCBhbW91bnQ9LTAuOTMNCmtlcm5pbmcgZmlyc3Q9MTExIHNlY29uZD05MyBhbW91bnQ9LTEuMzgNCmtlcm5pbmcgZmlyc3Q9MTExIHNlY29uZD0xMDIgYW1vdW50PS0wLjE2DQprZXJuaW5nIGZpcnN0PTExMSBzZWNvbmQ9MTE2IGFtb3VudD0tMC4yMg0Ka2VybmluZyBmaXJzdD0xMTEgc2Vjb25kPTExOCBhbW91bnQ9LTAuMjkNCmtlcm5pbmcgZmlyc3Q9MTExIHNlY29uZD0xMTkgYW1vdW50PS0wLjE2DQprZXJuaW5nIGZpcnN0PTExMSBzZWNvbmQ9MTIwIGFtb3VudD0tMC42MQ0Ka2VybmluZyBmaXJzdD0xMTEgc2Vjb25kPTEyMSBhbW91bnQ9LTAuMzUNCmtlcm5pbmcgZmlyc3Q9MTExIHNlY29uZD0xMjIgYW1vdW50PS0wLjMyDQprZXJuaW5nIGZpcnN0PTExMSBzZWNvbmQ9MTI1IGFtb3VudD0tMS4wOQ0Ka2VybmluZyBmaXJzdD0xMTEgc2Vjb25kPTE4NyBhbW91bnQ9LTAuMjkNCmtlcm5pbmcgZmlyc3Q9MTExIHNlY29uZD0yMjMgYW1vdW50PS0wLjI2DQprZXJuaW5nIGZpcnN0PTExMSBzZWNvbmQ9ODIxNiBhbW91bnQ9LTIuMzcNCmtlcm5pbmcgZmlyc3Q9MTExIHNlY29uZD04MjE3IGFtb3VudD0tMi40Ng0Ka2VybmluZyBmaXJzdD0xMTEgc2Vjb25kPTg0ODIgYW1vdW50PS0wLjY0DQprZXJuaW5nIGZpcnN0PTExMyBzZWNvbmQ9MzggYW1vdW50PS0wLjM4DQprZXJuaW5nIGZpcnN0PTExMyBzZWNvbmQ9NDEgYW1vdW50PS0wLjc0DQprZXJuaW5nIGZpcnN0PTExMyBzZWNvbmQ9NDIgYW1vdW50PS0wLjM4DQprZXJuaW5nIGZpcnN0PTExMyBzZWNvbmQ9NTUgYW1vdW50PS0wLjc3DQprZXJuaW5nIGZpcnN0PTExMyBzZWNvbmQ9NjMgYW1vdW50PS0xLjA2DQprZXJuaW5nIGZpcnN0PTExMyBzZWNvbmQ9NjUgYW1vdW50PS0wLjI2DQprZXJuaW5nIGZpcnN0PTExMyBzZWNvbmQ9NjYgYW1vdW50PS0wLjQ1DQprZXJuaW5nIGZpcnN0PTExMyBzZWNvbmQ9NjcgYW1vdW50PS0wLjM4DQprZXJuaW5nIGZpcnN0PTExMyBzZWNvbmQ9NjkgYW1vdW50PS0wLjQ1DQprZXJuaW5nIGZpcnN0PTExMyBzZWNvbmQ9NzQgYW1vdW50PS0wLjQ1DQprZXJuaW5nIGZpcnN0PTExMyBzZWNvbmQ9NzcgYW1vdW50PS0wLjQ4DQprZXJuaW5nIGZpcnN0PTExMyBzZWNvbmQ9ODMgYW1vdW50PS0wLjQyDQprZXJuaW5nIGZpcnN0PTExMyBzZWNvbmQ9ODQgYW1vdW50PS0yLjk0DQprZXJuaW5nIGZpcnN0PTExMyBzZWNvbmQ9ODUgYW1vdW50PS0wLjY3DQprZXJuaW5nIGZpcnN0PTExMyBzZWNvbmQ9ODYgYW1vdW50PS0xLjI4DQprZXJuaW5nIGZpcnN0PTExMyBzZWNvbmQ9ODcgYW1vdW50PS0xLjIyDQprZXJuaW5nIGZpcnN0PTExMyBzZWNvbmQ9ODggYW1vdW50PS0wLjMyDQprZXJuaW5nIGZpcnN0PTExMyBzZWNvbmQ9ODkgYW1vdW50PS0yLjM0DQprZXJuaW5nIGZpcnN0PTExMyBzZWNvbmQ9OTAgYW1vdW50PS0wLjQ1DQprZXJuaW5nIGZpcnN0PTExMyBzZWNvbmQ9OTMgYW1vdW50PS0xLjMxDQprZXJuaW5nIGZpcnN0PTExMyBzZWNvbmQ9MTI1IGFtb3VudD0tMC45Ng0Ka2VybmluZyBmaXJzdD0xMTMgc2Vjb25kPTgyMTYgYW1vdW50PS0xLjQ0DQprZXJuaW5nIGZpcnN0PTExMyBzZWNvbmQ9ODIxNyBhbW91bnQ9LTEuNQ0Ka2VybmluZyBmaXJzdD0xMTMgc2Vjb25kPTg0ODIgYW1vdW50PS0wLjU0DQprZXJuaW5nIGZpcnN0PTExNCBzZWNvbmQ9MzggYW1vdW50PS0wLjYxDQprZXJuaW5nIGZpcnN0PTExNCBzZWNvbmQ9NDEgYW1vdW50PS0wLjc3DQprZXJuaW5nIGZpcnN0PTExNCBzZWNvbmQ9NDQgYW1vdW50PS0wLjkzDQprZXJuaW5nIGZpcnN0PTExNCBzZWNvbmQ9NDUgYW1vdW50PS0wLjcNCmtlcm5pbmcgZmlyc3Q9MTE0IHNlY29uZD00NiBhbW91bnQ9LTAuOTMNCmtlcm5pbmcgZmlyc3Q9MTE0IHNlY29uZD00NyBhbW91bnQ9LTAuOTkNCmtlcm5pbmcgZmlyc3Q9MTE0IHNlY29uZD01MSBhbW91bnQ9LTAuOA0Ka2VybmluZyBmaXJzdD0xMTQgc2Vjb25kPTUyIGFtb3VudD0tMC41OA0Ka2VybmluZyBmaXJzdD0xMTQgc2Vjb25kPTU1IGFtb3VudD0tMS43OQ0Ka2VybmluZyBmaXJzdD0xMTQgc2Vjb25kPTYzIGFtb3VudD0tMS43Mw0Ka2VybmluZyBmaXJzdD0xMTQgc2Vjb25kPTY0IGFtb3VudD0tMC43Nw0Ka2VybmluZyBmaXJzdD0xMTQgc2Vjb25kPTY1IGFtb3VudD0tMS40NA0Ka2VybmluZyBmaXJzdD0xMTQgc2Vjb25kPTY2IGFtb3VudD0tMC40Mg0Ka2VybmluZyBmaXJzdD0xMTQgc2Vjb25kPTY5IGFtb3VudD0tMC40Mg0Ka2VybmluZyBmaXJzdD0xMTQgc2Vjb25kPTc0IGFtb3VudD0tMC40Mg0Ka2VybmluZyBmaXJzdD0xMTQgc2Vjb25kPTc3IGFtb3VudD0tMC44Mw0Ka2VybmluZyBmaXJzdD0xMTQgc2Vjb25kPTg0IGFtb3VudD0tMi45OA0Ka2VybmluZyBmaXJzdD0xMTQgc2Vjb25kPTg1IGFtb3VudD0tMC4yOQ0Ka2VybmluZyBmaXJzdD0xMTQgc2Vjb25kPTg2IGFtb3VudD0tMC40Mg0Ka2VybmluZyBmaXJzdD0xMTQgc2Vjb25kPTg3IGFtb3VudD0tMC4yOQ0Ka2VybmluZyBmaXJzdD0xMTQgc2Vjb25kPTg4IGFtb3VudD0tMS4zNA0Ka2VybmluZyBmaXJzdD0xMTQgc2Vjb25kPTg5IGFtb3VudD0tMC45OQ0Ka2VybmluZyBmaXJzdD0xMTQgc2Vjb25kPTkwIGFtb3VudD0tMC45Mw0Ka2VybmluZyBmaXJzdD0xMTQgc2Vjb25kPTkzIGFtb3VudD0tMS4yNQ0Ka2VybmluZyBmaXJzdD0xMTQgc2Vjb25kPTk3IGFtb3VudD0tMC4yMg0Ka2VybmluZyBmaXJzdD0xMTQgc2Vjb25kPTk5IGFtb3VudD0tMC40Mg0Ka2VybmluZyBmaXJzdD0xMTQgc2Vjb25kPTEwMyBhbW91bnQ9LTAuMTkNCmtlcm5pbmcgZmlyc3Q9MTE0IHNlY29uZD0xMjUgYW1vdW50PS0wLjkNCmtlcm5pbmcgZmlyc3Q9MTE0IHNlY29uZD0xNzEgYW1vdW50PS0wLjYxDQprZXJuaW5nIGZpcnN0PTExNCBzZWNvbmQ9MjQwIGFtb3VudD0tMS4yMg0Ka2VybmluZyBmaXJzdD0xMTQgc2Vjb25kPTgyMTYgYW1vdW50PS0wLjc0DQprZXJuaW5nIGZpcnN0PTExNCBzZWNvbmQ9ODIxNyBhbW91bnQ9LTAuODMNCmtlcm5pbmcgZmlyc3Q9MTE0IHNlY29uZD04MjE4IGFtb3VudD0tMC45Mw0Ka2VybmluZyBmaXJzdD0xMTUgc2Vjb25kPTQxIGFtb3VudD0tMC44DQprZXJuaW5nIGZpcnN0PTExNSBzZWNvbmQ9NDIgYW1vdW50PS0wLjQ4DQprZXJuaW5nIGZpcnN0PTExNSBzZWNvbmQ9NTUgYW1vdW50PS0wLjcNCmtlcm5pbmcgZmlyc3Q9MTE1IHNlY29uZD02MyBhbW91bnQ9LTEuMDINCmtlcm5pbmcgZmlyc3Q9MTE1IHNlY29uZD02NiBhbW91bnQ9LTAuNDgNCmtlcm5pbmcgZmlyc3Q9MTE1IHNlY29uZD02NyBhbW91bnQ9LTAuMzgNCmtlcm5pbmcgZmlyc3Q9MTE1IHNlY29uZD02OSBhbW91bnQ9LTAuNDgNCmtlcm5pbmcgZmlyc3Q9MTE1IHNlY29uZD03NCBhbW91bnQ9LTAuNDgNCmtlcm5pbmcgZmlyc3Q9MTE1IHNlY29uZD03NyBhbW91bnQ9LTAuMzUNCmtlcm5pbmcgZmlyc3Q9MTE1IHNlY29uZD04MyBhbW91bnQ9LTAuMjYNCmtlcm5pbmcgZmlyc3Q9MTE1IHNlY29uZD04NCBhbW91bnQ9LTEuNzMNCmtlcm5pbmcgZmlyc3Q9MTE1IHNlY29uZD04NSBhbW91bnQ9LTAuNTgNCmtlcm5pbmcgZmlyc3Q9MTE1IHNlY29uZD04NiBhbW91bnQ9LTEuMjgNCmtlcm5pbmcgZmlyc3Q9MTE1IHNlY29uZD04NyBhbW91bnQ9LTEuMDINCmtlcm5pbmcgZmlyc3Q9MTE1IHNlY29uZD04OCBhbW91bnQ9LTAuMzgNCmtlcm5pbmcgZmlyc3Q9MTE1IHNlY29uZD04OSBhbW91bnQ9LTEuNQ0Ka2VybmluZyBmaXJzdD0xMTUgc2Vjb25kPTkwIGFtb3VudD0tMC4zNQ0Ka2VybmluZyBmaXJzdD0xMTUgc2Vjb25kPTkzIGFtb3VudD0tMS4xNQ0Ka2VybmluZyBmaXJzdD0xMTUgc2Vjb25kPTEyNSBhbW91bnQ9LTAuODYNCmtlcm5pbmcgZmlyc3Q9MTE1IHNlY29uZD04MjE2IGFtb3VudD0tMS43DQprZXJuaW5nIGZpcnN0PTExNSBzZWNvbmQ9ODIxNyBhbW91bnQ9LTEuNzkNCmtlcm5pbmcgZmlyc3Q9MTE1IHNlY29uZD04NDgyIGFtb3VudD0tMC42Nw0Ka2VybmluZyBmaXJzdD0xMTYgc2Vjb25kPTM4IGFtb3VudD0tMC4zMg0Ka2VybmluZyBmaXJzdD0xMTYgc2Vjb25kPTUyIGFtb3VudD0tMC43DQprZXJuaW5nIGZpcnN0PTExNiBzZWNvbmQ9NTUgYW1vdW50PS0wLjMyDQprZXJuaW5nIGZpcnN0PTExNiBzZWNvbmQ9NjMgYW1vdW50PS0wLjg2DQprZXJuaW5nIGZpcnN0PTExNiBzZWNvbmQ9NjYgYW1vdW50PS0wLjI2DQprZXJuaW5nIGZpcnN0PTExNiBzZWNvbmQ9NjkgYW1vdW50PS0wLjI2DQprZXJuaW5nIGZpcnN0PTExNiBzZWNvbmQ9NzQgYW1vdW50PS0wLjI2DQprZXJuaW5nIGZpcnN0PTExNiBzZWNvbmQ9NzcgYW1vdW50PS0wLjI2DQprZXJuaW5nIGZpcnN0PTExNiBzZWNvbmQ9ODQgYW1vdW50PS0xLjUNCmtlcm5pbmcgZmlyc3Q9MTE2IHNlY29uZD04NSBhbW91bnQ9LTAuMzINCmtlcm5pbmcgZmlyc3Q9MTE2IHNlY29uZD04NiBhbW91bnQ9LTAuNjENCmtlcm5pbmcgZmlyc3Q9MTE2IHNlY29uZD04NyBhbW91bnQ9LTAuNDINCmtlcm5pbmcgZmlyc3Q9MTE2IHNlY29uZD04OSBhbW91bnQ9LTEuNDQNCmtlcm5pbmcgZmlyc3Q9MTE2IHNlY29uZD05MyBhbW91bnQ9LTAuODMNCmtlcm5pbmcgZmlyc3Q9MTE2IHNlY29uZD05OSBhbW91bnQ9LTAuMTMNCmtlcm5pbmcgZmlyc3Q9MTE2IHNlY29uZD0xMjUgYW1vdW50PS0wLjQ1DQprZXJuaW5nIGZpcnN0PTExNiBzZWNvbmQ9MTcxIGFtb3VudD0tMC4zOA0Ka2VybmluZyBmaXJzdD0xMTYgc2Vjb25kPTI0MCBhbW91bnQ9LTAuMTYNCmtlcm5pbmcgZmlyc3Q9MTE2IHNlY29uZD04MjE2IGFtb3VudD0tMC43DQprZXJuaW5nIGZpcnN0PTExNiBzZWNvbmQ9ODIxNyBhbW91bnQ9LTAuNzQNCmtlcm5pbmcgZmlyc3Q9MTE4IHNlY29uZD0zOCBhbW91bnQ9LTAuNTgNCmtlcm5pbmcgZmlyc3Q9MTE4IHNlY29uZD00MSBhbW91bnQ9LTAuOA0Ka2VybmluZyBmaXJzdD0xMTggc2Vjb25kPTQ0IGFtb3VudD0tMC45Mw0Ka2VybmluZyBmaXJzdD0xMTggc2Vjb25kPTQ2IGFtb3VudD0tMC45Mw0Ka2VybmluZyBmaXJzdD0xMTggc2Vjb25kPTQ3IGFtb3VudD0tMS4wNg0Ka2VybmluZyBmaXJzdD0xMTggc2Vjb25kPTUxIGFtb3VudD0tMC44DQprZXJuaW5nIGZpcnN0PTExOCBzZWNvbmQ9NTUgYW1vdW50PS0xLjc5DQprZXJuaW5nIGZpcnN0PTExOCBzZWNvbmQ9NjMgYW1vdW50PS0xLjYNCmtlcm5pbmcgZmlyc3Q9MTE4IHNlY29uZD02NCBhbW91bnQ9LTAuNTENCmtlcm5pbmcgZmlyc3Q9MTE4IHNlY29uZD02NSBhbW91bnQ9LTEuMjgNCmtlcm5pbmcgZmlyc3Q9MTE4IHNlY29uZD02NiBhbW91bnQ9LTAuNDUNCmtlcm5pbmcgZmlyc3Q9MTE4IHNlY29uZD02OSBhbW91bnQ9LTAuNDUNCmtlcm5pbmcgZmlyc3Q9MTE4IHNlY29uZD03NCBhbW91bnQ9LTAuNDUNCmtlcm5pbmcgZmlyc3Q9MTE4IHNlY29uZD03NyBhbW91bnQ9LTAuODYNCmtlcm5pbmcgZmlyc3Q9MTE4IHNlY29uZD04NCBhbW91bnQ9LTIuNzUNCmtlcm5pbmcgZmlyc3Q9MTE4IHNlY29uZD04NSBhbW91bnQ9LTAuMzUNCmtlcm5pbmcgZmlyc3Q9MTE4IHNlY29uZD04NiBhbW91bnQ9LTAuNjENCmtlcm5pbmcgZmlyc3Q9MTE4IHNlY29uZD04NyBhbW91bnQ9LTAuNDUNCmtlcm5pbmcgZmlyc3Q9MTE4IHNlY29uZD04OCBhbW91bnQ9LTEuNTQNCmtlcm5pbmcgZmlyc3Q9MTE4IHNlY29uZD04OSBhbW91bnQ9LTEuNDcNCmtlcm5pbmcgZmlyc3Q9MTE4IHNlY29uZD05MCBhbW91bnQ9LTEuMDINCmtlcm5pbmcgZmlyc3Q9MTE4IHNlY29uZD05MyBhbW91bnQ9LTEuMzQNCmtlcm5pbmcgZmlyc3Q9MTE4IHNlY29uZD05NyBhbW91bnQ9LTAuMTkNCmtlcm5pbmcgZmlyc3Q9MTE4IHNlY29uZD05OSBhbW91bnQ9LTAuMjkNCmtlcm5pbmcgZmlyc3Q9MTE4IHNlY29uZD0xMDMgYW1vdW50PS0wLjE5DQprZXJuaW5nIGZpcnN0PTExOCBzZWNvbmQ9MTE1IGFtb3VudD0tMC4xMw0Ka2VybmluZyBmaXJzdD0xMTggc2Vjb25kPTEyNSBhbW91bnQ9LTAuOTMNCmtlcm5pbmcgZmlyc3Q9MTE4IHNlY29uZD0yNDAgYW1vdW50PS0wLjU4DQprZXJuaW5nIGZpcnN0PTExOCBzZWNvbmQ9ODIxNiBhbW91bnQ9LTAuOTYNCmtlcm5pbmcgZmlyc3Q9MTE4IHNlY29uZD04MjE3IGFtb3VudD0tMS4wMg0Ka2VybmluZyBmaXJzdD0xMTggc2Vjb25kPTgyMTggYW1vdW50PS0wLjkzDQprZXJuaW5nIGZpcnN0PTExOSBzZWNvbmQ9MzggYW1vdW50PS0wLjUxDQprZXJuaW5nIGZpcnN0PTExOSBzZWNvbmQ9NDEgYW1vdW50PS0wLjc3DQprZXJuaW5nIGZpcnN0PTExOSBzZWNvbmQ9NDQgYW1vdW50PS0wLjY3DQprZXJuaW5nIGZpcnN0PTExOSBzZWNvbmQ9NDYgYW1vdW50PS0wLjY0DQprZXJuaW5nIGZpcnN0PTExOSBzZWNvbmQ9NDcgYW1vdW50PS0wLjgNCmtlcm5pbmcgZmlyc3Q9MTE5IHNlY29uZD01MSBhbW91bnQ9LTAuNTENCmtlcm5pbmcgZmlyc3Q9MTE5IHNlY29uZD01NSBhbW91bnQ9LTEuNTcNCmtlcm5pbmcgZmlyc3Q9MTE5IHNlY29uZD02MyBhbW91bnQ9LTEuNDQNCmtlcm5pbmcgZmlyc3Q9MTE5IHNlY29uZD02NCBhbW91bnQ9LTAuMjkNCmtlcm5pbmcgZmlyc3Q9MTE5IHNlY29uZD02NSBhbW91bnQ9LTEuMDYNCmtlcm5pbmcgZmlyc3Q9MTE5IHNlY29uZD02NiBhbW91bnQ9LTAuNDINCmtlcm5pbmcgZmlyc3Q9MTE5IHNlY29uZD02OSBhbW91bnQ9LTAuNDINCmtlcm5pbmcgZmlyc3Q9MTE5IHNlY29uZD03NCBhbW91bnQ9LTAuNDINCmtlcm5pbmcgZmlyc3Q9MTE5IHNlY29uZD03NyBhbW91bnQ9LTAuNzcNCmtlcm5pbmcgZmlyc3Q9MTE5IHNlY29uZD04NCBhbW91bnQ9LTIuNQ0Ka2VybmluZyBmaXJzdD0xMTkgc2Vjb25kPTg1IGFtb3VudD0tMC4zMg0Ka2VybmluZyBmaXJzdD0xMTkgc2Vjb25kPTg2IGFtb3VudD0tMC42NA0Ka2VybmluZyBmaXJzdD0xMTkgc2Vjb25kPTg3IGFtb3VudD0tMC40NQ0Ka2VybmluZyBmaXJzdD0xMTkgc2Vjb25kPTg4IGFtb3VudD0tMS4zOA0Ka2VybmluZyBmaXJzdD0xMTkgc2Vjb25kPTg5IGFtb3VudD0tMS40NA0Ka2VybmluZyBmaXJzdD0xMTkgc2Vjb25kPTkwIGFtb3VudD0tMC45DQprZXJuaW5nIGZpcnN0PTExOSBzZWNvbmQ9OTMgYW1vdW50PS0xLjIyDQprZXJuaW5nIGZpcnN0PTExOSBzZWNvbmQ9OTcgYW1vdW50PS0wLjEzDQprZXJuaW5nIGZpcnN0PTExOSBzZWNvbmQ9OTkgYW1vdW50PS0wLjE2DQprZXJuaW5nIGZpcnN0PTExOSBzZWNvbmQ9MTI1IGFtb3VudD0tMC44Ng0Ka2VybmluZyBmaXJzdD0xMTkgc2Vjb25kPTI0MCBhbW91bnQ9LTAuMzINCmtlcm5pbmcgZmlyc3Q9MTE5IHNlY29uZD04MjE2IGFtb3VudD0tMC45Mw0Ka2VybmluZyBmaXJzdD0xMTkgc2Vjb25kPTgyMTcgYW1vdW50PS0wLjk5DQprZXJuaW5nIGZpcnN0PTExOSBzZWNvbmQ9ODIxOCBhbW91bnQ9LTAuNjcNCmtlcm5pbmcgZmlyc3Q9MTIwIHNlY29uZD0zOCBhbW91bnQ9LTAuNTgNCmtlcm5pbmcgZmlyc3Q9MTIwIHNlY29uZD00NSBhbW91bnQ9LTAuMjkNCmtlcm5pbmcgZmlyc3Q9MTIwIHNlY29uZD02MyBhbW91bnQ9LTAuOTMNCmtlcm5pbmcgZmlyc3Q9MTIwIHNlY29uZD02NiBhbW91bnQ9LTAuMjkNCmtlcm5pbmcgZmlyc3Q9MTIwIHNlY29uZD02NyBhbW91bnQ9LTAuNTENCmtlcm5pbmcgZmlyc3Q9MTIwIHNlY29uZD02OSBhbW91bnQ9LTAuMjkNCmtlcm5pbmcgZmlyc3Q9MTIwIHNlY29uZD03NCBhbW91bnQ9LTAuMjkNCmtlcm5pbmcgZmlyc3Q9MTIwIHNlY29uZD03NyBhbW91bnQ9LTAuMTkNCmtlcm5pbmcgZmlyc3Q9MTIwIHNlY29uZD04MyBhbW91bnQ9LTAuMjYNCmtlcm5pbmcgZmlyc3Q9MTIwIHNlY29uZD04NCBhbW91bnQ9LTIuODUNCmtlcm5pbmcgZmlyc3Q9MTIwIHNlY29uZD04NSBhbW91bnQ9LTAuMzgNCmtlcm5pbmcgZmlyc3Q9MTIwIHNlY29uZD04NiBhbW91bnQ9LTAuNjQNCmtlcm5pbmcgZmlyc3Q9MTIwIHNlY29uZD04NyBhbW91bnQ9LTAuNDUNCmtlcm5pbmcgZmlyc3Q9MTIwIHNlY29uZD04OSBhbW91bnQ9LTEuNTQNCmtlcm5pbmcgZmlyc3Q9MTIwIHNlY29uZD05MyBhbW91bnQ9LTAuODMNCmtlcm5pbmcgZmlyc3Q9MTIwIHNlY29uZD05NyBhbW91bnQ9LTAuMTMNCmtlcm5pbmcgZmlyc3Q9MTIwIHNlY29uZD05OSBhbW91bnQ9LTAuNTgNCmtlcm5pbmcgZmlyc3Q9MTIwIHNlY29uZD0xMDMgYW1vdW50PS0wLjI5DQprZXJuaW5nIGZpcnN0PTEyMCBzZWNvbmQ9MTI1IGFtb3VudD0tMC42MQ0Ka2VybmluZyBmaXJzdD0xMjAgc2Vjb25kPTE3MSBhbW91bnQ9LTAuNjQNCmtlcm5pbmcgZmlyc3Q9MTIwIHNlY29uZD0yNDAgYW1vdW50PS0wLjUxDQprZXJuaW5nIGZpcnN0PTEyMCBzZWNvbmQ9ODIxNiBhbW91bnQ9LTEuMDINCmtlcm5pbmcgZmlyc3Q9MTIwIHNlY29uZD04MjE3IGFtb3VudD0tMS4wOQ0Ka2VybmluZyBmaXJzdD0xMjAgc2Vjb25kPTg0ODIgYW1vdW50PS0wLjI2DQprZXJuaW5nIGZpcnN0PTEyMSBzZWNvbmQ9MzggYW1vdW50PS0wLjU4DQprZXJuaW5nIGZpcnN0PTEyMSBzZWNvbmQ9NDEgYW1vdW50PS0wLjgNCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD00NCBhbW91bnQ9LTAuOTkNCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD00NiBhbW91bnQ9LTAuOTkNCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD00NyBhbW91bnQ9LTEuMTUNCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD01MCBhbW91bnQ9LTAuOTMNCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD01MSBhbW91bnQ9LTAuODMNCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD01NSBhbW91bnQ9LTEuODYNCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD02MyBhbW91bnQ9LTEuNjMNCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD02NCBhbW91bnQ9LTAuNTgNCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD02NSBhbW91bnQ9LTEuMzQNCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD02NiBhbW91bnQ9LTAuNDINCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD02OSBhbW91bnQ9LTAuNDINCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD03NCBhbW91bnQ9LTAuNDINCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD03NyBhbW91bnQ9LTAuODYNCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD04NCBhbW91bnQ9LTIuODINCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD04NSBhbW91bnQ9LTAuMzUNCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD04NiBhbW91bnQ9LTAuNTgNCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD04NyBhbW91bnQ9LTAuNDUNCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD04OCBhbW91bnQ9LTEuNTQNCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD04OSBhbW91bnQ9LTEuNDQNCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD05MCBhbW91bnQ9LTAuOTkNCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD05MyBhbW91bnQ9LTEuMzQNCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD05NyBhbW91bnQ9LTAuMTkNCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD05OSBhbW91bnQ9LTAuMzINCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD0xMDMgYW1vdW50PS0wLjE5DQprZXJuaW5nIGZpcnN0PTEyMSBzZWNvbmQ9MTE1IGFtb3VudD0tMC4xMw0Ka2VybmluZyBmaXJzdD0xMjEgc2Vjb25kPTEyNSBhbW91bnQ9LTAuOTMNCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD0yNDAgYW1vdW50PS0wLjY0DQprZXJuaW5nIGZpcnN0PTEyMSBzZWNvbmQ9ODIxNiBhbW91bnQ9LTAuOTMNCmtlcm5pbmcgZmlyc3Q9MTIxIHNlY29uZD04MjE3IGFtb3VudD0tMC45OQ0Ka2VybmluZyBmaXJzdD0xMjEgc2Vjb25kPTgyMTggYW1vdW50PS0wLjk5DQprZXJuaW5nIGZpcnN0PTEyMiBzZWNvbmQ9MzggYW1vdW50PS0wLjM1DQprZXJuaW5nIGZpcnN0PTEyMiBzZWNvbmQ9NDEgYW1vdW50PS0wLjMyDQprZXJuaW5nIGZpcnN0PTEyMiBzZWNvbmQ9NDUgYW1vdW50PS0wLjUxDQprZXJuaW5nIGZpcnN0PTEyMiBzZWNvbmQ9NTIgYW1vdW50PS0wLjk5DQprZXJuaW5nIGZpcnN0PTEyMiBzZWNvbmQ9NTUgYW1vdW50PS0wLjM4DQprZXJuaW5nIGZpcnN0PTEyMiBzZWNvbmQ9NjMgYW1vdW50PS0xLjEyDQprZXJuaW5nIGZpcnN0PTEyMiBzZWNvbmQ9NjYgYW1vdW50PS0wLjQ1DQprZXJuaW5nIGZpcnN0PTEyMiBzZWNvbmQ9NjcgYW1vdW50PS0wLjM4DQprZXJuaW5nIGZpcnN0PTEyMiBzZWNvbmQ9NjkgYW1vdW50PS0wLjQ1DQprZXJuaW5nIGZpcnN0PTEyMiBzZWNvbmQ9NzQgYW1vdW50PS0wLjQ1DQprZXJuaW5nIGZpcnN0PTEyMiBzZWNvbmQ9NzcgYW1vdW50PS0wLjM1DQprZXJuaW5nIGZpcnN0PTEyMiBzZWNvbmQ9ODQgYW1vdW50PS0xLjcNCmtlcm5pbmcgZmlyc3Q9MTIyIHNlY29uZD04NSBhbW91bnQ9LTAuNTQNCmtlcm5pbmcgZmlyc3Q9MTIyIHNlY29uZD04NiBhbW91bnQ9LTAuNTENCmtlcm5pbmcgZmlyc3Q9MTIyIHNlY29uZD04NyBhbW91bnQ9LTAuNDINCmtlcm5pbmcgZmlyc3Q9MTIyIHNlY29uZD04OSBhbW91bnQ9LTAuOTMNCmtlcm5pbmcgZmlyc3Q9MTIyIHNlY29uZD05MyBhbW91bnQ9LTEuMDkNCmtlcm5pbmcgZmlyc3Q9MTIyIHNlY29uZD05OSBhbW91bnQ9LTAuMzUNCmtlcm5pbmcgZmlyc3Q9MTIyIHNlY29uZD0xMDMgYW1vdW50PS0wLjE2DQprZXJuaW5nIGZpcnN0PTEyMiBzZWNvbmQ9MTI1IGFtb3VudD0tMC43Nw0Ka2VybmluZyBmaXJzdD0xMjIgc2Vjb25kPTE3MSBhbW91bnQ9LTAuNzcNCmtlcm5pbmcgZmlyc3Q9MTIyIHNlY29uZD0yNDAgYW1vdW50PS0wLjI5DQprZXJuaW5nIGZpcnN0PTEyMiBzZWNvbmQ9ODIxNiBhbW91bnQ9LTEuMTgNCmtlcm5pbmcgZmlyc3Q9MTIyIHNlY29uZD04MjE3IGFtb3VudD0tMS4yOA0Ka2VybmluZyBmaXJzdD0xMjIgc2Vjb25kPTg0ODIgYW1vdW50PS0wLjQ1DQprZXJuaW5nIGZpcnN0PTEyMyBzZWNvbmQ9NDggYW1vdW50PS0wLjU4DQprZXJuaW5nIGZpcnN0PTEyMyBzZWNvbmQ9NTIgYW1vdW50PS0wLjU4DQprZXJuaW5nIGZpcnN0PTEyMyBzZWNvbmQ9NTQgYW1vdW50PS0wLjY3DQprZXJuaW5nIGZpcnN0PTEyMyBzZWNvbmQ9NjUgYW1vdW50PS0wLjM4DQprZXJuaW5nIGZpcnN0PTEyMyBzZWNvbmQ9NjcgYW1vdW50PS0wLjgNCmtlcm5pbmcgZmlyc3Q9MTIzIHNlY29uZD03NCBhbW91bnQ9MS41DQprZXJuaW5nIGZpcnN0PTEyMyBzZWNvbmQ9NzcgYW1vdW50PS0wLjI5DQprZXJuaW5nIGZpcnN0PTEyMyBzZWNvbmQ9ODQgYW1vdW50PTAuNjcNCmtlcm5pbmcgZmlyc3Q9MTIzIHNlY29uZD04NiBhbW91bnQ9MC45Mw0Ka2VybmluZyBmaXJzdD0xMjMgc2Vjb25kPTg3IGFtb3VudD0wLjgNCmtlcm5pbmcgZmlyc3Q9MTIzIHNlY29uZD04OCBhbW91bnQ9MC45DQprZXJuaW5nIGZpcnN0PTEyMyBzZWNvbmQ9ODkgYW1vdW50PTEuMDkNCmtlcm5pbmcgZmlyc3Q9MTIzIHNlY29uZD05NyBhbW91bnQ9LTAuODYNCmtlcm5pbmcgZmlyc3Q9MTIzIHNlY29uZD05OSBhbW91bnQ9LTEuMDkNCmtlcm5pbmcgZmlyc3Q9MTIzIHNlY29uZD0xMDkgYW1vdW50PS0wLjkzDQprZXJuaW5nIGZpcnN0PTEyMyBzZWNvbmQ9MTE1IGFtb3VudD0tMC44Ng0Ka2VybmluZyBmaXJzdD0xMjMgc2Vjb25kPTExNiBhbW91bnQ9LTAuOA0Ka2VybmluZyBmaXJzdD0xMjMgc2Vjb25kPTExNyBhbW91bnQ9LTAuOTkNCmtlcm5pbmcgZmlyc3Q9MTIzIHNlY29uZD0xMTggYW1vdW50PS0wLjkzDQprZXJuaW5nIGZpcnN0PTEyMyBzZWNvbmQ9MTE5IGFtb3VudD0tMC45DQprZXJuaW5nIGZpcnN0PTEyMyBzZWNvbmQ9MTIwIGFtb3VudD0tMC41OA0Ka2VybmluZyBmaXJzdD0xMjMgc2Vjb25kPTEyMSBhbW91bnQ9LTAuOTMNCmtlcm5pbmcgZmlyc3Q9MTIzIHNlY29uZD0xMjIgYW1vdW50PS0wLjc3DQprZXJuaW5nIGZpcnN0PTEyMyBzZWNvbmQ9MjIzIGFtb3VudD0tMC4yOQ0Ka2VybmluZyBmaXJzdD0xMjMgc2Vjb25kPTIzNiBhbW91bnQ9MC4zOA0Ka2VybmluZyBmaXJzdD0xMjMgc2Vjb25kPTIzOCBhbW91bnQ9MS4wNg0Ka2VybmluZyBmaXJzdD0xMjMgc2Vjb25kPTIzOSBhbW91bnQ9MS40MQ0Ka2VybmluZyBmaXJzdD0xMjMgc2Vjb25kPTI0MCBhbW91bnQ9LTAuNw0Ka2VybmluZyBmaXJzdD0xMjMgc2Vjb25kPTI1NCBhbW91bnQ9LTAuMjINCmtlcm5pbmcgZmlyc3Q9MTYxIHNlY29uZD04NCBhbW91bnQ9LTEuNzkNCmtlcm5pbmcgZmlyc3Q9MTYxIHNlY29uZD04NiBhbW91bnQ9LTAuNjQNCmtlcm5pbmcgZmlyc3Q9MTYxIHNlY29uZD04NyBhbW91bnQ9LTAuMzgNCmtlcm5pbmcgZmlyc3Q9MTYxIHNlY29uZD04OSBhbW91bnQ9LTEuMDINCmtlcm5pbmcgZmlyc3Q9MTcxIHNlY29uZD04NCBhbW91bnQ9LTEuODkNCmtlcm5pbmcgZmlyc3Q9MTcxIHNlY29uZD04NiBhbW91bnQ9LTAuMzUNCmtlcm5pbmcgZmlyc3Q9MTcxIHNlY29uZD04OSBhbW91bnQ9LTAuOTYNCmtlcm5pbmcgZmlyc3Q9MTcxIHNlY29uZD05OSBhbW91bnQ9LTAuMjkNCmtlcm5pbmcgZmlyc3Q9MTcxIHNlY29uZD04MjE3IGFtb3VudD0tMC44Ng0Ka2VybmluZyBmaXJzdD0xNzQgc2Vjb25kPTY1IGFtb3VudD0tMC42MQ0Ka2VybmluZyBmaXJzdD0xNzQgc2Vjb25kPTc3IGFtb3VudD0tMC4yOQ0Ka2VybmluZyBmaXJzdD0xNzQgc2Vjb25kPTg0IGFtb3VudD0tMC44Mw0Ka2VybmluZyBmaXJzdD0xNzQgc2Vjb25kPTg2IGFtb3VudD0tMC40Mg0Ka2VybmluZyBmaXJzdD0xNzQgc2Vjb25kPTg3IGFtb3VudD0tMC4yNg0Ka2VybmluZyBmaXJzdD0xNzQgc2Vjb25kPTg4IGFtb3VudD0tMC42NA0Ka2VybmluZyBmaXJzdD0xNzQgc2Vjb25kPTg5IGFtb3VudD0tMC44Ng0Ka2VybmluZyBmaXJzdD0xNzQgc2Vjb25kPTkwIGFtb3VudD0tMC44DQprZXJuaW5nIGZpcnN0PTE3NCBzZWNvbmQ9MTk4IGFtb3VudD0tMC42NA0Ka2VybmluZyBmaXJzdD0xNzYgc2Vjb25kPTUyIGFtb3VudD0tMC44Ng0Ka2VybmluZyBmaXJzdD0xNzYgc2Vjb25kPTU0IGFtb3VudD0tMC41NA0Ka2VybmluZyBmaXJzdD0xODMgc2Vjb25kPTQ5IGFtb3VudD0tMC41MQ0Ka2VybmluZyBmaXJzdD0xODMgc2Vjb25kPTUwIGFtb3VudD0tMC41NA0Ka2VybmluZyBmaXJzdD0xODMgc2Vjb25kPTUxIGFtb3VudD0tMC4zMg0Ka2VybmluZyBmaXJzdD0xODMgc2Vjb25kPTU1IGFtb3VudD0tMC42Nw0Ka2VybmluZyBmaXJzdD0xODcgc2Vjb25kPTM0IGFtb3VudD0tMC40OA0Ka2VybmluZyBmaXJzdD0xODcgc2Vjb25kPTY1IGFtb3VudD0tMC4yOQ0Ka2VybmluZyBmaXJzdD0xODcgc2Vjb25kPTgzIGFtb3VudD0tMC43DQprZXJuaW5nIGZpcnN0PTE4NyBzZWNvbmQ9ODQgYW1vdW50PS0xLjk1DQprZXJuaW5nIGZpcnN0PTE4NyBzZWNvbmQ9ODYgYW1vdW50PS0xLjE1DQprZXJuaW5nIGZpcnN0PTE4NyBzZWNvbmQ9ODcgYW1vdW50PS0wLjgzDQprZXJuaW5nIGZpcnN0PTE4NyBzZWNvbmQ9ODggYW1vdW50PS0xLjAyDQprZXJuaW5nIGZpcnN0PTE4NyBzZWNvbmQ9ODkgYW1vdW50PS0xLjg2DQprZXJuaW5nIGZpcnN0PTE4NyBzZWNvbmQ9OTAgYW1vdW50PS0xLjA2DQprZXJuaW5nIGZpcnN0PTE4NyBzZWNvbmQ9MTE2IGFtb3VudD0tMC4yOQ0Ka2VybmluZyBmaXJzdD0xODcgc2Vjb25kPTEyMCBhbW91bnQ9LTAuNjQNCmtlcm5pbmcgZmlyc3Q9MTg3IHNlY29uZD0xMjEgYW1vdW50PS0wLjI2DQprZXJuaW5nIGZpcnN0PTE4NyBzZWNvbmQ9MTIyIGFtb3VudD0tMC43NA0Ka2VybmluZyBmaXJzdD0xODcgc2Vjb25kPTE5OCBhbW91bnQ9LTAuNDINCmtlcm5pbmcgZmlyc3Q9MTg3IHNlY29uZD0yMjMgYW1vdW50PS0wLjI2DQprZXJuaW5nIGZpcnN0PTE4NyBzZWNvbmQ9ODIxNyBhbW91bnQ9LTEuNjYNCmtlcm5pbmcgZmlyc3Q9MTkxIHNlY29uZD02NSBhbW91bnQ9LTAuNzQNCmtlcm5pbmcgZmlyc3Q9MTkxIHNlY29uZD02NiBhbW91bnQ9LTAuMjkNCmtlcm5pbmcgZmlyc3Q9MTkxIHNlY29uZD02OSBhbW91bnQ9LTAuMjkNCmtlcm5pbmcgZmlyc3Q9MTkxIHNlY29uZD03NCBhbW91bnQ9MC42MQ0Ka2VybmluZyBmaXJzdD0xOTEgc2Vjb25kPTc3IGFtb3VudD0tMC41OA0Ka2VybmluZyBmaXJzdD0xOTEgc2Vjb25kPTg0IGFtb3VudD0tMi4wNQ0Ka2VybmluZyBmaXJzdD0xOTEgc2Vjb25kPTg1IGFtb3VudD0tMC4zNQ0Ka2VybmluZyBmaXJzdD0xOTEgc2Vjb25kPTg2IGFtb3VudD0tMC43NA0Ka2VybmluZyBmaXJzdD0xOTEgc2Vjb25kPTg3IGFtb3VudD0tMC40OA0Ka2VybmluZyBmaXJzdD0xOTEgc2Vjb25kPTg4IGFtb3VudD0tMC44DQprZXJuaW5nIGZpcnN0PTE5MSBzZWNvbmQ9ODkgYW1vdW50PS0xLjE4DQprZXJuaW5nIGZpcnN0PTE5MSBzZWNvbmQ9OTAgYW1vdW50PS0xLjE1DQprZXJuaW5nIGZpcnN0PTE5MSBzZWNvbmQ9OTcgYW1vdW50PS0wLjQ4DQprZXJuaW5nIGZpcnN0PTE5MSBzZWNvbmQ9OTggYW1vdW50PS0wLjI5DQprZXJuaW5nIGZpcnN0PTE5MSBzZWNvbmQ9OTkgYW1vdW50PS0wLjQyDQprZXJuaW5nIGZpcnN0PTE5MSBzZWNvbmQ9MTAzIGFtb3VudD0tMC40Mg0Ka2VybmluZyBmaXJzdD0xOTEgc2Vjb25kPTEwNSBhbW91bnQ9LTAuNDUNCmtlcm5pbmcgZmlyc3Q9MTkxIHNlY29uZD0xMDYgYW1vdW50PTAuNjQNCmtlcm5pbmcgZmlyc3Q9MTkxIHNlY29uZD0xMDggYW1vdW50PS0wLjI5DQprZXJuaW5nIGZpcnN0PTE5MSBzZWNvbmQ9MTA5IGFtb3VudD0tMC40OA0Ka2VybmluZyBmaXJzdD0xOTEgc2Vjb25kPTExNSBhbW91bnQ9LTAuNDgNCmtlcm5pbmcgZmlyc3Q9MTkxIHNlY29uZD0xMTcgYW1vdW50PS0wLjQyDQprZXJuaW5nIGZpcnN0PTE5MSBzZWNvbmQ9MTIwIGFtb3VudD0tMC4yNg0Ka2VybmluZyBmaXJzdD0xOTEgc2Vjb25kPTEyMiBhbW91bnQ9LTAuNDgNCmtlcm5pbmcgZmlyc3Q9MTkxIHNlY29uZD0xOTggYW1vdW50PS0wLjY3DQprZXJuaW5nIGZpcnN0PTE5MSBzZWNvbmQ9MjQwIGFtb3VudD0tMC41MQ0Ka2VybmluZyBmaXJzdD0yMjIgc2Vjb25kPTQxIGFtb3VudD0tMC45DQprZXJuaW5nIGZpcnN0PTIyMiBzZWNvbmQ9NDQgYW1vdW50PS0yLjUzDQprZXJuaW5nIGZpcnN0PTIyMiBzZWNvbmQ9NDYgYW1vdW50PS0yLjUzDQprZXJuaW5nIGZpcnN0PTIyMiBzZWNvbmQ9NDcgYW1vdW50PS0xLjEyDQprZXJuaW5nIGZpcnN0PTIyMiBzZWNvbmQ9NjMgYW1vdW50PS0xLjA2DQprZXJuaW5nIGZpcnN0PTIyMiBzZWNvbmQ9NjUgYW1vdW50PS0wLjY3DQprZXJuaW5nIGZpcnN0PTIyMiBzZWNvbmQ9NzcgYW1vdW50PS0wLjE2DQprZXJuaW5nIGZpcnN0PTIyMiBzZWNvbmQ9ODQgYW1vdW50PS0xLjczDQprZXJuaW5nIGZpcnN0PTIyMiBzZWNvbmQ9ODYgYW1vdW50PS0wLjI2DQprZXJuaW5nIGZpcnN0PTIyMiBzZWNvbmQ9ODggYW1vdW50PS0xLjYzDQprZXJuaW5nIGZpcnN0PTIyMiBzZWNvbmQ9ODkgYW1vdW50PS0wLjkNCmtlcm5pbmcgZmlyc3Q9MjIyIHNlY29uZD05MCBhbW91bnQ9LTEuNw0Ka2VybmluZyBmaXJzdD0yMjIgc2Vjb25kPTkzIGFtb3VudD0tMS4zNA0Ka2VybmluZyBmaXJzdD0yMjIgc2Vjb25kPTk3IGFtb3VudD0tMC4yOQ0Ka2VybmluZyBmaXJzdD0yMjIgc2Vjb25kPTEyMCBhbW91bnQ9LTAuMTkNCmtlcm5pbmcgZmlyc3Q9MjIyIHNlY29uZD0xMjUgYW1vdW50PS0wLjk2DQprZXJuaW5nIGZpcnN0PTIyMiBzZWNvbmQ9MTk4IGFtb3VudD0tMS43Ng0Ka2VybmluZyBmaXJzdD0yMjIgc2Vjb25kPTgyMTggYW1vdW50PS0yLjUzDQprZXJuaW5nIGZpcnN0PTIyMyBzZWNvbmQ9MzQgYW1vdW50PS0wLjQyDQprZXJuaW5nIGZpcnN0PTIyMyBzZWNvbmQ9NDEgYW1vdW50PS0wLjU0DQprZXJuaW5nIGZpcnN0PTIyMyBzZWNvbmQ9NDIgYW1vdW50PS0wLjQ4DQprZXJuaW5nIGZpcnN0PTIyMyBzZWNvbmQ9MTAyIGFtb3VudD0tMC4xOQ0Ka2VybmluZyBmaXJzdD0yMjMgc2Vjb25kPTExNiBhbW91bnQ9LTAuMjkNCmtlcm5pbmcgZmlyc3Q9MjIzIHNlY29uZD0xMTggYW1vdW50PS0wLjM1DQprZXJuaW5nIGZpcnN0PTIyMyBzZWNvbmQ9MTE5IGFtb3VudD0tMC4yNg0Ka2VybmluZyBmaXJzdD0yMjMgc2Vjb25kPTEyMCBhbW91bnQ9LTAuMTYNCmtlcm5pbmcgZmlyc3Q9MjIzIHNlY29uZD0xMjEgYW1vdW50PS0wLjM1DQprZXJuaW5nIGZpcnN0PTIyMyBzZWNvbmQ9ODIxNiBhbW91bnQ9LTAuMzUNCmtlcm5pbmcgZmlyc3Q9MjIzIHNlY29uZD04MjE3IGFtb3VudD0tMC40Mg0Ka2VybmluZyBmaXJzdD0yMjMgc2Vjb25kPTg0ODIgYW1vdW50PS0wLjQ1DQprZXJuaW5nIGZpcnN0PTIyNiBzZWNvbmQ9OTMgYW1vdW50PS0wLjMyDQprZXJuaW5nIGZpcnN0PTIyNiBzZWNvbmQ9MTI1IGFtb3VudD0tMC4yNg0Ka2VybmluZyBmaXJzdD0yMjcgc2Vjb25kPTEyNSBhbW91bnQ9LTAuMjYNCmtlcm5pbmcgZmlyc3Q9MjI3IHNlY29uZD04MjE3IGFtb3VudD0tMS45NQ0Ka2VybmluZyBmaXJzdD0yMjcgc2Vjb25kPTgyMjEgYW1vdW50PS0xLjk1DQprZXJuaW5nIGZpcnN0PTIyOCBzZWNvbmQ9OTMgYW1vdW50PS0wLjM1DQprZXJuaW5nIGZpcnN0PTIyOCBzZWNvbmQ9MTI1IGFtb3VudD0tMC4yNg0Ka2VybmluZyBmaXJzdD0yMzYgc2Vjb25kPTQyIGFtb3VudD0wLjk2DQprZXJuaW5nIGZpcnN0PTIzNiBzZWNvbmQ9ODQ4MiBhbW91bnQ9MC45DQprZXJuaW5nIGZpcnN0PTIzNyBzZWNvbmQ9NDIgYW1vdW50PTAuNTgNCmtlcm5pbmcgZmlyc3Q9MjM3IHNlY29uZD05MyBhbW91bnQ9MC4yOQ0Ka2VybmluZyBmaXJzdD0yMzcgc2Vjb25kPTEyNSBhbW91bnQ9MC40NQ0Ka2VybmluZyBmaXJzdD0yMzcgc2Vjb25kPTg0ODIgYW1vdW50PTAuNTgNCmtlcm5pbmcgZmlyc3Q9MjM4IHNlY29uZD0zNCBhbW91bnQ9MC45Mw0Ka2VybmluZyBmaXJzdD0yMzggc2Vjb25kPTM5IGFtb3VudD0wLjkzDQprZXJuaW5nIGZpcnN0PTIzOCBzZWNvbmQ9NDIgYW1vdW50PTIuNDMNCmtlcm5pbmcgZmlyc3Q9MjM4IHNlY29uZD02MyBhbW91bnQ9MS4yNQ0Ka2VybmluZyBmaXJzdD0yMzggc2Vjb25kPTkzIGFtb3VudD0xLjQxDQprZXJuaW5nIGZpcnN0PTIzOCBzZWNvbmQ9MTI1IGFtb3VudD0xLjA2DQprZXJuaW5nIGZpcnN0PTIzOCBzZWNvbmQ9ODIxNiBhbW91bnQ9MS4xOA0Ka2VybmluZyBmaXJzdD0yMzggc2Vjb25kPTgyMTcgYW1vdW50PTAuNzcNCmtlcm5pbmcgZmlyc3Q9MjM4IHNlY29uZD04MjIwIGFtb3VudD0xLjE4DQprZXJuaW5nIGZpcnN0PTIzOCBzZWNvbmQ9ODIyMSBhbW91bnQ9MC43Nw0Ka2VybmluZyBmaXJzdD0yMzggc2Vjb25kPTg0ODIgYW1vdW50PTIuNTkNCmtlcm5pbmcgZmlyc3Q9MjM5IHNlY29uZD00MiBhbW91bnQ9MS4zOA0Ka2VybmluZyBmaXJzdD0yMzkgc2Vjb25kPTYzIGFtb3VudD0wLjg2DQprZXJuaW5nIGZpcnN0PTIzOSBzZWNvbmQ9OTMgYW1vdW50PTEuMjUNCmtlcm5pbmcgZmlyc3Q9MjM5IHNlY29uZD0xMjUgYW1vdW50PTEuNDENCmtlcm5pbmcgZmlyc3Q9MjM5IHNlY29uZD04NDgyIGFtb3VudD0xLjU0DQprZXJuaW5nIGZpcnN0PTI0MCBzZWNvbmQ9MzQgYW1vdW50PS0wLjM1DQprZXJuaW5nIGZpcnN0PTI0MCBzZWNvbmQ9MzggYW1vdW50PS0wLjI5DQprZXJuaW5nIGZpcnN0PTI0MCBzZWNvbmQ9NDEgYW1vdW50PS0wLjc3DQprZXJuaW5nIGZpcnN0PTI0MCBzZWNvbmQ9NDIgYW1vdW50PS0wLjUxDQprZXJuaW5nIGZpcnN0PTI0MCBzZWNvbmQ9NDQgYW1vdW50PS0wLjI5DQprZXJuaW5nIGZpcnN0PTI0MCBzZWNvbmQ9NDYgYW1vdW50PS0wLjI5DQprZXJuaW5nIGZpcnN0PTI0MCBzZWNvbmQ9NjMgYW1vdW50PS0wLjQ1DQprZXJuaW5nIGZpcnN0PTI0MCBzZWNvbmQ9OTMgYW1vdW50PS0wLjUxDQprZXJuaW5nIGZpcnN0PTI0MCBzZWNvbmQ9MTIwIGFtb3VudD0tMC4yNg0Ka2VybmluZyBmaXJzdD0yNDAgc2Vjb25kPTEyNSBhbW91bnQ9LTAuNDINCmtlcm5pbmcgZmlyc3Q9MjQwIHNlY29uZD04MjE2IGFtb3VudD0tMC42NA0Ka2VybmluZyBmaXJzdD0yNDAgc2Vjb25kPTgyMTcgYW1vdW50PS0wLjYxDQprZXJuaW5nIGZpcnN0PTI0MCBzZWNvbmQ9ODIxOCBhbW91bnQ9LTAuMjkNCmtlcm5pbmcgZmlyc3Q9MjQwIHNlY29uZD04NDgyIGFtb3VudD0tMC40OA0Ka2VybmluZyBmaXJzdD04MjE2IHNlY29uZD00NCBhbW91bnQ9LTQuMjYNCmtlcm5pbmcgZmlyc3Q9ODIxNiBzZWNvbmQ9NDYgYW1vdW50PS00LjIyDQprZXJuaW5nIGZpcnN0PTgyMTYgc2Vjb25kPTY1IGFtb3VudD0tMS42Mw0Ka2VybmluZyBmaXJzdD04MjE2IHNlY29uZD03NyBhbW91bnQ9LTAuNjQNCmtlcm5pbmcgZmlyc3Q9ODIxNiBzZWNvbmQ9OTcgYW1vdW50PS0xLjk4DQprZXJuaW5nIGZpcnN0PTgyMTYgc2Vjb25kPTk5IGFtb3VudD0tMi4zNw0Ka2VybmluZyBmaXJzdD04MjE2IHNlY29uZD0xMDIgYW1vdW50PS0wLjQyDQprZXJuaW5nIGZpcnN0PTgyMTYgc2Vjb25kPTEwMyBhbW91bnQ9LTIuMTQNCmtlcm5pbmcgZmlyc3Q9ODIxNiBzZWNvbmQ9MTA5IGFtb3VudD0tMS40NA0Ka2VybmluZyBmaXJzdD04MjE2IHNlY29uZD0xMTUgYW1vdW50PS0yLjAyDQprZXJuaW5nIGZpcnN0PTgyMTYgc2Vjb25kPTExNiBhbW91bnQ9LTAuMjYNCmtlcm5pbmcgZmlyc3Q9ODIxNiBzZWNvbmQ9MTE3IGFtb3VudD0tMS4zOA0Ka2VybmluZyBmaXJzdD04MjE2IHNlY29uZD0xMTggYW1vdW50PS0wLjk2DQprZXJuaW5nIGZpcnN0PTgyMTYgc2Vjb25kPTExOSBhbW91bnQ9LTAuOTMNCmtlcm5pbmcgZmlyc3Q9ODIxNiBzZWNvbmQ9MTIwIGFtb3VudD0tMC45OQ0Ka2VybmluZyBmaXJzdD04MjE2IHNlY29uZD0xMjEgYW1vdW50PS0wLjkzDQprZXJuaW5nIGZpcnN0PTgyMTYgc2Vjb25kPTEyMiBhbW91bnQ9LTEuMjUNCmtlcm5pbmcgZmlyc3Q9ODIxNiBzZWNvbmQ9MTk4IGFtb3VudD0tMi4xMQ0Ka2VybmluZyBmaXJzdD04MjE2IHNlY29uZD0yMjMgYW1vdW50PS0wLjM1DQprZXJuaW5nIGZpcnN0PTgyMTYgc2Vjb25kPTIzOCBhbW91bnQ9MS4xOA0Ka2VybmluZyBmaXJzdD04MjE2IHNlY29uZD0yNDAgYW1vdW50PS0wLjY3DQprZXJuaW5nIGZpcnN0PTgyMTcgc2Vjb25kPTM4IGFtb3VudD0tMC41NA0Ka2VybmluZyBmaXJzdD04MjE3IHNlY29uZD00MiBhbW91bnQ9MC4xNg0Ka2VybmluZyBmaXJzdD04MjE3IHNlY29uZD00NCBhbW91bnQ9LTQuNjcNCmtlcm5pbmcgZmlyc3Q9ODIxNyBzZWNvbmQ9NDUgYW1vdW50PS0yLjQNCmtlcm5pbmcgZmlyc3Q9ODIxNyBzZWNvbmQ9NDYgYW1vdW50PS00LjY3DQprZXJuaW5nIGZpcnN0PTgyMTcgc2Vjb25kPTQ3IGFtb3VudD0tMS41DQprZXJuaW5nIGZpcnN0PTgyMTcgc2Vjb25kPTY0IGFtb3VudD0tMS40Nw0Ka2VybmluZyBmaXJzdD04MjE3IHNlY29uZD02NSBhbW91bnQ9LTEuNzkNCmtlcm5pbmcgZmlyc3Q9ODIxNyBzZWNvbmQ9NjcgYW1vdW50PS0wLjcNCmtlcm5pbmcgZmlyc3Q9ODIxNyBzZWNvbmQ9NzcgYW1vdW50PS0wLjcNCmtlcm5pbmcgZmlyc3Q9ODIxNyBzZWNvbmQ9ODkgYW1vdW50PTAuMTkNCmtlcm5pbmcgZmlyc3Q9ODIxNyBzZWNvbmQ9OTcgYW1vdW50PS0yLjQ2DQprZXJuaW5nIGZpcnN0PTgyMTcgc2Vjb25kPTk5IGFtb3VudD0tMi44NQ0Ka2VybmluZyBmaXJzdD04MjE3IHNlY29uZD0xMDIgYW1vdW50PS0wLjQyDQprZXJuaW5nIGZpcnN0PTgyMTcgc2Vjb25kPTEwMyBhbW91bnQ9LTIuNjINCmtlcm5pbmcgZmlyc3Q9ODIxNyBzZWNvbmQ9MTA5IGFtb3VudD0tMS44Ng0Ka2VybmluZyBmaXJzdD04MjE3IHNlY29uZD0xMTUgYW1vdW50PS0yLjUNCmtlcm5pbmcgZmlyc3Q9ODIxNyBzZWNvbmQ9MTE2IGFtb3VudD0tMC4zOA0Ka2VybmluZyBmaXJzdD04MjE3IHNlY29uZD0xMTcgYW1vdW50PS0xLjc5DQprZXJuaW5nIGZpcnN0PTgyMTcgc2Vjb25kPTExOCBhbW91bnQ9LTEuMzQNCmtlcm5pbmcgZmlyc3Q9ODIxNyBzZWNvbmQ9MTE5IGFtb3VudD0tMS4zMQ0Ka2VybmluZyBmaXJzdD04MjE3IHNlY29uZD0xMjAgYW1vdW50PS0xLjM4DQprZXJuaW5nIGZpcnN0PTgyMTcgc2Vjb25kPTEyMSBhbW91bnQ9LTEuMzENCmtlcm5pbmcgZmlyc3Q9ODIxNyBzZWNvbmQ9MTIyIGFtb3VudD0tMS42Ng0Ka2VybmluZyBmaXJzdD04MjE3IHNlY29uZD0xNzEgYW1vdW50PS0yLjA1DQprZXJuaW5nIGZpcnN0PTgyMTcgc2Vjb25kPTE3NCBhbW91bnQ9LTAuMzUNCmtlcm5pbmcgZmlyc3Q9ODIxNyBzZWNvbmQ9MTg3IGFtb3VudD0tMS4xNQ0Ka2VybmluZyBmaXJzdD04MjE3IHNlY29uZD0xOTggYW1vdW50PS0yLjMNCmtlcm5pbmcgZmlyc3Q9ODIxNyBzZWNvbmQ9MjIzIGFtb3VudD0tMC40OA0Ka2VybmluZyBmaXJzdD04MjE3IHNlY29uZD0yMjYgYW1vdW50PS0yLjIxDQprZXJuaW5nIGZpcnN0PTgyMTcgc2Vjb25kPTIzNCBhbW91bnQ9LTIuNjINCmtlcm5pbmcgZmlyc3Q9ODIxNyBzZWNvbmQ9MjM4IGFtb3VudD0xLjQxDQprZXJuaW5nIGZpcnN0PTgyMTcgc2Vjb25kPTIzOSBhbW91bnQ9MC45DQprZXJuaW5nIGZpcnN0PTgyMTcgc2Vjb25kPTI0MCBhbW91bnQ9LTAuNjENCmtlcm5pbmcgZmlyc3Q9ODIxNyBzZWNvbmQ9MjU0IGFtb3VudD0tMS4wMg0Ka2VybmluZyBmaXJzdD04MjE3IHNlY29uZD0zNTMgYW1vdW50PS0wLjc3DQprZXJuaW5nIGZpcnN0PTgyMTcgc2Vjb25kPTgyMTggYW1vdW50PS00LjY3DQprZXJuaW5nIGZpcnN0PTgyMTcgc2Vjb25kPTg0ODIgYW1vdW50PTAuMjkNCmtlcm5pbmcgZmlyc3Q9ODIxOCBzZWNvbmQ9MzQgYW1vdW50PS0zLjUyDQprZXJuaW5nIGZpcnN0PTgyMTggc2Vjb25kPTY3IGFtb3VudD0tMC40NQ0Ka2VybmluZyBmaXJzdD04MjE4IHNlY29uZD04NCBhbW91bnQ9LTEuMzQNCmtlcm5pbmcgZmlyc3Q9ODIxOCBzZWNvbmQ9ODUgYW1vdW50PS0wLjQyDQprZXJuaW5nIGZpcnN0PTgyMTggc2Vjb25kPTg2IGFtb3VudD0tMS4zOA0Ka2VybmluZyBmaXJzdD04MjE4IHNlY29uZD04NyBhbW91bnQ9LTAuOTYNCmtlcm5pbmcgZmlyc3Q9ODIxOCBzZWNvbmQ9ODkgYW1vdW50PS0xLjMxDQprZXJuaW5nIGZpcnN0PTgyMTggc2Vjb25kPTEwMiBhbW91bnQ9LTAuNDgNCmtlcm5pbmcgZmlyc3Q9ODIxOCBzZWNvbmQ9MTE2IGFtb3VudD0tMC41NA0Ka2VybmluZyBmaXJzdD04MjE4IHNlY29uZD0xMTggYW1vdW50PS0wLjkzDQprZXJuaW5nIGZpcnN0PTgyMTggc2Vjb25kPTExOSBhbW91bnQ9LTAuNjQNCmtlcm5pbmcgZmlyc3Q9ODIxOCBzZWNvbmQ9MTIxIGFtb3VudD0tMS4wOQ0Ka2VybmluZyBmaXJzdD04MjE4IHNlY29uZD0yMjMgYW1vdW50PS0wLjQ1DQprZXJuaW5nIGZpcnN0PTgyMTggc2Vjb25kPTgyMTcgYW1vdW50PS00LjMyDQprZXJuaW5nIGZpcnN0PTgyMjAgc2Vjb25kPTIzOCBhbW91bnQ9MS4xOA0Ka2VybmluZyBmaXJzdD04MjIxIHNlY29uZD0yMjYgYW1vdW50PS0yLjIxDQprZXJuaW5nIGZpcnN0PTgyMjEgc2Vjb25kPTIzNCBhbW91bnQ9LTIuNjINCmtlcm5pbmcgZmlyc3Q9ODIyMSBzZWNvbmQ9MjM4IGFtb3VudD0xLjQxDQprZXJuaW5nIGZpcnN0PTgyMjEgc2Vjb25kPTIzOSBhbW91bnQ9MC45DQprZXJuaW5nIGZpcnN0PTgyMjEgc2Vjb25kPTI1NCBhbW91bnQ9LTEuMDINCmtlcm5pbmcgZmlyc3Q9ODIyMSBzZWNvbmQ9MzUzIGFtb3VudD0tMC43Nw0Ka2VybmluZyBmaXJzdD04MjUwIHNlY29uZD0yMDggYW1vdW50PTAuMTkNCmtlcm5pbmcgZmlyc3Q9ODQ4MiBzZWNvbmQ9NjUgYW1vdW50PS0wLjc3DQprZXJuaW5nIGZpcnN0PTg0ODIgc2Vjb25kPTE5OCBhbW91bnQ9LTAuOQ0Ka2VybmluZyBmaXJzdD04NDgyIHNlY29uZD0yMDggYW1vdW50PTAuMzINCmtlcm5pbmcgZmlyc3Q9ODQ4MiBzZWNvbmQ9MjM4IGFtb3VudD0wLjM1"},{ name : "default.png", data : ""},{ name : "default.frag.gl3.glsl", data : "I3ZlcnNpb24gMzMwIGNvcmUNCg0KaW4gdmVjNCBjb2xvcjsNCmluIHZlYzIgdGNvb3JkOw0KDQpvdXQgdmVjNCBmcmFnOw0KDQp2b2lkIG1haW4oKXsNCiAgICBmcmFnID0gY29sb3I7DQp9DQo"},{ name : "default.frag.textured.glsl", data : "dW5pZm9ybSBzYW1wbGVyMkQgdGV4MDsNCnZhcnlpbmcgdmVjMiB0Y29vcmQ7DQp2YXJ5aW5nIHZlYzQgY29sb3I7DQoNCnZvaWQgbWFpbigpIHsNCiAgICB2ZWM0IHRleGNvbG9yID0gdGV4dHVyZTJEKHRleDAsIHRjb29yZCk7DQogICAgZ2xfRnJhZ0NvbG9yID0gY29sb3IgKiB0ZXhjb2xvcjsNCn0"},{ name : "default.frag.bitmapfont.glsl", data : "I2RlZmluZSBPVVRMSU5FIDENCiNkZWZpbmUgR0xPVyAxDQojZGVmaW5lIFNVUEVSU0FNUExFIDENCg0KdW5pZm9ybSBzYW1wbGVyMkQgdGV4MDsNCnZhcnlpbmcgdmVjMiB0Y29vcmQ7DQp2YXJ5aW5nIHZlYzQgY29sb3I7DQoNCnVuaWZvcm0gZmxvYXQgc21vb3RobmVzczsNCnVuaWZvcm0gZmxvYXQgdGhpY2tuZXNzOw0KDQp1bmlmb3JtIHZlYzQgb3V0bGluZV9jb2xvcjsNCnVuaWZvcm0gZmxvYXQgb3V0bGluZTsNCg0KdW5pZm9ybSB2ZWM0IGdsb3dfY29sb3I7DQp1bmlmb3JtIGZsb2F0IGdsb3dfdGhyZXNob2xkOw0KdW5pZm9ybSBmbG9hdCBnbG93X2Ftb3VudDsNCg0KDQpmbG9hdCBlZGdlKGZsb2F0IHZhbHVlLCBmbG9hdCBhbW91bnQsIGZsb2F0IHQpIHsNCiAgICByZXR1cm4gc21vb3Roc3RlcCh2YWx1ZSAtIGFtb3VudCwgdmFsdWUgKyBhbW91bnQsIHQpOw0KfQ0KDQpmbG9hdCBnZXQodmVjMiB1diwgZmxvYXQgd2lkdGgpIHsNCiAgICBmbG9hdCB0ZXhhID0gdGV4dHVyZTJEKHRleDAsIHV2KS5hOw0KICAgIHJldHVybiBzbW9vdGhzdGVwKDAuNSAtIHdpZHRoLCAwLjUgKyB3aWR0aCwgdGV4YSk7DQp9DQoNCnZvaWQgbWFpbigpIHsNCg0KLy9iYXNpYyBzZGYNCg0KICAgIGZsb2F0IGRpc3QgPSB0ZXh0dXJlMkQodGV4MCwgdGNvb3JkKS5hOw0KICAgICAgICAvL2Z3aWR0aCBrZWVwcyB3aWR0aCBzaW1pbGFyIGRlc3BpdGUgc2NhbGluZywgc2VlIGJlbG93IGZvciBvcHRpb25zDQogICAgZmxvYXQgc21vb3RoYW10ID0gc21vb3RobmVzcyAqIGZ3aWR0aChkaXN0KTsNCiAgICAvLyBmbG9hdCBzbW9vdGhhbXQgPSBzbW9vdGhuZXNzICogbGVuZ3RoKHZlYzIoZEZkeChkaXN0KSwgZEZkeShkaXN0KSkpOw0KDQogICAgICAgIC8vY2FsY3VsYXRlIHRoZSBlZGdlIHNtb290aGluZw0KICAgIGZsb2F0IGFscGhhID0gZWRnZSgxLjAgLSB0aGlja25lc3MsIHNtb290aGFtdCwgZGlzdCk7DQoNCi8vc3VwZXIgc2FtcGxpbmcNCg0KICAgICAgICAjaWYgU1VQRVJTQU1QTEUgPT0gMQ0KDQogICAgICAgICAgICAgICAgLy90aGVzZSB2YWx1ZXMgY2FuIGJlIGV4cG9zZWQgbGF0ZXINCiAgICAgICAgICAgICAgICAvL3RoZSBjdXJyZW50IGJlaW5nIDAuMjUvc3FydCgyKQ0KICAgICAgICAgICAgZmxvYXQgZmFjdG9yID0gMC4xNzY3NzY2OTUzOw0KICAgICAgICAgICAgZmxvYXQgc2FtcGxlYW10ID0gMC41Ow0KICAgICAgICAgICAgICAgIC8vdGhpcyBpcyBhIHNpbXBsZSBib3ggZmlsdGVyIGFyb3VuZCB0aGUgcG9pbnQsDQogICAgICAgICAgICAgICAgLy93ZSB1c2UgYSBzZXBhcmF0ZSB3aWR0aCBmb3Igbm93DQogICAgICAgICAgICBmbG9hdCBzYW1wbGV3ID0gc2FtcGxlYW10ICogZndpZHRoKGRpc3QpOw0KICAgICAgICAgICAgdmVjMiBzYW1wbGVvZmZzZXQgPSBmYWN0b3IgKiAoZEZkeCh0Y29vcmQpICsgZEZkeSh0Y29vcmQpKTsNCiAgICAgICAgICAgIHZlYzQgZmx0ciA9IHZlYzQodGNvb3JkIC0gc2FtcGxlb2Zmc2V0LCB0Y29vcmQgKyBzYW1wbGVvZmZzZXQpOw0KDQogICAgICAgICAgICBmbG9hdCB0b3RhbCA9IGdldCggZmx0ci54eSwgc2FtcGxldyApICsgZ2V0KCBmbHRyLnp3LCBzYW1wbGV3ICkgKw0KICAgICAgICAgICAgICAgICAgICAgICAgICBnZXQoIGZsdHIueHcsIHNhbXBsZXcgKSArIGdldCggZmx0ci56eSwgc2FtcGxldyApOw0KDQogICAgICAgICAgICBhbHBoYSA9IChhbHBoYSArIDAuNSAqIHRvdGFsKSAvIDMuMDsNCg0KICAgICAgICAjZW5kaWYgLy9TVVBFUlNBTVBMRQ0KDQogICAgICAgIC8vdGhlIGJhc2UgY29sb3IgKyBzY2FsZWQgYnkgdGhlIG5ldyBhbHBoYQ0KICAgIHZlYzQgZmluYWxDb2xvciA9IHZlYzQoY29sb3IucmdiLCBjb2xvci5hICogYWxwaGEpOw0KDQovL291dGxpbmUNCg0KICAgICNpZiBPVVRMSU5FID09IDENCg0KICAgICAgICAgICAgLy93aXANCiAgICAgICAgaWYob3V0bGluZSA+IDAuMCkgew0KDQogICAgICAgICAgICAvL3JhbmdlIG9mIDEuMCB+IDAuMSwgd2UgZ2V0IDAgfiAxDQogICAgICAgICAgICBmbG9hdCBfb3V0bGluZSA9IDAuOSAtIChvdXRsaW5lICogMC45KTsNCiAgICAgICAgICAgIGZsb2F0IF9vdXRsaW5lX2EgPSBlZGdlKF9vdXRsaW5lLCBzbW9vdGhhbXQsIGRpc3QpOw0KICAgICAgICAgICAgdmVjNCBfb3V0bGluZV9jID0gdmVjNChvdXRsaW5lX2NvbG9yLnJnYiwgb3V0bGluZV9jb2xvci5hICogX291dGxpbmVfYSk7DQoNCiAgICAgICAgICAgIGZpbmFsQ29sb3IgPSBtaXgoX291dGxpbmVfYywgZmluYWxDb2xvciwgYWxwaGEpOw0KDQogICAgICAgIH0gLy9vdXRsaW5lID4gMC4wDQoNCiAgICAjZW5kaWYgLy9PVVRMSU5FDQoNCi8vIGdsb3cNCg0KICAgICNpZiBHTE9XID09IDENCg0KICAgICAgICAgICAgLy93aXANCiAgICAgICAgaWYoZ2xvd19hbW91bnQgPiAwLjApIHsNCg0KICAgICAgICAgICAgLy86dG9kbzogZXhwb3NlIG9mZnNldCBmb3IgZGlyZWN0aW9uYWwgc2hhZG93DQogICAgICAgICAgICAvLyB2ZWMyIF9nbG93X29mZnMgPSB2ZWMyKDAsMCk7DQogICAgICAgICAgICAvLyBmbG9hdCBfZ2xvd19kaXN0ID0gdGV4dHVyZTJEKHRleDAsIHRjb29yZCAtIF9nbG93X29mZnNldCkuYTsNCg0KICAgICAgICAgICAgZmxvYXQgX2dsb3dfYW10ID0gMS4wIC0gZ2xvd19hbW91bnQ7DQogICAgICAgICAgICBmbG9hdCBfZ2xvd19saW1pdCA9IChfZ2xvd19hbXQgKiBnbG93X3RocmVzaG9sZCk7DQogICAgICAgICAgICBmbG9hdCBfZ2xvd19hID0gZWRnZShfZ2xvd19hbXQsIF9nbG93X2xpbWl0LCBkaXN0KTsNCiAgICAgICAgICAgIHZlYzQgIF9nbG93X2MgPSB2ZWM0KGdsb3dfY29sb3IucmdiLCBnbG93X2NvbG9yLmEgKiBfZ2xvd19hKTsNCg0KICAgICAgICAgICAgZmluYWxDb2xvciA9IG1peChfZ2xvd19jLCBmaW5hbENvbG9yLCBmaW5hbENvbG9yLmEpOw0KDQogICAgICAgIH0gLy9nbG93X2Ftb3VudCA+IDANCg0KICAgICNlbmRpZiAvL0dMT1cNCg0KLy9kb25lDQoNCiAgICBnbF9GcmFnQ29sb3IgPSBmaW5hbENvbG9yOw0KDQoNCn0gLy9tYWluDQo"}];
var __map_reserved = {}
var ArrayBuffer = (Function("return typeof ArrayBuffer != 'undefined' ? ArrayBuffer : null"))() || js_html_compat_ArrayBuffer;
if(ArrayBuffer.prototype.slice == null) ArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl;
var DataView = (Function("return typeof DataView != 'undefined' ? DataView : null"))() || js_html_compat_DataView;
var Uint8Array = (Function("return typeof Uint8Array != 'undefined' ? Uint8Array : null"))() || js_html_compat_Uint8Array._new;
Xml.Element = 0;
Xml.PCData = 1;
Xml.CData = 2;
Xml.Comment = 3;
Xml.DocType = 4;
Xml.ProcessingInstruction = 5;
Xml.Document = 6;
ch_nectoria_NP.currentLvl = "corcelles";
ch_nectoria_NP.levels = ["level0","level1"];
ch_nectoria_NP.currentPlayerHealth = 1;
ch_nectoria_NP.maxPlayerHealth = 3;
ch_nectoria_NP.deadPlayer = false;
ch_nectoria_NP.posPlayer = new phoenix_Vector(120,100);
ch_nectoria_NP.frozenPlayer = false;
ch_nectoria_NP.currentCoinsCount = 0;
ch_nectoria_NP.displayingMessage = false;
ch_nectoria_NP.actor_list = [];
ch_nectoria_NP.level_shape_list = [];
ch_nectoria_NP.entity_shape_list = [];
ch_nectoria_ui_MessageBox.TEXT_SPEED = 1;
haxe_Serializer.USE_CACHE = false;
haxe_Serializer.USE_ENUM_INDEX = false;
haxe_Serializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_Unserializer.DEFAULT_RESOLVER = Type;
haxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS);
haxe_ds_ObjectMap.count = 0;
haxe_io_FPHelper.i64tmp = (function($this) {
	var $r;
	var x = new haxe__$Int64__$_$_$Int64(0,0);
	$r = x;
	return $r;
}(this));
haxe_xml_Parser.escapes = (function($this) {
	var $r;
	var h = new haxe_ds_StringMap();
	if(__map_reserved.lt != null) h.setReserved("lt","<"); else h.h["lt"] = "<";
	if(__map_reserved.gt != null) h.setReserved("gt",">"); else h.h["gt"] = ">";
	if(__map_reserved.amp != null) h.setReserved("amp","&"); else h.h["amp"] = "&";
	if(__map_reserved.quot != null) h.setReserved("quot","\""); else h.h["quot"] = "\"";
	if(__map_reserved.apos != null) h.setReserved("apos","'"); else h.h["apos"] = "'";
	$r = h;
	return $r;
}(this));
haxe_zip_InflateImpl.LEN_EXTRA_BITS_TBL = [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,-1,-1];
haxe_zip_InflateImpl.LEN_BASE_VAL_TBL = [3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258];
haxe_zip_InflateImpl.DIST_EXTRA_BITS_TBL = [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,-1,-1];
haxe_zip_InflateImpl.DIST_BASE_VAL_TBL = [1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577];
haxe_zip_InflateImpl.CODE_LENGTHS_POS = [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];
js_Boot.__toStr = {}.toString;
js_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1;
luxe_Debug.debug_batch_tag = "batcher.debug_batcher";
luxe_Debug.trace_callbacks = [];
luxe_Debug.shut_down = false;
luxe_Debug.tracing = false;
luxe_Tag.update = "update dt";
luxe_Tag.tick = "tick dt";
luxe_Tag.game_update = "game.update";
luxe_Tag.render = "core.render";
luxe_Tag.debug = "core.debug";
luxe_Tag.updates = "core.updates";
luxe_Tag.events = "core.events";
luxe_Tag.audio = "core.audio";
luxe_Tag.input = "core.input";
luxe_Tag.timer = "core.timer";
luxe_Tag.scene = "core.scene";
luxe_Log._level = 1;
luxe_Log._log_width = 16;
luxe_Physics.tag_physics = "physics";
luxe_collision_sat_SAT2D.tmp1 = new luxe_collision_data_ShapeCollision();
luxe_collision_sat_SAT2D.tmp2 = new luxe_collision_data_ShapeCollision();
luxe_components_sprite_SpriteAnimationData.frame_range_regex = new EReg("(\\d*)(\\b\\s*?-\\s*?\\b)(\\d*)","gi");
luxe_components_sprite_SpriteAnimationData.frame_hold_regex = new EReg("(\\d*)(\\shold\\s)(\\d*)","gi");
luxe_components_sprite_SpriteAnimationData.frame_hold_prev_regex = new EReg("(\\bhold\\s)(\\d*)","gi");
luxe_components_sprite_SpriteAnimationData.frame_regex = new EReg("(\\d*)","gi");
luxe_debug_ProfilerDebugView.color_red = new phoenix_Color().rgb(13369344);
luxe_debug_ProfilerDebugView.color_green = new phoenix_Color().rgb(2263108);
luxe_debug_ProfilerDebugView.color_normal = new phoenix_Color().rgb(15790320);
luxe_importers_tiled_TiledLayer.base_chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
luxe_importers_tiled_TiledLayer.base_lookup = [];
luxe_macros_BuildVersion._save = false;
luxe_structural__$BalancedBST_NodeColor.red = true;
luxe_structural__$BalancedBST_NodeColor.black = false;
luxe_tween_actuators_SimpleActuator.actuators = [];
luxe_tween_actuators_SimpleActuator.actuatorsLength = 0;
luxe_tween_actuators_SimpleActuator.addedEvent = false;
luxe_tween_actuators_SimpleActuator.update_timer = 0;
luxe_tween_actuators_SimpleActuator.current_time = 0;
luxe_tween_Actuate.defaultActuator = luxe_tween_actuators_SimpleActuator;
luxe_tween_Actuate.defaultEase = luxe_tween_easing_Quad.get_easeOut();
luxe_tween_Actuate.targetLibraries = new haxe_ds_ObjectMap();
luxe_utils_GeometryUtils.two_pi = 6.283185307179586;
luxe_utils_Maths._PI_OVER_180 = 0.017453292519943278;
luxe_utils_Maths._180_OVER_PI = 57.29577951308238;
luxe_utils_unifill_Unicode.minCodePoint = 0;
luxe_utils_unifill_Unicode.maxCodePoint = 1114111;
luxe_utils_unifill_Unicode.minHighSurrogate = 55296;
luxe_utils_unifill_Unicode.maxHighSurrogate = 56319;
luxe_utils_unifill_Unicode.minLowSurrogate = 56320;
luxe_utils_unifill_Unicode.maxLowSurrogate = 57343;
phoenix_Batcher._sequence_key = -1;
phoenix_Batcher.all = [];
phoenix_Batcher.vert_attribute = 0;
phoenix_Batcher.tcoord_attribute = 1;
phoenix_Batcher.color_attribute = 2;
phoenix_Batcher.normal_attribute = 3;
phoenix_Texture.default_filter = 9729;
phoenix_Texture.default_clamp = 33071;
phoenix_geometry_Geometry._sequence_key = -1;
phoenix_geometry_TextGeometry.tab_regex = new EReg("\t","gim");
snow_Snow.next_queue = [];
snow_Snow.defer_queue = [];
snow_api_Debug._level = 1;
snow_api_Debug._log_width = 16;
snow_api_Promises.calls = [];
snow_api_Promises.defers = [];
snow_api_Timer.running_timers = [];
snow_api_buffers__$Float32Array_Float32Array_$Impl_$.BYTES_PER_ELEMENT = 4;
snow_api_buffers__$Int32Array_Int32Array_$Impl_$.BYTES_PER_ELEMENT = 4;
snow_api_buffers__$Uint8Array_Uint8Array_$Impl_$.BYTES_PER_ELEMENT = 1;
snow_core_web_Runtime.web_window_id = 1;
snow_core_web_Runtime.timestamp_start = 0.0;
snow_core_web_Runtime.key_press_ignored = [8,13];
snow_core_web__$Runtime_DOMKeys.dom_shift = 16;
snow_core_web__$Runtime_DOMKeys.dom_ctrl = 17;
snow_core_web__$Runtime_DOMKeys.dom_alt = 18;
snow_core_web__$Runtime_DOMKeys.dom_capslock = 20;
snow_core_web__$Runtime_DOMKeys.dom_pageup = 33;
snow_core_web__$Runtime_DOMKeys.dom_pagedown = 34;
snow_core_web__$Runtime_DOMKeys.dom_end = 35;
snow_core_web__$Runtime_DOMKeys.dom_home = 36;
snow_core_web__$Runtime_DOMKeys.dom_left = 37;
snow_core_web__$Runtime_DOMKeys.dom_up = 38;
snow_core_web__$Runtime_DOMKeys.dom_right = 39;
snow_core_web__$Runtime_DOMKeys.dom_down = 40;
snow_core_web__$Runtime_DOMKeys.dom_printscr = 44;
snow_core_web__$Runtime_DOMKeys.dom_insert = 45;
snow_core_web__$Runtime_DOMKeys.dom_delete = 46;
snow_core_web__$Runtime_DOMKeys.dom_lmeta = 91;
snow_core_web__$Runtime_DOMKeys.dom_rmeta = 93;
snow_core_web__$Runtime_DOMKeys.dom_kp_0 = 96;
snow_core_web__$Runtime_DOMKeys.dom_kp_1 = 97;
snow_core_web__$Runtime_DOMKeys.dom_kp_2 = 98;
snow_core_web__$Runtime_DOMKeys.dom_kp_3 = 99;
snow_core_web__$Runtime_DOMKeys.dom_kp_4 = 100;
snow_core_web__$Runtime_DOMKeys.dom_kp_5 = 101;
snow_core_web__$Runtime_DOMKeys.dom_kp_6 = 102;
snow_core_web__$Runtime_DOMKeys.dom_kp_7 = 103;
snow_core_web__$Runtime_DOMKeys.dom_kp_8 = 104;
snow_core_web__$Runtime_DOMKeys.dom_kp_9 = 105;
snow_core_web__$Runtime_DOMKeys.dom_kp_multiply = 106;
snow_core_web__$Runtime_DOMKeys.dom_kp_plus = 107;
snow_core_web__$Runtime_DOMKeys.dom_kp_minus = 109;
snow_core_web__$Runtime_DOMKeys.dom_kp_decimal = 110;
snow_core_web__$Runtime_DOMKeys.dom_kp_divide = 111;
snow_core_web__$Runtime_DOMKeys.dom_kp_numlock = 144;
snow_core_web__$Runtime_DOMKeys.dom_f1 = 112;
snow_core_web__$Runtime_DOMKeys.dom_f2 = 113;
snow_core_web__$Runtime_DOMKeys.dom_f3 = 114;
snow_core_web__$Runtime_DOMKeys.dom_f4 = 115;
snow_core_web__$Runtime_DOMKeys.dom_f5 = 116;
snow_core_web__$Runtime_DOMKeys.dom_f6 = 117;
snow_core_web__$Runtime_DOMKeys.dom_f7 = 118;
snow_core_web__$Runtime_DOMKeys.dom_f8 = 119;
snow_core_web__$Runtime_DOMKeys.dom_f9 = 120;
snow_core_web__$Runtime_DOMKeys.dom_f10 = 121;
snow_core_web__$Runtime_DOMKeys.dom_f11 = 122;
snow_core_web__$Runtime_DOMKeys.dom_f12 = 123;
snow_core_web__$Runtime_DOMKeys.dom_f13 = 124;
snow_core_web__$Runtime_DOMKeys.dom_f14 = 125;
snow_core_web__$Runtime_DOMKeys.dom_f15 = 126;
snow_core_web__$Runtime_DOMKeys.dom_f16 = 127;
snow_core_web__$Runtime_DOMKeys.dom_f17 = 128;
snow_core_web__$Runtime_DOMKeys.dom_f18 = 129;
snow_core_web__$Runtime_DOMKeys.dom_f19 = 130;
snow_core_web__$Runtime_DOMKeys.dom_f20 = 131;
snow_core_web__$Runtime_DOMKeys.dom_f21 = 132;
snow_core_web__$Runtime_DOMKeys.dom_f22 = 133;
snow_core_web__$Runtime_DOMKeys.dom_f23 = 134;
snow_core_web__$Runtime_DOMKeys.dom_f24 = 135;
snow_core_web__$Runtime_DOMKeys.dom_caret = 160;
snow_core_web__$Runtime_DOMKeys.dom_exclaim = 161;
snow_core_web__$Runtime_DOMKeys.dom_quotedbl = 162;
snow_core_web__$Runtime_DOMKeys.dom_hash = 163;
snow_core_web__$Runtime_DOMKeys.dom_dollar = 164;
snow_core_web__$Runtime_DOMKeys.dom_percent = 165;
snow_core_web__$Runtime_DOMKeys.dom_ampersand = 166;
snow_core_web__$Runtime_DOMKeys.dom_underscore = 167;
snow_core_web__$Runtime_DOMKeys.dom_leftparen = 168;
snow_core_web__$Runtime_DOMKeys.dom_rightparen = 169;
snow_core_web__$Runtime_DOMKeys.dom_asterisk = 170;
snow_core_web__$Runtime_DOMKeys.dom_plus = 171;
snow_core_web__$Runtime_DOMKeys.dom_pipe = 172;
snow_core_web__$Runtime_DOMKeys.dom_minus = 173;
snow_core_web__$Runtime_DOMKeys.dom_leftbrace = 174;
snow_core_web__$Runtime_DOMKeys.dom_rightbrace = 175;
snow_core_web__$Runtime_DOMKeys.dom_tilde = 176;
snow_core_web__$Runtime_DOMKeys.dom_audiomute = 181;
snow_core_web__$Runtime_DOMKeys.dom_volumedown = 182;
snow_core_web__$Runtime_DOMKeys.dom_volumeup = 183;
snow_core_web__$Runtime_DOMKeys.dom_comma = 188;
snow_core_web__$Runtime_DOMKeys.dom_period = 190;
snow_core_web__$Runtime_DOMKeys.dom_slash = 191;
snow_core_web__$Runtime_DOMKeys.dom_backquote = 192;
snow_core_web__$Runtime_DOMKeys.dom_leftbracket = 219;
snow_core_web__$Runtime_DOMKeys.dom_rightbracket = 221;
snow_core_web__$Runtime_DOMKeys.dom_backslash = 220;
snow_core_web__$Runtime_DOMKeys.dom_quote = 222;
snow_core_web__$Runtime_DOMKeys.dom_meta = 224;
snow_core_web_assets_Assets.POT = true;
snow_modules_opengl_web_GL.DEPTH_BUFFER_BIT = 256;
snow_modules_opengl_web_GL.STENCIL_BUFFER_BIT = 1024;
snow_modules_opengl_web_GL.COLOR_BUFFER_BIT = 16384;
snow_modules_opengl_web_GL.POINTS = 0;
snow_modules_opengl_web_GL.LINES = 1;
snow_modules_opengl_web_GL.LINE_LOOP = 2;
snow_modules_opengl_web_GL.LINE_STRIP = 3;
snow_modules_opengl_web_GL.TRIANGLES = 4;
snow_modules_opengl_web_GL.TRIANGLE_STRIP = 5;
snow_modules_opengl_web_GL.TRIANGLE_FAN = 6;
snow_modules_opengl_web_GL.ZERO = 0;
snow_modules_opengl_web_GL.ONE = 1;
snow_modules_opengl_web_GL.SRC_COLOR = 768;
snow_modules_opengl_web_GL.ONE_MINUS_SRC_COLOR = 769;
snow_modules_opengl_web_GL.SRC_ALPHA = 770;
snow_modules_opengl_web_GL.ONE_MINUS_SRC_ALPHA = 771;
snow_modules_opengl_web_GL.DST_ALPHA = 772;
snow_modules_opengl_web_GL.ONE_MINUS_DST_ALPHA = 773;
snow_modules_opengl_web_GL.DST_COLOR = 774;
snow_modules_opengl_web_GL.ONE_MINUS_DST_COLOR = 775;
snow_modules_opengl_web_GL.SRC_ALPHA_SATURATE = 776;
snow_modules_opengl_web_GL.FUNC_ADD = 32774;
snow_modules_opengl_web_GL.BLEND_EQUATION = 32777;
snow_modules_opengl_web_GL.BLEND_EQUATION_RGB = 32777;
snow_modules_opengl_web_GL.BLEND_EQUATION_ALPHA = 34877;
snow_modules_opengl_web_GL.FUNC_SUBTRACT = 32778;
snow_modules_opengl_web_GL.FUNC_REVERSE_SUBTRACT = 32779;
snow_modules_opengl_web_GL.BLEND_DST_RGB = 32968;
snow_modules_opengl_web_GL.BLEND_SRC_RGB = 32969;
snow_modules_opengl_web_GL.BLEND_DST_ALPHA = 32970;
snow_modules_opengl_web_GL.BLEND_SRC_ALPHA = 32971;
snow_modules_opengl_web_GL.CONSTANT_COLOR = 32769;
snow_modules_opengl_web_GL.ONE_MINUS_CONSTANT_COLOR = 32770;
snow_modules_opengl_web_GL.CONSTANT_ALPHA = 32771;
snow_modules_opengl_web_GL.ONE_MINUS_CONSTANT_ALPHA = 32772;
snow_modules_opengl_web_GL.BLEND_COLOR = 32773;
snow_modules_opengl_web_GL.ARRAY_BUFFER = 34962;
snow_modules_opengl_web_GL.ELEMENT_ARRAY_BUFFER = 34963;
snow_modules_opengl_web_GL.ARRAY_BUFFER_BINDING = 34964;
snow_modules_opengl_web_GL.ELEMENT_ARRAY_BUFFER_BINDING = 34965;
snow_modules_opengl_web_GL.STREAM_DRAW = 35040;
snow_modules_opengl_web_GL.STATIC_DRAW = 35044;
snow_modules_opengl_web_GL.DYNAMIC_DRAW = 35048;
snow_modules_opengl_web_GL.BUFFER_SIZE = 34660;
snow_modules_opengl_web_GL.BUFFER_USAGE = 34661;
snow_modules_opengl_web_GL.CURRENT_VERTEX_ATTRIB = 34342;
snow_modules_opengl_web_GL.FRONT = 1028;
snow_modules_opengl_web_GL.BACK = 1029;
snow_modules_opengl_web_GL.FRONT_AND_BACK = 1032;
snow_modules_opengl_web_GL.CULL_FACE = 2884;
snow_modules_opengl_web_GL.BLEND = 3042;
snow_modules_opengl_web_GL.DITHER = 3024;
snow_modules_opengl_web_GL.STENCIL_TEST = 2960;
snow_modules_opengl_web_GL.DEPTH_TEST = 2929;
snow_modules_opengl_web_GL.SCISSOR_TEST = 3089;
snow_modules_opengl_web_GL.POLYGON_OFFSET_FILL = 32823;
snow_modules_opengl_web_GL.SAMPLE_ALPHA_TO_COVERAGE = 32926;
snow_modules_opengl_web_GL.SAMPLE_COVERAGE = 32928;
snow_modules_opengl_web_GL.NO_ERROR = 0;
snow_modules_opengl_web_GL.INVALID_ENUM = 1280;
snow_modules_opengl_web_GL.INVALID_VALUE = 1281;
snow_modules_opengl_web_GL.INVALID_OPERATION = 1282;
snow_modules_opengl_web_GL.OUT_OF_MEMORY = 1285;
snow_modules_opengl_web_GL.CW = 2304;
snow_modules_opengl_web_GL.CCW = 2305;
snow_modules_opengl_web_GL.LINE_WIDTH = 2849;
snow_modules_opengl_web_GL.ALIASED_POINT_SIZE_RANGE = 33901;
snow_modules_opengl_web_GL.ALIASED_LINE_WIDTH_RANGE = 33902;
snow_modules_opengl_web_GL.CULL_FACE_MODE = 2885;
snow_modules_opengl_web_GL.FRONT_FACE = 2886;
snow_modules_opengl_web_GL.DEPTH_RANGE = 2928;
snow_modules_opengl_web_GL.DEPTH_WRITEMASK = 2930;
snow_modules_opengl_web_GL.DEPTH_CLEAR_VALUE = 2931;
snow_modules_opengl_web_GL.DEPTH_FUNC = 2932;
snow_modules_opengl_web_GL.STENCIL_CLEAR_VALUE = 2961;
snow_modules_opengl_web_GL.STENCIL_FUNC = 2962;
snow_modules_opengl_web_GL.STENCIL_FAIL = 2964;
snow_modules_opengl_web_GL.STENCIL_PASS_DEPTH_FAIL = 2965;
snow_modules_opengl_web_GL.STENCIL_PASS_DEPTH_PASS = 2966;
snow_modules_opengl_web_GL.STENCIL_REF = 2967;
snow_modules_opengl_web_GL.STENCIL_VALUE_MASK = 2963;
snow_modules_opengl_web_GL.STENCIL_WRITEMASK = 2968;
snow_modules_opengl_web_GL.STENCIL_BACK_FUNC = 34816;
snow_modules_opengl_web_GL.STENCIL_BACK_FAIL = 34817;
snow_modules_opengl_web_GL.STENCIL_BACK_PASS_DEPTH_FAIL = 34818;
snow_modules_opengl_web_GL.STENCIL_BACK_PASS_DEPTH_PASS = 34819;
snow_modules_opengl_web_GL.STENCIL_BACK_REF = 36003;
snow_modules_opengl_web_GL.STENCIL_BACK_VALUE_MASK = 36004;
snow_modules_opengl_web_GL.STENCIL_BACK_WRITEMASK = 36005;
snow_modules_opengl_web_GL.VIEWPORT = 2978;
snow_modules_opengl_web_GL.SCISSOR_BOX = 3088;
snow_modules_opengl_web_GL.COLOR_CLEAR_VALUE = 3106;
snow_modules_opengl_web_GL.COLOR_WRITEMASK = 3107;
snow_modules_opengl_web_GL.UNPACK_ALIGNMENT = 3317;
snow_modules_opengl_web_GL.PACK_ALIGNMENT = 3333;
snow_modules_opengl_web_GL.MAX_TEXTURE_SIZE = 3379;
snow_modules_opengl_web_GL.MAX_VIEWPORT_DIMS = 3386;
snow_modules_opengl_web_GL.SUBPIXEL_BITS = 3408;
snow_modules_opengl_web_GL.RED_BITS = 3410;
snow_modules_opengl_web_GL.GREEN_BITS = 3411;
snow_modules_opengl_web_GL.BLUE_BITS = 3412;
snow_modules_opengl_web_GL.ALPHA_BITS = 3413;
snow_modules_opengl_web_GL.DEPTH_BITS = 3414;
snow_modules_opengl_web_GL.STENCIL_BITS = 3415;
snow_modules_opengl_web_GL.POLYGON_OFFSET_UNITS = 10752;
snow_modules_opengl_web_GL.POLYGON_OFFSET_FACTOR = 32824;
snow_modules_opengl_web_GL.TEXTURE_BINDING_2D = 32873;
snow_modules_opengl_web_GL.SAMPLE_BUFFERS = 32936;
snow_modules_opengl_web_GL.SAMPLES = 32937;
snow_modules_opengl_web_GL.SAMPLE_COVERAGE_VALUE = 32938;
snow_modules_opengl_web_GL.SAMPLE_COVERAGE_INVERT = 32939;
snow_modules_opengl_web_GL.COMPRESSED_TEXTURE_FORMATS = 34467;
snow_modules_opengl_web_GL.DONT_CARE = 4352;
snow_modules_opengl_web_GL.FASTEST = 4353;
snow_modules_opengl_web_GL.NICEST = 4354;
snow_modules_opengl_web_GL.GENERATE_MIPMAP_HINT = 33170;
snow_modules_opengl_web_GL.BYTE = 5120;
snow_modules_opengl_web_GL.UNSIGNED_BYTE = 5121;
snow_modules_opengl_web_GL.SHORT = 5122;
snow_modules_opengl_web_GL.UNSIGNED_SHORT = 5123;
snow_modules_opengl_web_GL.INT = 5124;
snow_modules_opengl_web_GL.UNSIGNED_INT = 5125;
snow_modules_opengl_web_GL.FLOAT = 5126;
snow_modules_opengl_web_GL.DEPTH_COMPONENT = 6402;
snow_modules_opengl_web_GL.ALPHA = 6406;
snow_modules_opengl_web_GL.RGB = 6407;
snow_modules_opengl_web_GL.RGBA = 6408;
snow_modules_opengl_web_GL.LUMINANCE = 6409;
snow_modules_opengl_web_GL.LUMINANCE_ALPHA = 6410;
snow_modules_opengl_web_GL.UNSIGNED_SHORT_4_4_4_4 = 32819;
snow_modules_opengl_web_GL.UNSIGNED_SHORT_5_5_5_1 = 32820;
snow_modules_opengl_web_GL.UNSIGNED_SHORT_5_6_5 = 33635;
snow_modules_opengl_web_GL.FRAGMENT_SHADER = 35632;
snow_modules_opengl_web_GL.VERTEX_SHADER = 35633;
snow_modules_opengl_web_GL.MAX_VERTEX_ATTRIBS = 34921;
snow_modules_opengl_web_GL.MAX_VERTEX_UNIFORM_VECTORS = 36347;
snow_modules_opengl_web_GL.MAX_VARYING_VECTORS = 36348;
snow_modules_opengl_web_GL.MAX_COMBINED_TEXTURE_IMAGE_UNITS = 35661;
snow_modules_opengl_web_GL.MAX_VERTEX_TEXTURE_IMAGE_UNITS = 35660;
snow_modules_opengl_web_GL.MAX_TEXTURE_IMAGE_UNITS = 34930;
snow_modules_opengl_web_GL.MAX_FRAGMENT_UNIFORM_VECTORS = 36349;
snow_modules_opengl_web_GL.SHADER_TYPE = 35663;
snow_modules_opengl_web_GL.DELETE_STATUS = 35712;
snow_modules_opengl_web_GL.LINK_STATUS = 35714;
snow_modules_opengl_web_GL.VALIDATE_STATUS = 35715;
snow_modules_opengl_web_GL.ATTACHED_SHADERS = 35717;
snow_modules_opengl_web_GL.ACTIVE_UNIFORMS = 35718;
snow_modules_opengl_web_GL.ACTIVE_ATTRIBUTES = 35721;
snow_modules_opengl_web_GL.SHADING_LANGUAGE_VERSION = 35724;
snow_modules_opengl_web_GL.CURRENT_PROGRAM = 35725;
snow_modules_opengl_web_GL.NEVER = 512;
snow_modules_opengl_web_GL.LESS = 513;
snow_modules_opengl_web_GL.EQUAL = 514;
snow_modules_opengl_web_GL.LEQUAL = 515;
snow_modules_opengl_web_GL.GREATER = 516;
snow_modules_opengl_web_GL.NOTEQUAL = 517;
snow_modules_opengl_web_GL.GEQUAL = 518;
snow_modules_opengl_web_GL.ALWAYS = 519;
snow_modules_opengl_web_GL.KEEP = 7680;
snow_modules_opengl_web_GL.REPLACE = 7681;
snow_modules_opengl_web_GL.INCR = 7682;
snow_modules_opengl_web_GL.DECR = 7683;
snow_modules_opengl_web_GL.INVERT = 5386;
snow_modules_opengl_web_GL.INCR_WRAP = 34055;
snow_modules_opengl_web_GL.DECR_WRAP = 34056;
snow_modules_opengl_web_GL.VENDOR = 7936;
snow_modules_opengl_web_GL.RENDERER = 7937;
snow_modules_opengl_web_GL.VERSION = 7938;
snow_modules_opengl_web_GL.NEAREST = 9728;
snow_modules_opengl_web_GL.LINEAR = 9729;
snow_modules_opengl_web_GL.NEAREST_MIPMAP_NEAREST = 9984;
snow_modules_opengl_web_GL.LINEAR_MIPMAP_NEAREST = 9985;
snow_modules_opengl_web_GL.NEAREST_MIPMAP_LINEAR = 9986;
snow_modules_opengl_web_GL.LINEAR_MIPMAP_LINEAR = 9987;
snow_modules_opengl_web_GL.TEXTURE_MAG_FILTER = 10240;
snow_modules_opengl_web_GL.TEXTURE_MIN_FILTER = 10241;
snow_modules_opengl_web_GL.TEXTURE_WRAP_S = 10242;
snow_modules_opengl_web_GL.TEXTURE_WRAP_T = 10243;
snow_modules_opengl_web_GL.TEXTURE_2D = 3553;
snow_modules_opengl_web_GL.TEXTURE = 5890;
snow_modules_opengl_web_GL.TEXTURE_CUBE_MAP = 34067;
snow_modules_opengl_web_GL.TEXTURE_BINDING_CUBE_MAP = 34068;
snow_modules_opengl_web_GL.TEXTURE_CUBE_MAP_POSITIVE_X = 34069;
snow_modules_opengl_web_GL.TEXTURE_CUBE_MAP_NEGATIVE_X = 34070;
snow_modules_opengl_web_GL.TEXTURE_CUBE_MAP_POSITIVE_Y = 34071;
snow_modules_opengl_web_GL.TEXTURE_CUBE_MAP_NEGATIVE_Y = 34072;
snow_modules_opengl_web_GL.TEXTURE_CUBE_MAP_POSITIVE_Z = 34073;
snow_modules_opengl_web_GL.TEXTURE_CUBE_MAP_NEGATIVE_Z = 34074;
snow_modules_opengl_web_GL.MAX_CUBE_MAP_TEXTURE_SIZE = 34076;
snow_modules_opengl_web_GL.TEXTURE0 = 33984;
snow_modules_opengl_web_GL.TEXTURE1 = 33985;
snow_modules_opengl_web_GL.TEXTURE2 = 33986;
snow_modules_opengl_web_GL.TEXTURE3 = 33987;
snow_modules_opengl_web_GL.TEXTURE4 = 33988;
snow_modules_opengl_web_GL.TEXTURE5 = 33989;
snow_modules_opengl_web_GL.TEXTURE6 = 33990;
snow_modules_opengl_web_GL.TEXTURE7 = 33991;
snow_modules_opengl_web_GL.TEXTURE8 = 33992;
snow_modules_opengl_web_GL.TEXTURE9 = 33993;
snow_modules_opengl_web_GL.TEXTURE10 = 33994;
snow_modules_opengl_web_GL.TEXTURE11 = 33995;
snow_modules_opengl_web_GL.TEXTURE12 = 33996;
snow_modules_opengl_web_GL.TEXTURE13 = 33997;
snow_modules_opengl_web_GL.TEXTURE14 = 33998;
snow_modules_opengl_web_GL.TEXTURE15 = 33999;
snow_modules_opengl_web_GL.TEXTURE16 = 34000;
snow_modules_opengl_web_GL.TEXTURE17 = 34001;
snow_modules_opengl_web_GL.TEXTURE18 = 34002;
snow_modules_opengl_web_GL.TEXTURE19 = 34003;
snow_modules_opengl_web_GL.TEXTURE20 = 34004;
snow_modules_opengl_web_GL.TEXTURE21 = 34005;
snow_modules_opengl_web_GL.TEXTURE22 = 34006;
snow_modules_opengl_web_GL.TEXTURE23 = 34007;
snow_modules_opengl_web_GL.TEXTURE24 = 34008;
snow_modules_opengl_web_GL.TEXTURE25 = 34009;
snow_modules_opengl_web_GL.TEXTURE26 = 34010;
snow_modules_opengl_web_GL.TEXTURE27 = 34011;
snow_modules_opengl_web_GL.TEXTURE28 = 34012;
snow_modules_opengl_web_GL.TEXTURE29 = 34013;
snow_modules_opengl_web_GL.TEXTURE30 = 34014;
snow_modules_opengl_web_GL.TEXTURE31 = 34015;
snow_modules_opengl_web_GL.ACTIVE_TEXTURE = 34016;
snow_modules_opengl_web_GL.REPEAT = 10497;
snow_modules_opengl_web_GL.CLAMP_TO_EDGE = 33071;
snow_modules_opengl_web_GL.MIRRORED_REPEAT = 33648;
snow_modules_opengl_web_GL.FLOAT_VEC2 = 35664;
snow_modules_opengl_web_GL.FLOAT_VEC3 = 35665;
snow_modules_opengl_web_GL.FLOAT_VEC4 = 35666;
snow_modules_opengl_web_GL.INT_VEC2 = 35667;
snow_modules_opengl_web_GL.INT_VEC3 = 35668;
snow_modules_opengl_web_GL.INT_VEC4 = 35669;
snow_modules_opengl_web_GL.BOOL = 35670;
snow_modules_opengl_web_GL.BOOL_VEC2 = 35671;
snow_modules_opengl_web_GL.BOOL_VEC3 = 35672;
snow_modules_opengl_web_GL.BOOL_VEC4 = 35673;
snow_modules_opengl_web_GL.FLOAT_MAT2 = 35674;
snow_modules_opengl_web_GL.FLOAT_MAT3 = 35675;
snow_modules_opengl_web_GL.FLOAT_MAT4 = 35676;
snow_modules_opengl_web_GL.SAMPLER_2D = 35678;
snow_modules_opengl_web_GL.SAMPLER_CUBE = 35680;
snow_modules_opengl_web_GL.VERTEX_ATTRIB_ARRAY_ENABLED = 34338;
snow_modules_opengl_web_GL.VERTEX_ATTRIB_ARRAY_SIZE = 34339;
snow_modules_opengl_web_GL.VERTEX_ATTRIB_ARRAY_STRIDE = 34340;
snow_modules_opengl_web_GL.VERTEX_ATTRIB_ARRAY_TYPE = 34341;
snow_modules_opengl_web_GL.VERTEX_ATTRIB_ARRAY_NORMALIZED = 34922;
snow_modules_opengl_web_GL.VERTEX_ATTRIB_ARRAY_POINTER = 34373;
snow_modules_opengl_web_GL.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 34975;
snow_modules_opengl_web_GL.VERTEX_PROGRAM_POINT_SIZE = 34370;
snow_modules_opengl_web_GL.POINT_SPRITE = 34913;
snow_modules_opengl_web_GL.COMPILE_STATUS = 35713;
snow_modules_opengl_web_GL.LOW_FLOAT = 36336;
snow_modules_opengl_web_GL.MEDIUM_FLOAT = 36337;
snow_modules_opengl_web_GL.HIGH_FLOAT = 36338;
snow_modules_opengl_web_GL.LOW_INT = 36339;
snow_modules_opengl_web_GL.MEDIUM_INT = 36340;
snow_modules_opengl_web_GL.HIGH_INT = 36341;
snow_modules_opengl_web_GL.FRAMEBUFFER = 36160;
snow_modules_opengl_web_GL.RENDERBUFFER = 36161;
snow_modules_opengl_web_GL.RGBA4 = 32854;
snow_modules_opengl_web_GL.RGB5_A1 = 32855;
snow_modules_opengl_web_GL.RGB565 = 36194;
snow_modules_opengl_web_GL.DEPTH_COMPONENT16 = 33189;
snow_modules_opengl_web_GL.STENCIL_INDEX = 6401;
snow_modules_opengl_web_GL.STENCIL_INDEX8 = 36168;
snow_modules_opengl_web_GL.DEPTH_STENCIL = 34041;
snow_modules_opengl_web_GL.RENDERBUFFER_WIDTH = 36162;
snow_modules_opengl_web_GL.RENDERBUFFER_HEIGHT = 36163;
snow_modules_opengl_web_GL.RENDERBUFFER_INTERNAL_FORMAT = 36164;
snow_modules_opengl_web_GL.RENDERBUFFER_RED_SIZE = 36176;
snow_modules_opengl_web_GL.RENDERBUFFER_GREEN_SIZE = 36177;
snow_modules_opengl_web_GL.RENDERBUFFER_BLUE_SIZE = 36178;
snow_modules_opengl_web_GL.RENDERBUFFER_ALPHA_SIZE = 36179;
snow_modules_opengl_web_GL.RENDERBUFFER_DEPTH_SIZE = 36180;
snow_modules_opengl_web_GL.RENDERBUFFER_STENCIL_SIZE = 36181;
snow_modules_opengl_web_GL.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 36048;
snow_modules_opengl_web_GL.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 36049;
snow_modules_opengl_web_GL.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 36050;
snow_modules_opengl_web_GL.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 36051;
snow_modules_opengl_web_GL.COLOR_ATTACHMENT0 = 36064;
snow_modules_opengl_web_GL.DEPTH_ATTACHMENT = 36096;
snow_modules_opengl_web_GL.STENCIL_ATTACHMENT = 36128;
snow_modules_opengl_web_GL.DEPTH_STENCIL_ATTACHMENT = 33306;
snow_modules_opengl_web_GL.NONE = 0;
snow_modules_opengl_web_GL.FRAMEBUFFER_COMPLETE = 36053;
snow_modules_opengl_web_GL.FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 36054;
snow_modules_opengl_web_GL.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 36055;
snow_modules_opengl_web_GL.FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 36057;
snow_modules_opengl_web_GL.FRAMEBUFFER_UNSUPPORTED = 36061;
snow_modules_opengl_web_GL.FRAMEBUFFER_BINDING = 36006;
snow_modules_opengl_web_GL.RENDERBUFFER_BINDING = 36007;
snow_modules_opengl_web_GL.MAX_RENDERBUFFER_SIZE = 34024;
snow_modules_opengl_web_GL.INVALID_FRAMEBUFFER_OPERATION = 1286;
snow_modules_opengl_web_GL.UNPACK_FLIP_Y_WEBGL = 37440;
snow_modules_opengl_web_GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL = 37441;
snow_modules_opengl_web_GL.CONTEXT_LOST_WEBGL = 37442;
snow_modules_opengl_web_GL.UNPACK_COLORSPACE_CONVERSION_WEBGL = 37443;
snow_modules_opengl_web_GL.BROWSER_DEFAULT_WEBGL = 37444;
snow_modules_webaudio_Audio.half_pi = 1.5707;
snow_systems_input_Keycodes.unknown = 0;
snow_systems_input_Keycodes.enter = 13;
snow_systems_input_Keycodes.escape = 27;
snow_systems_input_Keycodes.backspace = 8;
snow_systems_input_Keycodes.tab = 9;
snow_systems_input_Keycodes.space = 32;
snow_systems_input_Keycodes.exclaim = 33;
snow_systems_input_Keycodes.quotedbl = 34;
snow_systems_input_Keycodes.hash = 35;
snow_systems_input_Keycodes.percent = 37;
snow_systems_input_Keycodes.dollar = 36;
snow_systems_input_Keycodes.ampersand = 38;
snow_systems_input_Keycodes.quote = 39;
snow_systems_input_Keycodes.leftparen = 40;
snow_systems_input_Keycodes.rightparen = 41;
snow_systems_input_Keycodes.asterisk = 42;
snow_systems_input_Keycodes.plus = 43;
snow_systems_input_Keycodes.comma = 44;
snow_systems_input_Keycodes.minus = 45;
snow_systems_input_Keycodes.period = 46;
snow_systems_input_Keycodes.slash = 47;
snow_systems_input_Keycodes.key_0 = 48;
snow_systems_input_Keycodes.key_1 = 49;
snow_systems_input_Keycodes.key_2 = 50;
snow_systems_input_Keycodes.key_3 = 51;
snow_systems_input_Keycodes.key_4 = 52;
snow_systems_input_Keycodes.key_5 = 53;
snow_systems_input_Keycodes.key_6 = 54;
snow_systems_input_Keycodes.key_7 = 55;
snow_systems_input_Keycodes.key_8 = 56;
snow_systems_input_Keycodes.key_9 = 57;
snow_systems_input_Keycodes.colon = 58;
snow_systems_input_Keycodes.semicolon = 59;
snow_systems_input_Keycodes.less = 60;
snow_systems_input_Keycodes.equals = 61;
snow_systems_input_Keycodes.greater = 62;
snow_systems_input_Keycodes.question = 63;
snow_systems_input_Keycodes.at = 64;
snow_systems_input_Keycodes.leftbracket = 91;
snow_systems_input_Keycodes.backslash = 92;
snow_systems_input_Keycodes.rightbracket = 93;
snow_systems_input_Keycodes.caret = 94;
snow_systems_input_Keycodes.underscore = 95;
snow_systems_input_Keycodes.backquote = 96;
snow_systems_input_Keycodes.key_a = 97;
snow_systems_input_Keycodes.key_b = 98;
snow_systems_input_Keycodes.key_c = 99;
snow_systems_input_Keycodes.key_d = 100;
snow_systems_input_Keycodes.key_e = 101;
snow_systems_input_Keycodes.key_f = 102;
snow_systems_input_Keycodes.key_g = 103;
snow_systems_input_Keycodes.key_h = 104;
snow_systems_input_Keycodes.key_i = 105;
snow_systems_input_Keycodes.key_j = 106;
snow_systems_input_Keycodes.key_k = 107;
snow_systems_input_Keycodes.key_l = 108;
snow_systems_input_Keycodes.key_m = 109;
snow_systems_input_Keycodes.key_n = 110;
snow_systems_input_Keycodes.key_o = 111;
snow_systems_input_Keycodes.key_p = 112;
snow_systems_input_Keycodes.key_q = 113;
snow_systems_input_Keycodes.key_r = 114;
snow_systems_input_Keycodes.key_s = 115;
snow_systems_input_Keycodes.key_t = 116;
snow_systems_input_Keycodes.key_u = 117;
snow_systems_input_Keycodes.key_v = 118;
snow_systems_input_Keycodes.key_w = 119;
snow_systems_input_Keycodes.key_x = 120;
snow_systems_input_Keycodes.key_y = 121;
snow_systems_input_Keycodes.key_z = 122;
snow_systems_input_Keycodes.capslock = 1073741881;
snow_systems_input_Keycodes.f1 = 1073741882;
snow_systems_input_Keycodes.f2 = 1073741883;
snow_systems_input_Keycodes.f3 = 1073741884;
snow_systems_input_Keycodes.f4 = 1073741885;
snow_systems_input_Keycodes.f5 = 1073741886;
snow_systems_input_Keycodes.f6 = 1073741887;
snow_systems_input_Keycodes.f7 = 1073741888;
snow_systems_input_Keycodes.f8 = 1073741889;
snow_systems_input_Keycodes.f9 = 1073741890;
snow_systems_input_Keycodes.f10 = 1073741891;
snow_systems_input_Keycodes.f11 = 1073741892;
snow_systems_input_Keycodes.f12 = 1073741893;
snow_systems_input_Keycodes.printscreen = 1073741894;
snow_systems_input_Keycodes.scrolllock = 1073741895;
snow_systems_input_Keycodes.pause = 1073741896;
snow_systems_input_Keycodes.insert = 1073741897;
snow_systems_input_Keycodes.home = 1073741898;
snow_systems_input_Keycodes.pageup = 1073741899;
snow_systems_input_Keycodes["delete"] = 127;
snow_systems_input_Keycodes.end = 1073741901;
snow_systems_input_Keycodes.pagedown = 1073741902;
snow_systems_input_Keycodes.right = 1073741903;
snow_systems_input_Keycodes.left = 1073741904;
snow_systems_input_Keycodes.down = 1073741905;
snow_systems_input_Keycodes.up = 1073741906;
snow_systems_input_Keycodes.numlockclear = 1073741907;
snow_systems_input_Keycodes.kp_divide = 1073741908;
snow_systems_input_Keycodes.kp_multiply = 1073741909;
snow_systems_input_Keycodes.kp_minus = 1073741910;
snow_systems_input_Keycodes.kp_plus = 1073741911;
snow_systems_input_Keycodes.kp_enter = 1073741912;
snow_systems_input_Keycodes.kp_1 = 1073741913;
snow_systems_input_Keycodes.kp_2 = 1073741914;
snow_systems_input_Keycodes.kp_3 = 1073741915;
snow_systems_input_Keycodes.kp_4 = 1073741916;
snow_systems_input_Keycodes.kp_5 = 1073741917;
snow_systems_input_Keycodes.kp_6 = 1073741918;
snow_systems_input_Keycodes.kp_7 = 1073741919;
snow_systems_input_Keycodes.kp_8 = 1073741920;
snow_systems_input_Keycodes.kp_9 = 1073741921;
snow_systems_input_Keycodes.kp_0 = 1073741922;
snow_systems_input_Keycodes.kp_period = 1073741923;
snow_systems_input_Keycodes.application = 1073741925;
snow_systems_input_Keycodes.power = 1073741926;
snow_systems_input_Keycodes.kp_equals = 1073741927;
snow_systems_input_Keycodes.f13 = 1073741928;
snow_systems_input_Keycodes.f14 = 1073741929;
snow_systems_input_Keycodes.f15 = 1073741930;
snow_systems_input_Keycodes.f16 = 1073741931;
snow_systems_input_Keycodes.f17 = 1073741932;
snow_systems_input_Keycodes.f18 = 1073741933;
snow_systems_input_Keycodes.f19 = 1073741934;
snow_systems_input_Keycodes.f20 = 1073741935;
snow_systems_input_Keycodes.f21 = 1073741936;
snow_systems_input_Keycodes.f22 = 1073741937;
snow_systems_input_Keycodes.f23 = 1073741938;
snow_systems_input_Keycodes.f24 = 1073741939;
snow_systems_input_Keycodes.execute = 1073741940;
snow_systems_input_Keycodes.help = 1073741941;
snow_systems_input_Keycodes.menu = 1073741942;
snow_systems_input_Keycodes.select = 1073741943;
snow_systems_input_Keycodes.stop = 1073741944;
snow_systems_input_Keycodes.again = 1073741945;
snow_systems_input_Keycodes.undo = 1073741946;
snow_systems_input_Keycodes.cut = 1073741947;
snow_systems_input_Keycodes.copy = 1073741948;
snow_systems_input_Keycodes.paste = 1073741949;
snow_systems_input_Keycodes.find = 1073741950;
snow_systems_input_Keycodes.mute = 1073741951;
snow_systems_input_Keycodes.volumeup = 1073741952;
snow_systems_input_Keycodes.volumedown = 1073741953;
snow_systems_input_Keycodes.kp_comma = 1073741957;
snow_systems_input_Keycodes.kp_equalsas400 = 1073741958;
snow_systems_input_Keycodes.alterase = 1073741977;
snow_systems_input_Keycodes.sysreq = 1073741978;
snow_systems_input_Keycodes.cancel = 1073741979;
snow_systems_input_Keycodes.clear = 1073741980;
snow_systems_input_Keycodes.prior = 1073741981;
snow_systems_input_Keycodes.return2 = 1073741982;
snow_systems_input_Keycodes.separator = 1073741983;
snow_systems_input_Keycodes.out = 1073741984;
snow_systems_input_Keycodes.oper = 1073741985;
snow_systems_input_Keycodes.clearagain = 1073741986;
snow_systems_input_Keycodes.crsel = 1073741987;
snow_systems_input_Keycodes.exsel = 1073741988;
snow_systems_input_Keycodes.kp_00 = 1073742000;
snow_systems_input_Keycodes.kp_000 = 1073742001;
snow_systems_input_Keycodes.thousandsseparator = 1073742002;
snow_systems_input_Keycodes.decimalseparator = 1073742003;
snow_systems_input_Keycodes.currencyunit = 1073742004;
snow_systems_input_Keycodes.currencysubunit = 1073742005;
snow_systems_input_Keycodes.kp_leftparen = 1073742006;
snow_systems_input_Keycodes.kp_rightparen = 1073742007;
snow_systems_input_Keycodes.kp_leftbrace = 1073742008;
snow_systems_input_Keycodes.kp_rightbrace = 1073742009;
snow_systems_input_Keycodes.kp_tab = 1073742010;
snow_systems_input_Keycodes.kp_backspace = 1073742011;
snow_systems_input_Keycodes.kp_a = 1073742012;
snow_systems_input_Keycodes.kp_b = 1073742013;
snow_systems_input_Keycodes.kp_c = 1073742014;
snow_systems_input_Keycodes.kp_d = 1073742015;
snow_systems_input_Keycodes.kp_e = 1073742016;
snow_systems_input_Keycodes.kp_f = 1073742017;
snow_systems_input_Keycodes.kp_xor = 1073742018;
snow_systems_input_Keycodes.kp_power = 1073742019;
snow_systems_input_Keycodes.kp_percent = 1073742020;
snow_systems_input_Keycodes.kp_less = 1073742021;
snow_systems_input_Keycodes.kp_greater = 1073742022;
snow_systems_input_Keycodes.kp_ampersand = 1073742023;
snow_systems_input_Keycodes.kp_dblampersand = 1073742024;
snow_systems_input_Keycodes.kp_verticalbar = 1073742025;
snow_systems_input_Keycodes.kp_dblverticalbar = 1073742026;
snow_systems_input_Keycodes.kp_colon = 1073742027;
snow_systems_input_Keycodes.kp_hash = 1073742028;
snow_systems_input_Keycodes.kp_space = 1073742029;
snow_systems_input_Keycodes.kp_at = 1073742030;
snow_systems_input_Keycodes.kp_exclam = 1073742031;
snow_systems_input_Keycodes.kp_memstore = 1073742032;
snow_systems_input_Keycodes.kp_memrecall = 1073742033;
snow_systems_input_Keycodes.kp_memclear = 1073742034;
snow_systems_input_Keycodes.kp_memadd = 1073742035;
snow_systems_input_Keycodes.kp_memsubtract = 1073742036;
snow_systems_input_Keycodes.kp_memmultiply = 1073742037;
snow_systems_input_Keycodes.kp_memdivide = 1073742038;
snow_systems_input_Keycodes.kp_plusminus = 1073742039;
snow_systems_input_Keycodes.kp_clear = 1073742040;
snow_systems_input_Keycodes.kp_clearentry = 1073742041;
snow_systems_input_Keycodes.kp_binary = 1073742042;
snow_systems_input_Keycodes.kp_octal = 1073742043;
snow_systems_input_Keycodes.kp_decimal = 1073742044;
snow_systems_input_Keycodes.kp_hexadecimal = 1073742045;
snow_systems_input_Keycodes.lctrl = 1073742048;
snow_systems_input_Keycodes.lshift = 1073742049;
snow_systems_input_Keycodes.lalt = 1073742050;
snow_systems_input_Keycodes.lmeta = 1073742051;
snow_systems_input_Keycodes.rctrl = 1073742052;
snow_systems_input_Keycodes.rshift = 1073742053;
snow_systems_input_Keycodes.ralt = 1073742054;
snow_systems_input_Keycodes.rmeta = 1073742055;
snow_systems_input_Keycodes.mode = 1073742081;
snow_systems_input_Keycodes.audionext = 1073742082;
snow_systems_input_Keycodes.audioprev = 1073742083;
snow_systems_input_Keycodes.audiostop = 1073742084;
snow_systems_input_Keycodes.audioplay = 1073742085;
snow_systems_input_Keycodes.audiomute = 1073742086;
snow_systems_input_Keycodes.mediaselect = 1073742087;
snow_systems_input_Keycodes.www = 1073742088;
snow_systems_input_Keycodes.mail = 1073742089;
snow_systems_input_Keycodes.calculator = 1073742090;
snow_systems_input_Keycodes.computer = 1073742091;
snow_systems_input_Keycodes.ac_search = 1073742092;
snow_systems_input_Keycodes.ac_home = 1073742093;
snow_systems_input_Keycodes.ac_back = 1073742094;
snow_systems_input_Keycodes.ac_forward = 1073742095;
snow_systems_input_Keycodes.ac_stop = 1073742096;
snow_systems_input_Keycodes.ac_refresh = 1073742097;
snow_systems_input_Keycodes.ac_bookmarks = 1073742098;
snow_systems_input_Keycodes.brightnessdown = 1073742099;
snow_systems_input_Keycodes.brightnessup = 1073742100;
snow_systems_input_Keycodes.displayswitch = 1073742101;
snow_systems_input_Keycodes.kbdillumtoggle = 1073742102;
snow_systems_input_Keycodes.kbdillumdown = 1073742103;
snow_systems_input_Keycodes.kbdillumup = 1073742104;
snow_systems_input_Keycodes.eject = 1073742105;
snow_systems_input_Keycodes.sleep = 1073742106;
snow_systems_input_Scancodes.MASK = 1073741824;
snow_systems_input_Scancodes.unknown = 0;
snow_systems_input_Scancodes.key_a = 4;
snow_systems_input_Scancodes.key_b = 5;
snow_systems_input_Scancodes.key_c = 6;
snow_systems_input_Scancodes.key_d = 7;
snow_systems_input_Scancodes.key_e = 8;
snow_systems_input_Scancodes.key_f = 9;
snow_systems_input_Scancodes.key_g = 10;
snow_systems_input_Scancodes.key_h = 11;
snow_systems_input_Scancodes.key_i = 12;
snow_systems_input_Scancodes.key_j = 13;
snow_systems_input_Scancodes.key_k = 14;
snow_systems_input_Scancodes.key_l = 15;
snow_systems_input_Scancodes.key_m = 16;
snow_systems_input_Scancodes.key_n = 17;
snow_systems_input_Scancodes.key_o = 18;
snow_systems_input_Scancodes.key_p = 19;
snow_systems_input_Scancodes.key_q = 20;
snow_systems_input_Scancodes.key_r = 21;
snow_systems_input_Scancodes.key_s = 22;
snow_systems_input_Scancodes.key_t = 23;
snow_systems_input_Scancodes.key_u = 24;
snow_systems_input_Scancodes.key_v = 25;
snow_systems_input_Scancodes.key_w = 26;
snow_systems_input_Scancodes.key_x = 27;
snow_systems_input_Scancodes.key_y = 28;
snow_systems_input_Scancodes.key_z = 29;
snow_systems_input_Scancodes.key_1 = 30;
snow_systems_input_Scancodes.key_2 = 31;
snow_systems_input_Scancodes.key_3 = 32;
snow_systems_input_Scancodes.key_4 = 33;
snow_systems_input_Scancodes.key_5 = 34;
snow_systems_input_Scancodes.key_6 = 35;
snow_systems_input_Scancodes.key_7 = 36;
snow_systems_input_Scancodes.key_8 = 37;
snow_systems_input_Scancodes.key_9 = 38;
snow_systems_input_Scancodes.key_0 = 39;
snow_systems_input_Scancodes.enter = 40;
snow_systems_input_Scancodes.escape = 41;
snow_systems_input_Scancodes.backspace = 42;
snow_systems_input_Scancodes.tab = 43;
snow_systems_input_Scancodes.space = 44;
snow_systems_input_Scancodes.minus = 45;
snow_systems_input_Scancodes.equals = 46;
snow_systems_input_Scancodes.leftbracket = 47;
snow_systems_input_Scancodes.rightbracket = 48;
snow_systems_input_Scancodes.backslash = 49;
snow_systems_input_Scancodes.nonushash = 50;
snow_systems_input_Scancodes.semicolon = 51;
snow_systems_input_Scancodes.apostrophe = 52;
snow_systems_input_Scancodes.grave = 53;
snow_systems_input_Scancodes.comma = 54;
snow_systems_input_Scancodes.period = 55;
snow_systems_input_Scancodes.slash = 56;
snow_systems_input_Scancodes.capslock = 57;
snow_systems_input_Scancodes.f1 = 58;
snow_systems_input_Scancodes.f2 = 59;
snow_systems_input_Scancodes.f3 = 60;
snow_systems_input_Scancodes.f4 = 61;
snow_systems_input_Scancodes.f5 = 62;
snow_systems_input_Scancodes.f6 = 63;
snow_systems_input_Scancodes.f7 = 64;
snow_systems_input_Scancodes.f8 = 65;
snow_systems_input_Scancodes.f9 = 66;
snow_systems_input_Scancodes.f10 = 67;
snow_systems_input_Scancodes.f11 = 68;
snow_systems_input_Scancodes.f12 = 69;
snow_systems_input_Scancodes.printscreen = 70;
snow_systems_input_Scancodes.scrolllock = 71;
snow_systems_input_Scancodes.pause = 72;
snow_systems_input_Scancodes.insert = 73;
snow_systems_input_Scancodes.home = 74;
snow_systems_input_Scancodes.pageup = 75;
snow_systems_input_Scancodes["delete"] = 76;
snow_systems_input_Scancodes.end = 77;
snow_systems_input_Scancodes.pagedown = 78;
snow_systems_input_Scancodes.right = 79;
snow_systems_input_Scancodes.left = 80;
snow_systems_input_Scancodes.down = 81;
snow_systems_input_Scancodes.up = 82;
snow_systems_input_Scancodes.numlockclear = 83;
snow_systems_input_Scancodes.kp_divide = 84;
snow_systems_input_Scancodes.kp_multiply = 85;
snow_systems_input_Scancodes.kp_minus = 86;
snow_systems_input_Scancodes.kp_plus = 87;
snow_systems_input_Scancodes.kp_enter = 88;
snow_systems_input_Scancodes.kp_1 = 89;
snow_systems_input_Scancodes.kp_2 = 90;
snow_systems_input_Scancodes.kp_3 = 91;
snow_systems_input_Scancodes.kp_4 = 92;
snow_systems_input_Scancodes.kp_5 = 93;
snow_systems_input_Scancodes.kp_6 = 94;
snow_systems_input_Scancodes.kp_7 = 95;
snow_systems_input_Scancodes.kp_8 = 96;
snow_systems_input_Scancodes.kp_9 = 97;
snow_systems_input_Scancodes.kp_0 = 98;
snow_systems_input_Scancodes.kp_period = 99;
snow_systems_input_Scancodes.nonusbackslash = 100;
snow_systems_input_Scancodes.application = 101;
snow_systems_input_Scancodes.power = 102;
snow_systems_input_Scancodes.kp_equals = 103;
snow_systems_input_Scancodes.f13 = 104;
snow_systems_input_Scancodes.f14 = 105;
snow_systems_input_Scancodes.f15 = 106;
snow_systems_input_Scancodes.f16 = 107;
snow_systems_input_Scancodes.f17 = 108;
snow_systems_input_Scancodes.f18 = 109;
snow_systems_input_Scancodes.f19 = 110;
snow_systems_input_Scancodes.f20 = 111;
snow_systems_input_Scancodes.f21 = 112;
snow_systems_input_Scancodes.f22 = 113;
snow_systems_input_Scancodes.f23 = 114;
snow_systems_input_Scancodes.f24 = 115;
snow_systems_input_Scancodes.execute = 116;
snow_systems_input_Scancodes.help = 117;
snow_systems_input_Scancodes.menu = 118;
snow_systems_input_Scancodes.select = 119;
snow_systems_input_Scancodes.stop = 120;
snow_systems_input_Scancodes.again = 121;
snow_systems_input_Scancodes.undo = 122;
snow_systems_input_Scancodes.cut = 123;
snow_systems_input_Scancodes.copy = 124;
snow_systems_input_Scancodes.paste = 125;
snow_systems_input_Scancodes.find = 126;
snow_systems_input_Scancodes.mute = 127;
snow_systems_input_Scancodes.volumeup = 128;
snow_systems_input_Scancodes.volumedown = 129;
snow_systems_input_Scancodes.kp_comma = 133;
snow_systems_input_Scancodes.kp_equalsas400 = 134;
snow_systems_input_Scancodes.international1 = 135;
snow_systems_input_Scancodes.international2 = 136;
snow_systems_input_Scancodes.international3 = 137;
snow_systems_input_Scancodes.international4 = 138;
snow_systems_input_Scancodes.international5 = 139;
snow_systems_input_Scancodes.international6 = 140;
snow_systems_input_Scancodes.international7 = 141;
snow_systems_input_Scancodes.international8 = 142;
snow_systems_input_Scancodes.international9 = 143;
snow_systems_input_Scancodes.lang1 = 144;
snow_systems_input_Scancodes.lang2 = 145;
snow_systems_input_Scancodes.lang3 = 146;
snow_systems_input_Scancodes.lang4 = 147;
snow_systems_input_Scancodes.lang5 = 148;
snow_systems_input_Scancodes.lang6 = 149;
snow_systems_input_Scancodes.lang7 = 150;
snow_systems_input_Scancodes.lang8 = 151;
snow_systems_input_Scancodes.lang9 = 152;
snow_systems_input_Scancodes.alterase = 153;
snow_systems_input_Scancodes.sysreq = 154;
snow_systems_input_Scancodes.cancel = 155;
snow_systems_input_Scancodes.clear = 156;
snow_systems_input_Scancodes.prior = 157;
snow_systems_input_Scancodes.return2 = 158;
snow_systems_input_Scancodes.separator = 159;
snow_systems_input_Scancodes.out = 160;
snow_systems_input_Scancodes.oper = 161;
snow_systems_input_Scancodes.clearagain = 162;
snow_systems_input_Scancodes.crsel = 163;
snow_systems_input_Scancodes.exsel = 164;
snow_systems_input_Scancodes.kp_00 = 176;
snow_systems_input_Scancodes.kp_000 = 177;
snow_systems_input_Scancodes.thousandsseparator = 178;
snow_systems_input_Scancodes.decimalseparator = 179;
snow_systems_input_Scancodes.currencyunit = 180;
snow_systems_input_Scancodes.currencysubunit = 181;
snow_systems_input_Scancodes.kp_leftparen = 182;
snow_systems_input_Scancodes.kp_rightparen = 183;
snow_systems_input_Scancodes.kp_leftbrace = 184;
snow_systems_input_Scancodes.kp_rightbrace = 185;
snow_systems_input_Scancodes.kp_tab = 186;
snow_systems_input_Scancodes.kp_backspace = 187;
snow_systems_input_Scancodes.kp_a = 188;
snow_systems_input_Scancodes.kp_b = 189;
snow_systems_input_Scancodes.kp_c = 190;
snow_systems_input_Scancodes.kp_d = 191;
snow_systems_input_Scancodes.kp_e = 192;
snow_systems_input_Scancodes.kp_f = 193;
snow_systems_input_Scancodes.kp_xor = 194;
snow_systems_input_Scancodes.kp_power = 195;
snow_systems_input_Scancodes.kp_percent = 196;
snow_systems_input_Scancodes.kp_less = 197;
snow_systems_input_Scancodes.kp_greater = 198;
snow_systems_input_Scancodes.kp_ampersand = 199;
snow_systems_input_Scancodes.kp_dblampersand = 200;
snow_systems_input_Scancodes.kp_verticalbar = 201;
snow_systems_input_Scancodes.kp_dblverticalbar = 202;
snow_systems_input_Scancodes.kp_colon = 203;
snow_systems_input_Scancodes.kp_hash = 204;
snow_systems_input_Scancodes.kp_space = 205;
snow_systems_input_Scancodes.kp_at = 206;
snow_systems_input_Scancodes.kp_exclam = 207;
snow_systems_input_Scancodes.kp_memstore = 208;
snow_systems_input_Scancodes.kp_memrecall = 209;
snow_systems_input_Scancodes.kp_memclear = 210;
snow_systems_input_Scancodes.kp_memadd = 211;
snow_systems_input_Scancodes.kp_memsubtract = 212;
snow_systems_input_Scancodes.kp_memmultiply = 213;
snow_systems_input_Scancodes.kp_memdivide = 214;
snow_systems_input_Scancodes.kp_plusminus = 215;
snow_systems_input_Scancodes.kp_clear = 216;
snow_systems_input_Scancodes.kp_clearentry = 217;
snow_systems_input_Scancodes.kp_binary = 218;
snow_systems_input_Scancodes.kp_octal = 219;
snow_systems_input_Scancodes.kp_decimal = 220;
snow_systems_input_Scancodes.kp_hexadecimal = 221;
snow_systems_input_Scancodes.lctrl = 224;
snow_systems_input_Scancodes.lshift = 225;
snow_systems_input_Scancodes.lalt = 226;
snow_systems_input_Scancodes.lmeta = 227;
snow_systems_input_Scancodes.rctrl = 228;
snow_systems_input_Scancodes.rshift = 229;
snow_systems_input_Scancodes.ralt = 230;
snow_systems_input_Scancodes.rmeta = 231;
snow_systems_input_Scancodes.mode = 257;
snow_systems_input_Scancodes.audionext = 258;
snow_systems_input_Scancodes.audioprev = 259;
snow_systems_input_Scancodes.audiostop = 260;
snow_systems_input_Scancodes.audioplay = 261;
snow_systems_input_Scancodes.audiomute = 262;
snow_systems_input_Scancodes.mediaselect = 263;
snow_systems_input_Scancodes.www = 264;
snow_systems_input_Scancodes.mail = 265;
snow_systems_input_Scancodes.calculator = 266;
snow_systems_input_Scancodes.computer = 267;
snow_systems_input_Scancodes.ac_search = 268;
snow_systems_input_Scancodes.ac_home = 269;
snow_systems_input_Scancodes.ac_back = 270;
snow_systems_input_Scancodes.ac_forward = 271;
snow_systems_input_Scancodes.ac_stop = 272;
snow_systems_input_Scancodes.ac_refresh = 273;
snow_systems_input_Scancodes.ac_bookmarks = 274;
snow_systems_input_Scancodes.brightnessdown = 275;
snow_systems_input_Scancodes.brightnessup = 276;
snow_systems_input_Scancodes.displayswitch = 277;
snow_systems_input_Scancodes.kbdillumtoggle = 278;
snow_systems_input_Scancodes.kbdillumdown = 279;
snow_systems_input_Scancodes.kbdillumup = 280;
snow_systems_input_Scancodes.eject = 281;
snow_systems_input_Scancodes.sleep = 282;
snow_systems_input_Scancodes.app1 = 283;
snow_systems_input_Scancodes.app2 = 284;
snow_systems_input_Scancodes.scancode_names = [null,null,null,null,"A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","1","2","3","4","5","6","7","8","9","0","Enter","Escape","Backspace","Tab","Space","-","=","[","]","\\","#",";","'","`",",",".","/","CapsLock","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","PrintScreen","ScrollLock","Pause","Insert","Home","PageUp","Delete","End","PageDown","Right","Left","Down","Up","Numlock","Keypad /","Keypad *","Keypad -","Keypad +","Keypad Enter","Keypad 1","Keypad 2","Keypad 3","Keypad 4","Keypad 5","Keypad 6","Keypad 7","Keypad 8","Keypad 9","Keypad 0","Keypad .",null,"Application","Power","Keypad =","F13","F14","F15","F16","F17","F18","F19","F20","F21","F22","F23","F24","Execute","Help","Menu","Select","Stop","Again","Undo","Cut","Copy","Paste","Find","Mute","VolumeUp","VolumeDown",null,null,null,"Keypad ,","Keypad = (AS400)",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"AltErase","SysReq","Cancel","Clear","Prior","Enter","Separator","Out","Oper","Clear / Again","CrSel","ExSel",null,null,null,null,null,null,null,null,null,null,null,"Keypad 00","Keypad 000","ThousandsSeparator","DecimalSeparator","CurrencyUnit","CurrencySubUnit","Keypad (","Keypad )","Keypad {","Keypad }","Keypad Tab","Keypad Backspace","Keypad A","Keypad B","Keypad C","Keypad D","Keypad E","Keypad F","Keypad XOR","Keypad ^","Keypad %","Keypad <","Keypad >","Keypad &","Keypad &&","Keypad |","Keypad ||","Keypad :","Keypad #","Keypad Space","Keypad @","Keypad !","Keypad MemStore","Keypad MemRecall","Keypad MemClear","Keypad MemAdd","Keypad MemSubtract","Keypad MemMultiply","Keypad MemDivide","Keypad +/-","Keypad Clear","Keypad ClearEntry","Keypad Binary","Keypad Octal","Keypad Decimal","Keypad Hexadecimal",null,null,"Left Ctrl","Left Shift","Left Alt","Left Meta","Right Ctrl","Right Shift","Right Alt","Right Meta",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"ModeSwitch","AudioNext","AudioPrev","AudioStop","AudioPlay","AudioMute","MediaSelect","WWW","Mail","Calculator","Computer","AC Search","AC Home","AC Back","AC Forward","AC Stop","AC Refresh","AC Bookmarks","BrightnessDown","BrightnessUp","DisplaySwitch","KBDIllumToggle","KBDIllumDown","KBDIllumUp","Eject","Sleep"];
snow_types_Config.app_runtime = "snow.core.web.Runtime";
snow_types_Config.app_config = "config.json";
snow_types_Config.app_ident = "ch.nectoria";
snow_types_Config.app_main = "luxe.Engine";
snow_types_Config.module_assets = "snow.core.web.assets.Assets";
snow_types_Config.module_audio = "snow.modules.webaudio.Audio";
snow_types_Config.module_io = "snow.core.web.io.IO";
snow_types_Config.extensions = [];
snow_types__$Types_AssetType_$Impl_$.at_unknown = 0;
snow_types__$Types_AssetType_$Impl_$.at_bytes = 1;
snow_types__$Types_AssetType_$Impl_$.at_text = 2;
snow_types__$Types_AssetType_$Impl_$.at_json = 3;
snow_types__$Types_AssetType_$Impl_$.at_image = 4;
snow_types__$Types_AssetType_$Impl_$.at_audio = 5;
snow_types__$Types_AudioFormatType_$Impl_$.af_unknown = 0;
snow_types__$Types_AudioFormatType_$Impl_$.af_custom = 1;
snow_types__$Types_AudioFormatType_$Impl_$.af_ogg = 2;
snow_types__$Types_AudioFormatType_$Impl_$.af_wav = 3;
snow_types__$Types_AudioFormatType_$Impl_$.af_pcm = 4;
snow_types__$Types_AudioEvent_$Impl_$.ae_end = 0;
snow_types__$Types_AudioEvent_$Impl_$.ae_destroyed = 1;
snow_types__$Types_AudioEvent_$Impl_$.ae_destroyed_source = 2;
snow_types__$Types_AudioState_$Impl_$.as_invalid = -1;
snow_types__$Types_AudioState_$Impl_$.as_paused = 0;
snow_types__$Types_AudioState_$Impl_$.as_playing = 1;
snow_types__$Types_AudioState_$Impl_$.as_stopped = 2;
snow_types__$Types_OpenGLProfile_$Impl_$.compatibility = 0;
snow_types__$Types_OpenGLProfile_$Impl_$.core = 1;
snow_types__$Types_OpenGLProfile_$Impl_$.gles = 2;
snow_types__$Types_KeyEventType_$Impl_$.ke_unknown = 0;
snow_types__$Types_KeyEventType_$Impl_$.ke_down = 1;
snow_types__$Types_KeyEventType_$Impl_$.ke_up = 2;
snow_types__$Types_MouseEventType_$Impl_$.me_unknown = 0;
snow_types__$Types_MouseEventType_$Impl_$.me_move = 1;
snow_types__$Types_MouseEventType_$Impl_$.me_down = 2;
snow_types__$Types_MouseEventType_$Impl_$.me_up = 3;
snow_types__$Types_MouseEventType_$Impl_$.me_wheel = 4;
snow_types__$Types_TouchEventType_$Impl_$.te_unknown = 0;
snow_types__$Types_TouchEventType_$Impl_$.te_move = 1;
snow_types__$Types_TouchEventType_$Impl_$.te_down = 2;
snow_types__$Types_TouchEventType_$Impl_$.te_up = 3;
snow_types__$Types_GamepadEventType_$Impl_$.ge_unknown = 0;
snow_types__$Types_GamepadEventType_$Impl_$.ge_axis = 1;
snow_types__$Types_GamepadEventType_$Impl_$.ge_down = 2;
snow_types__$Types_GamepadEventType_$Impl_$.ge_up = 3;
snow_types__$Types_GamepadEventType_$Impl_$.ge_device = 4;
snow_types__$Types_TextEventType_$Impl_$.te_unknown = 0;
snow_types__$Types_TextEventType_$Impl_$.te_edit = 1;
snow_types__$Types_TextEventType_$Impl_$.te_input = 2;
snow_types__$Types_GamepadDeviceEventType_$Impl_$.ge_unknown = 0;
snow_types__$Types_GamepadDeviceEventType_$Impl_$.ge_device_added = 1;
snow_types__$Types_GamepadDeviceEventType_$Impl_$.ge_device_removed = 2;
snow_types__$Types_GamepadDeviceEventType_$Impl_$.ge_device_remapped = 3;
snow_types__$Types_SystemEventType_$Impl_$.se_unknown = 0;
snow_types__$Types_SystemEventType_$Impl_$.se_init = 1;
snow_types__$Types_SystemEventType_$Impl_$.se_ready = 2;
snow_types__$Types_SystemEventType_$Impl_$.se_tick = 3;
snow_types__$Types_SystemEventType_$Impl_$.se_freeze = 4;
snow_types__$Types_SystemEventType_$Impl_$.se_unfreeze = 5;
snow_types__$Types_SystemEventType_$Impl_$.se_suspend = 6;
snow_types__$Types_SystemEventType_$Impl_$.se_shutdown = 7;
snow_types__$Types_SystemEventType_$Impl_$.se_window = 8;
snow_types__$Types_SystemEventType_$Impl_$.se_input = 9;
snow_types__$Types_SystemEventType_$Impl_$.se_quit = 10;
snow_types__$Types_SystemEventType_$Impl_$.se_app_terminating = 11;
snow_types__$Types_SystemEventType_$Impl_$.se_app_lowmemory = 12;
snow_types__$Types_SystemEventType_$Impl_$.se_app_willenterbackground = 13;
snow_types__$Types_SystemEventType_$Impl_$.se_app_didenterbackground = 14;
snow_types__$Types_SystemEventType_$Impl_$.se_app_willenterforeground = 15;
snow_types__$Types_SystemEventType_$Impl_$.se_app_didenterforeground = 16;
snow_types__$Types_WindowEventType_$Impl_$.we_unknown = 0;
snow_types__$Types_WindowEventType_$Impl_$.we_shown = 1;
snow_types__$Types_WindowEventType_$Impl_$.we_hidden = 2;
snow_types__$Types_WindowEventType_$Impl_$.we_exposed = 3;
snow_types__$Types_WindowEventType_$Impl_$.we_moved = 4;
snow_types__$Types_WindowEventType_$Impl_$.we_resized = 5;
snow_types__$Types_WindowEventType_$Impl_$.we_size_changed = 6;
snow_types__$Types_WindowEventType_$Impl_$.we_minimized = 7;
snow_types__$Types_WindowEventType_$Impl_$.we_maximized = 8;
snow_types__$Types_WindowEventType_$Impl_$.we_restored = 9;
snow_types__$Types_WindowEventType_$Impl_$.we_enter = 10;
snow_types__$Types_WindowEventType_$Impl_$.we_leave = 11;
snow_types__$Types_WindowEventType_$Impl_$.we_focus_gained = 12;
snow_types__$Types_WindowEventType_$Impl_$.we_focus_lost = 13;
snow_types__$Types_WindowEventType_$Impl_$.we_close = 14;
snow_types__$Types_InputEventType_$Impl_$.ie_unknown = 0;
snow_types__$Types_InputEventType_$Impl_$.ie_key = 1;
snow_types__$Types_InputEventType_$Impl_$.ie_text = 2;
snow_types__$Types_InputEventType_$Impl_$.ie_mouse = 3;
snow_types__$Types_InputEventType_$Impl_$.ie_touch = 4;
snow_types__$Types_InputEventType_$Impl_$.ie_gamepad = 5;
snow_types__$Types_InputEventType_$Impl_$.ie_joystick = 6;
luxe_Game.main();
})(typeof console != "undefined" ? console : {log:function(){}});
